{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "165bddc9-faaa-4323-987c-cd36ead80b5d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2d0b279e-01ef-4f52-98bb-4ac019d297c5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "478ad970-abf8-4a78-a26d-2a8910fd1f76",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ba4616e4-7f69-4677-b263-6624d022e802"
                }
              }
            ]
          },
          {
            "id": "fea1318a-5890-4304-bcd7-ef8659dc4b0c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2ecc185-af02-4420-a876-c15400469698",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "19277080-b42d-48c9-bab2-5965e4c9bdd8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cdc18032-4c33-4de3-9881-1e6fc96d86d3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "38886658-dbc6-41c5-9823-bdcc319f90a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10cfd7aa-afb7-423f-bcba-5904ba216452",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c553e013-2df8-4bdb-a59d-b504ded16c67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c08f551-a03c-4cd4-bcbb-b24d472c7e62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "516400f3-c276-45d2-b204-64f5ef2d496a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5617027b-9a8b-4f53-aafa-2214f4cb7e75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1218ca9-4998-4dda-9d5e-ac4405fc375e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24f11fb7-9df3-4067-9956-8e0c3f7c0d43"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43ac5700-2571-4321-ac78-f7d3fba26d41",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "602d38bd-e680-4d84-8897-7ba990444e8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c344573a-7d7e-4bfd-a257-991a243312a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05f091fb-0bcf-4cf1-b459-80db0395c1a1"
            }
          }
        ]
      },
      {
        "id": "30986040-ab57-47d4-a473-970cae493cf5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "74015cb5-8e63-40e3-8f83-c98603298fb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c6e1033-dd4b-4314-8d18-877a70ab051b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68406898-c6a2-474f-aecf-bb0db6a7cf14",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f775a4d2-70d9-425d-9546-94853198f9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e13c4e5-8cd5-43fc-b2fc-cbdb532ff596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714a14e5-4df7-4889-bd3f-e8f4366d5f60",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77c5003-3d6d-404d-acc3-1b8df58040bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "958cb95c-957e-4d4d-82fa-67285c5f6cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d39ded-9d7b-4f12-9446-80fd32ae3d13",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fac8f4-4640-4699-bef0-782b4ebf522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ecacbd7-8665-4e38-af11-b596ae88a127"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51002881-6d22-4b53-8cd0-a1b7d0781a1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abc49a0d-84b7-48ba-8bd7-355cda1482cf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4a63bd-2caa-4215-a084-91a3fe185ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f58cd0ec-5a59-416b-ae51-1dbe7a9369ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168c8277-8e6b-443b-9395-6d2809f6f458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b13988-5221-4b19-bda8-0fc257b5b4fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74c77717-cf44-461b-befe-e8ca5cc65ce9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f70ebec-68a6-4ad7-a029-21f6c755193c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ee5c970-a813-4c3a-a7e8-2bfc0f39449d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b171d002-07ce-4b5f-b886-fc90135d7f7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7167cff-9291-4cd8-a691-d4b19c218d3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b0760f7e-22ad-4470-a1b8-fa251d75bca6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed12ba1b-626e-42b6-a1cc-d86afd4585ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0ee9947-9c8d-4254-876e-27207d3e79af"
            }
          }
        ]
      },
      {
        "id": "1baaf4c4-4fa7-4ae7-a396-a95b07320f6b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "084f7414-662a-4ae1-b990-a82624cc1d0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed47102b-effa-424f-a827-8010a71f82c3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "731461ab-ca9e-4f4c-be0c-b179e158342c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea149af9-93c9-416d-bd2f-35ea2f5d3971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb2d3fc-8160-4d1d-8352-3a3864cbd90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48370158-49db-459b-aacb-25c374756f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2c803e7-382f-4933-8bae-d2e568e6e56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4c2159-54ba-4c8c-8168-912e3d5d06ab",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5183a2d3-c197-450a-8f43-65560b950684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d558072-c792-44e5-a972-a38829b39a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b713961c-1a57-4493-b0f8-c107e83f5cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f7fd198-981d-442f-8a3d-595df17ec64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63846a33-b7e1-4bda-a508-a85a254ce8a4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdb6281-5984-4f9a-91b5-53df27eae712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f3f5da-12e8-4473-94a9-dca85a20111f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b55ee1-2416-45ea-b553-263850415cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370ff2ff-8e08-4d82-86f3-de89f7b53ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b517b3-010a-470b-a92f-01fb7ae193d9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7280aac7-8c79-42ff-974f-2b71c05108b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb13465-6165-4ab5-ad09-d735cc234eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c14826-d965-4760-9f74-8c80108816c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79642721-e2b8-4435-b095-33058320189e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ea508c-96d5-46cd-927e-b6d328fcab37",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c42fb8-6a2b-4b48-9e9c-058c4a72a864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1882ae7b-a1d6-409d-8bc4-4b9fddd34560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaaa983-18ea-47cd-bf9c-8084bdc6054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "024fde40-cbe8-40ca-88a1-1b48d45cdf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b6a532-b819-4d6e-abc7-775fad6a1ef8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4a5810-5560-4450-b51f-e66c753ff43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12438dc1-31bf-4b71-a67b-976680cfc5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a6e928-0948-4e8b-9dc2-a0ac22b09ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea96904f-d149-4b7d-8dd5-90de674edb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cffe76-bf6f-4056-babb-fe737e6e3cff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965ffd5d-97f1-4c1c-a288-a713c757bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad3f2cb-3845-42bb-8c9b-e096931946dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f54cbe-b920-4bea-9ff6-1f73d2c9a6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c4b95f3-3148-42b5-9218-57e9a71d7aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca4322f-958c-4da3-a67e-2eeceee2e91a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca777c21-5192-41e2-aba3-4c63b477cd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349a940f-7420-41e1-8f6e-c49f2cfdb445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7344f6c-d067-49b6-ade2-0bd88a643227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c313ce0-42c3-45e5-8b15-2bc2fc4e7f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010e6f9a-bef1-4fe8-9408-91174324d97b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31af991b-9add-41af-8cb3-c56cc2d410dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b0a66b-14a8-404f-8440-6b7b844b708e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e9e7d4-1161-43d8-94a9-06b56096e0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e938b024-3ac9-4cf7-9729-1d6f386d81cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5551a83e-aff5-405b-8e1d-208151707bbf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee4d75-b147-4206-9e9d-fbef23d20a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59840b2-b2a2-4c6b-94a1-31528f30694d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c57bdb1-a15f-42d0-8678-f9dcfd12d1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7e32f92-5dce-425c-815d-67c64648ca77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c173ccc2-4c19-4ff8-9714-6ddcb5aedba7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed803b40-3691-4a43-96aa-84fcd27b159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df293287-0540-48f6-b6d9-ff5dc2596655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f30f6c8-4b39-4168-b318-ed27eb0081e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc1ad05b-3e8c-4b43-9030-a39446591542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4715ee-1dcf-4f39-a1ac-e532179131c1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192e3405-bc52-47bc-be44-72e205d3546f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3dbd40-4730-40fd-8e41-02ddc15f3bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f272d7-e243-4315-a3f4-3888ea48a57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0519a7be-19c1-4aa4-aea7-9ab092b4adbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7695b112-7402-4f03-ad77-05a72c4fecc6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef436c7-fd8d-4c60-b62c-f9d62752f1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f960f91-f387-47a9-b91a-b6d19c3ab004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e125f1c7-3714-4c37-8c97-d731d3afe3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "391ab2c1-b065-4114-a599-e969adb30423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c509378-f13f-4c89-bbd2-3f68a28433de",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460ca2bb-97b2-4987-977b-c24ec78ec155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cf87bb-c67a-4c75-b059-d8003aa56d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1928a186-7c67-40ac-9492-156043273273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aa7c816-3026-4221-ae11-8843c778662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d052fab-844c-4eda-bb80-d5e545597154",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980fc17e-92a5-44f6-961e-d9e011709f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23388720-1a80-4919-97ca-d50b1cfdf68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225e8ead-4b36-42f6-bc5c-f79ad587dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e89f53c-4b9a-46a5-a092-69a5bc567d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69703f3-7bfa-4a77-8fba-987af1310b56",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a715201-a0ff-4ef8-9611-0ef70d39e742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae9e65d-f106-43d7-ba9d-660f03481c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da11d4ca-e241-4825-966e-bad238153a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1022f3f-07bc-4b9c-9c83-4a9bb7fa0979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acf1478-13e0-4450-9e72-f4c04a24e6cb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492722ed-bf87-4f9f-bd06-a0801c29a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8873146-f948-4e12-ab81-521bd7f27c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b13bf8d-1af0-4c3b-b2e8-a5724c5a3f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aec533c7-d472-40fe-a2c0-8fa8b25136bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7232f7-2b76-4ea2-94ad-1a6fc1443f59",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8474fd3d-3989-4cf7-aca1-14a6735bb06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fce9c9-4a61-47d8-9e6b-825ea0ebacb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a45adbb-178c-4b29-b6ff-cffa3258e619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbcdf10-1dad-499a-b08e-4c5a180f29cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1590dfe-53a6-4ca3-a689-9aaa730363ae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d58b4e7-958f-49f7-a61b-0e43d883fe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41093d7d-aa19-47f7-a2a4-da1bdb96ecf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5e568f-d79a-4bec-9ad4-eeadae16a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de04b9d9-d881-4cbf-82da-470597b98afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d75619-eeb4-43ac-ad12-219d3103c141",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3c9b03-482a-4178-901a-ed472dbf5e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f226b254-e0eb-46b2-abc2-983f95844cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756e70c8-0f6e-49d3-944a-d011fcb5560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bff9407-664b-4b95-8b8f-349269b2a27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99477664-8ffc-4f5b-a555-d855101e56e3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd81301-8a9d-4c10-896a-b1aaa033aee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb361642-43e8-4284-aaa0-eeb0aa3cc86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d874e802-896e-49ae-bdd6-527ce768daf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14fe7af-16d7-493c-b973-d7ab4fe722fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501835ff-b5be-44a2-be58-f1b57c6d0cd3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3134b9-3e54-47bd-8825-299f555947d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9180f5b4-38e0-4270-a268-909343064fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f43f2c4-d315-446b-8352-9746185e25eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4e3a5c-362f-44b8-8ed2-1dffef606b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297fb18c-2197-4904-a11d-2b27e9419722",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd9b60f-74a1-42f2-9a1d-5e4022488c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1e759b-36f9-4141-b0d9-ab5a5ac99808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1ec7b8-62a2-451e-827a-9aaa09a44614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc504bc-b1cf-42f2-8398-ae3d8352fb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1130a0-3a59-448a-a254-d986138a7f87",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88a0ac1-98a6-4413-87dd-0eaa2079d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14a3d5d-a91e-4555-82d2-1e6f691b3364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f92fe7-537d-4430-a83b-b0bf625a5f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed924fb9-99d2-4b2b-b385-110920ef1543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7d4f5a-a066-4b3b-9767-3a19ac59d2c7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5b70cf-4722-497c-bcd5-3fc31eb4fffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c1a65a-7cba-42ee-ada4-15d16b3c74d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e9b274-4584-4bdc-8e25-9ed9e8f502bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea977897-4106-4b2e-9523-1e04f6ef8334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ca6b10-30b6-47e0-9ba4-7a9de39b4c9f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babba0e3-4bb0-43c4-af39-9fb2fb79919c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de46c76a-6632-41f5-9c41-7940a9d56495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c0f299-6337-49d3-9040-b96e41c34907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "406b95b4-8831-4659-bbf8-6a7469c5bcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1315a0a-715e-48e7-83ef-70a4013e8713",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330342fc-59f2-439b-a184-a82867f9a671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176bb8ed-0ad7-4d5e-8838-8c914e4425ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74173d08-5cf5-4949-ba29-65b0c10807de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1909db-2f16-41db-b3ec-cf23729cad37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9203630e-1fb8-4cf5-b3e4-25302efd6682",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321f85f-328c-4470-80c8-5fa80af1f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19078ca0-2394-4cfe-aaf9-a4c675d89d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e6e35a-118e-40e8-b919-538f2ad720bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d973309-c85d-4973-ac89-f0e50c3afe0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb7a10-e39f-41d0-a382-f6f551a44c95",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7055623b-31ed-4d91-929f-08badd7f5f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c07199-1315-46d0-a442-286fb572978d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a0fad0-bdfb-409e-acdd-ed21f986dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3523d39e-9cb3-4a8d-b7e6-6c891aed92da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423675e4-ef26-4203-9730-7d196104f606",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4438f5-0ae7-48a0-8882-cd17bcb65f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d56407-0192-4348-9c55-fa7408d845a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2712fb1b-64f7-44cc-b6c2-8a6a6948c239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3f6738-1be4-43b3-892d-a2a075d740ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673fab3a-9173-4fd0-8a58-3500556ac222",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a4e58b-6a7d-446b-8f1d-b4abf0d297ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3febf06e-42e2-4f41-be0e-26225015d941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a86140-5960-4b45-a351-6c610a479bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da6a54e-3737-41b8-9f02-0f89e9aa5af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f75943-fc91-4d1c-adf9-b1d7f3213c4d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390fc398-b372-431f-95e5-18d7ad531ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38dbd1a-1210-43e9-8289-d8cb45caa6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b665e7b3-08eb-4064-8397-c87d109ffd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e9351d-c2b5-471b-9ea9-a253296c124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cd1b9e-4bf9-41bf-896c-be5dd86f34f7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5839f8-3f9a-4ecb-ad29-17ea9f7f6529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e493a18e-3631-4fc2-80cb-81a3af1d4a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4a2d75-ee06-445e-8105-d60eb5030e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88665245-5f87-4dfb-8c9e-c47bb8e12597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4bfba8-0b12-446c-92e4-13417d5eaf84",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c197fb1-3ae3-47c5-b71d-c026ce0a4794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c134c09b-b576-40d6-a0d5-4dede7199cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baba2e1a-8be7-4b3a-add2-fb33084cb8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "459a7605-e619-4524-a801-a9701de0bd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306c8f81-a773-49de-a569-08d7b44860aa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de7d05a-f727-4a7b-8d16-9e998e9791e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb660850-97bd-416e-afad-e916f0eeca62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2195751c-5866-43c8-8da8-daa449c8b587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "16c45e3c-7353-44d3-a4fa-1fbe1de1c8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcdd632-efe3-4965-b82d-70699484e2d0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3d2981-fd97-47a0-95c4-b57cd6f2eae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2fccf04-625f-40bd-9e53-4f33987a3a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc61fe6d-588d-47ed-8316-80973a21a93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2683b3-59b6-4932-97c0-24ea9364e084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761dd58b-6295-47ae-8472-aa996e4e051a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195b953a-8efa-4d1b-8374-862194083b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef967ee5-a0e7-46a0-bb01-98dd6b98509a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8ad2c9-adb9-407d-9c56-70dd290b3540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3115f4aa-5091-4d1b-b88c-b76ae2e6f543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5227f09-bc19-4994-9666-a832c6565fcc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11fe6e6-f801-46af-8640-dc3293d59a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2946f9ab-7578-4c89-8cd1-7c43fa229e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5df90d3-a687-40fd-b467-f80659f65d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76952496-2c18-4b7f-8737-9e044ac6ff94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf3fd2f-52f5-458c-ae51-a82a8ceff9de",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0117bc1-7c59-4f8e-9dac-f2e264324501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90748d1c-7530-4c17-982a-7a7515e71ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a01d58f-646f-4938-b51f-0c1f70a52834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a36b208-14a9-45a1-a3c2-3bbf4bb3eac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5336fb92-6cc4-40ca-9ae9-44700650af4c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e1b354-8907-4b03-aea3-a679eddf7775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11836898-b587-492a-9737-8f583e05a930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b75b9f5-a8cf-4ea1-89ba-874a7e076032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54059601-a5a8-4191-b42c-8b71c8561824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ce2953-ab1d-4f3e-b962-ecc8d04f5a96",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e8abb5-0369-45bd-943a-00fbedf16e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd74a52-e29d-4cb2-a1f6-5080f16cbe95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2783364-70da-45f2-acdd-741f45bfb2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3764f9-eb15-4372-9534-f71e4c1f7598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e015f7-dd05-410e-b5e0-c5b805b7aa55",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3b475c-9ab6-43f1-9045-4693f3381dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e45992-ff62-4c38-8b28-8919533e3c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2424a1-6acf-4ea3-b24e-462444b03a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3e7c27-656f-4075-ac1e-a104d30cf77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b69aa7c-d455-41bd-90d4-12868eb047e1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f754d1cd-6179-4c6f-82b9-f671c01bade4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b9e95f-5d7d-4b68-928c-c9d9098b7c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c6df28-5b8c-4927-b83e-61fe016d8bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "30f6474c-25c2-4778-9d56-2bbed43ff74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de2f53d-5d34-488f-a219-ec4095aec480",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239e9ab4-07ba-47a3-aeda-2bf5177cd2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00db2042-6576-4390-a45b-23bd1eb2cb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64c05cf-cddb-48e6-9f51-e19c402e62fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8643cdc-337f-4d05-b0e3-3a7c636d3ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538edc25-4fe0-47e2-a8c4-5aa3ffdd0212",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27df6a0-90f3-4597-84ee-3db106aa69df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905ab141-d22d-410a-88cd-5e6181cdd76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8fca4d-d2a4-4481-ad83-24cbf0e0bbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6ccaba-40e2-4520-b2c0-7cf4096d92c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91b34a8-918c-41cb-8973-3fd384af237f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e91be2-0544-422a-b319-5fdec3d847c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f48a32-0ab5-452c-87fe-240a67c3d19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66db5e43-5ba2-4500-a132-4d8f329cf64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3968927-76c9-4979-beb1-f18d81e958e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a809a7a-5d52-45b1-9b32-c2c0ece7bb27",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e77a94a-e6fc-40c8-9be1-2be85b206b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c3c759-4673-4bca-9cc4-914dee26b6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702b9bf2-475d-442d-9150-afdcbfcabea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a60d19b7-edd8-4005-8ea5-b99d1e8038db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e52437d-7b90-4110-9a8d-04e2afb955c7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00be93ee-d93e-474c-9f2b-bcd3f32595fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791c37af-c302-4a86-a7a5-f0ac7b9e3295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83c52d6-28f1-4e3b-9cbe-ece85a338bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5f8baf-78da-4f69-bbd7-3f427b914aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbee11c-9a29-4c60-8994-fdcb76105043",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f87a35-1ded-45f7-bb74-0f64616d103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c056d6-76d5-4e51-b6da-dbe1bd6e2d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3762eb-e4f6-4410-bebf-56ad970d89e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5847d1f8-4610-4282-b992-879ca3bdd028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a7e3bb-1d8b-49bf-bfc1-029be5cc6b30",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9e8b8d-45a4-4842-8743-8a9666406662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0938cc3a-f1a7-4b16-8074-eea37de7c9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7cafbd-8e12-4897-82a5-ac51f466d89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfe2c68-9bce-49b9-9548-918428e0637c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d836f0e5-b676-4032-8b06-268dafbf3998",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7863b37-756a-4575-8163-4a95a306ed80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5aca9e3-5eb8-4ad6-b9ca-4d8b62d8b36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21301035-d68b-413e-9e77-7cfcc8e6799b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "077630ca-914f-434c-8716-8b23cb0bb376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07d8687-9696-49fe-83ee-c12df09dfbd5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d8037-5f2c-4cad-b6be-066dd761d339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58f73fc-56b5-4603-b3c5-37d0550b9a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c385a288-574d-427e-bf7f-82917c3d68da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b29f97-1169-40ea-9099-503ac8e9b412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e3c40c-2410-44e1-b74c-120f1f7f2b7c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d345cc9b-969b-4944-8644-0f0daeb94d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff341afb-3d15-4de7-bd07-e27d9508547f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafbd388-2c8b-429d-95a2-f90a63ffaa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "deaadb39-d53b-465f-aa64-7f0393206a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da3c31d-7192-4e29-b970-898975cea43d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02329a2-bd43-4bbf-a8f9-d55971835362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f306ef-2b37-4591-8b07-fd2bb50ac677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9bb110-269b-40a1-a78e-e14d543801b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "974b8ae0-b0c0-4cf3-9a17-e6be0a86f87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ae974c-8711-4d91-a46b-dbd8a0043466",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c77f353-7c51-4561-94e9-7f8880f17996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112b68e4-83c3-4bb9-8e8c-a0582f803851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5598d8-1ffa-4721-9054-d4a3636711eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b70303be-5002-4cf1-ada7-1a4184c17c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e216d631-069b-499a-9744-3d780799f9f2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1079ffc-ff07-493c-9477-5a0cf3b18455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80988910-3a92-42df-85ab-258d14db99d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d15c91-5274-4777-a121-89c2fc1d7a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "85d07b90-395c-42d2-a2af-f9ff0751930c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b20ef1-99ea-4ea3-89d6-751ad04d16f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbd2b08-86c4-49be-b926-6956a4cc4197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73f4813-0064-4a07-a68b-42200faf394d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db8120c-7c4e-4461-a471-49b2e2c493a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80108677-180e-4a18-b4b8-430ba6219cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e1019d-cedb-4be2-be54-3c63a153c563",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339585a9-128c-4ee0-b4a3-1c4b88e943f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99da254b-d9ad-4810-8cb8-4d8c821d0ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa7e6e2-c501-4d0b-908b-a088f96e9e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a09c29f-52d1-4475-b5ae-06a25edce196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c30be1-805d-483f-bcc4-c39f522b26c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fcf3f0-e1ce-4728-b4b2-da2cf9138b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2fe198-b182-458c-a0b0-4e3fbac6eccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072fda1a-0f8e-4eec-a5e8-c1bd4a9ad45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eabd62c-b9a7-4fd3-a594-b8a633060615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eae6d7e-0706-4b6b-892c-04b1b712912c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141c3e3a-71fc-4a63-90e2-d6ed49393442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c51578-df43-435d-8094-8c2f2dfe45f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5db7bcb-4aa9-411f-88aa-0baf03d454c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15c354c4-0b59-4d54-a37b-a6e96e9f7995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1388fac-8741-4ee3-8841-6e63e9070964",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f2202b-2d38-4e42-a0ed-e7ed63e67def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f239f0-b367-4bc4-8cb0-703cb8c5cbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30e4489-14be-4aca-ae5f-ef8bbe71c61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6c71bc-101c-463c-8b9a-b1f24c12f9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb14b9e-1fc3-4733-95b4-14b1bcc98fe6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aaa439-b639-4bea-b25a-ff18a2f0552d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7922f6-46f2-4f36-9ace-adc18289ac33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f562990-4e12-4cf2-ba2e-12c77339830b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ede9e70b-fb39-45ac-9979-d522d1368c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deecd831-c114-4fbe-b17d-0bca1662d3a3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0428328-0f1a-4d77-a995-f08ff66e3995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c765fd-a801-401a-96f2-2984536177d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e432478c-1bcb-403b-87e8-74e1b7ef2621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2255b17e-90e4-47b5-9c11-d4191985dcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859dbbb-821a-49d6-acbd-9255b9db7679",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c92ea80-651f-4a4a-b1a2-1d31da1a17cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaee7c92-87ca-4753-995a-02d05175d0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6a25ac-9fd6-40e4-94ba-c061bd7798bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9d5e69-7a96-4430-81d3-90feeff7a1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e20acb-084d-4a12-86fb-4081e82d7b2e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8ddaaf-d8f0-4f9f-a461-7fba53711ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c453dfb-0f23-4953-99b5-83bf95f6c639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda7955a-530d-47b6-a214-ed88396602da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c84e0338-a9bb-4f1d-af0f-e339c7c2bfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052cd078-adb8-4c0e-bc3a-cf06b347943e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a076aeee-607a-4330-9f2d-50baa7d382c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32afe64-3563-49d1-bd5a-21b9f73c76bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4500c09-692e-4586-a286-c7bf4806746e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422f21ca-3cf2-4bff-b831-bc513c1d5c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766b98d9-bd29-44dc-839c-509115ead2b1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716f8dd6-b717-4cbf-a488-60b511668804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9451e1d7-2970-43c5-b727-94bba448df03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82500866-0957-4715-9e26-70bcc3dfa11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79ecd027-1a9d-4814-a2f2-988f238f90b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b14e76-a085-42a9-99bb-735458e8b372",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ce4fa2-64dd-4f72-8982-497b0e4c2fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c08a43-3749-4335-9189-811eb5557c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d600d6f-6fdc-4280-af01-edc5a1ee3df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9e33a4-683f-45eb-b479-a7ac07744960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d1aa16-de38-4842-81cf-4b5f8a79da0c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958cda77-851e-4a53-a6bd-064435fc8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb39c1c-ad0f-4121-b554-5040eec4afe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf0b994-f646-4faa-b99c-984dc5d9e1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7348814-5cf0-4a81-835d-2c18fbbdfced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d88148-403f-4362-b7a8-46b0c6ff98b2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e637a1e-3725-404c-bf3a-16a42f723b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70c8a9e-8427-4275-8abd-b96e23c8d4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5e950a-4777-4f46-ab9c-8cd3a7429e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bc08ff-9706-436c-b6e6-781dd4774617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9544511d-2f36-47e0-b6f1-d00ebfa45c2a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c88e8c-abdf-4053-840a-daf779cff984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7f9531-05fa-42fe-80cc-413634b20dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304776d3-93c0-4bfc-adbb-e2cecaab51fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5adc6c3-da16-4479-af5c-f6a75f749cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dc802b-7bf1-4509-bf11-881846b523ee",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a036d9-bf0b-4927-83a2-f15cfee681ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2155f60d-cf43-47e6-9867-8a79c239292c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb37bbf-bf7f-4181-a0a8-e36ed0bd73bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3589dfd3-7b7b-431e-8c78-69df229e418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08486328-30b1-4c39-a121-29a67f5aeb01",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56ca5b5-a5ba-40fb-965a-05c71bfb9707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7422dfe6-4a9c-411b-8430-4876ecdfed8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51ad425-0a77-4408-af86-812e682f61cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9fa59d-7bcd-4e76-a306-f132f0462f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724920b3-d1d7-4760-ae30-de5162e2fae8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bd59e4-6593-4810-b7ae-be9eb19c04ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5fae38-c8c3-4350-a851-ccefa4928367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9597dd2b-d9d6-44a9-8553-f8f77b844190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ef87e2-9c13-4dee-8224-9d4bd30e4af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c1cc16-4cb9-4f8a-a1a6-61cbd70dcfe4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e379c9c7-3ee5-4e9a-b49b-36bab590d8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85dece43-18a6-4171-998f-14fb9734ee78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b21e80-a6bf-4524-b53d-33ef611cb3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7faf41-242f-4d1c-9e14-2622f2483bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786810c8-1444-47c2-b50b-078db2ab21a9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bd7d8c-482f-4531-a64b-0a8c094ef38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cab1ee-fba6-42c8-807f-a94ca9fba179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a903f1a-c181-46a9-b968-44f82136525d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3984eb1-2b63-4c63-83fd-eab17b08f5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89664e8e-07ab-44be-bdff-a43ad9a8fadd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe900b4-1f7b-44ae-bed7-4f5c9ec49102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9a94fe-0d6e-456f-bc35-4f6ab667e70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee807e5b-3d2e-49d8-9b4a-52513e8a539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e160d3-65fb-4d28-8ddd-727bbf881382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f990ac5-a25c-4573-8b27-6b799c83297b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07080051-52d5-41bb-b1cf-bb04ea8c0399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be928c9-7592-4016-a0c0-525013e5e0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def75bda-496c-4ad3-ba81-f4a642ab3ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c43b19-d956-44f5-b1a6-d1c0647fbdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f04e3-9e8c-4b49-9543-2ecb32893bc3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cc82db-dae7-46b4-b57f-65bb92a6b4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec35b46-8131-420d-acf1-9403bb6d0d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36445dd0-668d-4054-ac7c-5674154988fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93db86c9-4c10-4d64-a69e-d4e07a0b6f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f684d65-1de9-4778-9dce-6bd774a3b7dd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1af4e0f-b792-4fcb-8417-e2135e925d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cda9a95-12ce-482c-91ab-8781f0e7ed1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7917146-7693-4e7a-9fae-6672a22e7151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd424d40-245a-46d2-ae0d-8235ede8fe1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620d5fb0-4be9-4f9e-a3cb-254eccba814f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34eca59-34ee-4156-addf-d2a0cd88fdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f5a076-67f7-43f6-8151-b030a7820ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97de1bcc-83cf-46ad-a551-1dcf1d241079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d9280e-c830-4656-82a5-50ee65c06506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb5f878-7045-41db-b8cf-45dae18483ae",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d3563b-1cd2-4feb-8948-e13846498ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab435a6-4e48-4cc3-b3c9-3e05c7eab3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5326c4c2-cabb-482f-950a-114a99ce447e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ad5109-a5bc-4dd7-852c-9fa277e2e512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3510b468-dda1-4e07-8459-3ce5954f3b6b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058b7017-1d75-41df-9f95-53444504144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f7198e-c15e-4ef5-a29d-086017464a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30daf40-af25-4df3-a7cd-8c7868633484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2b18bd-60ac-4a1b-aeb5-48fb1cee5680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed4e4b3-73f6-4b3f-a1ae-3532d1066dba",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f31342-2fa5-4cc0-b07a-c44cf1985768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e8880a-404c-43c6-a9e7-e713d8b4df3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79bc5fa-dfad-4ade-ac2f-79003d90d976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca44446-31f7-454b-9056-9063f3240457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8596f08d-fc61-4483-a68c-4a58f6501355",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a824c3-ce85-412c-b673-7b2fad6964a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81427555-36cf-443e-baee-653eee0e678a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252872e9-bd44-48a0-8326-70649e017ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec228038-6867-4457-8e71-ff04673ca59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5edc2c8-1ad1-4975-a036-2fff90b3f713",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6abc24-c950-432d-a67a-9bfaf98d6850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531e303d-7afe-4460-a2b0-f15f8b5f5f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bec7a3-6756-4bc2-bce8-c10cddf97df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "326031f5-9000-444a-82f8-180c830d317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5046c870-5356-4b94-959b-37c566eefadb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fa0e1d-b0cf-48f4-aea7-e377e9db1566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e4d8d5-c339-41e6-8eeb-7232b33d6457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f7b668-0d3e-4202-963b-0ad77607089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "883b8a45-7401-485d-b45c-bd7121a8e66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8154327d-e80a-4075-ae28-0fb6718d3d92",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf66436-bae5-4d52-940c-e7fb21e47b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b23b82-42ec-4291-a9b7-498bd0b9c67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd757f24-afc5-401d-89cc-a3a4e76f98c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbfcdac-8dac-4560-9043-ab68b1edcc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0266f6e7-a513-413c-8352-0114916fc16e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6aa3a9-3dcf-4147-9b8c-3eabd2c93220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81699037-8900-40c3-9291-b5bc453848aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a12306-deb3-4f11-bde1-4511b8a86518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5ce358-9dc4-441f-b803-6387cfac9b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b8cfd1-28ee-463c-9501-c8a02d5cd9fc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768e736d-c912-4c32-80e7-a4172a59aca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3c63b4-b8ea-4552-b4c6-755ec510933e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dc9a93-4d83-4087-a01a-76e2449ec603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3e459c-6134-4c2f-95fa-c1e0c067e291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89022298-58db-42a8-aa58-7d759a91f9e2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d712bc2-50a3-464b-9997-063116cef288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f807ca-f04b-47c5-a2a7-e3d3e0f8fb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f1baf5-ab99-4c7b-812d-e62c0152b913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25d8bf66-9c67-4ba6-a1fa-aa0e7697df7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0246a5bc-c812-49b9-b127-3009080f9cd7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f35e16-0bf3-48f7-84cf-6b7cc1f9d38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c779d915-8181-49c6-8d9e-ab49924b955b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3f0e8d-48d7-4bf9-a01b-2e97beea67a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9280aee-b7a4-4692-b873-42c84b701cf3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2387e26-4317-42af-b929-ac79bffabb9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ada01574-fd4d-438b-9232-f8bef08b1a34",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8b5283-463c-457f-a899-3b041ceeb6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "638b4ec5-bf36-4d41-b17f-97f06517f530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b86cc0-3731-4200-a28a-38e16789a7c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4ed42e1-6e19-4df7-ace0-e040c0f07d1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e2e13b1-8827-4bbe-8eea-6fa09101edc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67699c98-f612-4f9b-8308-1fc56b9e3fac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28ec7ad0-3124-4b88-9c71-1a11fc59a575",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cdc897a-ddc0-4ce2-b7a1-71382196a46e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2fa2dcc-0a76-41bc-807f-327ef7364bfc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c741662-4239-471f-bafa-6532ecca051d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "144b2a24-d008-4f62-b603-0451d528ddcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac498c49-7847-4476-ba60-86430149e558"
                }
              }
            ]
          },
          {
            "id": "05426964-686a-4a4c-9a14-1d600e583e3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c30f587c-4ea9-4082-b398-3e141f2906eb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f9eea01f-2379-40c0-a044-c837a10d55ac",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b650de-5704-4e03-afec-e5138f9a509c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "54da5785-0b00-4455-953e-548517e06fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e0be7c-4d1e-4a20-9f6b-57a9560edae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c21d110-6ed3-41ce-b125-3b607896324c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0382fd4-4a19-4fb9-857a-ab6ede918ea8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92b50b4c-2612-417d-bf68-75e0e005828e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30bf5dd7-0c5c-4437-a9ee-43f607077e07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2542468-227c-4419-a5bd-d9bddb4e9b66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e39d3a5d-ca0a-466a-9d7d-ec18dd9d2547"
                    }
                  }
                ]
              },
              {
                "id": "c3ebb9f1-fa19-4331-93c2-4d8dd14fb23a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "014dabad-80fd-4740-884a-d127ffe5f65f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a8b286e-5ba4-4d1f-8b54-c0f4410468fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab546792-23b1-4f82-81a7-bb5345096276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "beaf5cee-19ef-4f05-91c8-aa69bfc5b868"
                    }
                  }
                ]
              },
              {
                "id": "b44ae449-4741-4eec-a376-26f37f9c4967",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27b325ea-203f-4505-ae7d-9e1df0ff231e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fe6916d-9d20-4210-ba74-f66a9f15d54a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1022128d-7b81-466e-bfe5-cbdc5ab22105",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49f99385-da3d-4f0a-98fb-d18f31e6a8d8"
                    }
                  }
                ]
              },
              {
                "id": "24cfc9f8-51d4-432c-8485-60ca16a0c354",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89980c55-7fcd-4d06-924f-3901540fc464",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbb186ac-b301-450a-8763-97d8cc3211b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6441bda2-872d-4ec6-b94b-c224a0827e49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d970f5de-e8ef-4cea-ad37-670c3eed3723"
                    }
                  }
                ]
              },
              {
                "id": "dce47221-c6cd-4dbb-b489-0aa2401b76cc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c748ce5-9d00-4421-8971-83c3b75d6b74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e34fcd9-e0bf-44e7-a32d-d525001bfd89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a46dbaa4-0b82-4096-a35e-12c4d65f315d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "53d75be6-f841-4fcd-9ab4-77feb48f06eb"
                    }
                  }
                ]
              },
              {
                "id": "170b18e0-abeb-4959-baec-ab1d7a8da1e7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "117b3489-f551-426d-ba05-b045b0b234a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f4a44d6-3dd4-4eaf-84ac-e52709609a71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a6fbe01-6bb3-44b4-9c59-6f7d8963571c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c90a1d1-b0d7-4a0e-b918-6de200ee8cae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa231991-2fa2-496a-907f-251b299be392",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d19b80b-8a67-4bc3-a0ea-a9e4612e4135"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20574ef9-7663-40a6-b62c-5d07dbb16f5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53f449ea-70be-4361-a685-a778b3f9dc97"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84d7aa05-c850-4217-9452-e91a3b7d1847",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "af1d612c-9fbd-4d35-aa8b-377b638c5e3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8efa1c2b-c7e2-4eae-989d-7f9b76815c53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1be52196-9c05-4df2-b9b3-feff56a85bc1"
            }
          }
        ]
      },
      {
        "id": "da25d01d-2a91-4661-b9c1-9ecbf907c703",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1f2b35b5-bc5e-45d2-8693-a0e68bba3a1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81af2e88-b901-4900-8c8b-549731fe2be8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bbb5350-aca0-4be5-8756-8e3d9e242751",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ad565a-7f03-4b5c-849e-06972a9da406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d919b7f7-bbc7-4bad-9a7b-215be1086a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32af47a-de53-4b97-9974-e588e52b9c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9398e5c7-298c-4b88-9b9c-9beb6c2dfbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a621ffa7-899a-482b-958d-cb17b5293c9c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5203ffdd-4d8b-4a78-9f99-866d1eeef26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6b3f3f-3c38-4f43-9096-c25c36fa85aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b08d8fc-5b96-4db3-ba90-9285f6d49e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "636d08d8-bf4e-4b1e-936d-a8c761dcf022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22707117-fb63-4447-82dc-ccd8ab5e68fb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2c6f57-a269-49e8-bf1b-40ecabbbe391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbde9fd-ecc3-47e6-ba71-4cfbfe695ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33919d04-aa42-4896-9b2c-a1cfc40b4734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be37d98e-8757-41f9-9142-aeff764b5461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84548811-9370-4ef9-b63e-818f99449c5d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120879ea-e31b-4b97-b515-10c157144e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c2181c-3fb1-46b3-81e2-9db7bb8f320a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934dbc44-1b60-4649-b610-9ac1d7507ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "655d953f-a58a-44a0-8936-9c57fd6ac889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0721ee-44eb-4ade-afbf-86d919590792",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55bfda4-5e64-486d-aaf3-c57c28e55428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62093f5c-4fd8-44b5-9029-ef28b7a9f5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f09d86-acd4-41fa-b87a-50a383301585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6fdd07-8c24-49b9-96eb-ede0070832e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc1585d-7441-4323-8763-7a9810df3e2b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd6eed-357f-4864-becf-c1973b6cd254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fc9b01-b8e3-4e8d-9ad5-a486904800d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779e0822-de60-4e06-a0f9-8a059e0b668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01401320-7039-4616-a032-ffc8f6dcd462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33de4329-29a5-4f93-a507-e82217fb8349",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe921ed-5ccb-45ba-8531-7f295f060ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf246e6-6d97-4394-b695-e2b6e375badd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7729540-03c7-47d8-867c-999c9d3e36ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af0c79d-2bad-4a67-911d-e86cae6b1790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457aa228-069a-4f09-93cb-557e901441f6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5908836-c2e4-4279-808d-74897bd7ef1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abf8d36-052b-41e8-860e-efd596997321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb426389-ff87-495a-b930-202a1563fb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a95b5b-4b20-4483-ad18-6359dc8a0a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58466a20-3f32-4ad1-b267-ce6283bf9a69",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee6e3f4-9461-4950-a875-f8f0e61d3000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c143a2d-ddc7-42be-803c-763e551bbd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4234be-2408-4188-88c7-d05b0442db72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5a8dbf-5050-4c6e-9c79-f52615ceb2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3375fc-0aad-408e-92b5-ce031c30a813",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1da70ef-54d5-4fea-b293-ff5520570c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a761cfb6-8734-4d2d-a6aa-81530ec5f95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8e3e3a-a1cd-4f1f-a0e2-2f5979fd88e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de40ef6f-66c0-4188-bc6b-f1cfbddab7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39fb849-4605-40f8-97dd-7bd83c82f98b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86301dd7-435f-4dd4-a352-aac6af46c536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f3a9ec-8dff-44e1-ab45-3e26181ffc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1ab1ce-bd2a-48a8-ac68-483d60cac8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8b9cf1-dc0a-4bef-b49c-a88bcf74a3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b30f25f-0597-464a-90d0-354c99b1f456",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c021ffcf-2db4-44b3-8b0a-b2e9ce38f125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8edbb9-dc65-4532-ba80-b625fa2276a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95053dc-9a52-4f06-a054-10b7ff650ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11ba0f80-0cbd-4ef7-9f44-366f266c2848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e28eb4-6ba9-4ff1-91f2-224dc3ac68bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e555ee-e33f-4cbb-9754-94ed4aaa89ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104e0d29-ea47-4e5b-bdf1-3e2a9b7a819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e8815b-aeb2-46e2-8b5e-52e1bc21177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab42d217-024c-4988-a49f-6a3b957e91ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cff25d4-1f33-4a93-95ca-82ba95ef41b1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e263499b-2494-4741-9787-4d2d02bb4b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8c38f7-9704-49b4-9716-49dc1e6945e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720a6b22-5562-47bf-b58f-d61f763bdb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd910254-2f1c-4b7e-8da6-6024f47a25ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfd7a3a-df95-49a3-ab01-20d7e92dc826",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e589e287-9ea5-4671-8080-71ef99b3846b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a846f7c6-7510-4b9a-915f-fad18767ca55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc41257-6db1-43a0-853d-603fb9f2024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a3d9a7-306e-4155-a271-068713f3dc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b029394-099d-497b-8d87-e1e9c00b8174",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1cc793-6d42-4629-8dd7-b01f1af39f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7319fe43-4fb8-43e3-93f9-75a767cd6957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744b6ca6-a773-499f-82f9-9a66fbaee73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "524326ec-13b6-4c28-941d-21c734df0dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5114a0-f5a0-4dab-b50a-ca50118e1d75",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af19a10-2e38-481b-afda-08fe412b03c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02459a1-5843-4fc7-a674-62c9113401c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dd2bce-7bc2-4e16-bff2-f83e448495e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e918471f-48cb-487a-956f-fd84179293d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c790a45-af3c-43c7-b324-d90245c75759",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92233e7b-5ac0-4c6d-a18c-20ca49b41179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fa0786-0bdc-45b6-b82f-399e272d51d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf70f4a-bea7-4ce0-8585-a59570fb369f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f67bd6-b080-49f5-b682-3812196ada69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005479cf-15ba-41e5-a5cf-01e492486dcb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817c18ae-a878-4802-ab39-e0ec88463fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3547d807-2055-40f7-96b9-2db6ce862de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a6af37-ac12-4ce5-ba73-5ccbebed275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe4e6fa-f1c3-44de-a5c6-e68cecb1906f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef2b994-7d36-4b60-9b51-6b82d7be21b1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c7049b-3518-431e-9133-87cf1211f055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb69f25-6d82-48bd-b33a-64705208f9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166a7762-1933-49b0-b022-0118a3b09226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa0948f-98dd-42f4-9c49-282119fa7ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47061e20-d4a9-4a2e-a9f9-ce9a0c362c4c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0478a47c-c779-4dc9-88b3-92d4b6610ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b9abb0-212e-4225-8881-ad6219bb65c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0da2d-a55e-4cff-becc-5f6880adbf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf2db0a-f437-4a74-b071-15c164858801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998b2fba-bc90-4a6d-821c-c2245952ad10",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8664d161-4f01-489b-8626-559e5f8598fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3633d8f1-3758-44ec-b239-27ab4d6c427b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dfb943-3fa4-4993-84a5-37eb0d64cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a17eda-3070-415c-b022-165a98a4fae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce0d37d-b5d6-441e-86b8-d07727a726cf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a91041d-8912-41b7-a2eb-b9c21b0e3437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed453cc-7f9b-41f7-8b56-8412a3c9b011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec6ef9b-e3d4-41cd-9aa9-2786e7bc239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "225f1ca1-2ef0-48d6-bcb5-c6e4330f5a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce822f7-030d-4de2-ac51-bdfd47182d20",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c26057f-4e40-4432-b28c-3016d1ca07f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dedf93-c4c8-4436-914a-7ce56f1c64ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0a6d6-9392-4ae1-b0e3-91aa69dcfdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3082e424-6f8e-4ec5-bdbd-f224eaa71690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9979ec06-d39f-4fb2-8080-3f88e8cb981e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b08df6-04f7-4847-b01b-4f265e6bf1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ec8635-6562-445d-9c3b-a63e1d1eff39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9735c498-cf29-43e4-8673-1591ee93f0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "046c33f5-ec36-47b5-baa6-811920b22ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405c3d8f-8e14-4e15-b54a-db5aa5f7eee9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef6d5c1-1d74-40e6-9fd6-02d9f91f0ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb5bd05-b358-430f-a7ea-da003d6dde8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb027117-d522-4c31-a9ba-11b47b38c9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4031009-0ced-4513-afb2-b0e5dfb2f586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddf314e-ac35-488f-a9d4-5a58b7d050d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea837e4-8c18-43da-bf0e-835338d012a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c049fa24-93e5-4421-814c-6efbaa35155e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a326c566-ffd9-4f0c-89c0-1dbe6b038d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1109a6af-de2e-43d6-8383-c7085098b8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c738580-6876-4361-a79f-6279a4b4c88c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f273367-049e-46dc-9c07-642187d55d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c05924f-3895-4814-8d54-88db7687a56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ecce66-fa46-41fb-b9d1-e69ac8daaa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f85bde-4990-4eca-ba1e-a9461fe3ba01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2addea9-0bf5-4a38-b950-a5a05226ba31",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8870ea-a23a-4b92-b012-61dbfd293d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc9666a-8371-4ab0-9b4f-34a868121d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dcfaaa-9d6d-4f05-8f82-af25ab4cc032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e54af74-0d84-4236-b13a-783fe985615c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b62be33-7fed-426e-ae7e-e2c69d228b86",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7bf88a-ed78-4d46-a989-120ab6653693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140c0b31-5678-4d26-b99b-856b3748a413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15007b62-938a-42ab-8936-b368e12185e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c878b01-dedc-4854-beb7-b2fc965bd645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0481da3f-110c-4dbc-b008-8cf356be2c22",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a0867b-e922-4d4d-bc37-8b0769887282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee07963-bb09-4637-9c9e-a858143287d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6ebad8-d38d-4613-9ebf-842f6ee1bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2f77e3-f31d-48cf-9ab9-2e5b39274426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1835bc5d-ab7b-46bf-9645-7ba8c0542aca",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5c35ff-5585-4ed4-9135-2e7f31e9fa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5318da-7e04-4a40-8174-08f1583762e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6c717c-d6f4-4297-a1a5-6067314ffa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f089389-0dc9-4866-ade0-7aa0e9f75c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4afbaa-0a43-440b-b3d1-0fc9efba0b41",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac5b81f-e778-4163-8028-26a74ce001b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f997690-89b2-47e6-a8a8-9dff40e680df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc718653-abec-4f81-a3b7-01a47c7a6d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4466f293-4428-4b5d-9e25-babf1ab4f91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda01630-58ec-4c0d-a7fe-d58166590059",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4ed220-73ab-493e-97d5-e283ef2a0764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b78592-44d8-42b1-8a67-08a2239ea66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d27601-f6ab-4078-beab-2ef74bb82daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae9f8c5-1a5e-4912-8d8c-24df83e62d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3c5d73-8dbc-4501-b362-77b5d851f927",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e06ff4-5697-466d-8a71-95c4c7218bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d06887-4e98-4741-8f74-2044b051a6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798a9dbd-5b60-4675-bd5b-80cff81e95aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c94f6b-045b-4a20-89ff-3ffcd45cb4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce792f4-48c2-4dd8-bc5e-47f5d0b5ed93",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5889b4f5-b970-48c5-9274-cb495cd6ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507ae7af-bbcb-4683-ba09-658ba37eedf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9db4552-24c2-44c4-88a7-084d9b7432ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ae6c55-9cb0-4bf2-b837-4ca2cb405e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f283918-b38b-40e7-954a-462551206e72",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a9f30a-773b-4a5d-917e-6c63149bf79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ec9368-ebf2-4198-98e3-4f2aeab1d6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c6154-dcf2-4b07-b6ab-aa945052ebdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de77050e-c191-4c31-ac09-f8078f3ce92a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ffa05298-8763-4beb-9918-dd10aa0c4088",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05cdb866-47ac-4a6c-87ed-c9577311f822",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00232042-b5d7-40cc-854c-fefdc464b35f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "19e246c7-ce6a-48af-bdea-dee4ec2540f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e6e796-f544-4100-9389-e8daf68f9f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beab1165-4816-478c-b1b3-05068f3ce282"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cda940c5-296b-4507-a238-4f513dee2459",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23416103-dbef-48d6-97ea-8f1ca34cb2ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb852032-b0c9-4e53-a654-ae3bb76c7772",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f5f118b-87ab-4f7e-9798-d2f501f16039"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ae57d91-40c5-44c1-91c9-216f927bb0e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5198001b-bddc-4a60-ac6c-0a51237c66f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f678c6ef-f3f3-4d29-b13e-12812f30efa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "146fcce2-24e0-4284-b288-4f02e3b67a3e"
            }
          }
        ]
      },
      {
        "id": "ac8fa414-186e-4575-b2b2-ba64a94c4052",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8427f4a1-4ea8-4296-8bb3-6629bd86f8ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b17d029e-090a-4bc3-8291-1833af8ceb9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2e12b48-aabb-4507-b20b-7abec854ba3f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992ec269-2580-4209-a730-31c5dea33436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad88c0f-435c-4e71-b0df-3964dbb503e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa517f5-80af-4174-9d33-5c064a11c1a3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476a0db7-e66c-4ccb-9a18-5db8899a3d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45def932-5180-42c7-b0a0-321f870fdb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bcbc2a-75e7-4f72-aa05-d2f13ba37d6b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f3094-8a8a-4028-a8ec-244c1618eb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f5876d-396f-4fa3-bd7d-dac38fff37da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d920d06-5a84-48f4-b3cd-c4434ee0b488",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbd3717-a48e-4357-9c50-54777495f881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e6efa4-cc9d-4fd0-81df-00470436af1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f75cc68-7b83-417f-9c18-ce1dd336ba69",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccc95b2-ae13-42ee-854b-f823e2c2292e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a45fd6-e242-4439-8dfb-dbc3ecb244cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68841b91-a2ce-4563-bc26-5e6510499981",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2aabd0-bdad-4488-96a4-3233fb82a36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607f91cc-e0b3-473b-bcba-18061fb0d0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3ec5fa-2520-46bb-b586-6ceb3c8cdc60",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251a0061-c3ed-4332-9129-cda8f4ed388d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5a0f1f-722a-41ad-8be3-f6b0f7e2a9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a740228e-46b7-4ca9-b679-696208796e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797acabf-8b78-41d4-94e1-882db9b5b112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db18648a-0a35-474f-9a06-94ad30cd5b4c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52154f71-00fc-4d34-ba3a-02a9f28fd1a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8a4712-6686-4cb8-9a5e-80908b5a79a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f447958d-8c7f-4876-947a-9b036eea4c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7f5e76-4bb3-4165-b132-f3ac61383a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad40745-bd20-4026-8661-00c55f948fcd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcadd4b-021c-4a9b-9bdb-ea355a370191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "023dcbc5-4288-4084-a2e3-3a0bf2e69878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd0f97a-dbb7-49b0-aa7d-b0fc173ec5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfd45b5-0d22-4d5d-bdc9-eecd8ff2e568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9e209a-a985-458f-8ae2-167450783781",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0308558f-334f-4c2a-93c0-82dffab17dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2a137a-26d3-45fc-914b-c1d671291be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043b6ed8-2056-4fc6-967c-5e4f9e1c7c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25cf768-051b-4caa-bb8f-17bccb84f1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d705ae1-6560-4fdd-a6b2-e80334442200",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf4b9a-4e5c-4484-b5cb-540eb9a0d236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae72aabc-57da-47b3-9456-6d4533861c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba55d996-ddde-40e1-91db-8be4010182c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f21a1f7-31c9-4ff6-a55b-a1e742faa08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f421d2-74b3-4e1b-ae69-61794b827bf5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572d131c-f27a-4a6d-8107-89070ec9cd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a36c8ca-4ac1-4420-9ff9-1a6dae5963f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd58ddc-416a-4a47-a04f-0b215164343e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136f4f2c-a504-4e92-8ffc-21835d9db809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc40dc3-06f4-4712-91ba-941a9b1b5c0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60599139-6a4f-4667-a83d-3085ba3274c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb4f144-27c9-4607-b13c-77f6c974b8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4341bf7-a2ba-48f7-b00a-0909d64362b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb80ecdc-0c2d-4db7-898e-4f4305d48011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f3bbb5-ad2e-4b03-ae57-000870725b84",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40d213f-8d55-4cbd-8b51-ae96a698cd50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12394d49-6114-48fe-ad3c-7a7795c9627b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671c6849-3d98-4bc9-b042-1c16b9e419e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cfa121-a1db-4f96-ae52-dbbe80a43b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4789ff9-6521-4ffa-beae-d20616089a76",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba079c1-e870-46e3-9597-6bd52acd8210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595bc0fb-9d1b-4f1a-8949-4b76a464330a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c6720c-5712-4407-8f3b-f84990f19c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36de3701-7df6-40c8-b25b-5102068d7470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd1f74-56d2-4f8f-8c61-1d89c9881b38",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf8b37d-281c-489f-be1e-12146ee53410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2f8baa-b28c-4a2b-9d93-54e4345800ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2f64cd-e0b4-487d-a173-81879fcffd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e4037d-847a-44e6-ac1a-c8b183e4ed73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26139d2a-12c4-4055-9578-4c834544c29b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c8157a-8113-484c-9675-69ee53984eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e992172-b559-44bd-af05-f9def07b92e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82c99fd-fdc5-44f1-abd7-26b28de54be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420c351b-f23c-4490-815f-764fd2d7a110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b06bc-a040-45e6-bbb7-fb6625b37afd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9976189-aa85-4e67-b10e-7bf0639140e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5e053d-0cfa-47cc-87fd-895fc6ecdc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2329dde5-c016-428d-b411-7d693434aae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ed5f94-df80-4e63-9f6b-806762fdec1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d546f6-acdc-48c0-9231-4f071bfde4d0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03599867-55fc-4ac4-8168-77d27b26b360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac6fac7-d9b6-4887-acfc-aef4af997e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a0738-7a08-47d2-913a-2a87446e03cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0115d5f-c95a-4fd3-b065-f2d0d7adf1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6347241-d93f-4ced-af9c-91823d8ebb67",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2387f6f-c0cd-4546-84d2-a0d5fa8f55dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebd089b-c72a-4400-940f-db3d4a4507c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb03e6b5-652a-49ab-a63f-2c649c81a220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e136fb94-43c0-40a1-b9cd-6ac4240785bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ddc070-2d88-4fd0-97ae-2ea52bf0bbb5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bd6002-f92a-4262-9009-f450f80515a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6daab59-00b0-434c-a554-3f76501b776a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c190b1bd-73d0-4f45-a96d-122e656cfb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c640a8-ffbb-4d51-ad0f-e089f82e0164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdb2349-786b-4335-be42-2ed798bfe4b1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2113717-4d71-4b6c-8953-1c9718d30ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc87a4c0-7653-4d49-a864-3b16c9263101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdc8225-b78c-4b74-942e-f87b3cca3a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46d3651-2d6b-4134-bcc7-9678204ec733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a978b1-46db-42c7-8664-818ccfcfb4ea",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510b8d85-7d28-4201-946f-d9c0d3eab5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672a484e-acd7-48d2-8cd7-301c88cb31f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0541fa08-e092-4bd1-bbe6-8eace383fa82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5470c4af-9d07-433e-b831-4cb9b032e4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb0d7f8-dfee-4571-9489-b05ce3cb799a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d556c419-8727-452d-8516-ac3e7bf45111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff55528-bd65-4972-ab42-0feb021a5548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fe6676-926a-4345-9066-717993521a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eaa7d3-7db7-43c5-918e-82e5ada5ed4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c3c9f8-696e-4264-9cf9-9445eb891a59",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93ddfe1-9b80-4957-8f63-e20a773cd29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331a2bad-81b7-4b06-a9a3-f7090d8e08f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec0adce-4de5-46ab-b207-39fdcb544dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142140eb-7ba1-4102-9979-45254897807a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abc9c63-37d7-497d-9923-497ae4e7c565",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593ff33f-b013-43f7-af93-f5be1c6c9712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a39990-8ccb-45fd-9b44-8f2b7b639156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd97de7-0434-488e-a0d3-cc5c05d59d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50b2333-fe0a-4553-b792-3ffb3059e770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51ff161-fb01-45b8-8403-f5e441e1feac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a90188-16c9-49d0-a352-5af05eed8124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec06a04-703c-4705-b146-3828f61851d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba7d991-112f-49f4-830d-5d58f7ec540b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534579fd-5c94-46fe-844a-156857bf8557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495deb15-cf70-4fcd-8bbc-e37ebbe67c01",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca5a372-187d-4bc0-a6d9-8c7fb347b5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a088661-2884-471c-9f6c-0eea83650ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2a72e4-8c3a-4a16-adbc-09accbad4f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee592e0-dc7b-4613-9323-85b49ec5c40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576d2df8-a7de-4ed2-97c4-bcf437f9afc7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f0e20a-de7f-42df-b02a-205e647ae3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39a9fbf-9934-44d4-8828-adecacbbc0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8b10e0-dd7e-4644-897f-bc2368e30504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2db546-6d53-48ed-8fa8-a71ea0143019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd26a56a-fa2e-4389-8b83-fe3fa8332767",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c790daf-aeb1-4276-b623-4db8ea407ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fcc3b8b-42c4-4e55-8389-dc161eaedc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6023de9f-0e93-4450-8242-450e8cd84ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10df27c-c71b-4478-8131-c00065133e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd02a7eb-1493-4b44-a827-bc9ee147b1c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fea6038-4dd9-4b89-85ec-f2a3b8a46e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451bba0b-653a-4586-8458-8a649d590dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e32bcdd-6cb9-4be7-8c9c-52d83a5d5f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b10b9c-883f-4d76-9ffe-257580dcc5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d729ea-c80c-4689-8fd5-83104505f361",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0681fc83-7338-4d12-b1f2-1b9ceae0720d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9928da10-e338-44e7-b42d-a5064ad889bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45d3673-b6b7-46ba-b20d-3c7a23c052ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fdccf2-4edf-4ad8-b2bf-5ea46f61f19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a4abb2-f630-4548-9c60-de8df7e44ecd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802996af-bf59-4cfa-9ddd-8f36f960bb95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6780461-27ce-409f-b51d-164cc647a03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ffcc64-d6ed-4701-b8d9-22ffe277e73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58456cf-f365-4f3d-8276-e96154e2416b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cee76c-66e1-42cd-970d-f37b6bf78009",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c8ddeb-ed7b-4ad5-a735-866ae16b58dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214b3042-1e0e-44e8-8f9a-954ece43772d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83b497c-42f1-4630-8054-5fdd736953f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f852bec-2e96-43aa-819f-de6dd9707c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f850cb-b48b-4574-9443-f50f838cd603",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f600ab-9d1e-4470-9554-284e800ce62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16762110-fcfd-407d-a992-155d655099b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9266b148-2ed9-4794-8e19-45407c5e4752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c0993e-7b45-4c3f-9a30-61ea659e520c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9a6ad4-0275-4881-91a4-bd0bbc36b06c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a135a16-39df-420a-aa1d-f10d637f3a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae401e73-a204-461f-b005-04b5d8c4104f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ad4c40-1998-4f01-8715-9eccad9b5083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e86aee-4bb7-4fa7-bd39-a4d56b6a0b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61298dc0-9445-48eb-afb6-c3a211001a9f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f36f506-d0ad-44ee-ab32-154e3a9d53d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bc23e7-5c4a-4f94-a87f-cef2e398b65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4bf470-8697-4b59-8d9e-1e0c00e8717f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833395c1-56d8-48f0-b52a-fb4f5639ea6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b9c9ea-fd6a-432d-9fbd-60fcffee2c0b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0784e67d-bb9b-4846-bcc0-7bc4d2a1f418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5b83b8-6279-4e5a-8af9-13b92fa49b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06409819-cb52-49a3-b006-5df274f44bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e18dfca-4664-48c0-ba66-3d13a85be188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c86d127-a1f1-4fff-9704-9bc28ecdb8f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedbc27e-15aa-44c2-a761-743c712d76c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11df731d-76ff-4527-b8b6-2a3538d1a3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96081568-8f03-4b52-acc2-7094c14e1961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ba57eb-efcc-4739-a673-68af96da74eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7418f926-d415-432e-a891-0a89ca80252b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68fba07-4ed5-48db-a130-bf75db253473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a841ed-c827-47a9-bef5-64815046fc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd6049c-16b7-4f51-a122-c5edf6506729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a3a4c8-ed99-4fbd-9b13-f49e7bbeeb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951844b1-6428-4b1c-8a96-4abff6a6bb41",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728d9abe-6432-4b80-87c1-fe460261c007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7a837e-be5d-4079-b8e9-9c03ba7d7bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae9f268-cd42-401a-9fec-14e94e246f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a22e29-3c7b-4b33-8cf0-37df531c2b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183bc6cf-ff68-4352-a943-a4b750e05158",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce4ed7d-7a57-44d1-9d6a-881c1cb33f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70c0739-88cf-4646-b440-9e8b79f0d385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32a5723-a734-400c-aeb2-c01ed19e06c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e951ba7-187a-4086-b7fc-748b135b4d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b91a46-e663-4c10-bdac-4951e9b5e7a2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da612c33-25aa-454e-afb6-80d3e810abe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d51b22-18e1-477c-917a-4f3bce053788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1ed675-03ea-48f7-80db-41ba1ed85a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c77279-9e0c-4d53-b4d0-024f95759c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d12880-c299-487c-8405-af2358e0903d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073028c9-8b9e-4d8c-bcc6-66865c95a330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8b87f8-00b5-44b9-8219-eb723e49f926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbaae60-49ad-41f7-b83a-3d361563245f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129fbc4e-8796-44e2-99fa-b7dd08c257c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1cbd41-3745-4950-b5d8-bff70837c101",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c46ab6-6170-4728-99a5-1ce79b178009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29ff4fe-aa8f-4144-afc5-d4f72143374a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8cea96-c90e-4216-95ce-6037db99710b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fbbec1-e5c1-43f7-b23a-3584a6103352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac7d2e1-7d7b-4d2c-91c7-6fbef02c2861",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1694185e-19a1-4786-ac62-26e2e2ce2a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec938822-3ec7-4ecf-8ee0-3f150a3f279d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef4df1f-d267-46c9-8cfe-88c1e2c7f427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0395c6b1-a734-4692-8122-b1636828a407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3acc8b-8a8e-4caf-9c54-545bb66075ed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708af54d-503e-4302-b462-c7fbf5de5499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38463d99-ec1d-466d-9f92-c6424acf5231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c650c711-1aea-4522-bb10-f5306bc397a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288fcb8c-21b2-4fbf-910a-3075bc550575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f594dfa-2b06-4621-b287-9f76263fbc70",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f026be6-fc56-4cdb-8862-a40f7c0b37db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc88144-1e7f-4af0-8c7f-af639459bb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a0a160-1991-4685-92cc-dd4dfd637dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c89e8dc-b9cc-4032-9224-894b5621565e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b47f0cc-a05a-4dad-b507-d2d0403aa76e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177ddc66-dbfa-4656-b804-efafb442d2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff96913-df73-4a12-bd3f-b693ae8d951b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d401d51-5a0f-4623-a917-071c897dd654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929d136e-5410-4f4e-905a-51f37e8a251d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfc776e-409b-41d1-804f-4ce746e284d2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a0e8e3-e83d-44bf-a6f0-eb7a9daf87d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3662dfc4-826d-4767-898c-55e421e15e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7a1186-00c9-41db-b14f-c2fa78db46d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e38e30-5862-48a9-8e7f-63572f75f559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8281bf7-70a1-4872-a1f9-5c18bc4e675f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3e0c5c-932e-4055-ac9c-77017d3a0eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d632af-ab70-45b4-bd8d-b0b352226ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b761800-4bfd-4ffc-8706-17035122bf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe094158-b6fd-4255-8d55-624521fa20a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1f3ded-0b12-48dd-8aff-116e39abe302",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870e3e59-7382-4953-8662-6b1a653ede1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278182b7-d56a-4e8f-be5f-07c0ac5a2b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0dbbfc-30f4-4f47-a5d3-e7408bcbdcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337ddda7-f41a-4bde-96ac-1a8090c347f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8dfdcd-bf15-46b4-a689-2784c1907929",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5016dfff-c4fe-419b-bf54-c7a4f730f03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2efaa1-827c-4d7e-8fe3-17c5475b36e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32264ee8-212c-4fe7-92d6-f99775a32c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d46ade0-3993-4f0f-a96c-db5b51bff32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9d7d6e-7d31-49b5-8a20-d5cffe513ba4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5f9371-a66a-4fe5-87dd-0949d9d52049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e507b0de-0220-4f5c-9255-6a6d16458d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a01b7d2-ecb2-444b-89f1-0a2cd1859fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4072b928-bb66-4004-8946-a58afd62f3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44caadf9-a839-4a46-89e6-f01b978bb421",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa80af41-265f-4be0-a134-688bb30f2d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1f04f0-cf97-4cfc-8091-160df9049f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37790323-a34b-42d4-ae39-69e20385c1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5bccca-5bed-4de8-81f7-527a9d9317b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54753c1-9784-4635-9732-cec848d18136",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2e5b5c-6a77-4b2a-9446-b8e05260d78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d5cfd4-567e-418a-93a6-f686eefed156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c0acb7-afba-4c9e-bbf9-bee1977b0aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79947707-be77-40cb-ada5-97f0648c0bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3e0f70-0335-498e-9999-bf261f427fc5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab110e5-c53b-4da6-9bd5-0d1c680e8d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040632e-2475-4adb-ae5b-27a1719cb18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902b5fc7-b58e-40d5-8f6c-e101e2724222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4c7a33-d21d-4841-bddc-deb3ebe15881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2582b00-d2da-4c85-9993-960b99f88804",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7a7132-b075-448d-8dab-aa584ee16f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639c2577-ef2b-4bbc-b9c0-ea84833578a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c38a4ba-e922-485e-85da-cc21262f84cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339e1f6f-8979-4449-8b78-fd330f5f9ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373083b5-581a-44f2-8262-39a3919cfee9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79eec9ca-0574-4d38-a9c0-354dc5f8e607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c72a5e2-c5da-4aa2-965a-8cd4cfdb2b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb4c56d-10be-4fa9-8949-45c9bf07f40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c66966-125e-43bc-a61c-df1f24ca22d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907fac00-d07d-4cb7-a050-c1eca3ff566a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e825e114-9a8e-4dbb-89c7-439055d720c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4743b8-cfd4-4535-9bac-5738500d4025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e10a1b-56c9-42d4-abce-6a2b8c8a35cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8de64d0-743d-44a4-862c-647c5d93f087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d698d4-5ad9-4e72-a6a9-3b1b6dce7168",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380c56aa-96a2-4faf-8cef-049ba1ad2b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e171c52e-6d0f-4944-abf7-9f359578da20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef2a236-9016-4c7d-9ec0-36ddcebdd54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa858202-8690-457e-820a-1f1974eb5392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1fba71-f92d-4346-939b-d45c3f3615a4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b620a1c-d6b0-458b-9436-5f8514932b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a95134c-e628-4c93-ac46-c89f38e6b714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ae920c-d1ae-4a99-b133-3dfc2c3e87c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e525dee5-8b94-47c6-add6-7569037f9e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccac20c1-e58f-4a0d-b0f1-51d2a8b0f12a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ca5967-404e-4e31-8977-e925e46b21e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba1053f-c9f6-408a-8f52-cf57badf5690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7203da84-204d-4002-9607-9deff0d2245b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd64dad-79dc-4a25-b42c-623576e0d236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5e4cea-3719-4bc5-b38a-81b8e507f6a7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f5ff64-8ef6-40c0-827e-638d56e9b044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519d3025-b66e-41fc-bc95-8a1e4270f2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91952e3-7691-4f92-85a6-a7d21b79d6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6ee6c0-fbae-41c7-8848-0a7c5b3a9ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e9ce44-bd52-42cc-ac38-69f3d7d2de1c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49e8b78-bc66-4f49-af90-ec6bda0ff790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d169641-a653-4184-bf26-45d46f39e9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3449ba-c173-42bb-8c6c-678d1d8c0783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325db8cf-d6d3-4245-a18e-75ae8f23d100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6b0537-924e-43aa-8b7e-98a22771fe69",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3900ed-2421-4d59-9062-013f8574295e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4587097a-2c8c-4a1b-a0ca-3a8fc5a4b8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7ca784-633c-4e44-998f-9f5af2f8455d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d483929-d3df-4603-80b2-ffa3ff2be4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f65053-54e9-4aa7-bec8-496c24dcbbb6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d540a23d-149d-4e41-a871-26107d31654e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c291f0-c498-4e5c-9e53-748fa938dc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70491a0a-8576-4ac9-abc9-91619a327342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c4ef7b-c498-4bdb-8baa-3f51738c4122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cb83b9-7a24-48c9-ae3c-2070fd6be623",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d34ce60-a4dc-451f-ae96-a704d350493f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dace1eab-a51f-44c4-97af-9d69d36724ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a067606d-cb82-4803-9d84-f35a4ce76430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bce4dcd-0e7d-4088-8bd3-8fffcbc72cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2421d96f-52a7-41f3-8f5e-76754a851eb0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7809d04b-ea24-414a-b6bd-3740d3208309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c148b97-8fa8-420f-85da-129cb3a79c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687e8fbd-a565-4263-b60b-d75be80dd3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c5382e-af8b-4b12-9d65-b6232907dbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87ed99e-792b-494f-9c01-b77b727eaaef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4e556f-338a-47f0-88a7-55b4af1b31a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321a7ed3-2a1b-44d7-ae05-96439dcb2bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6af82b1-d8ff-48fc-80fb-f88c54e998e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97de92d-4342-4f4e-a0e9-aa2acef084a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa5f228-9423-4396-8bfb-1e13b9a17b36",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6608a8d-8636-42db-8d56-0347599698b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad64533-91d9-4e42-9d12-1067af445a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce0e99f-a97f-45c8-8d45-36bac67cdea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0f3f74-1a56-4d7d-9580-8b6fd4193265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a08363-5cdd-4b8f-a667-d22cdb5a9ead",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164a1e30-4fc8-4adc-83fb-48fca876106e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ec04bf-2565-4f46-8ffd-8c7302768eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657e4022-60c5-4d13-ad87-55f97efb8fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0db1545-a9ac-4073-8a69-9444613e86e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957a13a0-807c-49f1-8cc4-041446bffd35",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbf5261-a3f6-41c2-8524-9774a59a587b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803362ca-d03f-49ce-9db5-aa3048099aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032330a6-aa3e-409c-af85-7e598014b8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc492a98-b1c3-4e21-8374-f70a96a55e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90e4a9e-3ee4-42ff-b8f1-fd21b2a6e5e5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfa341a-6e83-4aad-ac36-57050be25fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2b4899-c0aa-4f6f-a883-360d8e4c1718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e460583a-0c7e-4633-ae9e-96c7211f0207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaa6137-2743-4c7e-bcb8-7dae0fa0ec31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378d8e1a-2cfe-4265-ab90-a9a04c366d7a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f55385-0900-4e75-9eac-ce42e02f09e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f80bc507-7d33-4e9f-8f80-6048ff226e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fbbf4c-c825-45cb-80fc-288d1dc9631e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cb9423-104c-49ab-8dce-4c7de025eed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4869d3-0fd5-4451-b8ad-68125150b649",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de6a993-00c5-4fd8-b407-cd7e4fbf467e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20cae6ce-e37c-401b-83d5-1795025b540a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da602ff5-3c1e-4f7c-9012-9146eb01e933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adacef97-f68b-4379-a664-752c21e31c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5ef003-ebf9-41f1-b393-87281f4a65df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5f9e19-cdc6-4e9e-9164-eb2e91598a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd7b490-35a9-440b-bb9a-a9a526383ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0159b5-5019-42ad-a770-805777d292eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477b7b2e-cc07-411f-92d2-9ff6b509016a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b179c66-7a43-40e1-923a-90849d78c3b9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878ae767-b855-48f1-a541-d070317d5f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ed631f-121a-43de-921d-bb985698aedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f8ccc7-c58d-4338-94dd-482e2a27d05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1d4036-8a49-4b2d-ab43-24ea8e7f1c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403340ad-30bb-472c-b61d-d206ab791c91",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7698ef9d-e53e-445b-9412-9109f02570e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04db9743-66f0-4396-9f6f-3c80a94bad36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ca6a3d-4eef-4e14-ba3f-8dee0909a358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4af6e6a-ea5f-48b3-9d5d-8ac3e391d6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc17e95-7b47-4d05-b3ac-3f0b712dad0a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece229fe-4c40-4347-8ca7-13e4dd8c83d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91bf23b3-1795-4e42-852f-6df3516b5e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cfa9f3-1d20-4033-856d-9d635a62a676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d663b8-6f72-48e5-b7e8-d1e51716d307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93c7023-235b-4c50-90e0-db20d8dfdceb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d392fc21-286d-4fcd-b5b9-6fa5f119d640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9605bd1-617a-4f77-8ea9-68ac91da4ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca908ea-4e4b-4f55-b563-06256b58c391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564777db-7b98-4f98-b48e-45feeaa15fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b42e87-7965-4518-8bcb-1d7694f241a9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d92e2b-0640-4028-a664-062ccfa2e580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8102160b-7458-4a74-a63e-8423ff773140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bdd1b9-b064-45a7-a9b4-38fdd0624b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e8f2ff-c64d-4923-b4c1-60d1d4e35bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d6a7f9-6eff-494f-8e63-3fcbb6b39ee9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb18dc2-d38b-4ad5-8776-fbd574d84ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8776a1c-a8b4-4d4f-85de-4930c5fc0386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7bfcfe-0ccb-4f88-9e34-7b28420af142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c226036-57a7-48bc-9bc7-537142c9bfec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0b1eee-aceb-44a1-ac79-7071b548ca54",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5916d04c-1db0-4fd9-aab6-7fe278912dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a19d44-5f03-4547-8cb7-16275280a457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a10e5b-0fb3-402f-816f-7cf927df1718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdf30f6-381c-480c-9521-cac020454567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4af9c6-2c6c-46bf-adbc-6005ef4b475a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad14e4f3-34a8-4460-bdc3-a69b5ea2ca8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b361cd7d-9f9c-47a1-9ef5-a98084fc6588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdc931d-b874-4884-9801-559feffb55bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52cc540-c1cf-4b0e-a223-ad650326b824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8f2e73-6db2-4cd9-96ac-e3eb56145b42",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0741d361-841e-45a0-a70d-0f7f4873d276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27e1c85-3346-4713-9c2b-0e1a7187d79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4953f69-be7d-42ad-a34c-9f4bc0b46a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dec105-ca10-4c56-a30d-2617cabee891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4033885e-eee3-4b56-b523-0bb1b6c80c5c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9af66e3-b758-4e2b-b3c2-27cd241ecf3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1c6052-7cde-4b43-a584-7b4bfffc00a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b92d4d-6286-4cc1-9daf-e6df64e39e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1400414f-9c5d-46ec-8311-e4f386524023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e704d3-1f5d-4d6e-8f0a-c8f297b0fe1e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a2bee8-d614-4e67-bb4e-e858cde4007c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5208665b-6176-4c9f-9ae8-3731ec103ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba78426a-b0ec-4094-84ea-675050162298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11c23c9-bcc6-44c9-80d7-bca023611d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c620931d-724d-4089-9d56-64158aee232d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73da451c-cfc3-45a5-8ba5-c9aa1fa9796e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3252da99-0aed-46d7-9bce-34289fd6a9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb2401f-0fd5-45de-99eb-6ba101b7fa6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bbfbda-1c8a-4373-b742-024c0e654709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d945102c-9b21-4b49-bd59-d5fb8d8b72b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbbd0a7-a5cc-45e2-b164-ef78ec494364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ecdd68-024b-42e8-931c-f16e8d654848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cb9243-c4d0-43b8-93b4-87954507ec7a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbc2e7f-0f91-4da0-8c16-376ffb09c087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2575984c-bd61-4be9-a5e2-391329806ca3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c820b9e-0b95-477a-aece-e0e68fc3ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a113b3a-1ba3-4ce4-974a-17c64dc62143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d88fc68-23b8-4395-a0cd-a2d791f17bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b13c12-85a7-4516-9c19-d5e6c19367a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70888391-ce7c-4511-a746-1c81641e5921",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2aec7f-9077-4dec-843b-bc64c9ebc4f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b3ec43-84fe-4b32-9458-b987fc5a8122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca9880c-010d-4f39-998a-d16b454faaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261cc754-6639-486b-ac87-d37fb2f1e190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d009f108-f681-4ba3-bf1f-fbeaf8a0824a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3bad5b-f469-4322-bb83-0b3b254c2ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a5b14e-e6c7-4d97-981c-af82e29071a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c8b33b-90e0-4d75-9942-5551cf3cd961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821155cc-6656-4536-9116-9c6e7fa2ca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39af805-2008-4aa2-b66e-39ce7039dd1c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a471244-8718-4453-8c03-86e9abf6a362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0f860c-ef05-405f-a7cf-65539a28ad0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8063ead-86ad-4392-910a-70ad20c7de96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7f1bfb-04e2-484a-82d5-35605c372942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad1f784-30fe-484b-aa89-458facae5feb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4135fa-7040-4f7d-9c96-b5fe135b7995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe30695-def2-45a7-a418-dc45322f7e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3e2ee7-aaac-4e5f-9e85-36d28b46469a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cbf9aa-0d9f-4eca-a9dd-c47cc004981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2039dd2-e90f-453c-ac8c-3d0c23fa9c31",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621da525-df18-4756-b40f-7ec70787f5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6557ed-b69d-4f2b-9454-c6c7c0e1de41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b4880-5ae1-44b0-920a-855ecdb28ea0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daab143-82d9-4875-aa0f-7694de1beae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5696b1-d5c8-441a-8f50-cba5039c065d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b78721-066a-40ed-88af-a3b38ef89b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8d1f0d-3473-44f6-8ce2-da01deb43c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1438bf-5b21-4215-bcf9-985fda0565c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e989f445-12ca-493a-973c-e11494de62b5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f627f33-283f-4364-8cab-4a7422d7d1e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39f0a9ed-1225-4126-98e1-55da754a9419"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "583e3b84-8699-49e2-8389-4c69f9ba77d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11444c69-6a29-41e5-8c5f-6840ca7d7f9f"
                    }
                  }
                ]
              },
              {
                "id": "63bbb25b-2fac-419a-bf8c-c2adc96f8aff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f6b3fc5-ceb8-4970-8d45-a9f2b850e3f8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da462d82-2c56-4519-900f-b5f2b9f961f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e5bff73a-54f1-4f2f-b905-07f711690afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9160c8b-ee2c-4dee-bbad-54ca6411e232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fc62378-3f35-43fe-8d85-f7de806084da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38e5f9dc-7b51-419d-b459-20a1c4091d98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e053d80-4f21-453f-9111-cb4c58f32a32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa4cc39e-d5c6-430a-bd06-c52c16896886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "876a9950-9415-4dcc-a604-c02e9881ee8d"
                    }
                  }
                ]
              },
              {
                "id": "6c8663bd-7a3a-433c-9b3a-a2ab47e9cf3a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "36a8aa7c-eb4f-4a1e-bdc9-0b5eb9f8d56e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33923a34-d741-40ab-9ef5-29cc6636d042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dbbc077c-088c-4a12-a7ad-a1230cf5e75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43685299-dc6b-4733-9e18-0926ec8ae6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8171ab-7d51-4b15-96a2-fc3eb0845185"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a4fa26f-9a8b-4333-b449-a897d80a128e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04db3912-e942-4d00-84b0-4c0e1b867c92",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28faaadc-d72d-46bc-b1c0-ec69f00a1edf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5a9cffd-7390-4c97-806f-0c48b3173de6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5918718-f9a8-489a-8ebb-dfd17d6b1e4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cce46d6-d269-4b9f-980b-00bca2587b9c"
                    }
                  }
                ]
              },
              {
                "id": "4ea57ed6-dce9-4ce1-8771-19667140b41f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dbe3952-3b3f-4b03-9392-fe726f10af47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fdf0ac5b-32fd-4376-b95d-446f6cc8f7a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e004268-4321-4bf7-95ae-bb3db37b8bf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3db035e-7d83-4f9e-b766-6616a2bb0cbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4412a4b3-2919-4474-a567-59656d0d31b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0bdea733-13aa-4dd1-81aa-b55d0da54b5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06c8fa91-eb44-4f0b-a054-12294b3513e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8d4d243-2997-42c0-8494-9c66e1100d7a"
            }
          }
        ]
      },
      {
        "id": "b417f9de-ebed-4d32-9e5e-b27f6edb3a6c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "91ad4d1e-62ad-4ae3-ad10-04efb2510c93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3c40024-a6c8-4196-bb4f-92d7c155080c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fdca021-cadc-4d8f-8eb8-32db43d20be9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1553d712-635e-4a90-a68b-63caad6c1840",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2faf5ce1-c63f-497c-a6a7-0cf6b7e3badd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edbf86b-7591-4607-b5b9-ce768631f55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "665bb997-8d7f-42b2-b51e-9dd3736ce99b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb77516-b086-4443-84d3-d1659a20a97a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ccea981-8ae8-421d-839b-b3039b9ffee7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "517b14c9-a6b6-453f-a62a-c411bd534ef2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1d1020d-2542-49e1-999b-02c205945fa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20d54828-270a-49f6-916e-ea5c053d25f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cc444ddd-63e0-4c04-bf0d-22f61ffa179a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78b5aa9c-6819-4d7a-a568-9e018daf0227",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ebea35b-220f-4c3a-a732-8a19b8a9b981"
            }
          }
        ]
      },
      {
        "id": "a8ed7afa-0710-499d-90ff-473302ea510c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ef59909d-50ba-4b63-b19f-d14f6a1ad982",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81399fc2-68a2-47eb-977c-c468b8f4c91e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a38c312-dafd-4c71-b2db-105eec18b824",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6790a8cd-c8d2-42a9-b49e-94cc7f364c3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de657da4-a1c3-4e35-983b-13682a722566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503aca33-caa6-47e2-9120-dcdf46a2993b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb98224e-054c-42c1-b8f0-57ef7ed7695b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a75c399-862d-4356-8919-00421f12cc64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "546c9adb-0854-4fe6-87f2-bb103ba7759d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34c77e50-aac0-4e78-ad9c-b8a37f999b76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cd4971d-819e-48d5-8b4b-4c463bd2240c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5074ea7-cb0a-4cc0-b5b4-abb97f1f5503",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74245ea8-4eea-4605-b67a-3261a0ad84b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db2f5490-e428-49d5-9ae1-13f8acf9ea8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbf1ce9f-8fc0-427e-84c9-e62f1eea949a"
            }
          }
        ]
      },
      {
        "id": "d486e334-de92-4ce9-a95c-22201f95ed6b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6353dd79-e115-477b-9355-6e5aceec39e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63e6e954-8bdc-4300-b647-ea16abc8af99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdaa112e-fcb4-4d17-abfe-d1b52b17e4db",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9fa4bb-df05-4f33-87ae-3e2d70d7228e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6841788e-bf34-4129-94f6-5cc07e92b206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1da49b-498a-4d92-b5c7-84d24831406b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7e724b1-57ad-4317-86eb-5f7408cfd29b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3769e1fe-d3bc-4c2c-87ad-73608c9305a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c2502f3-22dc-471b-b3ed-15a85367e9bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94790c35-9f6b-470e-9c9a-44a72a06054e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94619744-61d1-4284-ae77-34a7f0f6599d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b77a594-0811-4725-9921-9ca03cf6016f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c8ede27-49b3-4324-a3d3-2d200c0f4b41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cfcd36e-e746-4f1d-ba16-2e123f5be4ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9bb29f6-d9c3-4935-94eb-14fb73260a93"
            }
          }
        ]
      },
      {
        "id": "89451aea-526f-49c9-b409-74bfc854c354",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9241f6a8-acc5-44bd-b361-0f46e33c6c77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acabdf88-0999-4bc5-b571-22e4ba00d2b2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e15f51e3-88bc-4cf2-b73c-7f814b093640",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93b3fa1c-581e-45a3-8466-414ee3b2e177",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c03415d2-7cf3-475e-b661-9438850e5e61",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 79.63492063492066,
      "responseMin": 4,
      "responseMax": 8700,
      "responseSd": 596.8726314261937,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716770281452,
      "completed": 1716770309786
    },
    "executions": [
      {
        "id": "2d0b279e-01ef-4f52-98bb-4ac019d297c5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aa3d173c-daef-4cfb-9f0f-5dab7e36ca0c",
          "httpRequestId": "a4246dca-7cb3-421d-9cdc-65d5f59c0cec"
        },
        "item": {
          "id": "2d0b279e-01ef-4f52-98bb-4ac019d297c5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9426470c-2782-4df3-b5dd-4660bdeadb6c",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "fea1318a-5890-4304-bcd7-ef8659dc4b0c",
        "cursor": {
          "ref": "d97ee7ec-fae3-4b33-8d85-842de2fe6c44",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d276f045-3ef6-40e0-89d2-70a22c6ee4c2"
        },
        "item": {
          "id": "fea1318a-5890-4304-bcd7-ef8659dc4b0c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cc77e39b-1a6e-438c-aa3e-4b61f14489bf",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "10cfd7aa-afb7-423f-bcba-5904ba216452",
        "cursor": {
          "ref": "1bf2a506-d539-4e6d-93b6-85b12bacd06d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1eaa52d3-f5e5-44e9-8687-494fc86248a4"
        },
        "item": {
          "id": "10cfd7aa-afb7-423f-bcba-5904ba216452",
          "name": "did_json"
        },
        "response": {
          "id": "3ff1f05e-9fbc-4bc7-a758-d6f96e9e0231",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68406898-c6a2-474f-aecf-bb0db6a7cf14",
        "cursor": {
          "ref": "19b6df98-31dc-4705-83de-1ca4446bf2c1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c5f1f64-e1ef-4861-915b-582696227b22"
        },
        "item": {
          "id": "68406898-c6a2-474f-aecf-bb0db6a7cf14",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa8a6d25-e4c8-41c3-87a2-88b371271c63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 333,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68406898-c6a2-474f-aecf-bb0db6a7cf14",
        "cursor": {
          "ref": "19b6df98-31dc-4705-83de-1ca4446bf2c1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c5f1f64-e1ef-4861-915b-582696227b22"
        },
        "item": {
          "id": "68406898-c6a2-474f-aecf-bb0db6a7cf14",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa8a6d25-e4c8-41c3-87a2-88b371271c63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 333,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714a14e5-4df7-4889-bd3f-e8f4366d5f60",
        "cursor": {
          "ref": "31b60f33-278d-45ea-ab74-04f3fd9a7fe7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e98b4adf-327d-4432-94ec-ecea9047d267"
        },
        "item": {
          "id": "714a14e5-4df7-4889-bd3f-e8f4366d5f60",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0f7d68f0-5288-4f2a-80f4-32e4b751bdbe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d39ded-9d7b-4f12-9446-80fd32ae3d13",
        "cursor": {
          "ref": "7c3b4649-b8a7-42cb-8a9b-bf1fd8f5856c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c210d860-597b-483f-a4d0-ed2d022b0df3"
        },
        "item": {
          "id": "f2d39ded-9d7b-4f12-9446-80fd32ae3d13",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "13598273-4017-4a50-ab04-1be6b1a1d22c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc49a0d-84b7-48ba-8bd7-355cda1482cf",
        "cursor": {
          "ref": "f867cf07-03ba-4f51-bdad-8e70df6ce57a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c69ca660-bb86-432c-a2c2-66535277e9fb"
        },
        "item": {
          "id": "abc49a0d-84b7-48ba-8bd7-355cda1482cf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3d55f31a-3996-450e-b352-634b573dbbe7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f70ebec-68a6-4ad7-a029-21f6c755193c",
        "cursor": {
          "ref": "f91187db-e1cc-4205-84df-b7e2256e9135",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "49ca622f-e006-4784-9380-b34816f98ca6"
        },
        "item": {
          "id": "8f70ebec-68a6-4ad7-a029-21f6c755193c",
          "name": "identifiers"
        },
        "response": {
          "id": "210f3364-9ae2-4b31-a657-0b94ee143ae3",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731461ab-ca9e-4f4c-be0c-b179e158342c",
        "cursor": {
          "ref": "b7e8b742-7f45-4d8f-934b-4dba8070d1b8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d53ea9e1-e750-489f-b906-0e10f7dd3e83"
        },
        "item": {
          "id": "731461ab-ca9e-4f4c-be0c-b179e158342c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e9a23da5-ab4f-4146-b68e-511c5dd15499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4c2159-54ba-4c8c-8168-912e3d5d06ab",
        "cursor": {
          "ref": "0ff0f4c1-2def-4f9b-b1ac-ba7495eeeb90",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f01d0748-374f-4993-8dcb-1497a92c8bba"
        },
        "item": {
          "id": "1d4c2159-54ba-4c8c-8168-912e3d5d06ab",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "553540cc-8e01-481c-aab3-837f2065c237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63846a33-b7e1-4bda-a508-a85a254ce8a4",
        "cursor": {
          "ref": "4c50feb7-3a99-4e1d-9b09-adb6065319cf",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ff7ff95e-0081-4fc7-a64e-1e2da5086407"
        },
        "item": {
          "id": "63846a33-b7e1-4bda-a508-a85a254ce8a4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "65cab5da-eb75-497e-b3ce-1757c17de109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b517b3-010a-470b-a92f-01fb7ae193d9",
        "cursor": {
          "ref": "f0be4d66-4077-4a22-a1ea-f753f47ad347",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c40f4dda-ca77-4f8d-8993-34c00bb546da"
        },
        "item": {
          "id": "77b517b3-010a-470b-a92f-01fb7ae193d9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cde0bce1-07d3-4367-8030-34f625491dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ea508c-96d5-46cd-927e-b6d328fcab37",
        "cursor": {
          "ref": "9ededd7f-81ed-423c-8dee-e59e2a5769ff",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1c022e15-001b-41a7-a249-7197c6bc6bd4"
        },
        "item": {
          "id": "46ea508c-96d5-46cd-927e-b6d328fcab37",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "276884ee-d008-4212-a8b1-2b84b603e780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b6a532-b819-4d6e-abc7-775fad6a1ef8",
        "cursor": {
          "ref": "68b7c5fb-fac3-416f-9c27-5a6e01bafa70",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7e5132f9-b0fe-4d4a-b22b-4b5a4f660aff"
        },
        "item": {
          "id": "77b6a532-b819-4d6e-abc7-775fad6a1ef8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5b9fb7a5-8cb2-44bf-901d-f7f256849573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cffe76-bf6f-4056-babb-fe737e6e3cff",
        "cursor": {
          "ref": "69235e14-cdbb-4b92-a2e1-da68d7667dd4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c084b271-e393-4a1d-810e-de6eff95b6f0"
        },
        "item": {
          "id": "05cffe76-bf6f-4056-babb-fe737e6e3cff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4b9d77ed-94e3-411b-b96e-fc44bf31dc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca4322f-958c-4da3-a67e-2eeceee2e91a",
        "cursor": {
          "ref": "b0a11183-3ede-477c-ba28-2c21d48c820e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "22831ea3-78cb-453f-8045-1c937d0a751a"
        },
        "item": {
          "id": "eca4322f-958c-4da3-a67e-2eeceee2e91a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da63523d-37bd-4dc5-8a62-364371387c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010e6f9a-bef1-4fe8-9408-91174324d97b",
        "cursor": {
          "ref": "1cf62c06-86cf-4d1d-93a3-c7f33b0ee44b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bf8e6eb7-4d30-4b83-ab24-db1afdb0cf0a"
        },
        "item": {
          "id": "010e6f9a-bef1-4fe8-9408-91174324d97b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "71aff2fb-e466-4c0d-aa50-c5c0f0b38e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5551a83e-aff5-405b-8e1d-208151707bbf",
        "cursor": {
          "ref": "fd61bc69-2ccc-41c8-99da-33dd67ee9349",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "92f23a77-6ece-4467-a53b-338af7384ffc"
        },
        "item": {
          "id": "5551a83e-aff5-405b-8e1d-208151707bbf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "291258c1-d426-42e9-9759-26a3b3be6d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c173ccc2-4c19-4ff8-9714-6ddcb5aedba7",
        "cursor": {
          "ref": "f3d616d1-12ae-4331-bda7-2270cb07e38b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e4352e33-6261-4f77-8766-25265639fdab"
        },
        "item": {
          "id": "c173ccc2-4c19-4ff8-9714-6ddcb5aedba7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bd05492c-b25d-428b-a38c-7eb3c7f92e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4715ee-1dcf-4f39-a1ac-e532179131c1",
        "cursor": {
          "ref": "0d0b54dc-7e06-48ce-a065-f129a97490b8",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7415a422-4a20-451c-adf1-a26bfda49088"
        },
        "item": {
          "id": "4b4715ee-1dcf-4f39-a1ac-e532179131c1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c982626d-1557-4955-963a-41118cea28e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7695b112-7402-4f03-ad77-05a72c4fecc6",
        "cursor": {
          "ref": "c3cbbb78-455f-4336-85c0-d7c4495d6814",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fca088e2-b9ab-4315-90c1-34768b298da5"
        },
        "item": {
          "id": "7695b112-7402-4f03-ad77-05a72c4fecc6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "59e2ab7f-5b3b-45a5-acea-8dab6521dbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c509378-f13f-4c89-bbd2-3f68a28433de",
        "cursor": {
          "ref": "bff6c27e-96d4-4d93-8090-6d1c80133510",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3d3e4697-17b1-4ed7-8eab-99c6a639dd7b"
        },
        "item": {
          "id": "1c509378-f13f-4c89-bbd2-3f68a28433de",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b055b924-a0b7-41e9-aee8-76fbc1fa7935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d052fab-844c-4eda-bb80-d5e545597154",
        "cursor": {
          "ref": "2f21ebe7-2914-4e46-b998-30f8a373a91b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d02e93a7-dacc-4c3c-b62a-4c307267966f"
        },
        "item": {
          "id": "5d052fab-844c-4eda-bb80-d5e545597154",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d3e7851f-5aa3-4008-9b99-61af343b080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69703f3-7bfa-4a77-8fba-987af1310b56",
        "cursor": {
          "ref": "466b030d-ffb1-48ab-aa34-46e5c03f5975",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4ac4b91d-3168-415b-ae51-643eb68e91ff"
        },
        "item": {
          "id": "c69703f3-7bfa-4a77-8fba-987af1310b56",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4acf0657-d4d3-43b6-8eb0-628799891dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acf1478-13e0-4450-9e72-f4c04a24e6cb",
        "cursor": {
          "ref": "35601aa4-99f1-4527-9846-34248e6feab0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b966c4b2-d601-462b-86e6-aa49b669763b"
        },
        "item": {
          "id": "6acf1478-13e0-4450-9e72-f4c04a24e6cb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8a05bf50-a20b-47c8-af42-60fa6245c3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7232f7-2b76-4ea2-94ad-1a6fc1443f59",
        "cursor": {
          "ref": "16a47ad3-7f6c-4a91-a8e4-0810639336f1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c7b056c-88bc-47b5-bef3-2488a07f02d1"
        },
        "item": {
          "id": "cf7232f7-2b76-4ea2-94ad-1a6fc1443f59",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "18a126f1-fe19-48ed-847c-98843732f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1590dfe-53a6-4ca3-a689-9aaa730363ae",
        "cursor": {
          "ref": "a5b21d95-9d38-4f5f-9241-011477f364f5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ee6ac92a-6268-4cdb-a216-beceb1f656d2"
        },
        "item": {
          "id": "c1590dfe-53a6-4ca3-a689-9aaa730363ae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8ec1b9c4-8a40-429b-b03c-338df1ca5366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d75619-eeb4-43ac-ad12-219d3103c141",
        "cursor": {
          "ref": "97661591-4fd8-4701-91f5-a2be9e46aed0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f45d4707-31d3-4e06-8dc6-c0b4b3324981"
        },
        "item": {
          "id": "85d75619-eeb4-43ac-ad12-219d3103c141",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "30e4d0a1-e201-4707-99a5-d9143c130788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99477664-8ffc-4f5b-a555-d855101e56e3",
        "cursor": {
          "ref": "4782e5c0-076d-4397-a1bd-993894783fc7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5b2b3538-b224-44c2-be29-2e9d1daf7ec0"
        },
        "item": {
          "id": "99477664-8ffc-4f5b-a555-d855101e56e3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "96f58fa2-bb5b-4aa2-a8d0-f0b3f88fd113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501835ff-b5be-44a2-be58-f1b57c6d0cd3",
        "cursor": {
          "ref": "84e73e72-4317-41a3-8961-76d1ab36b6e4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8366c1c1-9f73-403a-a3bf-49d3605413b8"
        },
        "item": {
          "id": "501835ff-b5be-44a2-be58-f1b57c6d0cd3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "145e3e85-f404-46de-980b-35f8d77ac903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297fb18c-2197-4904-a11d-2b27e9419722",
        "cursor": {
          "ref": "c1931c4a-d871-4f2d-92db-26169d773135",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "06076108-9fcd-4d7d-ad29-dd25fbdbd2fb"
        },
        "item": {
          "id": "297fb18c-2197-4904-a11d-2b27e9419722",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8bb494b4-17c4-4324-a53b-a4cf05f68043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1130a0-3a59-448a-a254-d986138a7f87",
        "cursor": {
          "ref": "277d4484-3702-495c-8ef0-cc04cb453bbd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a1294035-0ef7-4cd6-9e47-c366c71866e2"
        },
        "item": {
          "id": "0f1130a0-3a59-448a-a254-d986138a7f87",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f3079a06-d8a1-4dae-91b6-b93e1f0f5c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7d4f5a-a066-4b3b-9767-3a19ac59d2c7",
        "cursor": {
          "ref": "55ebc408-bfe1-4873-8dc4-748b19cdee09",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2fffd235-d3cd-4bbc-8b98-70bb04b47a12"
        },
        "item": {
          "id": "ae7d4f5a-a066-4b3b-9767-3a19ac59d2c7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a4f55b85-ea9d-465b-baff-d77ac16272cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ca6b10-30b6-47e0-9ba4-7a9de39b4c9f",
        "cursor": {
          "ref": "b14d9e4e-7809-47ea-b4b7-3eaa026d04b1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "140d4b72-7a5a-412f-9583-c9238ee19eb4"
        },
        "item": {
          "id": "23ca6b10-30b6-47e0-9ba4-7a9de39b4c9f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bff9c8ac-f293-4a68-bb58-72b13550185d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1315a0a-715e-48e7-83ef-70a4013e8713",
        "cursor": {
          "ref": "0336830f-171f-4ea1-a91b-9073c3844dbf",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "965b0563-753c-481b-a84b-ee6714919738"
        },
        "item": {
          "id": "a1315a0a-715e-48e7-83ef-70a4013e8713",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "87edc09e-3f9d-4ea3-b1da-ca7069e73c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9203630e-1fb8-4cf5-b3e4-25302efd6682",
        "cursor": {
          "ref": "9bd000f6-8fac-4d92-b0e7-05fde1839aa7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "859bf9b7-2ab8-4557-8e07-d9c6ef78c015"
        },
        "item": {
          "id": "9203630e-1fb8-4cf5-b3e4-25302efd6682",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a7811806-7030-4579-b71f-d839c89ae27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb7a10-e39f-41d0-a382-f6f551a44c95",
        "cursor": {
          "ref": "fd32bde8-49d1-4284-ad62-a7036491feb5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "44df85d6-f303-40b8-b819-d49aa31a7758"
        },
        "item": {
          "id": "10fb7a10-e39f-41d0-a382-f6f551a44c95",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6ef4da38-c8b9-4336-a7b1-253c91f8a01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423675e4-ef26-4203-9730-7d196104f606",
        "cursor": {
          "ref": "160021fd-444a-4c9c-a69b-47fcb9b8c858",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd831a02-6a2e-4485-9275-fbf05aca29bd"
        },
        "item": {
          "id": "423675e4-ef26-4203-9730-7d196104f606",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e181ae3f-8cca-4862-864d-77b7be884a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673fab3a-9173-4fd0-8a58-3500556ac222",
        "cursor": {
          "ref": "6bb33fc6-96c9-4e2a-aeb0-27bbddca259c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7aed0424-f0f7-4784-936b-67d6a8920156"
        },
        "item": {
          "id": "673fab3a-9173-4fd0-8a58-3500556ac222",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b4a7e654-944b-4918-b8cd-0fda384d40c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f75943-fc91-4d1c-adf9-b1d7f3213c4d",
        "cursor": {
          "ref": "10cb55f9-ed52-4928-912b-dd7a18baefa8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cdf9afac-2200-4220-8982-27e5eebadc35"
        },
        "item": {
          "id": "66f75943-fc91-4d1c-adf9-b1d7f3213c4d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6864742e-cb20-43f9-ab0b-41f3dedd3584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cd1b9e-4bf9-41bf-896c-be5dd86f34f7",
        "cursor": {
          "ref": "8471a61a-be5d-41f5-9e56-45bb2ac8c550",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5fa0fec7-587c-4cf8-bd56-603f92225869"
        },
        "item": {
          "id": "13cd1b9e-4bf9-41bf-896c-be5dd86f34f7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2a11a62e-daaa-4cac-9dfe-8291be757935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4bfba8-0b12-446c-92e4-13417d5eaf84",
        "cursor": {
          "ref": "6d7585a6-6891-477e-b878-7d1714d7330c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4b92ba31-57e6-485c-99b5-ebc998ed8051"
        },
        "item": {
          "id": "ba4bfba8-0b12-446c-92e4-13417d5eaf84",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dfb5c513-6915-4ae3-8d35-7581f7e63a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306c8f81-a773-49de-a569-08d7b44860aa",
        "cursor": {
          "ref": "37d6c54f-d587-474d-8e33-0ef6de7507fd",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "97250dd9-8680-4cfa-8b81-f79a5782c8ea"
        },
        "item": {
          "id": "306c8f81-a773-49de-a569-08d7b44860aa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7d7bee5c-f975-4156-9485-4b7488dd5c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcdd632-efe3-4965-b82d-70699484e2d0",
        "cursor": {
          "ref": "26876d37-8b84-4e7e-b9ba-2f49355dda3e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9e9c0812-df5b-41cd-a22f-1277ad541e85"
        },
        "item": {
          "id": "5bcdd632-efe3-4965-b82d-70699484e2d0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "963ce4c2-afd1-489e-af97-0b9319d709a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761dd58b-6295-47ae-8472-aa996e4e051a",
        "cursor": {
          "ref": "67b276d9-4036-4b34-981d-9d0c3df9e25c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0d710130-5d25-4f9a-b4b9-75ceeaade15a"
        },
        "item": {
          "id": "761dd58b-6295-47ae-8472-aa996e4e051a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ba2ff483-7d4f-4b42-bef3-f378b6f668c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5227f09-bc19-4994-9666-a832c6565fcc",
        "cursor": {
          "ref": "b4f39430-5d0d-40c9-b42b-3c0319f0b824",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "53a980d2-2967-446b-8343-f72266505d3a"
        },
        "item": {
          "id": "f5227f09-bc19-4994-9666-a832c6565fcc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1d9ab92c-0b78-42d7-b028-fb91132d981a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf3fd2f-52f5-458c-ae51-a82a8ceff9de",
        "cursor": {
          "ref": "39384a80-c7b7-4170-acab-19893ab67c11",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f36c5c1a-4d19-492f-ad37-d21d3658e02a"
        },
        "item": {
          "id": "5bf3fd2f-52f5-458c-ae51-a82a8ceff9de",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "445e19dd-57a2-49a4-931d-6ee70d9ba626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5336fb92-6cc4-40ca-9ae9-44700650af4c",
        "cursor": {
          "ref": "6e44686b-5f01-49e7-8efc-da560e469592",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e52cb323-fe83-490f-97e8-57f354d08738"
        },
        "item": {
          "id": "5336fb92-6cc4-40ca-9ae9-44700650af4c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "12788bc1-ee71-489d-b556-e395cb3cb5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ce2953-ab1d-4f3e-b962-ecc8d04f5a96",
        "cursor": {
          "ref": "710dd5f4-f446-4c88-8dc9-9cf8fb3556ea",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aaa3ad2c-0591-49af-986d-505a931f7d0f"
        },
        "item": {
          "id": "70ce2953-ab1d-4f3e-b962-ecc8d04f5a96",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "30db4626-dc74-46a5-871c-b4a2bfe775d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e015f7-dd05-410e-b5e0-c5b805b7aa55",
        "cursor": {
          "ref": "ac429e25-98f6-4d1d-bc8a-58a9a6dab153",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7d74577a-f7f1-4d07-98a3-983a0952ff4c"
        },
        "item": {
          "id": "82e015f7-dd05-410e-b5e0-c5b805b7aa55",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "85c72374-247b-49e7-b3a2-9c1340f208bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b69aa7c-d455-41bd-90d4-12868eb047e1",
        "cursor": {
          "ref": "7a39b06a-8409-4e8e-a751-5842d7e8463d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bb3424aa-b413-44f9-93bb-4b88646124a7"
        },
        "item": {
          "id": "7b69aa7c-d455-41bd-90d4-12868eb047e1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "61832213-b175-46e7-b653-5d8d5300e815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de2f53d-5d34-488f-a219-ec4095aec480",
        "cursor": {
          "ref": "90b18e63-0a5b-4b88-9b62-605fe22e59f8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b161a1f2-c655-4ddc-b84d-706f030ba73a"
        },
        "item": {
          "id": "9de2f53d-5d34-488f-a219-ec4095aec480",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "893b2fac-f2d7-44b5-aab3-32e8f463b054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538edc25-4fe0-47e2-a8c4-5aa3ffdd0212",
        "cursor": {
          "ref": "677f3709-91c1-4ecd-8e0b-af68e41d483b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4b870c9e-1d27-45ca-817a-1383596cc6e6"
        },
        "item": {
          "id": "538edc25-4fe0-47e2-a8c4-5aa3ffdd0212",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d8aaeadd-4704-4645-af9d-653c1faebbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91b34a8-918c-41cb-8973-3fd384af237f",
        "cursor": {
          "ref": "66a085a8-7ee7-48dc-a696-6616ca52a4e8",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "486d7fe5-6d29-46cc-89a3-72a1e9e222d0"
        },
        "item": {
          "id": "c91b34a8-918c-41cb-8973-3fd384af237f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0197f4cd-b189-4fba-a5b5-362a27c9bf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a809a7a-5d52-45b1-9b32-c2c0ece7bb27",
        "cursor": {
          "ref": "3c8666d3-f5a4-4ccc-8ffa-e7e44b02e586",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "73d710f4-0c25-452d-b50c-09a29a7279f6"
        },
        "item": {
          "id": "8a809a7a-5d52-45b1-9b32-c2c0ece7bb27",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d1dfa8e8-d0f8-46d2-8147-1e0f5384d4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e52437d-7b90-4110-9a8d-04e2afb955c7",
        "cursor": {
          "ref": "98bc1e63-46a2-4d97-8b07-66ae620e256f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e889d93f-6f8e-4101-81cd-8ca2c6c03b98"
        },
        "item": {
          "id": "2e52437d-7b90-4110-9a8d-04e2afb955c7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "60a90fc8-b3a6-4bb8-bbb3-0439c04ccd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbee11c-9a29-4c60-8994-fdcb76105043",
        "cursor": {
          "ref": "28a40c86-9633-4998-bf53-97be1ac41118",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "252ed79b-0c9b-4eaf-b1b8-8347193a3abc"
        },
        "item": {
          "id": "adbee11c-9a29-4c60-8994-fdcb76105043",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bc42d4a7-4755-44c1-8dbf-6f26ca2fe192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a7e3bb-1d8b-49bf-bfc1-029be5cc6b30",
        "cursor": {
          "ref": "5289b315-9da6-4f7b-9b0f-92473ad2b490",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e3d49886-cb07-418f-bb9e-90a2dd3a5ac5"
        },
        "item": {
          "id": "75a7e3bb-1d8b-49bf-bfc1-029be5cc6b30",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5063de2d-f3cb-460d-908f-7f2c56a21164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d836f0e5-b676-4032-8b06-268dafbf3998",
        "cursor": {
          "ref": "26fd6f60-7a0c-4271-bbdd-499fc7f6d498",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c4408b22-19f7-4fc4-a234-72087d812027"
        },
        "item": {
          "id": "d836f0e5-b676-4032-8b06-268dafbf3998",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a099b11-0194-42f5-b56b-0720ad114d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07d8687-9696-49fe-83ee-c12df09dfbd5",
        "cursor": {
          "ref": "672f1ca3-1ff0-45a9-9f9d-36587a0fb832",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c7b0aff4-15b7-47e7-ba14-3637b9201e2c"
        },
        "item": {
          "id": "c07d8687-9696-49fe-83ee-c12df09dfbd5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1c667b1d-1b4a-453b-840c-7669bd8dd6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e3c40c-2410-44e1-b74c-120f1f7f2b7c",
        "cursor": {
          "ref": "3bab9bd4-4fb4-40fa-ba90-f8fb5f7a9a39",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "31f6d8c1-ece4-4c74-9129-7eaf6ea8793e"
        },
        "item": {
          "id": "02e3c40c-2410-44e1-b74c-120f1f7f2b7c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cfae6d9e-5b35-4407-92b8-08692a881389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da3c31d-7192-4e29-b970-898975cea43d",
        "cursor": {
          "ref": "ceb24e05-09c2-4f06-9287-80c3e13b12d4",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4be4498a-eeec-44bf-bb87-8b21dfe94f6d"
        },
        "item": {
          "id": "6da3c31d-7192-4e29-b970-898975cea43d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bb452aac-9455-4e76-bde3-0f0db9957c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ae974c-8711-4d91-a46b-dbd8a0043466",
        "cursor": {
          "ref": "fb42ffd6-cdfa-44ce-93b7-9d3654f5bd17",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1a1648dc-5a75-41cf-b0de-3a435392118a"
        },
        "item": {
          "id": "52ae974c-8711-4d91-a46b-dbd8a0043466",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ae0baa8f-e3a4-4a6f-b0ac-60f93bdcd867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e216d631-069b-499a-9744-3d780799f9f2",
        "cursor": {
          "ref": "db207a6c-a22a-4b6b-8564-b5db99a6a1ed",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "434c9010-0f83-41ed-a278-ce244c7e8798"
        },
        "item": {
          "id": "e216d631-069b-499a-9744-3d780799f9f2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b610c104-72b3-41f5-9c40-5c16537fadbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b20ef1-99ea-4ea3-89d6-751ad04d16f0",
        "cursor": {
          "ref": "623089b0-16cb-4912-b553-b479a0ddd09a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2943d982-4a37-428e-b78a-0b28a45ce742"
        },
        "item": {
          "id": "40b20ef1-99ea-4ea3-89d6-751ad04d16f0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "33e5aa9c-b686-42a5-9607-df68752fcdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e1019d-cedb-4be2-be54-3c63a153c563",
        "cursor": {
          "ref": "923cfa0a-1440-4274-aee3-9fec662162a3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a047fd3e-03cb-4230-a411-9b36df3c62cb"
        },
        "item": {
          "id": "f4e1019d-cedb-4be2-be54-3c63a153c563",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7632f0b0-bc9b-49cc-a80a-89ab872726fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c30be1-805d-483f-bcc4-c39f522b26c6",
        "cursor": {
          "ref": "d688bda1-b463-4524-bbf0-7218b6dd9712",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "89e41548-015f-42b0-b5e0-582e46801c47"
        },
        "item": {
          "id": "00c30be1-805d-483f-bcc4-c39f522b26c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9078c0f8-181f-471f-8002-8b613ae8940e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eae6d7e-0706-4b6b-892c-04b1b712912c",
        "cursor": {
          "ref": "0b3d0f59-1a94-4627-a588-bb2d58074dd8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cabecc2d-21f6-4dc8-a701-32982578ebb6"
        },
        "item": {
          "id": "3eae6d7e-0706-4b6b-892c-04b1b712912c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "621d22b8-5fb3-40d9-bae8-8ec65ea8c866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1388fac-8741-4ee3-8841-6e63e9070964",
        "cursor": {
          "ref": "80bc1600-9ecc-4c03-9184-a5e04d2806a2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "86f426de-9a42-4179-ad4a-c70afc4ab30f"
        },
        "item": {
          "id": "e1388fac-8741-4ee3-8841-6e63e9070964",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d3b8d53b-98ff-4efc-afe7-eadadc9f83a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb14b9e-1fc3-4733-95b4-14b1bcc98fe6",
        "cursor": {
          "ref": "1a0049c6-94f5-4201-a317-7990430b388f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bd481531-16cc-4097-961c-8a6009ac5620"
        },
        "item": {
          "id": "afb14b9e-1fc3-4733-95b4-14b1bcc98fe6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6f39e155-aa1f-40ab-88e6-87d833a0d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deecd831-c114-4fbe-b17d-0bca1662d3a3",
        "cursor": {
          "ref": "bf2bb777-c230-4dd5-b3bd-e421b0df91b3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7e31943f-286d-40d4-99f6-216463cd0ff1"
        },
        "item": {
          "id": "deecd831-c114-4fbe-b17d-0bca1662d3a3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "af08893a-54b0-49c8-a490-2e065a0a6660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859dbbb-821a-49d6-acbd-9255b9db7679",
        "cursor": {
          "ref": "d73768da-7e28-4181-8109-89ff338be186",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "91c96e0a-4405-4033-890e-71733f239333"
        },
        "item": {
          "id": "c859dbbb-821a-49d6-acbd-9255b9db7679",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b79072d0-3cd5-4d16-a7d0-d7fc3ef8614e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e20acb-084d-4a12-86fb-4081e82d7b2e",
        "cursor": {
          "ref": "a2d4c815-ec9c-465a-b84a-b6f0da8f5253",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "23f8eb82-0a3a-4098-8211-fbc125ddc8dd"
        },
        "item": {
          "id": "c0e20acb-084d-4a12-86fb-4081e82d7b2e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9a1142a3-9755-4edd-b62d-96b138586081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052cd078-adb8-4c0e-bc3a-cf06b347943e",
        "cursor": {
          "ref": "2f841eaa-a70e-43b4-b3af-8487763947e2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8259fd40-a2ca-4a11-af9d-67b5f675eb6e"
        },
        "item": {
          "id": "052cd078-adb8-4c0e-bc3a-cf06b347943e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "844c3c9c-d9e9-4aa6-8839-9a685950417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766b98d9-bd29-44dc-839c-509115ead2b1",
        "cursor": {
          "ref": "ca7c6649-00b4-4ed0-9813-56e78cf0e210",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e42df8a8-e8ab-44fe-ae6d-6a6fca86a59a"
        },
        "item": {
          "id": "766b98d9-bd29-44dc-839c-509115ead2b1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "11c3b33b-3a96-49bc-90c8-9d593044b5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b14e76-a085-42a9-99bb-735458e8b372",
        "cursor": {
          "ref": "ae087268-5d2e-4427-9dfc-98f104f50cac",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2157e375-d343-4e1c-b9d8-2346b34b0253"
        },
        "item": {
          "id": "d7b14e76-a085-42a9-99bb-735458e8b372",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eb99152c-d90e-4769-bd59-557777241f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d1aa16-de38-4842-81cf-4b5f8a79da0c",
        "cursor": {
          "ref": "7acb6815-9e93-4963-8dd5-c16647dd3297",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c06b8fc4-7175-48e8-b1fd-bd8b4c2130bd"
        },
        "item": {
          "id": "48d1aa16-de38-4842-81cf-4b5f8a79da0c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "908bdbb6-76cc-46cb-a40b-cb8e0be0e8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d88148-403f-4362-b7a8-46b0c6ff98b2",
        "cursor": {
          "ref": "1b43c2a8-3cb6-45d1-8522-83eb64b1a8d7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ac7ac9cf-8112-4bfd-98e6-19b1eebcb94b"
        },
        "item": {
          "id": "a0d88148-403f-4362-b7a8-46b0c6ff98b2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "69edbccc-8a1e-42f7-b604-33e3672bdb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9544511d-2f36-47e0-b6f1-d00ebfa45c2a",
        "cursor": {
          "ref": "779773af-4da5-4549-8b13-fce25e858e5b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3cae950a-ed90-43ef-81c3-b0378c734c53"
        },
        "item": {
          "id": "9544511d-2f36-47e0-b6f1-d00ebfa45c2a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1d77a444-573d-4b63-972a-db04e5b0823a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dc802b-7bf1-4509-bf11-881846b523ee",
        "cursor": {
          "ref": "64a4e600-46c2-4a4c-b13f-36af968ef6b0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "83513172-dbd1-4e8a-9bc8-8fbc209062fb"
        },
        "item": {
          "id": "c0dc802b-7bf1-4509-bf11-881846b523ee",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f6730856-a4aa-4251-8c73-39f4e472fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08486328-30b1-4c39-a121-29a67f5aeb01",
        "cursor": {
          "ref": "6ed53d35-6447-45f2-af3a-619f62ae218a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ee85de0-4afb-423f-acb4-5fa80f91e389"
        },
        "item": {
          "id": "08486328-30b1-4c39-a121-29a67f5aeb01",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ad489414-0223-4a2a-b1bb-95a85d2a114c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724920b3-d1d7-4760-ae30-de5162e2fae8",
        "cursor": {
          "ref": "2f33783d-5593-4f5e-b48a-39ed21696e90",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "08bcbaf2-8544-42eb-8af5-8b5595d60a81"
        },
        "item": {
          "id": "724920b3-d1d7-4760-ae30-de5162e2fae8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "122e4a06-24ac-4314-9692-3fd9b9d8b193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c1cc16-4cb9-4f8a-a1a6-61cbd70dcfe4",
        "cursor": {
          "ref": "2925719e-334d-4967-a339-1988e17948e9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "edf8f77a-65c7-4c4a-92c3-7987e8923a17"
        },
        "item": {
          "id": "c6c1cc16-4cb9-4f8a-a1a6-61cbd70dcfe4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "de093b77-32c3-4903-a465-6516db1fdfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786810c8-1444-47c2-b50b-078db2ab21a9",
        "cursor": {
          "ref": "6fee4902-d8f6-46e3-a7e1-9378d7c2d75b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "813b892e-ffee-4846-8e7a-eeb385cd5220"
        },
        "item": {
          "id": "786810c8-1444-47c2-b50b-078db2ab21a9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "44b3c259-1990-4d5c-ad6f-c418b10e6cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89664e8e-07ab-44be-bdff-a43ad9a8fadd",
        "cursor": {
          "ref": "dbf9df7f-3950-4169-bce2-c2f0ad784c5b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4355346c-775c-458d-857e-7f6f4ae631c5"
        },
        "item": {
          "id": "89664e8e-07ab-44be-bdff-a43ad9a8fadd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a76cac0a-2f17-4257-95c8-51be0cec58b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f990ac5-a25c-4573-8b27-6b799c83297b",
        "cursor": {
          "ref": "ef5495b3-69b0-400e-a6d3-58ba39d2977e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e9417074-0dab-4286-be4c-b0a325767e23"
        },
        "item": {
          "id": "6f990ac5-a25c-4573-8b27-6b799c83297b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "38156379-c018-4f75-8f5c-3180d99b5d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f04e3-9e8c-4b49-9543-2ecb32893bc3",
        "cursor": {
          "ref": "59eb8dce-bad2-4ee3-9dcf-b86f8244d681",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dec803b1-1af3-4b00-a693-0ecbac2eaa0d"
        },
        "item": {
          "id": "891f04e3-9e8c-4b49-9543-2ecb32893bc3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b6d87220-dd4d-467c-a629-0e334df15526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f684d65-1de9-4778-9dce-6bd774a3b7dd",
        "cursor": {
          "ref": "326bca17-8d40-449d-bf05-45680421688c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3da0a6a8-1a87-4562-bf5f-457d23bacf57"
        },
        "item": {
          "id": "9f684d65-1de9-4778-9dce-6bd774a3b7dd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e306c7c5-1f95-42a0-8915-c1761fe4e785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d5fb0-4be9-4f9e-a3cb-254eccba814f",
        "cursor": {
          "ref": "9470aef4-881f-40ad-ad75-d6d47d06ab96",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9323fcd7-e23a-4991-b8a4-6993ebf5f91f"
        },
        "item": {
          "id": "620d5fb0-4be9-4f9e-a3cb-254eccba814f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "42947e5d-36dd-4270-8c59-daf884d249c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb5f878-7045-41db-b8cf-45dae18483ae",
        "cursor": {
          "ref": "6a1187d1-5e72-4e31-a496-5fd093e789fd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5ebb3172-f363-467d-8f12-270d602f5a41"
        },
        "item": {
          "id": "ecb5f878-7045-41db-b8cf-45dae18483ae",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "34685287-0429-4049-ac25-764525a193e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3510b468-dda1-4e07-8459-3ce5954f3b6b",
        "cursor": {
          "ref": "4d3c357e-c6f3-4ca7-aa87-0ec15a5105c7",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe9e8404-d5c7-4381-8f3f-8e65703d3f08"
        },
        "item": {
          "id": "3510b468-dda1-4e07-8459-3ce5954f3b6b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3e926e06-c6eb-4362-bdad-4e1f67103727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed4e4b3-73f6-4b3f-a1ae-3532d1066dba",
        "cursor": {
          "ref": "128df2b0-6ff6-42bf-9866-2448e343f2fc",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f253cd51-eb72-48c5-9db3-8b127d6da7d7"
        },
        "item": {
          "id": "5ed4e4b3-73f6-4b3f-a1ae-3532d1066dba",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "44f7c069-8218-4d97-90c8-82c86780bed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8596f08d-fc61-4483-a68c-4a58f6501355",
        "cursor": {
          "ref": "a9643df4-b0aa-4c45-998a-c0c0e4ffc7c2",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "08c968b6-8d29-4e41-b1ba-6431287578e0"
        },
        "item": {
          "id": "8596f08d-fc61-4483-a68c-4a58f6501355",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2ba665e0-bd79-4ddf-a71a-27b2ce430348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5edc2c8-1ad1-4975-a036-2fff90b3f713",
        "cursor": {
          "ref": "49c68462-ab2b-4bad-b0e3-ae445216b919",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d214ca21-c29b-4d5f-a9d9-ad2596930946"
        },
        "item": {
          "id": "a5edc2c8-1ad1-4975-a036-2fff90b3f713",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0651a5a6-110a-425f-bfb6-d9a14b0dbda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5046c870-5356-4b94-959b-37c566eefadb",
        "cursor": {
          "ref": "b4bdd925-c679-44cd-a4f6-ef9de9968943",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ddc3b162-8021-4d10-86c1-7d4f91c10b08"
        },
        "item": {
          "id": "5046c870-5356-4b94-959b-37c566eefadb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b0891edf-6846-448c-b69d-bcd7f31cc669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8154327d-e80a-4075-ae28-0fb6718d3d92",
        "cursor": {
          "ref": "20a3d8f2-fa86-432f-b6aa-e739f9903658",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "22a3651d-2b1c-47ec-b284-6d9d81a19079"
        },
        "item": {
          "id": "8154327d-e80a-4075-ae28-0fb6718d3d92",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f4b9b136-38e7-4482-aa4e-f302b1225ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0266f6e7-a513-413c-8352-0114916fc16e",
        "cursor": {
          "ref": "ebb2643e-aae8-4f64-9296-9d16561ceefc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ddabacdb-89a6-4490-836a-8a5490ec9b40"
        },
        "item": {
          "id": "0266f6e7-a513-413c-8352-0114916fc16e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e414faa7-8b6c-4be1-9ec1-6bfb1f05a8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b8cfd1-28ee-463c-9501-c8a02d5cd9fc",
        "cursor": {
          "ref": "72252d54-7cef-4e71-8516-38b3b32cfa8b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e47035c0-a77e-446c-8f64-bf2e7d43a902"
        },
        "item": {
          "id": "23b8cfd1-28ee-463c-9501-c8a02d5cd9fc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "25f1cbfe-eb33-4db2-bf64-a0baf24031fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89022298-58db-42a8-aa58-7d759a91f9e2",
        "cursor": {
          "ref": "1ea9d0b0-083d-4bb4-97bc-66ab762b8bed",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "66862f1d-7859-4b95-98c7-28a006986146"
        },
        "item": {
          "id": "89022298-58db-42a8-aa58-7d759a91f9e2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8df26cc9-05a8-4aab-95c8-9ffd89bf6b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0246a5bc-c812-49b9-b127-3009080f9cd7",
        "cursor": {
          "ref": "c5ec4a54-5e58-4409-b255-e93db169de23",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b032e25f-f56b-4d62-b031-5b1bcf85cfb7"
        },
        "item": {
          "id": "0246a5bc-c812-49b9-b127-3009080f9cd7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0941b475-cf07-43de-87a4-2a274e790200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada01574-fd4d-438b-9232-f8bef08b1a34",
        "cursor": {
          "ref": "a4ab9fc0-f6a0-4e7d-83cb-b04fd008b582",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "66a06e3f-bea5-4bb7-9d50-c4a8d13b3e89"
        },
        "item": {
          "id": "ada01574-fd4d-438b-9232-f8bef08b1a34",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9e2087af-20a7-4a0d-a79e-e9448b4e78b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eea01f-2379-40c0-a044-c837a10d55ac",
        "cursor": {
          "ref": "3fda587f-f1f3-4a43-8958-8437eafb4474",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5014eab2-8a6a-43e8-891e-3813f04394d1"
        },
        "item": {
          "id": "f9eea01f-2379-40c0-a044-c837a10d55ac",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1db74909-44e1-48fb-b2e7-77071af2f7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a0382fd4-4a19-4fb9-857a-ab6ede918ea8",
        "cursor": {
          "ref": "72cb0b82-1be7-405e-ac9d-a34f23fb7fe3",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4d2831f0-2f81-4572-a397-eef0be90ac5d"
        },
        "item": {
          "id": "a0382fd4-4a19-4fb9-857a-ab6ede918ea8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7b00d8ee-0fd2-4ea4-9668-b2cfca3a7854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c3ebb9f1-fa19-4331-93c2-4d8dd14fb23a",
        "cursor": {
          "ref": "747ae2e2-b2aa-44ae-8925-09dbced2cd2f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4a81487d-cf84-4693-86fa-e5a30f3627c1"
        },
        "item": {
          "id": "c3ebb9f1-fa19-4331-93c2-4d8dd14fb23a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2fb33190-6012-48c9-9561-256cc4f0cc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b44ae449-4741-4eec-a376-26f37f9c4967",
        "cursor": {
          "ref": "1a0e6ffa-f678-489b-8674-c19645a3449d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5ceaa554-262b-4f4a-b9d9-011283b178b3"
        },
        "item": {
          "id": "b44ae449-4741-4eec-a376-26f37f9c4967",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "312ca771-1113-4222-89ea-0fef110791a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "24cfc9f8-51d4-432c-8485-60ca16a0c354",
        "cursor": {
          "ref": "db7396e1-4aaf-4e97-a07f-203f3820a788",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b94c9cb8-6e0b-4a65-8698-c02def9b0326"
        },
        "item": {
          "id": "24cfc9f8-51d4-432c-8485-60ca16a0c354",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "40265e2d-bf4f-4704-af67-9c1d1944dbc7",
          "status": "Created",
          "code": 201,
          "responseTime": 8700,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce47221-c6cd-4dbb-b489-0aa2401b76cc",
        "cursor": {
          "ref": "a15a7e21-0e64-4853-9e9b-096638938f73",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c8d9d1d3-76f9-4b1e-9174-75985af6764a"
        },
        "item": {
          "id": "dce47221-c6cd-4dbb-b489-0aa2401b76cc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "14e1bdc7-b7fd-413c-9779-1fc6f17bc8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "170b18e0-abeb-4959-baec-ab1d7a8da1e7",
        "cursor": {
          "ref": "5b88bfcc-1120-415e-8f7b-7fc848b52a00",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "56ba30f0-6040-430a-9725-ae7c1fae48da"
        },
        "item": {
          "id": "170b18e0-abeb-4959-baec-ab1d7a8da1e7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b9337452-99ff-4b9e-9372-e74b331a6329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9bbb5350-aca0-4be5-8756-8e3d9e242751",
        "cursor": {
          "ref": "0aa3fb1d-0497-4f2f-a0bc-45f02494c81d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9d74bbbd-91e5-45a5-aa45-770aa05f9b87"
        },
        "item": {
          "id": "9bbb5350-aca0-4be5-8756-8e3d9e242751",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "27bf6b3f-a4d0-4e7d-a11b-ec9d843910bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a621ffa7-899a-482b-958d-cb17b5293c9c",
        "cursor": {
          "ref": "2c4e3ca9-1888-46b7-aa5c-5bbaecf0463f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "460610ef-bf73-4bd1-a839-b9fc190251f2"
        },
        "item": {
          "id": "a621ffa7-899a-482b-958d-cb17b5293c9c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc7afd13-1cf5-4bce-a65b-7b5c95ce3dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22707117-fb63-4447-82dc-ccd8ab5e68fb",
        "cursor": {
          "ref": "cb42b400-f793-4931-8810-974ebb47e83d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e3704484-8c4a-405f-89ca-78cca5afe307"
        },
        "item": {
          "id": "22707117-fb63-4447-82dc-ccd8ab5e68fb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7eb091f2-4978-4d66-8ccf-d38e910881e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84548811-9370-4ef9-b63e-818f99449c5d",
        "cursor": {
          "ref": "77e67e9b-59db-407d-8bd8-6d4d962cc203",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d77a74b-cc43-4721-bd5f-1d8ace3ce0bd"
        },
        "item": {
          "id": "84548811-9370-4ef9-b63e-818f99449c5d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b48c00a2-9e21-4868-a290-d4bb6ec6fb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0721ee-44eb-4ade-afbf-86d919590792",
        "cursor": {
          "ref": "0a910d37-d770-4c17-96d8-d99c5e11d6db",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "38285dcf-0bad-4183-82a9-ec7fdb0990e9"
        },
        "item": {
          "id": "1f0721ee-44eb-4ade-afbf-86d919590792",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "85e3a8d0-15ef-42f0-96ee-3273599fd786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc1585d-7441-4323-8763-7a9810df3e2b",
        "cursor": {
          "ref": "54ea7e0d-6e82-4d18-a2ae-5c558e999b85",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0b6b18b8-4c77-4cc0-a6c2-033f85da656e"
        },
        "item": {
          "id": "3dc1585d-7441-4323-8763-7a9810df3e2b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "20da7f1b-91ff-4f54-b392-bf66dc828f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33de4329-29a5-4f93-a507-e82217fb8349",
        "cursor": {
          "ref": "e5f2c399-3c9b-444c-919c-c37d82305741",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6c250a3d-09e3-4000-b984-4105b67b9d69"
        },
        "item": {
          "id": "33de4329-29a5-4f93-a507-e82217fb8349",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e2eb1a84-6eb5-487a-a13a-ed6633b00893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457aa228-069a-4f09-93cb-557e901441f6",
        "cursor": {
          "ref": "00892219-fd0f-4878-b20d-ff1811083e53",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "37a90b14-656b-46c7-bc28-21361c1e80e9"
        },
        "item": {
          "id": "457aa228-069a-4f09-93cb-557e901441f6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de2ed619-8dd8-4c0c-acf9-4d2754c67a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58466a20-3f32-4ad1-b267-ce6283bf9a69",
        "cursor": {
          "ref": "38d620ea-5ab8-4ac2-a07b-b74a3b4625c7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "571bcc3b-7ccf-4e1b-9851-ff1417871d3a"
        },
        "item": {
          "id": "58466a20-3f32-4ad1-b267-ce6283bf9a69",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3024478f-bb07-47f7-a26b-376c6f78978a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3375fc-0aad-408e-92b5-ce031c30a813",
        "cursor": {
          "ref": "99541ed0-ea59-4e85-8319-2ec5d9e09495",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "659f95b1-2285-4848-8ebc-d984b05159e2"
        },
        "item": {
          "id": "1b3375fc-0aad-408e-92b5-ce031c30a813",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9681231f-1b36-4eaf-ba2d-a4786f8750d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39fb849-4605-40f8-97dd-7bd83c82f98b",
        "cursor": {
          "ref": "bd4514c6-d656-4081-bba4-963ce42f1610",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "359918d7-77dc-4f81-83b1-42b78be76c07"
        },
        "item": {
          "id": "c39fb849-4605-40f8-97dd-7bd83c82f98b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8efb0182-7770-4943-beda-eeb7ca5fb0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b30f25f-0597-464a-90d0-354c99b1f456",
        "cursor": {
          "ref": "22e73bed-304e-4591-b36d-d3020b2fe5b0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c8ef20d5-6e06-48bd-97d2-2f4906ef1d77"
        },
        "item": {
          "id": "0b30f25f-0597-464a-90d0-354c99b1f456",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ec64e6a4-e836-4ef7-8e42-fde29a5ae93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e28eb4-6ba9-4ff1-91f2-224dc3ac68bb",
        "cursor": {
          "ref": "ce6dd074-3fee-4bfa-9384-93155a9e926f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7c911c07-e84e-4a46-a9f7-63b337aa36a5"
        },
        "item": {
          "id": "71e28eb4-6ba9-4ff1-91f2-224dc3ac68bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "04166cdf-1396-4d9f-a70b-5366a9d80cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cff25d4-1f33-4a93-95ca-82ba95ef41b1",
        "cursor": {
          "ref": "3748b1c7-a9f1-4cfe-b04b-bd4dc30b45ba",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2ce0aa4a-9c8a-48cb-b8f8-9abcf5a89282"
        },
        "item": {
          "id": "7cff25d4-1f33-4a93-95ca-82ba95ef41b1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7f8a6403-a5d9-4573-8e38-eafa185ca0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfd7a3a-df95-49a3-ab01-20d7e92dc826",
        "cursor": {
          "ref": "5653e099-2d43-45e8-988b-af2ab3374e8e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4cf37118-f3bc-4928-bddc-3341f4cdb6ba"
        },
        "item": {
          "id": "4bfd7a3a-df95-49a3-ab01-20d7e92dc826",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c10ef16f-1ec0-4658-bea2-1a7436a96763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b029394-099d-497b-8d87-e1e9c00b8174",
        "cursor": {
          "ref": "11630739-52ae-47da-aa58-4c091b25053e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5046c865-4eb5-4e0c-9f6b-424ca804b0f1"
        },
        "item": {
          "id": "2b029394-099d-497b-8d87-e1e9c00b8174",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cf8a029d-2e32-4ea6-85ea-692ff620b786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5114a0-f5a0-4dab-b50a-ca50118e1d75",
        "cursor": {
          "ref": "1f9bdfef-1edf-43cb-99b7-9da94ba3bda3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aa5ae721-8290-4783-bec1-24a5698ba6fc"
        },
        "item": {
          "id": "ef5114a0-f5a0-4dab-b50a-ca50118e1d75",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b0492e32-49f2-4e7e-9195-47768ee43f47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "9c790a45-af3c-43c7-b324-d90245c75759",
        "cursor": {
          "ref": "a89d5618-3518-4a72-a3ce-9e1d82cc5958",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3feebee3-c19f-4212-9277-54a5aa1358cf"
        },
        "item": {
          "id": "9c790a45-af3c-43c7-b324-d90245c75759",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "211e451e-e762-4981-b3d2-21c45e9f3d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005479cf-15ba-41e5-a5cf-01e492486dcb",
        "cursor": {
          "ref": "ad2c513e-852d-4d78-b292-679f906365a0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "79ad83c7-cfb3-4812-ba5c-877e6c85dbc2"
        },
        "item": {
          "id": "005479cf-15ba-41e5-a5cf-01e492486dcb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9488b5fa-00d6-48e1-aa18-34340ee1879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef2b994-7d36-4b60-9b51-6b82d7be21b1",
        "cursor": {
          "ref": "09f83474-0463-4d79-b5db-816be0282bea",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "294c963e-d1eb-403d-8af8-96a1e0848f9b"
        },
        "item": {
          "id": "eef2b994-7d36-4b60-9b51-6b82d7be21b1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d738d8c-279c-46af-ab32-5bb54b0e0305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47061e20-d4a9-4a2e-a9f9-ce9a0c362c4c",
        "cursor": {
          "ref": "b35b94bc-0e66-42d5-aa93-e2874fa7478d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2f7d9ff3-3cf7-4530-ae46-96491340e0eb"
        },
        "item": {
          "id": "47061e20-d4a9-4a2e-a9f9-ce9a0c362c4c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e0477f53-d2ff-4edf-9a11-a1125da0d0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998b2fba-bc90-4a6d-821c-c2245952ad10",
        "cursor": {
          "ref": "6479998c-e963-4748-802d-1d8ec2bc4e0e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "565e7fe9-de3c-4426-9bd8-b77debeb929c"
        },
        "item": {
          "id": "998b2fba-bc90-4a6d-821c-c2245952ad10",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f60a9a71-9223-4da4-980a-f8117d57e35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce0d37d-b5d6-441e-86b8-d07727a726cf",
        "cursor": {
          "ref": "70fedcad-2dbf-4b8f-9438-b7b0f1b6a220",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4734e674-0703-428a-8b25-d7fbc530de59"
        },
        "item": {
          "id": "dce0d37d-b5d6-441e-86b8-d07727a726cf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "82cb13d7-6409-4d66-8b19-a5519ae88916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce822f7-030d-4de2-ac51-bdfd47182d20",
        "cursor": {
          "ref": "16af0c06-9277-4bc4-ab97-6a67df0a7647",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b71826ec-5964-47b0-8328-9b7852665ecb"
        },
        "item": {
          "id": "7ce822f7-030d-4de2-ac51-bdfd47182d20",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0da6d554-19ce-4b87-be03-0786006e2daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9979ec06-d39f-4fb2-8080-3f88e8cb981e",
        "cursor": {
          "ref": "64ad3804-51e6-43e3-afcd-7ab51b893be5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7470db94-7196-4b01-b781-5de67e637ee9"
        },
        "item": {
          "id": "9979ec06-d39f-4fb2-8080-3f88e8cb981e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d25d5d70-af22-453f-8a90-a9837a43e39e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "405c3d8f-8e14-4e15-b54a-db5aa5f7eee9",
        "cursor": {
          "ref": "3af3e148-faaa-4b97-91c0-f03a63d3b6e5",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "408b8684-fcfe-49c8-b846-70bb1ecaf80d"
        },
        "item": {
          "id": "405c3d8f-8e14-4e15-b54a-db5aa5f7eee9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bbbc9da7-1d2b-4090-a8e5-c5cdb3c0f1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddf314e-ac35-488f-a9d4-5a58b7d050d4",
        "cursor": {
          "ref": "b61d9a70-4329-44cd-bdfc-fd1086a100fa",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d797d777-67a6-4f9c-be0d-8cbf07cdb811"
        },
        "item": {
          "id": "3ddf314e-ac35-488f-a9d4-5a58b7d050d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1deb3714-6465-49d2-91c0-a6af859ba45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c738580-6876-4361-a79f-6279a4b4c88c",
        "cursor": {
          "ref": "dc1bda2f-0ae1-4557-ad11-74de6ed6f1af",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cd0fc7e4-b379-48a3-ac73-d369ee278bdb"
        },
        "item": {
          "id": "7c738580-6876-4361-a79f-6279a4b4c88c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "379d9847-66cd-4b12-a892-81ebc244580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2addea9-0bf5-4a38-b950-a5a05226ba31",
        "cursor": {
          "ref": "e91d48aa-c8b6-4c7c-b955-c27ef52f3fac",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b92b924e-4834-4ad1-8259-008c04cead6d"
        },
        "item": {
          "id": "d2addea9-0bf5-4a38-b950-a5a05226ba31",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "35f2c8e3-3593-413c-85cd-5f90dc7c17f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b62be33-7fed-426e-ae7e-e2c69d228b86",
        "cursor": {
          "ref": "9a88f5a9-ccd2-4ee7-9198-5a2fc27d7c7e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "66b222ee-e28e-4d68-91f5-dcaefb6207d0"
        },
        "item": {
          "id": "7b62be33-7fed-426e-ae7e-e2c69d228b86",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f86e3e9c-fb07-4a4d-8e4e-f052ac22ff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0481da3f-110c-4dbc-b008-8cf356be2c22",
        "cursor": {
          "ref": "3010142c-00d3-439d-a001-83f29dbcd669",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e23a7680-0509-477c-98cb-d251bc628f3a"
        },
        "item": {
          "id": "0481da3f-110c-4dbc-b008-8cf356be2c22",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0cd505b6-4450-4128-87a8-12e3deeae30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1835bc5d-ab7b-46bf-9645-7ba8c0542aca",
        "cursor": {
          "ref": "2571c990-3426-40fb-b2a9-0258bc432d3c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b4db65b8-6a7d-4326-a8f6-16119d10110b"
        },
        "item": {
          "id": "1835bc5d-ab7b-46bf-9645-7ba8c0542aca",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9a51d474-45a3-47ea-866e-d25327e61af8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8a4afbaa-0a43-440b-b3d1-0fc9efba0b41",
        "cursor": {
          "ref": "fd1d2efd-0667-4f1c-abbd-17ef79489c67",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bb4aaeb6-8e88-4943-a299-ceee516a573c"
        },
        "item": {
          "id": "8a4afbaa-0a43-440b-b3d1-0fc9efba0b41",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "286004db-01f2-4492-8711-0d9dd13b3c27",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "cda01630-58ec-4c0d-a7fe-d58166590059",
        "cursor": {
          "ref": "d2cf1874-5f7e-44c8-bfee-6bd2f6c23b3e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e294323c-0859-4c90-ba5d-37b78678952e"
        },
        "item": {
          "id": "cda01630-58ec-4c0d-a7fe-d58166590059",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "140e7503-6576-40d9-a546-2e4c56a0e2d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8e3c5d73-8dbc-4501-b362-77b5d851f927",
        "cursor": {
          "ref": "5d6cd5a1-b873-4a25-b4b1-081e5a27a0c9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "92e97f5b-0cca-4149-98e0-2b82eb93a001"
        },
        "item": {
          "id": "8e3c5d73-8dbc-4501-b362-77b5d851f927",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "41fed24d-850a-4c0c-b71f-6e3985cff8e8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "0ce792f4-48c2-4dd8-bc5e-47f5d0b5ed93",
        "cursor": {
          "ref": "7a99227d-6bc7-4d27-b996-ca0ac1041938",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9eec33ab-6fc6-4880-9606-2007b60b53f3"
        },
        "item": {
          "id": "0ce792f4-48c2-4dd8-bc5e-47f5d0b5ed93",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ab62ed4e-f5be-47e9-9fb6-f8ae41786001",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2f283918-b38b-40e7-954a-462551206e72",
        "cursor": {
          "ref": "5ffe1e0a-46d3-4355-b3a8-03c3417b6404",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ae59ab75-268c-415a-a1af-a3a4c80e2735"
        },
        "item": {
          "id": "2f283918-b38b-40e7-954a-462551206e72",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5546b5fb-e324-4eba-9c2d-7550594fcb46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "05cdb866-47ac-4a6c-87ed-c9577311f822",
        "cursor": {
          "ref": "15506e28-9af6-46c0-88cc-e12cd36ed866",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d792726d-2407-47e3-aa47-4bda5fb93710"
        },
        "item": {
          "id": "05cdb866-47ac-4a6c-87ed-c9577311f822",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3bbfdb16-7941-4e62-9105-371586cbb521",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e12b48-aabb-4507-b20b-7abec854ba3f",
        "cursor": {
          "ref": "86c84803-cf4f-401c-b1fa-29c2afcca265",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c3ecaa48-a061-40f1-a71b-a34d652ccaeb"
        },
        "item": {
          "id": "c2e12b48-aabb-4507-b20b-7abec854ba3f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ea83249b-61a2-4d0d-b9d2-0c54e3d0c21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa517f5-80af-4174-9d33-5c064a11c1a3",
        "cursor": {
          "ref": "ff2949f7-a12c-4d7b-85f9-70388654419e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dd86328c-eca2-429c-8420-dd87d5161526"
        },
        "item": {
          "id": "afa517f5-80af-4174-9d33-5c064a11c1a3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30ad880b-539a-4dd0-a177-350cd23823aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bcbc2a-75e7-4f72-aa05-d2f13ba37d6b",
        "cursor": {
          "ref": "49b0fbf3-d6bf-4618-b53c-fdf4c7d8ca84",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1dfaf22c-ba99-4ba7-98f1-443832018107"
        },
        "item": {
          "id": "c8bcbc2a-75e7-4f72-aa05-d2f13ba37d6b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "27523690-50ab-45b1-b0f3-0cfbd5eac908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d920d06-5a84-48f4-b3cd-c4434ee0b488",
        "cursor": {
          "ref": "535c4036-2fa3-409d-94a8-51147fbaf56e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "afa3f3a4-2ad6-4ced-b80b-7f49fcb8460e"
        },
        "item": {
          "id": "5d920d06-5a84-48f4-b3cd-c4434ee0b488",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f2777f8d-fa1c-42cc-a358-7b05190fe159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f75cc68-7b83-417f-9c18-ce1dd336ba69",
        "cursor": {
          "ref": "45156b2d-7709-4ddf-bc5b-09c025e340b7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "71a04b3d-39da-4b5f-9fba-d3cf3a77df4b"
        },
        "item": {
          "id": "7f75cc68-7b83-417f-9c18-ce1dd336ba69",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0f3b7dab-81c6-487c-8ee9-2fa617e05fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68841b91-a2ce-4563-bc26-5e6510499981",
        "cursor": {
          "ref": "7e15f618-fa66-4d67-bd7a-f571f995c940",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "35b337f9-2d6e-4cac-afb3-8cd864afb574"
        },
        "item": {
          "id": "68841b91-a2ce-4563-bc26-5e6510499981",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "745ad354-7cd6-4549-a652-a7731cd699f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3ec5fa-2520-46bb-b586-6ceb3c8cdc60",
        "cursor": {
          "ref": "09f695b9-207e-450e-9e05-17945cca2c08",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0ddc9650-f5a6-4ed6-a094-fbb5af729e08"
        },
        "item": {
          "id": "4c3ec5fa-2520-46bb-b586-6ceb3c8cdc60",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "56f98cd2-b101-4c74-8a67-c2e28259eb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db18648a-0a35-474f-9a06-94ad30cd5b4c",
        "cursor": {
          "ref": "fcea2a48-d1f0-4b3b-a61e-9d9a2ccbc5b0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "acc46d24-7c3c-4683-a8d2-5e595f29250d"
        },
        "item": {
          "id": "db18648a-0a35-474f-9a06-94ad30cd5b4c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "01093004-1376-45d9-83a3-4b20cd1477ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad40745-bd20-4026-8661-00c55f948fcd",
        "cursor": {
          "ref": "5f5a7f24-116b-4c0d-9012-015df0a8bf9c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c9d70464-693e-43d3-85d0-6b941cd52242"
        },
        "item": {
          "id": "8ad40745-bd20-4026-8661-00c55f948fcd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b4d74454-b4bc-46c8-b13c-f2d77b1da925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9e209a-a985-458f-8ae2-167450783781",
        "cursor": {
          "ref": "d6365757-7df8-4767-8d31-f201b277ed5f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3e45c2be-1add-4ea8-a722-86ba91a1fd3d"
        },
        "item": {
          "id": "5b9e209a-a985-458f-8ae2-167450783781",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5b8cdc19-73c4-445f-8492-3c8ed6953f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d705ae1-6560-4fdd-a6b2-e80334442200",
        "cursor": {
          "ref": "497f6d55-43bd-48bc-abba-0ff77b21caba",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a4e8a012-3245-42eb-b26e-0d16561a8df6"
        },
        "item": {
          "id": "5d705ae1-6560-4fdd-a6b2-e80334442200",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d8000700-0276-4fd6-968d-30ca9f899f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f421d2-74b3-4e1b-ae69-61794b827bf5",
        "cursor": {
          "ref": "0df5a4ae-85f6-4c51-8d30-38fc70a65c6b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b3b9c95-4be3-4422-baac-271f0d5870a1"
        },
        "item": {
          "id": "28f421d2-74b3-4e1b-ae69-61794b827bf5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "640b1509-7d7e-4ba0-b9d0-c5ecc35f67a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc40dc3-06f4-4712-91ba-941a9b1b5c0c",
        "cursor": {
          "ref": "cd7af8d0-80ef-4aef-9d16-4cb580e74fc2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "58a69f7a-16a5-41a3-bdc8-40e907e7a56e"
        },
        "item": {
          "id": "9dc40dc3-06f4-4712-91ba-941a9b1b5c0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "815b9858-3718-4b27-98d3-1e0029920efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f3bbb5-ad2e-4b03-ae57-000870725b84",
        "cursor": {
          "ref": "d08b8c63-4694-410f-b6a4-c57fa1909885",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a4848ffd-2bba-4f88-9df9-a97201649e50"
        },
        "item": {
          "id": "77f3bbb5-ad2e-4b03-ae57-000870725b84",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6f8e5b44-a17b-40af-a0d7-fa11937cf6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4789ff9-6521-4ffa-beae-d20616089a76",
        "cursor": {
          "ref": "67274d02-d5ce-4942-a4a5-74103fedcec8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "faec2f46-d649-47ec-beea-52fa69907d6e"
        },
        "item": {
          "id": "d4789ff9-6521-4ffa-beae-d20616089a76",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "778965d2-b6b7-46ba-9e18-1d5900b5cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd1f74-56d2-4f8f-8c61-1d89c9881b38",
        "cursor": {
          "ref": "93543d18-4136-4240-acf7-3da8e0bd8b3d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7ff0502a-c2ec-4a8a-9fd4-32bb641a51b2"
        },
        "item": {
          "id": "f2cd1f74-56d2-4f8f-8c61-1d89c9881b38",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "058f5664-1d97-431f-a22a-04075aad2a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26139d2a-12c4-4055-9578-4c834544c29b",
        "cursor": {
          "ref": "1ab91148-9462-471f-8f3b-65d4927ea662",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3260ca12-2c8e-42b9-a035-e8fddecc059e"
        },
        "item": {
          "id": "26139d2a-12c4-4055-9578-4c834544c29b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "370d8e97-c3b3-477a-a577-5e376e264200",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b26b06bc-a040-45e6-bbb7-fb6625b37afd",
        "cursor": {
          "ref": "3dde2fc0-8ec3-48ea-9df0-2a84640954de",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ed30fd5-6429-46a9-a9a4-95fbc3adcdf7"
        },
        "item": {
          "id": "b26b06bc-a040-45e6-bbb7-fb6625b37afd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "886d09ee-1b23-4d21-bdcd-86d0a15eeb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d546f6-acdc-48c0-9231-4f071bfde4d0",
        "cursor": {
          "ref": "3a25bdfd-34c7-4a98-854d-5e88517ec366",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9392d983-83a7-40d0-80b2-3a1e656e5ad5"
        },
        "item": {
          "id": "e0d546f6-acdc-48c0-9231-4f071bfde4d0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d27dc697-0da8-4da9-b027-68d6813dc1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6347241-d93f-4ced-af9c-91823d8ebb67",
        "cursor": {
          "ref": "d8dd5079-555d-4ee0-b6a9-012a5dea000d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ab6f8b9-400b-4e4e-acc6-39994495a159"
        },
        "item": {
          "id": "a6347241-d93f-4ced-af9c-91823d8ebb67",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "126f6797-6fa2-4bfc-b06b-4f1545f9cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ddc070-2d88-4fd0-97ae-2ea52bf0bbb5",
        "cursor": {
          "ref": "151c011a-766f-4c15-a415-dd4fbe465a78",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "78c62ec4-e02e-45c9-84e3-5c94b499aefc"
        },
        "item": {
          "id": "b5ddc070-2d88-4fd0-97ae-2ea52bf0bbb5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "519d3131-906b-4c40-9e3f-95191420f14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdb2349-786b-4335-be42-2ed798bfe4b1",
        "cursor": {
          "ref": "2f2c638e-d773-4a82-acec-d073cc967e27",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ce1e1324-0d08-4406-9b95-c26c7da3d821"
        },
        "item": {
          "id": "5fdb2349-786b-4335-be42-2ed798bfe4b1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "57ae0702-7bc6-45f2-bb2a-90093e74afa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a978b1-46db-42c7-8664-818ccfcfb4ea",
        "cursor": {
          "ref": "60bda319-c937-4b69-ba1d-acebb4777ba3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e5eaeb92-7183-43c4-99c3-95ad6a4cadaf"
        },
        "item": {
          "id": "18a978b1-46db-42c7-8664-818ccfcfb4ea",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10ae4ca4-9bc4-4cc5-a439-7b55c0fa0b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb0d7f8-dfee-4571-9489-b05ce3cb799a",
        "cursor": {
          "ref": "ebd19fd9-66c8-4ca5-af75-f3dc0816bd38",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eb3f3060-497c-41cb-b81e-6d4c7941e0ca"
        },
        "item": {
          "id": "7fb0d7f8-dfee-4571-9489-b05ce3cb799a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2dcecf71-d87a-4540-9225-f8e178070322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c3c9f8-696e-4264-9cf9-9445eb891a59",
        "cursor": {
          "ref": "522d4e02-a422-46b9-9987-705489e79eb4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "90f1154c-cf71-4fe0-93b2-16de401e1813"
        },
        "item": {
          "id": "89c3c9f8-696e-4264-9cf9-9445eb891a59",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8e3a8d12-f859-4a11-8858-dd6019d419ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abc9c63-37d7-497d-9923-497ae4e7c565",
        "cursor": {
          "ref": "b19dd339-0a28-48c3-885d-0b9dc0b2c955",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a9b91bed-fee7-4a40-af4b-7606da4309ff"
        },
        "item": {
          "id": "6abc9c63-37d7-497d-9923-497ae4e7c565",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "34997e0f-d33d-4b5a-afa6-3b562c944ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51ff161-fb01-45b8-8403-f5e441e1feac",
        "cursor": {
          "ref": "ed4ffaa6-ec0a-4530-a6f7-5759b044a428",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5057018a-920b-4a1f-a4e9-65f992f783fd"
        },
        "item": {
          "id": "f51ff161-fb01-45b8-8403-f5e441e1feac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ef2df5f3-e98b-41ae-897d-9d8a0bffc9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495deb15-cf70-4fcd-8bbc-e37ebbe67c01",
        "cursor": {
          "ref": "91e60ed4-2394-48e8-87d5-7de89b8f3e07",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1a88f092-ec62-4ff4-91c4-90634e89bb68"
        },
        "item": {
          "id": "495deb15-cf70-4fcd-8bbc-e37ebbe67c01",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7eee954f-1a94-41b1-8e41-b35e338ab98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576d2df8-a7de-4ed2-97c4-bcf437f9afc7",
        "cursor": {
          "ref": "5f4ad7c9-ec43-4e5f-abe8-383002af66e8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7ef7d2e1-9044-4590-bd04-f0c89fc7fc46"
        },
        "item": {
          "id": "576d2df8-a7de-4ed2-97c4-bcf437f9afc7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "27e9a990-e514-4d5c-88f7-411b7f4a496b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd26a56a-fa2e-4389-8b83-fe3fa8332767",
        "cursor": {
          "ref": "66650c1e-b804-4471-8df1-b3fc3bbf2e10",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c4779a4f-f9ff-49ab-88d6-5a04478fed0e"
        },
        "item": {
          "id": "cd26a56a-fa2e-4389-8b83-fe3fa8332767",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "170aa8ea-9eac-4ebb-b046-5aa6da7b0f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd02a7eb-1493-4b44-a827-bc9ee147b1c9",
        "cursor": {
          "ref": "bb1ddbdd-d0a5-46b8-a0be-653ed32cb533",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e8cdb24a-a03d-4152-83eb-b9cb6f0f0894"
        },
        "item": {
          "id": "cd02a7eb-1493-4b44-a827-bc9ee147b1c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "444bdea7-e15f-48b1-b1fb-09b1b7616acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d729ea-c80c-4689-8fd5-83104505f361",
        "cursor": {
          "ref": "0c1e63c5-c96d-491f-9bb5-29fb7744132d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2526e384-6048-4ab1-8340-cac3b91e38eb"
        },
        "item": {
          "id": "71d729ea-c80c-4689-8fd5-83104505f361",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5ca4a2cd-490e-4d59-8557-2ca16c605971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a4abb2-f630-4548-9c60-de8df7e44ecd",
        "cursor": {
          "ref": "d101ff90-9601-4283-a78a-d0e4b78e449c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "01acd84d-ada9-405e-9a55-33dc7e9b0a65"
        },
        "item": {
          "id": "e0a4abb2-f630-4548-9c60-de8df7e44ecd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1926b541-67ec-4869-9e9c-9ffa33144cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cee76c-66e1-42cd-970d-f37b6bf78009",
        "cursor": {
          "ref": "5de38457-304b-403a-9022-80575b692939",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "424cae00-d621-40ce-b0e4-32624eb725bd"
        },
        "item": {
          "id": "90cee76c-66e1-42cd-970d-f37b6bf78009",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "117ccf6d-6813-453d-b299-d00aafd4d434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f850cb-b48b-4574-9443-f50f838cd603",
        "cursor": {
          "ref": "7b53a674-b5b9-4c7e-8e59-a30b23af09ae",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "acd72990-3807-4fe8-8532-002065a03b90"
        },
        "item": {
          "id": "d9f850cb-b48b-4574-9443-f50f838cd603",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0b734ced-c302-412c-bbe0-ef4bbc31ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9a6ad4-0275-4881-91a4-bd0bbc36b06c",
        "cursor": {
          "ref": "aea47ffc-c725-48e5-82b4-bca093ef87ef",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2285cbb5-35b6-4439-82cc-e3061b67e082"
        },
        "item": {
          "id": "9f9a6ad4-0275-4881-91a4-bd0bbc36b06c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0ed5ec20-e956-4295-9cf4-a6f628092984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61298dc0-9445-48eb-afb6-c3a211001a9f",
        "cursor": {
          "ref": "dd6e5f27-579e-4a3b-bb9a-f8c5cd2ab442",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60197abb-2744-485e-93d6-d8a1a45eaae2"
        },
        "item": {
          "id": "61298dc0-9445-48eb-afb6-c3a211001a9f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5fd59102-fbc8-47a4-8fe9-0786cbe068d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b9c9ea-fd6a-432d-9fbd-60fcffee2c0b",
        "cursor": {
          "ref": "8c34f94d-ee3b-4172-9833-451e1ba14d3c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "212c0422-d777-4f9b-9dfd-f7681731942f"
        },
        "item": {
          "id": "51b9c9ea-fd6a-432d-9fbd-60fcffee2c0b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a30bf774-0f72-411b-98b2-099b6258ab94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c86d127-a1f1-4fff-9704-9bc28ecdb8f1",
        "cursor": {
          "ref": "5ac07786-3594-4c75-813a-d83149c6f026",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f6fc2901-eefe-4fc4-a136-386ae05621dd"
        },
        "item": {
          "id": "9c86d127-a1f1-4fff-9704-9bc28ecdb8f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "99ed4599-9c89-44b5-b17e-28d5446b1bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7418f926-d415-432e-a891-0a89ca80252b",
        "cursor": {
          "ref": "9dc26c13-a923-4504-b4d0-3fe06fd99f50",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ac838a94-c757-4176-ac88-80179071d615"
        },
        "item": {
          "id": "7418f926-d415-432e-a891-0a89ca80252b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "456aea26-cf28-4935-a6e5-61cf8acd6f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951844b1-6428-4b1c-8a96-4abff6a6bb41",
        "cursor": {
          "ref": "e6c1acc0-83cd-472b-abdd-8dea62651d87",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9c2d39d8-0764-4067-a03b-17610501d3f6"
        },
        "item": {
          "id": "951844b1-6428-4b1c-8a96-4abff6a6bb41",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0146ca1d-7a09-48b0-bcf3-bb93b1fdef8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183bc6cf-ff68-4352-a943-a4b750e05158",
        "cursor": {
          "ref": "e881783d-607a-422c-9a38-b4480425dee4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9184011b-9e53-45ae-aa46-7a97ca21c6dd"
        },
        "item": {
          "id": "183bc6cf-ff68-4352-a943-a4b750e05158",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "049817cb-e286-44fd-b196-2496990215b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b91a46-e663-4c10-bdac-4951e9b5e7a2",
        "cursor": {
          "ref": "6f633d5c-3002-463c-bee1-96407371b57d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3e7def84-a7da-409a-b0dd-ccadc0a48b95"
        },
        "item": {
          "id": "62b91a46-e663-4c10-bdac-4951e9b5e7a2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "21e43f62-30b6-4166-9a4c-845d3d6b8e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d12880-c299-487c-8405-af2358e0903d",
        "cursor": {
          "ref": "4a081f79-b7f9-4cbd-86b1-2efc9291c7e1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "635aa690-4d38-4102-ba79-099d1aa7f333"
        },
        "item": {
          "id": "53d12880-c299-487c-8405-af2358e0903d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dc196232-a140-4e10-b445-ca2bf14c1636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1cbd41-3745-4950-b5d8-bff70837c101",
        "cursor": {
          "ref": "b86c5097-bd85-449a-bc7e-3b34f533f549",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "19068e94-2df5-419f-a78b-486cdc07784a"
        },
        "item": {
          "id": "3e1cbd41-3745-4950-b5d8-bff70837c101",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f2df4db8-9ee0-40c6-aee1-217af0b73f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac7d2e1-7d7b-4d2c-91c7-6fbef02c2861",
        "cursor": {
          "ref": "017f2247-4bac-44d6-8ca5-fa113b855039",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bd08b5c5-3f34-4c46-aafe-20d44114cbe2"
        },
        "item": {
          "id": "fac7d2e1-7d7b-4d2c-91c7-6fbef02c2861",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d59772b6-1ff5-4338-9627-7bbc39325697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3acc8b-8a8e-4caf-9c54-545bb66075ed",
        "cursor": {
          "ref": "ea9487a7-c3ac-41d5-9823-3463e13b62ae",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4dd22a13-e145-4c8b-892f-4d0b985c1b33"
        },
        "item": {
          "id": "8e3acc8b-8a8e-4caf-9c54-545bb66075ed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d48ae590-a62c-4621-ad99-4ff95a0cc691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f594dfa-2b06-4621-b287-9f76263fbc70",
        "cursor": {
          "ref": "9123f90d-efb6-4feb-80aa-71497ba5a348",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bdbc61cf-4eb7-4f28-94c5-3635f08f3584"
        },
        "item": {
          "id": "7f594dfa-2b06-4621-b287-9f76263fbc70",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ca3cab16-8d1e-43bc-9138-0348b7a3c0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b47f0cc-a05a-4dad-b507-d2d0403aa76e",
        "cursor": {
          "ref": "8e9268e3-93e5-46f9-9ec8-85cd2a228574",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7dce16cd-d469-40ed-bd2a-507ec76435ef"
        },
        "item": {
          "id": "0b47f0cc-a05a-4dad-b507-d2d0403aa76e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e59e261-1fa6-44e6-be0a-79b5505fb0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfc776e-409b-41d1-804f-4ce746e284d2",
        "cursor": {
          "ref": "b0b4041a-3c6d-400c-977f-864336b96b0e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "df94fa36-fc15-453e-a559-a6cd57c8d650"
        },
        "item": {
          "id": "fbfc776e-409b-41d1-804f-4ce746e284d2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da24f50e-cee4-4f23-bfc1-2c4fdeed6a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8281bf7-70a1-4872-a1f9-5c18bc4e675f",
        "cursor": {
          "ref": "3c594e7a-59a7-4d6d-9fd9-a0db3469602f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "758b2ec0-aabe-4147-9245-5fc6293148ce"
        },
        "item": {
          "id": "d8281bf7-70a1-4872-a1f9-5c18bc4e675f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f82548eb-f1c2-4d80-93a8-ab2aa03fe4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1f3ded-0b12-48dd-8aff-116e39abe302",
        "cursor": {
          "ref": "a050667d-df5c-4378-8cd7-cf3af1ba23cb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f20b1fd5-ef78-47ee-a46c-ccde6dbd7469"
        },
        "item": {
          "id": "ed1f3ded-0b12-48dd-8aff-116e39abe302",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "deebef72-adce-4ad6-b932-ea21e44c5bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8dfdcd-bf15-46b4-a689-2784c1907929",
        "cursor": {
          "ref": "74640a45-0176-49b6-9f67-54cded106b9d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3d1cee8a-d73e-493a-8aba-3c836c1b5386"
        },
        "item": {
          "id": "6e8dfdcd-bf15-46b4-a689-2784c1907929",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8f54d171-23af-4eb5-bced-ab739b681773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9d7d6e-7d31-49b5-8a20-d5cffe513ba4",
        "cursor": {
          "ref": "350c98cb-a670-4a70-8a55-a929b8d5e61d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c0c2775f-ceaf-4048-a390-2db8e79b34fb"
        },
        "item": {
          "id": "9b9d7d6e-7d31-49b5-8a20-d5cffe513ba4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e2b81497-9301-466b-83be-c017a8ac67be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44caadf9-a839-4a46-89e6-f01b978bb421",
        "cursor": {
          "ref": "abe2841e-b24b-4eaa-8d8b-b216210af070",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "18da61c2-95e3-4ae7-9d6d-c896c22d848c"
        },
        "item": {
          "id": "44caadf9-a839-4a46-89e6-f01b978bb421",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d89a2be4-6f20-48b8-b164-913c9ce2edf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54753c1-9784-4635-9732-cec848d18136",
        "cursor": {
          "ref": "667c06b7-64f9-48c1-9d13-6796b7bec101",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c654df92-857a-48b8-92f3-4cfc6f6f06ae"
        },
        "item": {
          "id": "b54753c1-9784-4635-9732-cec848d18136",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7456e8b4-ed6e-48b7-ba31-f9a9b1765349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3e0f70-0335-498e-9999-bf261f427fc5",
        "cursor": {
          "ref": "4a9941e7-d5e0-4c47-aaa9-003bfc1d6bd8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d5fc1a70-ba2a-45ab-8f32-f70dd0ce3787"
        },
        "item": {
          "id": "8c3e0f70-0335-498e-9999-bf261f427fc5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6ef2fb94-8ec3-4ae5-8549-c18b24e63fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2582b00-d2da-4c85-9993-960b99f88804",
        "cursor": {
          "ref": "7c67eb2d-810c-42eb-8b2b-2b614ae81295",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1a512225-032a-484e-854a-28f74fada993"
        },
        "item": {
          "id": "b2582b00-d2da-4c85-9993-960b99f88804",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "62f2b3e0-379c-4fdb-a220-8e3f0b151d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373083b5-581a-44f2-8262-39a3919cfee9",
        "cursor": {
          "ref": "1de138f8-c970-4ac7-9f05-e6f74cae4feb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b3e8d8a0-dbc8-409a-9479-d47cac479cc5"
        },
        "item": {
          "id": "373083b5-581a-44f2-8262-39a3919cfee9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6d967dd6-87b4-41ad-8b2d-849c6f368803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907fac00-d07d-4cb7-a050-c1eca3ff566a",
        "cursor": {
          "ref": "cc91315c-1709-42e7-90cd-4ae3e97a6f90",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58f286fb-9570-4092-8a70-437ab620f76f"
        },
        "item": {
          "id": "907fac00-d07d-4cb7-a050-c1eca3ff566a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3d24f6bc-82b3-4b5b-b595-64ef3c57140d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d698d4-5ad9-4e72-a6a9-3b1b6dce7168",
        "cursor": {
          "ref": "cf838549-69e2-4ac5-a6de-05771583ece3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1f263f5c-41d0-434f-adea-2fefca05523f"
        },
        "item": {
          "id": "c6d698d4-5ad9-4e72-a6a9-3b1b6dce7168",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "71c7f667-0c5a-4319-b0d1-fa29989b8918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1fba71-f92d-4346-939b-d45c3f3615a4",
        "cursor": {
          "ref": "ef705241-d230-4ae4-8e62-8accad4b57ee",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aad69d31-5caa-4ce3-9934-4cf167d340de"
        },
        "item": {
          "id": "2b1fba71-f92d-4346-939b-d45c3f3615a4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8c2e37a-cff1-4bae-bcbe-2a962bf675ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccac20c1-e58f-4a0d-b0f1-51d2a8b0f12a",
        "cursor": {
          "ref": "774a0ff4-d018-48d6-80a4-3228407c08e7",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ba8dfe8e-708a-4523-b724-168908dceb82"
        },
        "item": {
          "id": "ccac20c1-e58f-4a0d-b0f1-51d2a8b0f12a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "215ce104-cc40-4917-8e00-0a6cc5de9245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e4cea-3719-4bc5-b38a-81b8e507f6a7",
        "cursor": {
          "ref": "36956e21-f4cd-4328-a1af-a35f2f63531e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3ec0d03c-6f80-4fc6-8cc9-ca08b1f109b0"
        },
        "item": {
          "id": "cd5e4cea-3719-4bc5-b38a-81b8e507f6a7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "35add863-eb24-4ca7-8106-0124bedda606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e9ce44-bd52-42cc-ac38-69f3d7d2de1c",
        "cursor": {
          "ref": "fd28aab5-6de3-42fd-9e1c-3ddd3d6517ec",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a4aed3fb-c80c-4c81-95fb-11de5b2cf246"
        },
        "item": {
          "id": "f8e9ce44-bd52-42cc-ac38-69f3d7d2de1c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8d8c185c-fc91-4f6a-96e5-8310c2ccfdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6b0537-924e-43aa-8b7e-98a22771fe69",
        "cursor": {
          "ref": "a7431c56-f2a5-452d-bf30-77d11e9a9885",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2f886f22-92ab-4e50-b6f5-05f28d0fa1db"
        },
        "item": {
          "id": "bd6b0537-924e-43aa-8b7e-98a22771fe69",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0399078c-21f0-4f94-95cc-a97d3ff35cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f65053-54e9-4aa7-bec8-496c24dcbbb6",
        "cursor": {
          "ref": "3c266968-e35f-4791-a7eb-0081ea8730a7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4df2cb2d-372d-43f2-9a0e-02158c4487b3"
        },
        "item": {
          "id": "24f65053-54e9-4aa7-bec8-496c24dcbbb6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ac97b9df-a6a9-413d-b52c-32d6d3b351a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cb83b9-7a24-48c9-ae3c-2070fd6be623",
        "cursor": {
          "ref": "52cd521a-1c4a-4ac2-abcc-13dc1952e436",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4bb19a0b-bb72-48cd-b3bc-a6af663e910c"
        },
        "item": {
          "id": "32cb83b9-7a24-48c9-ae3c-2070fd6be623",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fbdb4979-0ad1-44c4-9fec-511e0bf86c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2421d96f-52a7-41f3-8f5e-76754a851eb0",
        "cursor": {
          "ref": "dbc23fe9-211b-4a25-9aff-401313405a77",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "504f1289-97b9-4eb9-83e1-0d9ea8fbdb1c"
        },
        "item": {
          "id": "2421d96f-52a7-41f3-8f5e-76754a851eb0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "25d17c7a-28fe-4ab7-b84b-74906974c10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87ed99e-792b-494f-9c01-b77b727eaaef",
        "cursor": {
          "ref": "bc8c6652-6793-43df-a425-86a317c93a98",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3a6eba0e-356a-4e02-b16c-2844df039569"
        },
        "item": {
          "id": "c87ed99e-792b-494f-9c01-b77b727eaaef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "83c7c8ca-05d1-4358-8c4b-bbe361cb3cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa5f228-9423-4396-8bfb-1e13b9a17b36",
        "cursor": {
          "ref": "4848e2ca-7e60-4671-85b6-6ad46d206b95",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2a07347d-b668-4511-9eb2-7a6ff1f8a0be"
        },
        "item": {
          "id": "9aa5f228-9423-4396-8bfb-1e13b9a17b36",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2b400eff-8918-4d2e-90f4-3cb38ccb2d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a08363-5cdd-4b8f-a667-d22cdb5a9ead",
        "cursor": {
          "ref": "42d2970b-9797-452b-8b48-94424fc805ac",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c6cf0ef8-166c-4727-bae4-1e320aa8e147"
        },
        "item": {
          "id": "15a08363-5cdd-4b8f-a667-d22cdb5a9ead",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f3faa1f2-d543-48b8-a457-4ba2cad4fdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957a13a0-807c-49f1-8cc4-041446bffd35",
        "cursor": {
          "ref": "c614a1c8-eb8d-48f8-a5a7-c3abcd6c23a8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "beff2ba9-bbf5-4195-84d5-3ca0cb0fd8ee"
        },
        "item": {
          "id": "957a13a0-807c-49f1-8cc4-041446bffd35",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "08aae80e-57e1-4320-914b-9ac507b32401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90e4a9e-3ee4-42ff-b8f1-fd21b2a6e5e5",
        "cursor": {
          "ref": "5e84415d-e5bd-4f89-bb22-7b800d4569ac",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b25855f7-8b0f-4d48-b13c-a22c28dcc2b2"
        },
        "item": {
          "id": "f90e4a9e-3ee4-42ff-b8f1-fd21b2a6e5e5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb039d7b-b444-4e0f-a943-4516012f46ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378d8e1a-2cfe-4265-ab90-a9a04c366d7a",
        "cursor": {
          "ref": "5fe9c632-f262-4a30-b4f7-680121c99634",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a960300b-c26c-4ec7-8782-55f0b820d214"
        },
        "item": {
          "id": "378d8e1a-2cfe-4265-ab90-a9a04c366d7a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "223f14e4-d27c-4a6e-87d7-ac25d420e584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4869d3-0fd5-4451-b8ad-68125150b649",
        "cursor": {
          "ref": "6c57fae5-2f08-4011-9fbc-8c1068396ce5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2cd5964c-2727-4f7d-88da-eebbed2b9d54"
        },
        "item": {
          "id": "3c4869d3-0fd5-4451-b8ad-68125150b649",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a329f757-540c-45f7-b666-c85750d899d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5ef003-ebf9-41f1-b393-87281f4a65df",
        "cursor": {
          "ref": "24f295cd-f4d5-4aad-979b-094d628e9d2d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "db95941a-3dd2-4bf9-adf6-83209e2c318a"
        },
        "item": {
          "id": "9e5ef003-ebf9-41f1-b393-87281f4a65df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "609984ed-b044-4bfa-aa9b-1b8f973135a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b179c66-7a43-40e1-923a-90849d78c3b9",
        "cursor": {
          "ref": "ea1f3e58-d3a1-4798-af47-d84961e2b363",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0062be65-d69e-473a-a13f-78637a58073e"
        },
        "item": {
          "id": "3b179c66-7a43-40e1-923a-90849d78c3b9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8bfc13be-1b13-495e-b2d2-238a82fd6fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403340ad-30bb-472c-b61d-d206ab791c91",
        "cursor": {
          "ref": "508d1f93-cd55-4268-a64c-096293d873d6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c84ed1e9-ad8f-4fe6-a66f-db1c41dbf0b1"
        },
        "item": {
          "id": "403340ad-30bb-472c-b61d-d206ab791c91",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "27bf97f3-8c2f-49c0-a42f-e245d693787f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc17e95-7b47-4d05-b3ac-3f0b712dad0a",
        "cursor": {
          "ref": "f12f8b37-edb9-4ea3-9fb4-8f657b8929f5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5e12105a-8286-4c0b-87be-270a2a7be34d"
        },
        "item": {
          "id": "2fc17e95-7b47-4d05-b3ac-3f0b712dad0a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c73b0805-db54-4e1a-9f8a-2358f1c28a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c7023-235b-4c50-90e0-db20d8dfdceb",
        "cursor": {
          "ref": "955826df-b675-4d1e-8e41-c20f603074fb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fb666397-923b-44d0-b817-d9835ef03011"
        },
        "item": {
          "id": "b93c7023-235b-4c50-90e0-db20d8dfdceb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e718134c-91e8-48cc-b2bb-c45a467e8c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b42e87-7965-4518-8bcb-1d7694f241a9",
        "cursor": {
          "ref": "c4e47d7a-0e94-4536-af8d-caf932e6905c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "61dd3aa7-5b8f-4eb4-bb0c-a73a40907c6c"
        },
        "item": {
          "id": "25b42e87-7965-4518-8bcb-1d7694f241a9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2b5944d7-2ab2-463d-b385-640a70e2de7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d6a7f9-6eff-494f-8e63-3fcbb6b39ee9",
        "cursor": {
          "ref": "3f4b5385-999e-4ab1-b1b3-7c3cb18c89b0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "58244370-2db8-4f78-9845-14565e38a534"
        },
        "item": {
          "id": "19d6a7f9-6eff-494f-8e63-3fcbb6b39ee9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "471ba4c8-7742-427b-b2ed-4b609bc3d8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0b1eee-aceb-44a1-ac79-7071b548ca54",
        "cursor": {
          "ref": "941d5f08-621f-4016-83f5-bead3e823db8",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ef9215da-49f2-4993-a076-876268916e0a"
        },
        "item": {
          "id": "cd0b1eee-aceb-44a1-ac79-7071b548ca54",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a0caebb4-84d4-4fec-ae29-71c550245bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4af9c6-2c6c-46bf-adbc-6005ef4b475a",
        "cursor": {
          "ref": "fd60a881-eb9e-41e4-83d3-98d44324105f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dadd457b-d571-4738-8486-2b9e1eae5cd7"
        },
        "item": {
          "id": "2b4af9c6-2c6c-46bf-adbc-6005ef4b475a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0723a9d8-ab17-499b-a5bc-9d7c4e7df8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8f2e73-6db2-4cd9-96ac-e3eb56145b42",
        "cursor": {
          "ref": "a9cda478-4ada-4928-a6df-f921c679ca4d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "51c4210d-ff84-4499-a7f0-05999cb8a8f9"
        },
        "item": {
          "id": "df8f2e73-6db2-4cd9-96ac-e3eb56145b42",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "757a0c0f-a768-4fc9-ac06-b60a6c068d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4033885e-eee3-4b56-b523-0bb1b6c80c5c",
        "cursor": {
          "ref": "70b946bb-4ace-4d49-a090-18e4388dcfe6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d90a8d16-5796-4096-82d9-153fddfd87bb"
        },
        "item": {
          "id": "4033885e-eee3-4b56-b523-0bb1b6c80c5c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a13588c7-51f2-47ec-b71b-d547d8eb9ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e704d3-1f5d-4d6e-8f0a-c8f297b0fe1e",
        "cursor": {
          "ref": "f5b189fd-a13a-4c67-9501-223adf1e8ae8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cdc19e3b-3111-47ad-8ed2-010ee6f15394"
        },
        "item": {
          "id": "63e704d3-1f5d-4d6e-8f0a-c8f297b0fe1e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e2162033-afb1-4ef5-97a5-ef3d7d9c86ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c620931d-724d-4089-9d56-64158aee232d",
        "cursor": {
          "ref": "415e3293-f43f-41ef-85ce-4bffb85f80e1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0c546e7f-fcb3-4c9d-85f9-d1788250582d"
        },
        "item": {
          "id": "c620931d-724d-4089-9d56-64158aee232d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "15c412c9-e32d-4e9c-ad98-4fdbffcb0d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d945102c-9b21-4b49-bd59-d5fb8d8b72b1",
        "cursor": {
          "ref": "2e194506-408b-4727-afbf-c4cfe946ab6d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "db758cab-3a78-43ef-b95a-89d97123ca41"
        },
        "item": {
          "id": "d945102c-9b21-4b49-bd59-d5fb8d8b72b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f4e53641-7800-406b-8c80-7942cfdf9609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2575984c-bd61-4be9-a5e2-391329806ca3",
        "cursor": {
          "ref": "b8dbcfb0-2b73-4fa3-9ac9-2ea288643299",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0b9c515a-3010-4d6a-934f-2b055f7bc4c6"
        },
        "item": {
          "id": "2575984c-bd61-4be9-a5e2-391329806ca3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b3f7cf26-5380-4f86-b0eb-535d751b477f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70888391-ce7c-4511-a746-1c81641e5921",
        "cursor": {
          "ref": "3811c50a-13bb-44dc-9b46-01b7630bac81",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1a08cd01-4f9c-4bcf-ad26-675669f185c6"
        },
        "item": {
          "id": "70888391-ce7c-4511-a746-1c81641e5921",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "32f52f39-2d87-41bf-8bd4-722eec67b5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d009f108-f681-4ba3-bf1f-fbeaf8a0824a",
        "cursor": {
          "ref": "de60f6c2-7936-4dc3-a609-5d5f71d9f9bc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d3183f0a-d06c-45ac-a1cc-78b837512b19"
        },
        "item": {
          "id": "d009f108-f681-4ba3-bf1f-fbeaf8a0824a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4f44e183-751a-420f-8753-0eedf090d3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39af805-2008-4aa2-b66e-39ce7039dd1c",
        "cursor": {
          "ref": "c0fdd516-8e22-4c2b-9411-fb8a29523490",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c4fdd3d2-95c6-401b-b4da-87c4779976dd"
        },
        "item": {
          "id": "b39af805-2008-4aa2-b66e-39ce7039dd1c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0491ae3f-e1ad-43f9-8281-01a77b336dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad1f784-30fe-484b-aa89-458facae5feb",
        "cursor": {
          "ref": "973d3803-8d7d-4401-8d60-fc23e901a74d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "202104c1-fd26-41ab-8f6c-0b77c584a0ed"
        },
        "item": {
          "id": "0ad1f784-30fe-484b-aa89-458facae5feb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "59dcd732-bedf-4b08-864b-9097aa53d6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2039dd2-e90f-453c-ac8c-3d0c23fa9c31",
        "cursor": {
          "ref": "9f4b3ef1-9015-45dd-9223-ddeb0877fab4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3d99a4a8-2aff-44de-a129-e60ebb9dd9b9"
        },
        "item": {
          "id": "b2039dd2-e90f-453c-ac8c-3d0c23fa9c31",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cf9f2127-f77d-44fd-a89b-4ff31dc8ab83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5696b1-d5c8-441a-8f50-cba5039c065d",
        "cursor": {
          "ref": "7fb84614-1725-49a8-ae6d-0a77313a4e24",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "05fd4d48-7063-4738-a526-2c2d6bfe9431"
        },
        "item": {
          "id": "cc5696b1-d5c8-441a-8f50-cba5039c065d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "181cac60-9d5a-46f8-9334-8bd3ac7e512b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6b3fc5-ceb8-4970-8d45-a9f2b850e3f8",
        "cursor": {
          "ref": "3c045c99-93fa-4152-9ea5-99e63bc23ef7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7261314b-1181-49e9-b824-c17cbb3c64d1"
        },
        "item": {
          "id": "2f6b3fc5-ceb8-4970-8d45-a9f2b850e3f8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "841bc34d-f332-4a6c-b7a2-8d4559abec93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a8aa7c-eb4f-4a1e-bdc9-0b5eb9f8d56e",
        "cursor": {
          "ref": "c6a1e4a9-2610-4917-816e-e24cac2e0bf1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8f0680ce-49ad-4e66-a2f8-6a8d9da3e144"
        },
        "item": {
          "id": "36a8aa7c-eb4f-4a1e-bdc9-0b5eb9f8d56e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bbf1d20a-c832-4cf7-8640-0d5250de6040",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "04db3912-e942-4d00-84b0-4c0e1b867c92",
        "cursor": {
          "ref": "fe4ae8ef-7699-47b4-9797-478d0f878479",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "29af52a2-0b7e-4d4c-837a-dcd54fdfd990"
        },
        "item": {
          "id": "04db3912-e942-4d00-84b0-4c0e1b867c92",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8b05e64b-9b53-40ff-bfae-f43646ac7d80",
          "status": "OK",
          "code": 200,
          "responseTime": 2958,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea57ed6-dce9-4ce1-8771-19667140b41f",
        "cursor": {
          "ref": "6e492086-152b-4b8a-88bb-8300ba43c8a7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5106ff64-eeae-4eb3-a458-2ae7aa57bd16"
        },
        "item": {
          "id": "4ea57ed6-dce9-4ce1-8771-19667140b41f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a7038469-c251-4b73-85b8-15ea39cdcf04",
          "status": "OK",
          "code": 200,
          "responseTime": 2006,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdca021-cadc-4d8f-8eb8-32db43d20be9",
        "cursor": {
          "ref": "43b9a4c5-80ef-48a6-b9cb-7514e547a8cf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ce98972f-7668-4035-9679-f16b73d02c2f"
        },
        "item": {
          "id": "3fdca021-cadc-4d8f-8eb8-32db43d20be9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57372965-a20b-425f-8200-a0eddcaa9d44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdca021-cadc-4d8f-8eb8-32db43d20be9",
        "cursor": {
          "ref": "43b9a4c5-80ef-48a6-b9cb-7514e547a8cf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ce98972f-7668-4035-9679-f16b73d02c2f"
        },
        "item": {
          "id": "3fdca021-cadc-4d8f-8eb8-32db43d20be9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57372965-a20b-425f-8200-a0eddcaa9d44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a38c312-dafd-4c71-b2db-105eec18b824",
        "cursor": {
          "ref": "46c0df9e-8918-4983-99c9-f115aec77163",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c352cf75-f175-47de-9d43-591eb423a365"
        },
        "item": {
          "id": "7a38c312-dafd-4c71-b2db-105eec18b824",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fc77095a-bd24-4375-9380-b20cedbf551f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaa112e-fcb4-4d17-abfe-d1b52b17e4db",
        "cursor": {
          "ref": "d98b98d0-8f8e-4d98-a9fb-989153467dd4",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "06e49dfd-fc03-4bed-9b9c-2e8a5e5cba0e"
        },
        "item": {
          "id": "bdaa112e-fcb4-4d17-abfe-d1b52b17e4db",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26a64720-09db-4653-a0d7-7d52e63a5e0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}