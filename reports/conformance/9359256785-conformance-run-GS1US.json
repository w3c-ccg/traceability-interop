{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9bf5f4bf-153c-4c45-acc0-88e0e6044289",
        "name": "Clear Cache",
        "item": [
          {
            "id": "be6753b6-a558-46a5-94b9-a9a9d5023ef9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f9a7719-b815-4218-997c-f3db5287d1b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "02a5deed-96f0-4837-a7ea-0bec92ad140f"
                }
              }
            ]
          },
          {
            "id": "4684309c-6f38-461d-814b-8c2ec826ca5f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0209b5ae-0454-4ade-b1e1-8d7c5f59a1a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c569649-d814-48e3-9d26-0e145ff30b2c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0ae3b102-55a0-4ae0-b362-86fe4848d74f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a195aef-baf7-4256-bd74-0586910152b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66bec8a5-adcd-4810-bf32-81b1a74a1b2f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11561676-2a7c-43df-a261-d90833b6649f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcaadd86-ce73-482f-8ffd-90a51bfb97a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99f4fb14-26af-4ca6-9a2c-b825af943c74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f852c6ed-8386-4d12-8dda-105bec782ac1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8cc1ef81-61b3-4c47-8e9f-da21723d0fc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ec2cc43-d922-41b2-a409-6730222a6252"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f2a9816-f67b-426e-b309-30f5ae51ac52",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6aa24f56-4ef8-4924-8ce2-227a9b04c084"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a59e8ee9-74f6-4800-b45c-dadd62e86f3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd27bd86-2a70-46c6-a74b-d1ffac30074b"
            }
          }
        ]
      },
      {
        "id": "630c448f-ea34-4e31-839d-b143745b66c8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "073ba129-7a74-44c6-a272-7fed1fd95d09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c977a670-b764-4500-af41-7a7902705834",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9a5d118-45ec-490d-ad19-028e93d4997d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75dbe28-6ae7-4e8f-a169-a9b5941b0629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1c38ed3-6c99-4055-a468-167382610eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02168379-3cad-4e44-b78f-2e0cc968b4c4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75afc18e-b70f-4725-91ae-49e67c851c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e91e5ac4-a5bf-4d28-a404-5b4ad6f97e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fa17b3-3191-42ea-b812-5ef2154f939d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1bc761-aca6-4c75-a756-aee2acb42433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ed7b828-e9d9-48cd-aabe-d2aa06f84b76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f0129d9-3497-43e1-8eb3-3452dcbe5717",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "795b0703-5c46-4231-8e76-238308a32a4e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab54b095-7418-4297-b606-35b9c7067e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a9fc789-3012-4e4a-9685-22ecefa47066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4fb20c-fbb0-49f4-8442-d0354e89f32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3482f51e-35b7-4759-8687-4c180e83fb29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7fb59e0-e568-48b2-b83f-09da47f359b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0330ba10-88b9-4b0b-9f20-14f0c0a22451",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1cba2ef-118c-4ac4-83ec-72c563ec78bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b3976537-2395-4826-be24-5df46f256c37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "648adc02-2369-4219-9c55-3d64a6c3d164",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cf09e2b6-7116-43eb-a6bc-0975b98e85cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a652110-2c3c-4b42-af58-420fb50ed99d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d15b476b-f247-443a-b0eb-865dab728505"
            }
          }
        ]
      },
      {
        "id": "3fe08dad-2640-413d-b24f-796f79011d45",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2a5cddd1-c899-4e44-b26c-19d3cea4a8a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "100838a7-c977-456c-af9a-84c98e8c4d59",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2330ad68-dfbc-4b95-8439-7f6c8cc158b8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b6778e-44c8-413e-ad67-be0ea9616a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d416737-2e2c-404f-ad97-a56c8fcf7963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5e4711-0b4a-41db-985a-0ae6f99fe12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aa34fdd-fefa-402e-9118-8ebc400c1dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abba35c8-35ce-4af6-bdf4-d90c7860a2ff",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8988f399-bf33-4534-a9e0-057e100b4462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d641fd-42a0-45ea-8393-023d671495e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c584c9d5-4429-4f6c-b1ca-2b066cf095c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "872e90ce-24f2-40e6-89cb-7b966bd05ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb3eca1-57d4-4a84-9462-338b2c6776bb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4684add9-f4c8-4855-97f8-1034066fc48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ee65e2-c173-489f-9e58-e28812a0c1e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75baee98-3f89-49cb-bd03-c6702ea1c831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "160d00c6-62e5-4449-9ffb-cd16800994f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214426eb-8544-4e8f-ab70-498d7590ec10",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82afbba3-c4d4-4010-9c7d-1f7f4e114201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92cc520-9dca-4d8a-8474-513b2fc8376c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11be5ae-a03a-43c8-8f3c-0fd1d6c05eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e56db333-f90b-49c3-a6b2-e696d5a00ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516897bb-6181-4d20-93a8-e255c51e6e5b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bebdf31-dbdf-4cb1-9bc1-42ee55416937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ec731e-27b2-4fee-b0f3-55777fd40d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a9044f-39c5-4748-b06b-1145eb9dfbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc86891b-cece-4e4b-aa24-c609dd45ca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2740cd-d4fd-4a79-a435-53b5012239df",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5e086c-18aa-4d9f-b04a-355551e25670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b454b40-051e-4253-9c97-a6b828b49a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a9182e-5c8f-4393-9256-c74a0ecea656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c85778b4-1a93-4184-bd28-b86482e104e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3cac97-c7de-4f61-8948-c749ffe9005b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725a6360-7424-4c73-869f-77cf2c24f8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af26451-c6ed-4772-8715-712fdbb42ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915b05dc-65a9-450b-9d3f-417ca2af4f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a679247-b6a5-4995-a5a3-38d03e6ebfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2529dd17-16dd-40f6-9b17-5a7ab1ba9e46",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66fc929-1534-4949-b30d-ef399e6fcf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff2cd4e-3b7e-46f8-9ed5-062f06a7d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac281c4-a323-461d-b4e1-b02457501f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e9ef735-c10d-42a5-9731-9d1dcd471829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0571a4a3-ab68-47a6-b0d6-652c38ac1969",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc975b8-fcd0-4e72-b13f-75d489612987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce79c07-3683-41e8-b066-9b1172c380b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a1b483-9077-4d86-8a90-aae80c17eb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a7c3ca-87e0-4a49-b9f8-018025be776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf7a28-9a90-4f88-a4fd-307b66ee7a14",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e4971d-6574-44eb-a20c-26717ca2385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa9c6ee-72a1-4228-9fc5-7869e72f0240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f054725a-191c-41f8-ab42-e76d930498b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf43cddd-6bc7-43bc-b5e0-55222fdbff63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56718927-02f0-49f2-814b-1637397e3b1a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8a470f-8a63-43ad-8079-531b9b265881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3a1bb4-afbf-4302-bd52-602a0bc60678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1193710d-2d12-4db4-99f5-005afba0fa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c641da1b-542f-4f4f-94e3-7f31d140dfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f691483-bd4a-44c1-8327-2ecc26002370",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3884dbd-58e7-4bc2-905c-3579127499ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc61617-84f1-4e5b-a4f0-18f0e73a4112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb30f42-dc0e-4ce1-be8f-88e91dc72693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d79f7c17-42c0-4cc1-bfd3-fe999e25e0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df10ea24-f09c-4a8b-93f5-cd9185441951",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2019be-a9af-4e30-837d-dfc53c5f002d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbc9e43-b2b1-41f7-95fd-17a32b0c1065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cb2e4a-767f-471d-9007-6ea047117252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1080e5f1-9564-410b-8688-5d3ca3422d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ad0286-4297-4646-9482-a339a598d11e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e991d727-b2dd-47b4-a638-7ba89b3f2f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0349bc1-8408-428c-acd7-7e2f94d2dfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5186e33e-73ea-4f97-a8e5-c7aa6c81362e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd5ea720-39c4-40a1-afbc-8c531e6b1621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b4116-506a-496a-991a-f44942f5b5ed",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd4a41a-0522-466e-a829-e2860efbb12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bce1f6d-4cb0-49ed-abbd-f14b87049c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372ae5c4-d722-4335-bf4b-19d93c4e103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44ab3900-ee48-4a1a-b245-1c9f857383ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090249b3-153d-4ebd-96f5-5682d8e9b1e0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b349f946-e345-4e18-869c-762cdffeef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae52b3c-1181-4083-8263-5687e380896c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab13ab9-00b8-4a6e-9865-6ca473749467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e1340b3-22ec-4c7c-8292-058c9f5164e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae07750-d029-45da-a9ee-7bb280c76cd3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb649c6-9f7d-46cb-ad95-14fc9f4845cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ec5fab-a76c-4b3f-a786-f38821ceb569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f339ef5-f9d0-406c-9b0d-62fbf2c29d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48bd881a-85b4-452f-8e47-8108a43976c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1022c18c-0f49-48e8-a8e1-7643a165dfb9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54744c-75af-4081-bb5b-110c35bb55f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bc7d66-925f-4e33-bafe-cfc0f0a2b03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a928945-f140-47ea-a016-039f4dfeb9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1222b10a-840f-44e3-9de4-3017dda7cdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acac45aa-7deb-4ff8-98bb-081fc88134e6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738d8a92-fba2-4883-afa9-8a8ac1579cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39596328-6146-44f0-ba2a-979217366af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ac1b39-50e6-4361-af4e-a0b6eed17f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "215c2c6a-bb71-4411-aa84-968ac88d13ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64afd898-b594-44cb-9721-e65d4b6aefaf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674b2377-08b4-47ad-8609-3e05c63576a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7693861-506f-47db-a606-e180601fd2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afc8db5-91a8-44c0-8085-6bc4baaeb644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92823ecc-e24d-4f37-a437-1e0d87772272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039d4d59-5892-4e16-81e7-4ddfc84aaa02",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ffef67-d71d-4d84-9d69-52efd0e88d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435be690-b3f2-482c-ad96-8eeeee3dac8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0199b449-b488-4363-937c-5cc787fd3773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "246b6fb3-c456-46d8-8b46-8308b7fafcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a17c7e9-b792-4a38-9717-e07cc930da4f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a13bb2-e445-4827-87fd-f37629f5174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dc85a9-4cee-47d0-85d2-dd9c92fd5927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bb9cba-30ce-4997-975f-bec1c5de1300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff89195a-c089-4b91-8cdf-d045d77f849f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d898bb-06a8-48aa-b2c7-736f62643e42",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06aacca-eb34-47c9-8851-515ca5d9e846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8701ddae-5561-4707-9e66-a15a47642c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faac38de-95f3-4bb2-beee-56a2c7f3969e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03911757-4e4e-4b4c-af7e-d40bb78dd83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088a5b8b-086e-46cd-96c4-e57d95b0b9f3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dabf98-64aa-4453-9df8-b0501cc3b02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554c735c-7cdd-4b51-8522-bc6308c7fca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e74a005-04ba-4bca-ac81-09c89e23be0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5faad9c6-77d7-4dc4-8f64-c96e32e9eb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e205fac-95a7-420a-b8d0-273b69d83a3a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c801c4fb-3b65-4fa2-bdcb-51f9cb30f225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f5b351-e572-46b6-b3d3-d6f50694b690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899ddc28-bab5-4892-95ed-cbb560047098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "571524e2-3bf3-476e-9e17-99a136c91caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29c8850-31c4-48d5-9b3f-35cefca8a8b0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f3b4d5-fd15-4aaf-a60f-b75e11d918bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414c7756-c52f-4604-9c45-d88d0f237eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500ada68-de8f-4074-aa45-34fd639543cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a04ec8eb-9fcb-40e9-9aa4-c6adcd3312ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077654fe-07ae-4ec7-8510-23fdaaf12ac7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faa81e8-0ce0-4cb0-8123-df3b3e1fa1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ce8c96-a354-43cb-ab7e-ecd1b76432e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c43da5-bf0e-4b23-879f-c6b9aaa17310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71ed949-c532-4531-9e1b-9d4e1ca6d35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac45464-cfb0-4cc5-8e71-58887d277978",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63ba173-bd19-4649-9f67-005a8cb13337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a36f43-ce42-441d-a459-92e60c62a424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a16228-b1dd-44e9-8a75-8b51b13e902c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1613ffbe-41c7-4805-a4ae-75c2e91dc560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b144cc7-11e8-43b3-a42a-6f6b0d891320",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c87728a-6f1e-43f8-92e4-cfaf1a287292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64915588-cad5-44dd-8738-a9ec84891e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d2646f-f840-4d57-8b8d-8ee04541e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ee8e34-856d-4183-9501-52c34c1cbef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec477eb8-224e-4cae-9e87-7b1e072a5529",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b4f6bd-01ad-4bb4-8369-90650d2a759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f691cd44-865a-4563-96c4-e100147cfd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a56a11e-1f89-44af-9c03-65195350b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "78fb9b29-6534-415f-8cb9-844a89ae32b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a833f620-06e5-4996-b269-c89d9c4e55dc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeded9a5-a218-4753-aa59-ca9452840dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dfb27a-439d-4af0-91ac-53f799faf5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6076543-85d0-40bd-85f3-1c6a462b0719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a477b2-a15b-4242-8163-e1d32f6271ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0a0f24-03ad-4331-a038-4c04717a2089",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e17628c-e3e5-4abd-86f4-388862bb35d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37167e3-308a-480e-9fc8-56549381a1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d424087b-259b-4daa-9f94-4d6c6d12f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23fcee7-9618-4162-bd88-4601a38b7eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b211f9a5-0fb1-42c0-aa02-966109dceb86",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3bb540-f2c8-47e7-9525-fa9651ea829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ade8b00-cdf3-43e2-ad31-9db895457f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2b557c-68df-4080-b419-0b469c3bd55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62068c6e-c167-409a-a2b1-5f06a9927d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2761c4c0-5efd-4d35-84dc-c9891092997e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9166d358-e0aa-4212-852c-8f7f43cb857a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d8097a-3c61-4ced-b53c-0465a3a963b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b6169e-ed76-49ba-9a0e-b7af4c06e263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fd549d-f384-42e7-81a2-3f76c9f3bf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0cd771-57ed-4283-898d-f46f41b91eab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555c4e1d-c4a4-4e0b-baf0-3b57c421bca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6740feb-0366-4e5c-b539-07d7ccf9e575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ea1d3f-d76b-4eeb-8db8-d87504411931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7ee21c-6ef0-4cdd-980b-7bd5705c6883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f15b09b-d471-439f-a280-23e7da6e14dd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9defde-763c-4887-86b3-936a73f87eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75ea2320-c0a6-4774-bb83-b100d97b90a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93772282-5f8f-4b8d-bca1-980373fc79c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e725c648-54de-4e70-ae4b-2d671eb84f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e39e16-520e-409b-8b91-ed5c60e19e82",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a00399-a46c-452f-8e40-7c6d34755397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d11e99-a0fe-4da2-b873-9ed9e6c7ece4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799e8150-ee25-42cc-9a41-e85e05db5a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86689dd2-0e78-400e-aa62-f00c06436714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee0425b-dcf4-4fcd-8c18-95c6a4465e91",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57e4f73-a91b-430e-8521-6be96ddfccda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfd2322-de96-4050-b524-b2615e6e0137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b668c0c-e841-4482-8b17-237764ee44c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df44dff3-fd7a-460f-a0a5-b074dd5aa2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65426419-10c2-4dd5-b223-bd1104ca8365",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e677e2-03f2-407b-89bc-de41ab2a503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f87f213-4e71-4e92-b30c-b83621c20ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f98c1b3-af56-4d12-8d65-34e1c366960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5186dc01-3dd1-4ae1-b30a-ea11e23fad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df12be93-8eb6-4430-a25f-347197470e4e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1425c6cb-3544-4147-8af5-4a1b8434e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957d8dc4-ca00-48a0-9fe0-b2795dbaecad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b541928c-8358-4377-8c28-eff5469c130d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "470b556f-18a7-4422-95e2-af5dc3dc082b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebea2b9-68d9-4978-b498-6200d8fce19b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d107618f-2600-4298-b10a-5ab9f917b68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36271db-3b16-43ac-8e1d-6552323f2873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab87fb34-58a8-4361-a5bf-81c6cdedf868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "47c90565-0f7b-4b7a-98ab-a534ba8f95a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bceb8f-a13f-4d86-922f-4610f3433d54",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134fed3e-153d-4701-8140-79143957c948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170dd827-3a40-413a-b4b1-0100edab2eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0050fc-ff30-43ff-9d49-4a5c435f0d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1868da-64d5-473f-93f4-de9be1fcebdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fc2055-9c62-4cd1-8135-71849967b0f7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c6411d-9a93-49ab-b3fc-c92570f5f84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4753539-03ce-4583-be84-7907aa94b218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d85cc2-bede-4da8-a65c-72280050cf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0244e2d4-a788-4515-a3db-5d2148eccfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6b51ae-c784-46ad-b091-208e619cdff2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74473d65-bada-4a9b-87cd-703974121f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adf9e68-7eae-4ea6-bfab-0ab071cfd003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0650f7b7-5d71-497e-be31-e7e6998ddf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd0ae0c-daff-4b1a-8454-811af73fa1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368e8f2b-1bcb-4ca3-8cfe-9f564dfb7117",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a13be89-fc7d-46b4-8b19-279f16613707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e763f1-46bc-43c8-8c2d-84a5908e672f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7a692f-9582-4afd-ae0a-30fdf7f1ebb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a809b6c2-21be-49a6-8a0e-30d5e9f61202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6186e900-8524-4619-a3f9-aac152e65244",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36e4b83-5111-4788-8159-9220d143cf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56d9666-3c18-482d-98ac-c9f1e5b49ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea149bf2-9b32-4c7d-8e42-724d7126e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebcf7d2-7a9a-4691-8566-3fcdfe57336e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3bc8da-5b07-4e98-8169-a0b9959aa446",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf65d0cd-e437-4795-b430-641b7c539b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23561237-60b5-4b2f-857c-1fb63a1cfea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d545d00-3a6d-47b1-b843-8f11407b6146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42786ce4-8012-459f-88ec-785b4f3259a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594df6e4-9a77-44af-8487-60c8c7dc73ae",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8b7f3e-a1e7-4925-98e2-b07ef0861e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eebfd85-bdb9-403f-97bd-552e65fe6925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32080822-8fc5-4c8a-945c-b297fcec7c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53913af1-bacc-4f44-aceb-db7e8f2464ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a53bd5-3191-4e2c-982a-4e42f46b106b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360cb900-361d-40b2-a8fc-b86c692cd2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d3e743-6ab7-44ac-93f9-20c56f744e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8449e3c0-7be9-4a1b-902a-fa5a36a278f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "140b75ba-c7f7-47f6-9259-778d38a0a0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7226133b-7c0b-4436-91e5-7817ea4ab5fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ee75ef-ef03-4f35-88c2-207bd1eb7b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7719a7bf-0949-42a7-9402-cf275216b0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfb6919-7262-459d-b77c-01c1b6ca7c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "311a734c-f284-47ff-af88-67930604cb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4735022-dfb5-46d9-9147-873ff1057710",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dfd3bd-3490-4b54-9bd8-7eedec4875c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f551f2b1-12a6-439b-8053-583a16c18dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6bc4d9-3bff-4585-8110-053653d4a21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8af3562-db64-4e27-9ee0-dd8e242d7b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4dcb78-934f-4d90-9471-bc13b22e07ef",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d93755-7571-48dd-be83-0917687b8310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b9a2cf-d627-4e57-97c5-3c8b10ac265c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc37e85-d402-4385-b615-0fad43481654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43931ed9-ba79-401d-9ce2-383a07e89b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d160c608-c01f-4c34-ad7a-817659e91549",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c458ebf-b089-4b11-b097-11254e0f453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e53317-3a36-4e42-be3b-1a83dd7d8a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ab56d3-e4c6-48d5-9c98-3a8e61714df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8eae33-8ea0-4f37-bdd5-d0d40a3374c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f49cc2-22a1-471c-9eaf-98e02e53cc9d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6590def-a5e1-46a5-8c83-c426ba4eeff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4e3155-2d7b-4ed7-8bee-9e4b3681df1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c42768-a6b1-4988-87cb-f107fda0119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c446ec-9b24-47cb-b61c-3a2a7c2795b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d46861-e598-4741-9a42-c714b9ec6b83",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319c9395-ec8c-42f2-aa9e-0e7db08cee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33293830-e553-4b63-93da-8898527739e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf44c40-58e3-4ec5-9457-d7c40e6328bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ede5c445-13ee-4aea-9392-e679d726c3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9620915-36e6-4311-98db-013f2087437b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1980d5a0-0f0c-4102-9bbf-814abbbb1c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2465438c-f96d-49bc-a377-b55d6ebe7f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb0cfaa-121a-401d-ab4f-9eba9d5f6ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "16216928-e38f-4e8c-807f-8fe5c659b0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea95030-933a-4575-8770-1092e0e11d0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfe6acd-7101-4639-b29d-4305d78346da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd0be1a-c599-4420-ba4a-460ec63cb345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d6c36e-1610-4049-af09-7eb97c6ff4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8838a508-17e9-42b4-a607-816fd40f6ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f439c52-c302-412c-a8d3-5b80646fbc6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387c794b-116f-45e9-93d1-28ac402d98cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52097c1-c66d-4ef6-ba0d-f6be4b3e1ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95d8f21-77ea-431d-9d7f-9f82bf2d0c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56f493d8-7c18-486f-ac35-2a8a4d29a641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5729124-d8b5-4f26-9341-6daf2b1e864c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce09f29-8c56-49e5-9a48-a53a3748e003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d6e96c-83e9-4de1-82d2-fdd94ad734f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38c2d1e-7edc-4a1c-9fb7-5428fb932e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a02d57-2a57-4114-bbfb-711590b40717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ce516c-df52-4dd9-9a77-d52d2d0f0857",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790358ee-92a8-4f80-92f9-e0d0735f92ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a59ff2a-b5aa-4024-8378-b4b77358ae68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17290400-2d91-4621-acec-3a9ff047c97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42d034e7-ad65-46b9-be54-1557063b60e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b284e-4074-4cd1-9be9-3c2d6f00de76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abd816c-12ea-4ca5-b60e-ca6ac976a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55a63e2-a45d-403e-a87a-a78e425e61c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472ac97e-5b49-4eeb-855f-dac630b79879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b908bcc-7fde-4a0d-b7c3-e115512f3b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54624768-c075-44d1-a8e1-f357fde22113",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39867c9e-8b66-4743-a664-b5fbf44399dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c14f20-74d1-4e39-bbb9-4737bebda35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa52d598-b185-42e2-a153-b66e64dc5b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b807697-63f0-4a5b-ab80-e5b551d30e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bc2458-f389-4d5f-90ba-93c623118d38",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e558d8-3e5d-4d2d-b453-3b649170b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bc5490-ceae-404d-ac5b-3f6bc153bd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06071019-5d1f-46c2-82c1-fa0153ffdaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "06380800-cba2-49c4-9d01-6107b91d9e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0818be3d-b765-4313-ae97-8566858c704d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b8ec59-6a65-4e2f-8d6a-81013148534f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf516fe-5dfa-4a87-9429-a4b82ab5d4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d66484-deae-4b69-93c1-30fec0a1d019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b91b4e8-4aa0-4377-b175-377fa02c511e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784870b7-0a08-453e-9f04-700df397ecd0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e2da9d-f558-4113-831f-a197d2467826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1722c0ac-b5ca-4506-8cea-cf73feadae41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5d36bd-28a7-4417-ad71-541236144c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88908da4-8b4d-45e1-b655-41f9c735e66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aaf844-36f8-4c9b-8ed9-7e5b270d993c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebad63d8-e5a5-4106-900c-7594febc5402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4a8a9d-6583-4c1b-aef1-0d0da8d07dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa06c5c7-f1a1-40c8-a82c-6e899dc3b551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20a852b-e3ca-4650-a88a-b0e12b36346e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8166eff-5ec0-49a3-8efb-b37f2604c708",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5426c030-8fec-4f3f-9351-84637aaaed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968351d8-cfba-42e2-b059-937dfb3c2fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402b71d8-c955-4b2a-b1eb-59598881c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91788921-5cca-4849-8db2-ad0c5f8b73b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d15138-5bd5-4b9d-ac29-8014730c3677",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90cea9-6595-4f21-a46e-6382c773a58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481a2f85-ec64-4b31-a9d0-1356f5cef1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca93dfad-b984-4182-9687-7c235b7dc204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2542ba-2284-4545-b49e-dd5c612064f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b6ea65-2e36-4639-855b-62d06ca9690c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb29850f-d800-4c60-b9f5-82483064f0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bcc76e-2307-4b9d-94b2-350c64f5d5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4c7287-c513-41f3-854d-db480f0a2c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c349643-e8b3-42be-891e-79c8448f4de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a068439-11c4-47cc-b5b6-d419b4ec2859",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40718939-e59a-446e-b63d-f646763fec47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb2f3a7-9261-4403-b408-d49c528e2ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8b9f05-a73a-4ff3-9f3c-ace18e0fb22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9310da58-6910-4dec-8971-f17eb2a4bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ba1743-e9ea-4b76-a449-28f7bbcf2a3d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b526512-47e7-4077-abd3-6c2d14becaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784be9a4-db8c-4f45-9992-033a7a9c66b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a242a4-e72d-420c-add5-0b2f915ce598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb04bea-a6ad-42e9-be83-9267138cebe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c971b33a-3b84-4125-b73a-a1ba4118f02f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13102049-7f87-4968-9d0c-c57d68b370be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68576b0b-d617-4567-b3fe-9cc2dfa1f92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06c1c06-df22-405a-8f94-f452a62a9725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e0bf92-93e6-430c-aa64-6ac950293fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0a4838-3d74-42c5-b7d6-bdc0fd547847",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c6d485-5722-471c-a122-81e74bac398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cc86ae-642a-4ddb-a383-fc09b4bc0945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8554c05-7ee9-4302-bdd5-7bacb5417e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f92db86-a539-4cc9-a01b-d73ba5fece76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17adda6-504a-4785-b608-db8270b1ef4a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1955aa34-e700-45f8-8208-eafcd5d05567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750fba11-9bd3-4359-9638-e9bbd752426c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db52b266-9073-4409-8d7e-b1a9dd721ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28ee7d63-0a0e-4661-a199-67153fbeb6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baf29c5-1e4b-40ee-a1fd-a44e75ee56aa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae0e515-f250-4053-8f61-531640f40e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa991bc0-a53f-4c5b-b032-fef7ce000add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fba81c5-b6f0-4706-b875-c3f3f9d70e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1c01a7-5c24-439a-8799-535795afd5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035d9b87-d022-46ad-ac02-864dad8b43c4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1654415e-e633-4fff-bea5-47d5a054cfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d72dfc-eba9-4f5c-b34e-97427b07c166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b83066-fc5e-4864-b793-5098115e2638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e0f410-2651-4991-94d4-8db6c98e6ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f7580a-8545-4dc5-a571-c4d42706bd54",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5833e5-1632-46e1-9fe2-52008d64bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ffd9a0-0be4-4286-b5d3-b5b8ef180828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bade86d0-8f1e-4130-967c-a797933f2d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e41c0b-f2a2-40b2-9747-e19fc28b7ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31ebfff-6824-4919-97ae-efcd3cd5492d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcf6f5b-83b9-43a4-a7b8-65b425db402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35548a2c-5ce8-4014-aceb-a7f7acd41081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aaa551-8e17-4156-a0ac-f52b27ddc2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faea9056-5e81-4866-8864-5821d3b7e7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee73478-4aba-4e47-879e-925ee369dd2a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44190f4f-81de-4b4f-b0eb-ff772452660a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec04a18-2505-4794-94fe-22cc2efc2020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a35a11-e090-46d5-8453-6db80c7ebfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba90dc0-83eb-4a0b-995f-785c1d7f6e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610bd701-ae73-42a9-a0a5-ea65ff947198",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315ccf10-db10-4dc2-8285-28a841b30c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2568354d-35ff-427b-a256-fbdcbb017b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce301d9-e91f-48af-b713-e3819e7e32da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2269ccb5-7637-4688-af7c-27158d056d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0792da-5f55-454a-9cfc-ac633fa6d73e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586e87de-8b10-4f76-9046-2e7ce999ae1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8320e360-c9cd-4bf1-ae72-8a99a7a9a907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e497a8-0c27-4b94-b151-e5efa74776e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5ee63d-ec7f-4c4f-87dd-bce746ddeec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eb09e6-23cf-4155-9e28-d1dbf1e1af56",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032d9e43-2f67-4033-95d2-6ab0f333c566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f8fd13-f03b-4bce-afa6-33164473569e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff02278-227b-41df-847b-eeb9711f3ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "665b24d5-f4da-405a-82b9-b8415fdd6dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3bb09a-b294-484b-980e-31ba34636cf6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87890e3-cdd2-4f94-b95d-ab2e1c2ff3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cddfa9-f052-4905-a393-4a902e616e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb1e444-fd57-41cb-9060-8dfad2044b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c1ba60-89bc-46ef-bf97-67abfc49ca5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3659d622-0810-482d-a111-8fb10bf2c0f1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67ad4f7-4087-45d7-ae05-48ad10e7f942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b2011f-3acb-469e-a84c-1a5edbd7cf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90189d5-40c4-438f-84c1-50353cb9d7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd090cd6-b8c3-47fa-aa95-8de23707720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38e876b-7717-47eb-8c70-be6659a85ca6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1a5005-69a2-4a26-be06-255353550584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0c4b00-aead-4aba-ab5a-f61f563b2734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92e16fe-37b0-4c2f-9a98-b7ddace6c981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b09362df-6547-4563-88dd-4ebf2658e744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520163b8-d9c0-45b9-9f4f-234933648c4c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e849a87-5364-4011-88c3-b81ed1c44adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890dc4b0-ab5b-4ab7-838c-da1177d684be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c65bbca-157c-4966-9044-f24fbc37c9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "508cf8ad-4c51-4731-a3d6-9c4062cbd6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0e4f26-ada7-48ae-9892-4eeb1237995c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e687c16-8842-463b-93b4-0ec8cdd0a89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b979f7c-fc4b-475e-af45-97684c06b2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4321239f-f25c-445f-9ad3-a579ff60a66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d14609-ba31-4a10-9c6e-5e0529c6edcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc94dfa2-2816-4da2-912f-66d7a78f3e34",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e50d89-c8a7-4e10-b7dc-f8e6a8c30d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da31c984-0b02-48fa-8502-dfe3681054c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c42bc97-e112-4f74-b7d9-0b925019eb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68895793-58d3-4f02-b4c7-03849ed42f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc450e9b-d36a-4553-8d1d-e0959c1fc9f2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eef78b2-150d-4392-93e1-223996695cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ee6fbd-f1cb-4152-b888-c86ed6deba0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5f059c-587e-4d5a-9eaf-fe7f441ce416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f82a3974-80d3-4961-b23a-d929383da8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc980f34-98e8-471f-8343-7efce85bc36a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897576e8-d479-4a99-9810-adcf43443979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235c67ef-ec25-4ba4-a960-3d72b231af1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e6685c-aafd-4028-b76e-f01c4eec77b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3d366f-2cae-4e95-af85-5130e06afcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f45a30-8ca9-4aa5-b553-a33f4ec52e7c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5b887f-4b7b-4dbd-b126-8ad2d468ef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052e0e5a-db9d-4d12-8459-72c07f110268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b49030-bff2-4022-8d8b-9e16655c64c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b63d6dc1-5494-41a0-8530-473d7f1b5b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca28fd0f-14d2-4b77-8cd6-e83f7e9b5e9f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fc7551-c3a0-4181-9c22-ac966d90cae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1bf6760-69d0-4a5b-99f1-3f793cb2b86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece2bb65-6dac-4be7-9dc8-125f069b86de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b241d8-d476-4bfb-bb6f-e9e12019402d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ada6f026-5f7b-4297-9c14-247eb166a184",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b42974a-e458-4452-b510-9a7f30e9d00a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4c9ca3-c1be-4c12-9a58-b2d0327582dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f15a4fb0-5328-4ac7-bc88-337af463bb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146b8308-e4a5-4909-aa32-bcfe036b4fc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cffbaa74-f8ef-4e23-8d88-8a2a1941b9d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28644bcc-2859-416f-a897-cf21a9f7cb15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "727df131-7f41-47c3-b4af-c732753ba959"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00623540-a027-48fb-a465-716a40b70f8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d015d9a3-04df-44e7-b711-19ec8b5ccd46"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "842fe7b3-e1e6-4072-a0b3-920401e54e84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db470512-bde9-404a-91a6-bf00f42cf7c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "330234cd-36f1-4f19-bec1-571f7488a0ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a548bc26-76e8-4650-a28f-b322c79a4e73"
                }
              }
            ]
          },
          {
            "id": "bc091244-52c0-40a8-825a-9a2693ffed7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e656bde-d632-45dc-ab7e-b37bcc6de05e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b695e40c-1c7f-4e15-b707-1c7599839bdd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbff48c-1226-4c0b-aa65-cf15f78f9451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "558efd42-abb5-4c8d-80a6-9e8b303b5a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf761df2-79d3-4714-b380-f8df2aed7977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d3e898-43da-44e1-b178-5b969a4fb280"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "548bfad0-9f9e-4a33-85fe-2122b839f1c3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "daad3607-1658-4904-882e-8b0c940dd97f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f842fac5-ebd9-446b-92fd-3c0f290acb03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c413738-8a8f-4ecd-a58f-83659f8df3d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e3dc0c6-0641-4c81-b993-14043b733524"
                    }
                  }
                ]
              },
              {
                "id": "6053c9b3-978e-4344-ba91-840f0f9fac8e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10ca9509-5b70-4965-873c-69a7374fbc2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32733f95-d349-43b9-8567-919098a3c502"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17cf31fd-4467-4619-8686-1c3805f597ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1c156e93-1176-427e-aa08-32ddcf7803b0"
                    }
                  }
                ]
              },
              {
                "id": "85848d6c-29b6-40c1-a585-b690e5544eb3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f246d77-54d3-4ba2-a642-92f881d90e4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c0dcb80-68d8-4aa0-997b-fef13dbbf882"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "072c1067-b0e6-4afa-b79a-4b3a19430f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f7878a8b-01b9-4df6-8c1e-6abf5da56e3e"
                    }
                  }
                ]
              },
              {
                "id": "730675fe-4a02-4ef4-9144-11129d3ab9a3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "399fffe5-df0a-433e-a348-36fd9b29067d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e779223-bef0-4fe0-8e25-0ddc5e9f76d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee2470dd-9b93-4709-a031-e4691e57dbd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6c71a15c-192d-403f-8b3b-c0cdffc29020"
                    }
                  }
                ]
              },
              {
                "id": "3e0ffd3c-bfa8-43c5-8cee-1cd1d2f5dfcb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3835d8f8-9a52-47c2-87d9-b0cea9cf076a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b741ca1b-79be-4920-99d6-b052755c407c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18860b5d-14e5-4a6b-ad7d-254219875450",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6e314faf-da02-468c-a59b-09ea51c76b4b"
                    }
                  }
                ]
              },
              {
                "id": "1ee6ccdd-811c-429d-ba5a-66d80bb60674",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a319f8-38c9-4d25-8a9b-0ee8d8c1474e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c05bfd4-1dca-4f41-b850-bf3bcc108932"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d69e26d1-de6c-44d9-8a90-a4dea42e8af5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9a55c4b-8ade-4bdd-9e5f-09df11a6d3f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1516051-d618-4b5b-a77c-d0925a3fef47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a38ce39-087d-46ff-ba28-d2a177cc0a47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a378e907-59b3-4d8b-92e8-34d1e0d55044",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fafe3169-22f8-494a-98c6-e04718f4042c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8dbf255-8d0f-4256-b402-5c0d2a41213e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bb53df65-060f-4582-ad55-26cfead6774f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fe8497e-e263-49ff-b609-77568a617573",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4710d55-b1d3-4215-ac60-55836a47e6fc"
            }
          }
        ]
      },
      {
        "id": "5da3abe8-555e-4dd6-9153-fe0c99839f0e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "66167e57-7628-42a8-b041-115e89b08a3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13023a37-0047-439a-871d-f8949f350022",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11373ca5-3602-41b0-a2c1-c6df2fbf2316",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad13a2b-f63f-414e-b4b3-7e17f94f56e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253fb0e2-f9bc-4389-98dd-4762cd0571e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56c9136-7a23-46e0-9148-7b9e85a08a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b0c981-9089-4e5f-ba8a-bb3c38549b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad345ed-26be-42be-b825-555a96f4905d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f269cb3f-a6a5-4b72-a1e3-0d4daa293357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b91b0c3-2715-4dc3-bf80-a08f1df9074d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ffac1a-fbec-4ea2-9b30-1f2667520b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6d69b6-9e32-4ab7-8fa5-2e506cbce6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87cb1ef-6763-456f-aff0-51921ba86f42",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535ad936-a5ba-4421-bf56-21524dc23cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d101a416-cf67-46f0-b7db-0806bda1c22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d6230d-f531-4046-a9d3-728264e48875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c847bd1b-fced-4bb3-a96b-75370cb13d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8f4b7e-493e-4665-b125-39b3ba86ab48",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41151d84-b4f9-4eee-aef4-85ff2b7f21f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2346a4a-6d83-4eff-8f36-ce9d1e719be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a25a654-9d44-4582-91ec-6c35fd38b033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "720448a1-b51a-4047-a1a1-b06d4342c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721a1159-6670-466b-80f6-b3512d0b186a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1549b991-1308-461e-860f-56de6e2c65e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d441381-b73c-4edf-ab13-3901e73638cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e0a4a3-576a-44cf-8e9a-1f3f671891a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c92f62-c2bd-49d6-b44f-d7e4f91c107b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446549c9-c5f5-4417-a2da-ae57e2ee9a4f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4692a5e-ff1e-4d3b-8027-6fa812467f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38b5bd5-4172-485d-8987-61647bc74043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03151c05-71aa-4dec-aa9f-5d2ddaf4f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b461b30b-5631-47ca-91c2-67cefecd97db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec64342-6afd-488f-b981-805a07d51c3d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25a91d6-c97f-484f-9101-f0f4c6b8a165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979b2d26-a6c9-4cf3-ac9f-acd09bfd1fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dc2d45-831f-4bb1-aaa8-2e083d98c7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da70e69-1865-49cb-bfd0-108d4b72584d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9300e736-a3a1-4090-aab0-c32e841c2e6e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cb699e-30d0-4b79-854d-0c8bd6c3b0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1325691e-3720-4e2b-b4b8-097ebc6d0861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df23d06-0563-459c-a2de-a2a109605e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a834a4a4-9325-406d-80bc-86244ad38f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1689aa-b5a2-4a4f-86ee-2c90b06f4d84",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2239d8-e7ab-4b57-a059-3c9073ac8a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fccd29b-a5ea-4128-a7e5-d1aa2f5c2f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66dfabf-5b26-43a5-89a6-2f3fd97f412e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9822f4df-0d1c-4cd2-becc-87267c09d87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f5e2ba-2faa-4fa3-812a-c79734713ab5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c70a46-7f9a-4d1d-8315-613db608cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3217c4-efec-4e3f-9403-545041564c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6752256-b9bd-4bdf-ade5-b990f33e9776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "664ed0ef-4ae3-4400-936b-9e2668fbc101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53508e2c-2713-4f4f-b191-2cbc8f1dccec",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e3a7c5-05f8-4db4-acc0-8366cd383c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e78148-d0c0-4858-b1dc-9012fa5854e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64a660d-4c58-4bbd-9ce9-e64fb33ee841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b229682b-cf4d-4ce3-86fb-607fdb3575a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df48351-090e-4dae-bdc5-38eb5ac6a83c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9011bc0-418b-4ea5-9d07-976546de824d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85273f8-142d-41af-a454-862af985355c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc4d98d-11c0-43fb-9ffa-4b8cdaf66ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e20db273-8670-4e15-bc12-34b4009ac8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc39fc60-291d-4d53-8eac-a0e1dfda27eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fda2300-5d97-4bf0-8f27-0622f33c62a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1296237-eb05-407d-a76b-ca1816ef4bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3ee165-1ad9-44aa-91a1-814a0088da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85216aa-ef4f-49f4-a218-d4399500a8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539289a3-f6f2-441c-bbaf-8304f4ce3519",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b4c828-7229-422f-a80e-c16a248d9257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af92556-9ee4-4bd6-8d14-e79b14e68345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feee859a-d269-4a4d-bcd6-34de6537e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef55bd5d-bb4a-4949-a57b-f1b9b4c9e644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4298b3a-5f7e-48d1-b4ab-50c0c6297af6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717b9e33-8c8a-44c4-865b-6af63dee807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5746cb-8c0e-4ceb-978c-ec3eadd33aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5bc5a4-6f5b-4f46-b132-f126667520b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "542b8b85-ae27-4c4e-886d-c6e4a3e9b356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503fa399-3b61-4752-8bf8-865664fa6bb5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a36d8e-f4f3-4e74-b3f7-e01419c3685b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabe72ca-4dac-4714-85fe-920c04385fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52def551-e5f4-46cc-92d7-8a13cc6ecc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "512d7465-2b15-4b7c-9062-690e72d0e638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db64c91-8fba-4fa2-9140-93cbb4e3f8ed",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2542f921-727b-4d42-8e00-6ff8f0cf4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378ea4f5-18bd-4800-8f55-502061d65bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ac5d6e-eee7-44c2-bb62-54a1f65f0659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "26dd8e0b-ae09-4f62-b081-bcb2ce46b4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de31e46-2a92-4a64-9b51-45c1147ff7f5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7899396d-958a-4058-b2f4-5e3800be3329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6da41cc-d88d-4eb6-8180-a093d32e400c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b93b16b-c7be-49a4-ba1b-89a5daa01cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd8f95c-cd87-4278-b858-c60dfc3585fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51ec6a6-f38c-4a07-b9d8-6b8d03419ee5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f11ac2f-c3aa-488d-8907-213f31ac7693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e697636-bf95-4dfa-b481-e4cda5655aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef65add-ea9b-436b-81c5-b1ada5a659d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abdc258-39ae-4573-9241-7c8bc106a994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0244af8-c2c5-4e03-99f3-0e154fac2e7c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63db8c43-216a-4435-8a5f-9a8510b38ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680efce1-6268-433f-a0e9-25df28628551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e600ec3a-e083-4621-95b4-3f17dfc3e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa501d05-8659-4edd-9832-bae6d79ba659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbae7e35-a749-4c8e-b00f-604d3787f6bb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad54911-d5b3-424d-8c0b-b740114d1ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e70a53-1a9b-484d-9253-0a17a4d21c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38bfd4a-230a-489c-8366-55eb46ef5236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b5b0bc-7ae9-4c2f-b80b-91fec5e2e097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3909f376-f123-4268-9d44-3a1b9ff4c393",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116b6288-45c7-44bf-9ae3-ea56a2a5e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241822a2-45fb-4f0b-8d9a-8238fe7444bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfe556c-260c-4d61-af02-a5bdae1f02ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ca487b-d2da-482d-9d95-e387054756af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f4e9ae-0420-47fc-9e89-f24ea9515fda",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb20f3d-86e4-40c4-a3a1-ca26080adfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b1f93f-9fac-4e59-b5e3-5354d28088a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359e9141-0853-4edd-8a15-d2f891c745c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c81931fc-42cc-4566-b15c-bcd5a606d078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf7720c-6583-466a-a4f4-171b7d223edb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a236a1df-efd6-4afd-be49-a0e9e2d06192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2bfc6f-21bd-40c7-a568-76fa54ef26a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6442847-7837-4613-be38-f7b71f00c953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3868cc-5966-42f9-8b4d-a7cb365faf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771db6a5-f31a-4734-91b3-e95ce8a4a14d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b6c463-0992-4d41-93f4-f699b4123751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8452e08-873f-408d-ae48-fa547e9d4f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9539cda9-cfad-4791-b060-c6a2d736eaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52665c06-f76a-4fcc-b7d4-357e1ccf168a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e86487-8496-4789-979d-1e3c3b60dfdc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ace9ece-9e28-4fb8-b53e-9dd1bc575dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541e8daa-64fa-4d4d-92a8-21ffb6fa62ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d288b26-e03a-464a-8b08-23ec155b1715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0719ee2c-7460-4644-9363-0d0898ed62c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea0c41f-0205-4120-9e71-6a179ae4df5a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3053496-9a96-4f64-af11-5ebf1dbe2388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88e782b-3603-4cd7-8bc9-7be666bcd936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a24aa6d-b8ab-4250-9d44-97d35e157bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f43d59-b043-4812-bd15-75bf4c633caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ae654e-3e77-4708-b8d6-8591406f8085",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f130d6-b6dc-48f5-bca6-6417aa15c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791d163b-5d91-486a-8775-175f432f80dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a81228-7c64-4568-9cfc-25b5fabb6656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f13a1e-1529-4a87-ade1-7fa3f6aad321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f237724-d877-4fe8-801a-91e2c1b69e73",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be0f965-27e3-4132-82af-b238e7d5ae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d691da-32fb-4e31-9b28-e166d6b75175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43da649-9901-408e-b6f1-703c51e7aace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d529b7-0d53-4e04-bc36-b934a34c6027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d16ee9-7900-4ec9-95ae-14a5988af0f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a47be1c-7cc3-49a4-8f03-c528396125a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d436ec2-5205-4d62-9733-02e8203a8209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b7c05c-7db7-4b13-87b4-5500e3121ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "957af606-a96b-472d-9298-d3b6a79fc7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcd3877-703d-4f3e-af59-01ad48a7f5a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7549bf45-d4f1-4ea2-8ce6-29c55f0f1ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89acf035-2ed0-42ea-9537-d4d9c311167f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92063a1e-8111-456b-b86d-92be09c58ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e536a2a-2810-4f6e-a87e-b9eef013b4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84578bc5-f15f-4395-a341-5f6d60ca2b6d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b308aa-8fd8-43ac-8f0b-9b9c2d04f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac736a84-db1d-47b5-84c2-0e637d047904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496e0413-0bb4-4b57-bfad-ee95ab7c3250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7efb69-b116-490c-9717-afc89b59eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7467a2-3a39-4b92-83d2-c839e00573fc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1fa85b-5209-4b94-9076-03a36767d9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87055e3-e6e7-4cc8-b12a-44fd4813c966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5279987-9a18-4eed-8f81-13cbd5a9cbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad27953f-2b11-4048-8881-c5c94ca2d1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3dede2-e946-4d87-a438-9d8dc9abe0cd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ed0f5a-a2e9-448f-b8e8-5f6d52d59760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae4a271-5e43-4e78-98c6-e8cec32101a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d316b430-0531-46c3-8ef7-e12ba0365670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae32c8e-5cd7-4a37-9baa-c6dcdadd2c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4aee98a-f9b5-444b-b672-6efbfc9e561f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fbe7c9-edeb-41b8-a382-c6e27a0f5554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bddd2cf-89db-4c78-a3b1-58f0aaa84067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7266f66f-b41a-45c8-b654-2ff192b511ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceecfa1f-5b90-4768-84fa-d5c7768d6e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167b6fc5-64a4-4170-8a66-d2134c08f06d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7556c484-4059-48ea-a6f9-a51000f85de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a753b579-f510-4786-a516-0bdd75fafbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d52c50-5526-4470-a5d0-24f1bf147ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509ee7ff-f94f-4db7-9806-f3c2c02b8f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a14c23-f1fd-4419-bdf0-af6263482861",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1641baf-39bb-42ca-bfe9-f6aadb004d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1402d0af-9d6e-493b-b41b-90a64777b64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8b78e1-0f09-4236-9ba7-ce1304511161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1e9d32-7adf-4330-b153-0e5d0304f3c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "387ae121-0453-4c42-bdc7-311a3e243aeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb0804c4-2b2f-4f9a-a68f-b15854568c28",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c564615-bb7b-4bbb-b0af-3866567a02b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40963fca-a555-4408-ac5d-c248a1a6218d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fee14d-7caf-48e4-88a2-bd8944689872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed2e236c-6bfb-40f9-b37a-38cfad574448"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49377dbc-a6bd-4f7a-8e0e-e423a788e357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50f49321-0bfb-4924-9f33-b59bf4937704"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a353be02-f193-47fb-a5de-6dfdeea1f44d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7257b69-d95f-4537-81da-427888d196f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dc1bb4e-fa48-4480-a6ac-02b9b5befce9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27d0eea6-ac2b-4b3b-8451-e2a50cbd915d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "394a1f63-3cae-46ae-835b-2b2cd4834b68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "780e583e-a29e-4382-b11d-b28411888194"
            }
          }
        ]
      },
      {
        "id": "12bd5163-99a5-445b-b3e7-faafa1e02ca1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3eec02ea-c621-4957-905d-76e3172c5147",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04dc9ea9-7208-4e0e-a201-7056caecf7b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c26312fc-0d30-40aa-9085-68cf3b83334f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f768d2-1e3e-4fbe-ae3c-9ab8ab79a5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2906af-5b34-4cf0-a331-23b24c88d911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9d007d-6751-450d-a9ac-b46b86600897",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead0cdb5-6327-467e-9342-b44a94f14716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0db3100-ae2b-44c4-b081-0dba75e93409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239cab42-2c5a-40fe-878d-8c2867a25321",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd101d5-fdcf-4434-bfe3-5b2b2e9fbd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f97244b-fb02-4063-a541-e63285de8131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aced343-9125-487e-b97d-cd02388478ed",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542f2298-7106-4ec5-8b1c-9b146cc62b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f102240-7503-437e-9360-46e67efc3747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb78245-880c-4d59-bd25-e54e5c402463",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673a88ff-04fa-4323-acf4-41aeb31c7ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd518dcb-6a72-4f10-98f7-b31622609e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99bbc1f-ebe8-4745-8b9e-414f696e2b40",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220d79e4-85cd-4b78-95b1-a216f5ad7334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dbdc19-c426-48cc-a986-af5b8a7308b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aec7a54-b2a3-4147-a9a5-09074ec2749a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8933bb46-5c3f-4103-bf5a-b06b3e56598d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f45a66-0ac7-468b-902e-cb481f760fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6db57f-fed5-4251-9f18-422104d62037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faaa9608-bfc8-4097-8893-b0c7207c1be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991b2410-69b6-48e9-bbb2-a3946d046be0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90084da2-e464-4994-be33-324ea434a166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ee0d9e-3230-4d0c-8401-c528b28ec009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a97dce-47c8-4cae-a9da-915866e3c1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c38a59-a83f-416f-9703-ecb8ac52d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2907575e-f896-4491-9146-ad471a1a0541",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1c5718-dfc5-4a2e-9efa-e9687d9c0776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f988460-a5a7-4396-882e-35e689c8e599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e142ec-b1c4-4e86-9519-87df736d87f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16769d8-205c-44ea-b994-2c954571ee63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e7dda3-f91d-4a20-a3f7-7fda416792ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882b6bbd-ed49-4b65-990f-a20e6bae32cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07d7437-d2f1-42ad-9d87-36faabfc4dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd201e8-53e8-478c-b6c4-c084cf1b4ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24434092-6132-4c2a-98c3-e510ea9abe27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ff042-c5d3-42ad-9176-35b47a1e9e5b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138f81ff-4ef1-47df-9849-d2ab96c8bd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a64d308-c14e-4c58-b0a8-d4dcefdeccd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce30b2c2-9298-4bee-8b13-1b8c986c9125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49cd2bd-55e1-4637-b0d1-2d90626b5f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca5bbee-249d-49da-8eb5-67ae9aab742f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cfd961-2cd7-44e4-a3ec-8172f0c8db48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fd2297-4f7f-435d-9d38-48b65e007534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c172e3-6f37-44e4-9522-5d18931581ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55d7850-d424-4fdf-8199-69e099662903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af85542-65ad-488f-83dc-1d3a6e850e1b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414c2390-271d-4356-a454-b476f24a37da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab53334-03c4-4797-9b62-2836f9243349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4488d2-c7ac-4c56-a279-b43fd6a4dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1947c13a-0beb-41d8-9e75-1ab8b0dbd946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d347aba6-6dc1-4dec-a87d-569fd5c05680",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a705aa48-6839-46a0-96ec-a03bb1bcddff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb5485c-2270-4fd9-9681-ecbf5b6087f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616e34de-eff2-440d-8293-720e9ce7d57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1314c8e-f24a-4864-9fc9-e585b63d878a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701234c8-f59f-4d1c-a5c3-5911f3f267b4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c41f0c-0a11-4727-b45a-07e6a367dd07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91db348c-8dab-422f-b452-b786abffd246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5256c8-464e-47dc-8775-e66e92ac0c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1861654-4a79-4f08-bdfd-7a029cc0e129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87f102e-464c-43d2-9db6-df0e579e308e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c52f28e-7595-4ec1-a62c-00f584f212c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed7b717-1148-4ddd-967d-dfe64b6f9d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4aed5a-43f6-48d8-bff9-96893dcce9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b97c4d-93e7-448f-8e35-c48de972e86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec72aa6e-a071-4efc-8ce8-1b0bef3a8a05",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7202f4-31f9-467c-9101-99a60df159a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9780c388-d2b5-49e5-8ced-721a731fba6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bcdaf7-bd85-4aa0-895d-e1f9e8f93dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8fb425-33fe-4fd3-a11c-87b301da7787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd90349-6a0b-44cb-aadc-99f842c84861",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93815e41-0aca-4e67-bbf3-235b6e150efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283a6dcb-b13c-4818-809e-39ff232d8085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36796f3-f78c-4240-95d6-7e098c939fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16e33e5-b459-4c8b-b329-ef9bf98c1baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05128ad-09fa-40ec-86ea-70a94cfbc68d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350a43cb-5901-4bc8-a6e9-9d1783f57b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fe8088-ac18-4817-81a8-52262305adf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16444c5a-bdce-4f1c-bc09-16e9ae3b74a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad2f875-7459-4d0b-a68d-4c8ec59ead1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb86c416-30ea-4977-a26a-5385ea2202bd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954a2ce5-b843-4e2b-ad27-e5a3740fad1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea921d71-642f-4a29-a754-257906df2b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e39603-9d33-44a3-8fa9-3b730d9210fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5399b0c2-6864-434f-8d16-36e2bc995e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5968bea2-c5d0-43bf-bef4-977b7f3f3355",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dcf582-5576-4720-9188-8a8c1a1bb3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6d638c-39cb-41c5-8997-2847a65db560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf9750-2b95-4d03-8e5c-81792f7af616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4ccb3b-5f78-45b2-8052-ea38938c4fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd293cef-b713-4295-a80b-b0624e31972d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5453a4eb-cb15-4452-978a-8d396c2cccef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5635e1da-ab02-4a96-bf61-72f262e7f216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df73af3-0569-48d1-a6dd-5953b349f946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be250d3-c15b-4eba-819e-2933cbce2e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fec517-39b3-40c9-899f-37e2d1d739d3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130c76ca-269a-4468-9a6a-c7ea16628b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d155e5b-2281-472e-87ab-532d379c144e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6cdff3-5bdc-4eb4-a71c-5737f53c0956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bafee7c-dea9-459a-95f9-573b60170c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c881a31-642e-4608-85f0-0971c96484dd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb91cd8-6a4c-43b4-b1c5-ba4fa73a3fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8edf7d2-820c-4f5c-8032-57d5218a50b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aae1ae9-e988-4c33-b4ff-637d0b22f394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad97966c-56b5-4645-a1de-c6078a5d14b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf0e98f-8dba-409e-ae3b-8af440ace707",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac0110d-fbb9-4701-a32c-7b7422b33426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8898ab9-501a-4fb2-9f0b-e23d75844e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d1d064-61a5-4087-a2e3-4dfa2873c27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3de0de6-c712-47de-807c-d356a5db8fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a3d0a9-b849-4fde-808e-eedb4ed5779c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa94fa-6b41-4575-82c5-e60e11c10760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b60b5a7-83ad-422e-8934-70e818d459fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5680431d-6abc-423b-803f-9495506bf126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37c4882-30a7-412b-8de5-2c4d6ff5f27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c8d2fd-cc49-4672-91a2-6f37d65e4013",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bed783-2cec-4de0-94df-47f2cd4e3c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc60004-4263-45ce-ba4c-74cc4f0c953c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2025398-0947-43df-953e-6b96d4f85983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9fc424-6201-4cbd-8bc8-90a5ce25af4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0be82a-48c3-4617-a823-21bf3c6adc55",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76451741-427d-4fd2-8b68-5c8b0175f020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec867187-c207-440c-8694-f94c12f6b2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b6c2ec-748c-45fc-a955-3bbe38a80553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d714a356-427a-4eb6-8344-078304469388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b34073d-5c67-4b20-8efb-da6891c126ca",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f05895e-4550-4d4d-a996-0541b13e143e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d1cf3c-3213-4554-b69b-f86169b56915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026b56fd-cd0f-4bc0-adb8-f7cb76c52ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91477572-8086-49c6-bfee-0a4057ae0fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0104c045-266a-4b41-a4b1-a1c341e9e233",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020fb991-2049-440b-aa33-7f5fddf0e14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17b3427-56b5-4612-9eb0-3e666d10e4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476bc79b-7e5d-4b1c-93db-43cb6d364239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93de98f4-7d4e-4272-b4a3-0793738ba91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8cd96b-b7b4-49b9-9517-a4482cabfeb4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d53826-8bf7-4e3e-8e42-b0363ce592a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0236f339-c7d3-4a65-bd3f-a2d70be4b75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4129f2-de7d-408a-afa1-a7bcafab88de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9bb188-4d38-4014-8207-1acb263e9d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb7c5da-517b-4881-8a4f-b4aaa11f3f1b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c01667-e22e-491d-9cf8-1aafc97415f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab0154e-0f9d-411d-a91f-828e9ca7f9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9f580e-08db-4afd-9651-9e57e7491781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ef4010-1f4b-4ce7-aa37-abbfb6c292e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525ac1e7-472a-443d-9bf5-65071fd95cde",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aeeb05-a542-4237-a3ec-07b7d97062b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2385435-89d1-4f6d-a92c-f5e317d543b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6e3c6e-d634-42ea-b4ca-66810737aa1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb094917-bb4a-4c50-8cb3-36f19ae5f740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9ec6e6-8b72-4456-a303-bd5d8e0f7d6b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c24bc-f3e3-4f5a-9620-c433672f4bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2600f3ac-9713-4686-9a69-1283d3bb1a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e25e5a-c43b-4cb3-805e-7a956fff627e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7a8148-7400-414e-ac99-215903678c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cceab3-63ed-43e9-b919-3c67ef0c1a3d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afb8c9d-4cdd-41b6-b8d5-7de1a39e1c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0067b9-abfa-4da2-9748-9b5f426d6cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5626a30-b450-4211-bfd3-de47c861dcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bcb1a0d-159b-4d70-a1af-bfb2b5d7ea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c067c07-1e62-4325-8d8b-b64905e8060e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ee3b28-55a0-4eb0-bd72-2f7636735dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a9f081-b886-489b-b96d-62459e6bb73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb0e05a-308e-42fd-b322-32b5452537b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32a8459-35b4-43ad-975d-fb2c49245245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe1a13b-496f-4683-abbd-9517d1088850",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151f4f61-e4eb-4659-a849-75539ff54140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78c6436-41c5-48c5-a629-1dc47689ccfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e86f16-5b60-43cc-a97e-e4a6f79d8fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d30741-8f7e-4223-9543-4d0c1c48d206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9a2310-c1f3-4b67-96de-8054a2475e3f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c8bb3c-5f67-485c-83b2-977cee8cda36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51bd89d-12db-41f9-89d9-175ccc147dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab1ca53-5a0c-4be6-b7ce-86c8aa040aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c82f70c-fc6c-4cee-bd01-f13208102c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5125dea-178b-4587-944b-17b4e1fcaa01",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b736fbde-4450-4b9f-886e-f0170d1ee827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd661543-4e26-4975-b2b4-35901ca13381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738847e0-7bb1-470f-8ce7-1f87383ffe55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90331437-29bb-4282-ace6-332fd56950d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad13b9a1-03b4-45c2-9d75-3f54d8344acd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e55cef-c240-4ec0-bdef-0b95936bb22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49866b0b-1632-45f5-821a-b036fc02589b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43133830-d71b-4987-a3e2-80d2083d17d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069c3f61-a14f-4d6b-8b16-0191e06b5733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65408f06-cef7-44fb-9c8b-969a8ff56bab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41272cd-8f6c-40e3-8df4-4c89ee3734c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28002e3d-a92b-4387-93b2-1a31c1c73acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6a5937-20df-488a-bf7d-c973deff60d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fca0947-d373-4732-80a1-afe3627631bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b080fe0e-da4c-4b33-801c-1fc25f1217cd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffc9f6c-c384-4bb4-8eb3-172a13af8c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae15499-a9ea-470b-b052-99f6369a0525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c149a1-d386-4fe4-a31b-fec29bcfa6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813edda6-5a7b-4835-86a7-74220c622368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb05b90-af87-4d65-b9b7-ce81770ad776",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d3be09-387a-4637-a904-9f9f4bb9a404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9577da72-40ab-48a7-86d7-af7b003c873c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71297a3c-d77c-434a-83af-fb5c4ce3c940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a37907-d5bd-4153-a22c-aed2e782126f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162825b7-7790-464f-b8cb-fdd3ddbc0a96",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2eef10-e866-43a4-901b-5c33f642fb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bb5d49-9a50-41c0-bd67-e22f932e9cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f83264b-50b2-401f-9f90-d51b2e8c1432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a6540a-d704-45ca-8fcf-86a258de85db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09790dad-1600-4427-90e2-b8191c4d1961",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47afb5c-f6ac-4fb4-9b99-0fe7a26fc332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3bc17e-396c-42e5-9e80-54e5f9506486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22fbd48-7e41-4621-a883-94e5df55a512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfcef75-492d-46d4-a4f4-5861a6f10c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0e5fd4-e805-4517-9198-7111e9a8444b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280d94f7-7228-4caa-95ea-da79299025d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151f5250-e6d1-48dd-a17b-3c1f9574fd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b56f2c-71e2-4a14-a709-b6ec115b7a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e44c47f-59f1-4063-a521-7fea5f82bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3cd185-7021-4ef7-a941-6849b0463169",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a462bd70-fb3a-40f2-9e74-18eb6c973c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe1cbef-6266-414f-bb61-bbfa59b42bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108259d9-6f1b-48d3-81d4-96102457ef76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca504d8-7d8e-49a2-b9bb-392e2f0ab218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bce9e0a-2c13-465f-90de-f4fb435a08d4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3ee6d0-2ca2-443f-b020-f63a2a1464c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d399be8-eff1-46d5-95af-0615173de263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8a6b21-763d-4788-aa7c-f4f7c0cc7b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ea41b7-41de-4e0f-a883-e16d070a2308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb2d0b9-f5a2-4400-901f-9cdd8bc622ed",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7e82ab-7985-4472-a004-dc5986a9f4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3fe538-5cc8-418f-8b79-d053988004d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127c5133-1881-4ec5-8d36-ab8948d89468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93395da-6e9d-42a6-b62f-fc49f1802475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8912f4ea-b61f-4156-8d69-c0a09d2c9371",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dcd5cc-7222-4cca-94c0-fe72eb973efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5ba56f-1dc1-4675-a803-147620f0d173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2871e0b-36a7-4deb-ba46-72c05c02f807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348556b0-9222-4950-811d-5a9e716603ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a3a4bb-eab4-4158-95e2-06a48adfa9ba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6140d7b2-cb9e-4c55-9fce-2c825bd9c447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97afb8dc-3dd5-4db8-8002-17c2df125c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7f16da-700f-4509-b3f5-a4a71b546b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bfe923-f70f-4cb9-b6db-7d41882e80c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f62982-7821-4713-bdb2-23a21cfb0c3f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472a473b-c940-47c6-9962-557de350fdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b7e29c-80e4-41f1-a6c5-491a70d57f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b511908-a273-40f1-b249-5eba849e2487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e4380e-4510-477f-a369-7e8fac8d31b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8679f87c-36d7-4111-8e0f-3a32a761c669",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b63543-bd3c-4052-9d94-aae4914ec948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781d3be7-8536-40db-b471-6aebbf91c8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76eb1ea-ed66-4770-8907-96c06ce8005a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165b2378-a26f-4d4a-b88b-d0e57e4438d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e14906-be83-4c0c-bd11-7749ae55810b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b47679c-3540-41ce-be9a-af9fff0464c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f84b7d-70cc-4a29-946b-de4da7bda472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c359f803-da26-4b35-9493-054aac64797b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0abeee7-889c-4ab4-9333-83184880721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd6b332-27a9-42bd-b7e7-659c64958e8c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84db1a06-4e07-4fe1-82de-c6d171912d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d831ddab-5b96-49ec-b66a-ea41fe11e069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aaa5b6-d944-4084-9cf4-8d270bbe43d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd88efa-95eb-4e24-97b0-e3576b0cbf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3f9d2e-c00b-46f0-9c9a-02973e246a20",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac636df7-6e05-40b1-9928-1ba9f8a1ffd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506ca9c7-4624-4752-b921-4b8b95a7d338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698578c1-de84-47af-920c-4fd43a146ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11627462-16c7-4c0d-8973-5c17efa7416c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67822ffc-0ec7-4aef-a05a-85eed7b307e7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a3719a-b76a-4772-9b13-15f9693f603d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e10381-f2c6-43d5-a03d-1e8acfdabd7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a0ef97-4454-4ecb-a4f9-90c782f3a24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ba87fb-9a4a-492e-9129-6c2087164df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025fbfb2-01ed-4e56-a886-5fdff8002666",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9350ceb-fc42-49c5-a720-a5bd9f47ed65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef07ce51-9cd3-495f-92ed-468838be55cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4c096f-de4c-4968-9a6b-548bf0b29ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d5e1e8-0998-4106-b6c4-64bb2a8b55a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920fbb02-04b4-4ec0-9137-3a3f3a3bcb23",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01fc2af-5df1-4443-a347-b3b853bb0097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071e1b87-95d6-421c-9dc4-09b40d4e0407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c072af2e-223e-4461-a71a-98dfa94f923a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b004569e-74b4-4907-ba9d-2fac5307576a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe1fe9e-245a-4326-a640-a5970f66e992",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8df9603-65bc-47f8-bbe6-69de771ef671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3903573f-4771-4045-ae87-553dd2074d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c647e43-70af-44c9-943d-188d21ee61e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce75bb4-dbf3-49ba-8ce7-fea5db38f418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8027836e-304f-49fe-812f-25a7fa0dda3a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98405889-cb94-4045-bfb7-da02e1fe99dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d66bb4-9261-465a-b03f-ddd4edb06a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8434d09b-a90a-4a5d-873d-2650f5f78f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354138b0-052e-4639-80f9-8b00bdf509e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c599b39-0e78-4ed6-812a-8c65b019cc2e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2072e61-53b6-4aba-ac17-6792286858f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd65664-e451-4fc9-a7c4-8f5801d35eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba38898-4757-4f3e-9d84-0d260bee358d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e9ea70-79f9-4964-b6fb-4ad3fcf81640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4314bce8-6e1b-4458-bf34-a67b96b3d885",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f0cbac-a3e2-40b3-a88e-d1066393a5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ad75cf-0ace-4d48-b835-c4318c7699f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a062bb8d-3178-40c1-ae90-8d861adfe2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd8134e-2620-48e7-86ca-0768e6bf8ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9bd90-19d3-4936-b69c-b12d16298072",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a0e45-478f-4a6e-a9a5-3086087f23bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4717a30d-264b-49a9-91d1-e7825d1135c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f417024c-b54c-4c23-b353-b4a37a727134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205135ac-18ac-4c05-8b1e-8ae43f0f1d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9127f277-fb0f-4785-b62c-3ed7f68e9330",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f217d6f0-f1c3-490d-88ad-f2908fc212b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3cfb9fa-84f7-4656-90ee-ac218b41037c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f36431e-bb26-4a24-8f9b-402eee6f0357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760e440f-38e4-4848-a461-04c803755e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4761e0-bce7-4f73-a906-ef58ddf64081",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4587d95-9db1-4c3c-82fd-605e54b1c1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc2e1f0-46c9-4398-a4c6-deffaa5de530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a514e9-3326-43ce-bb1f-1de8b4bb996e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038786c5-4b72-419f-a2d6-5d707168f90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20af5526-e2ae-439d-ac3a-734a82e8fce2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4220105-21ea-45b6-b06b-374a397408f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6abf08e-4000-45f8-bd01-51722258f631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae5c28-d0ce-448e-a65c-666a3457a851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6433e18-20f8-4d50-8d80-c552eb29c0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e62c86-b1cd-4604-9446-280f883a8976",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e8e3ab-d62c-4663-bf4b-0129a60625ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "186c7e04-70e9-4ec6-9687-5cb3e3860d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d79a7f-b8b9-44ef-91a3-66981e92c274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2eb9002-e12d-4f5d-99ce-5662d5528a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0670aa73-4ebc-4b15-8f00-99e56b4b22ca",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4314b65b-70cd-4a80-91a0-8f641ea75d9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3dcfb7-c053-4024-b27a-4f4b77258563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16865d6a-610a-41c2-8348-d7d671506a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1569cc7-4012-4f01-9a84-7a57d49db28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd7d338-1055-4a9d-a853-6683f96f9a26",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865d3fc3-c473-44fa-ab49-7a2ab013e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb951287-b5f9-484e-8871-44b91b2bed44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5502888-3fc1-4b47-bb45-522a867f14f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873ddc89-6d31-4180-b83f-75dcfe591b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2329b93a-b007-4d97-8f8a-8a73475a4f7e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c08c40-5a3b-4b28-83af-a9dd34690800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0479e04e-4523-4bea-86a9-b66a0d705bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3855f0-a369-417f-8d58-b62e2d53b103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94703b4-88cc-4504-85c0-e9f1e80748cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978d2bb0-402d-468c-b58b-9e1436f167a7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f9dd33-e425-438e-9ef7-2989743d9378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e96766e-ef43-4ca4-b424-b9ef33127641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c888ec-d960-4efc-b20f-4a1fc74dc15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0db0809-1f21-4d34-8f5f-9c9a8f060d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b2a80a-e7a4-4377-b177-e82e69813dc0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6262a4-ca02-4392-a4ac-6f6db7ffe2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b36cead-7abe-4ed4-8b8c-09ae6d5538cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd0a6fa-f180-4f34-98f7-b0deb7586bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7f3d64-9412-4ead-8821-028e37cc3781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e54383-2593-416d-8194-9fff2c719f79",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533f06f4-a981-492a-8a40-b5b4d683b5c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788f11c6-a3fe-4db4-8e68-ab8792c65af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478b1e37-efbb-4547-9642-0d79e64c8dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbb64d7-ca5e-4471-a225-c229b8aaa2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb353fd-8c80-468e-b757-64de65b33240",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f9354c-3dbd-4341-9e63-4809ddb2caeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c6a888-c2ff-4e7f-ad4e-2bd3850a1bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4961ed9-3b0c-4be1-8b21-83b7220ecddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132ec638-9f63-4fd0-862d-27ba5dd3d7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56872e6-6cad-4b23-82ec-47e8ac3c0c62",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fe6926-8a67-40be-9e63-f0a60427e452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b4a6d6-f804-47f4-b23e-c4f71ea71fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a1af22-88eb-4555-bd83-a20045c2af89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc4f1b4-14ab-47ed-8e12-c87803a84c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5211ac1d-998d-4a99-affc-08cd911f6312",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a309d57-b7c5-4ba7-9fc9-3f7cd8b8b6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2563330c-9b50-4a18-921e-6992bed36d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525d035d-d652-4d4f-896d-bd505b5a13f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46261c94-ed95-484a-9059-9baa8cebf60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d2766d-5de7-4e16-be5e-5ff5e41fa910",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1f2403-72bf-4140-be02-9a35dae3c68a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223e009a-a505-4a2e-aa5d-7c5535a9c02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec1e682-c44a-429f-bf3e-aa2aca289feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf70c252-4a0f-43b7-af56-3d10a7c53b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2c2422-93c3-489b-a833-220ed0818ad7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39b0264-2faf-4962-9b41-66aa8416cd8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca029b4b-13b9-4544-93fb-ab6eeacf5621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269561b7-57d9-4b2b-96c0-3743420ef89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50c7b0c-8811-4ad9-89b6-eba3e777cf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316c9806-95f4-4905-a6e3-8842c83bb696",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f75a363-3dd9-44d1-8738-fd19fd50a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7592f3a0-e4ff-462b-b2ac-d6e35ef750e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea890686-2cee-4c10-8717-1b460c66dd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f79bf94-3312-423f-9059-15dc3a552cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6a89cd-23a0-4b75-9092-cf25580eeef5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41313530-733a-410c-8f67-b319134f11d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933b86d8-e4cc-44a5-94d9-797021a591c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee789d05-12a3-487a-b540-b29493fd8621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b34244-237e-43f0-8b8f-0ad5ad90fca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a052e108-1781-4bd2-8aa1-52b981ce8234",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4476550a-15bc-4166-b27d-efa000ce22da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b8758c-8d2c-4c72-8811-556c66294e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916e3a6d-bd20-451d-b34f-de2521da92f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a597197-9319-450b-80af-87cdcee60648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71592fdd-d719-4513-9828-5e9fe708e395",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ea655e-0afa-4245-b011-25b0b057dd41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e96c517e-fa79-44da-84c0-028784cba046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9309ce6c-9577-4f26-938c-a80701429201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ece3eb-e431-4ec7-b315-55f9f18c7582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc469f8b-5673-4e10-af5f-951c2e8bf22c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b83a9a-784f-43cc-b172-da4668bd3256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4f6165-eaae-4e5b-ae97-f070493bf0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047993b8-237e-48d3-98e3-b42dc2966c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2882636-4ccd-4ce7-8a78-1674228068e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258c6f5f-1d5e-4e98-8785-736baa3ee901",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c2950e-5ae7-4c67-b9c2-a0525e6941aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a672fcf9-9b0b-47f0-b9f0-54ff1507f670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62329b2b-489e-44fb-b78b-3f98890dcc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e8868f-ba41-4786-8618-170e0fe9ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c81def-3fba-4bd1-8767-333477a1ac8e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1492ca58-0080-4201-9983-9126c2a5dd4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5983ded-dfbe-49b2-8d14-b5c1e852ae49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bed394e-74ae-42df-b475-d6a4d32dea85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5395c67-b87a-4b00-8703-35bad1f92265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b179aa7-a05e-438d-968b-012b02c3b660",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a53091-668c-4c63-a3df-bd3c843a3cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00457d0f-5bb4-4230-bc60-772a434fbef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c942a1-b344-4625-b27d-aed5f4fad4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175945f5-f6e5-4d12-93e8-3e5b61097da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e82b0d8-c1df-40ba-992d-7f3f30c5e709",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4939a84-e89b-48ed-89c9-14a4899b9ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9313c48-70f4-4bbf-a26c-4ec3f9e8b46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a96306-e3cc-4c20-8be9-0b9e36bebfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302e4a45-a744-474c-9da6-4a1a6a488520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac561814-2516-4862-bd9e-34f06e28a13d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e70dc6-451d-4648-b5f0-e7e9d6e60f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c4fd69-2ccb-45f7-821a-95cde7e42a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0676aa0b-4196-47a1-80d0-da45e028b7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c03cf1-0bcc-4a3a-8813-3359e90aa491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3993e931-74a3-47f6-b985-c5b3cc97f5a4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9b45f-b604-4e74-8fe9-e7df896946b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3eedd1b-bd8f-49bc-9e0f-5329054f4bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805a152c-ff68-4c92-b38a-c6e2cc5240bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75282ceb-475e-496d-91c6-353bfd380242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab4be25-bb09-446a-9992-6a89c6026ed9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f7936c-af05-4c45-adcc-10efeb69cfb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025170a9-50dc-4976-9c79-0e943c6ccd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f954aa-0206-4e65-945e-0f760f152fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df867b9-4cf3-43b3-a6e3-b3ed1c816f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5110f893-666a-4a08-8598-90748f008b65",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fab028-176c-4f1c-b9c3-179850b3ad14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532786f6-5ff8-4f6f-a29e-c3c7e6d31962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f29a1e-09f2-4ff5-a14a-1dc93ef4eac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1750342c-0a1e-4b81-8b6e-534fbf99c98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee03613-8eec-42a6-bcbd-6511b3076c97",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8236d4a0-7d27-42e3-9ae5-917f3d72081c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c2014d-f3a0-4ab1-8132-a5ca27a07fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8abe407-6533-4d0a-bbe0-260338023601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9d417b-6e06-42f8-af4b-f041dcde4f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77934794-3ee2-4670-bbdb-5cc06d2b91b4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422d9b5a-770f-43cb-a19a-79ee200375b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d87d5dd1-8c09-48d7-9501-710749cb0957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082fa249-27e5-4252-8e76-9bd4dc610c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b7f499-c673-4ce5-a8c8-ae8ef1b6080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a75d308-aa57-49db-95ce-a318fae41005",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f92d254-0c71-47b6-a197-9809d1d5cb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa25a91-6be7-48a0-ac09-0e81aae1c7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce0cdc5-bb17-47ca-bdb0-00f07d5fa6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e349a9be-0e84-4153-8fed-353c3ce58995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dfbb80-60dc-49b7-85df-5844d90acbf0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa10fe9f-d111-4418-a6b4-87b68ca6bcb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda98106-dafc-482c-b3a7-e5e5e6cfba87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf601e2-bf47-4fbb-b283-e5354ecec96c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e10fe8d-ba10-4c44-b140-49c9e8f2fdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bed03b-9a5c-4a36-8f71-ae4c2ddbe733",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c900f-dbe7-41f7-92b0-496c7b7e87b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ae9274-5c9f-42b2-9b69-279127606882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd910d6-5804-464a-b06c-9f557763f2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a53ada0-b169-4ac8-9c7a-af21fe4b8e23"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "438714c0-4e34-41d3-811c-dcda1deebee7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3470cf5a-080a-49e3-b08e-891d662df797"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bb3e229-1625-4f5c-bac6-61ba6e9af3c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "030b25b1-b887-498e-810b-3dafbf805569"
                    }
                  }
                ]
              },
              {
                "id": "24844a6a-218a-4bee-92e2-f94a066aa21e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8187593-1cf8-4c41-979d-5f642a1f9f16",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57095d0e-4857-4641-907f-9427a4c00e2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f14aa5d5-110d-4ea4-aa3c-77d4ea22afab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216a4794-874d-474f-9253-ed1164e39d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43d0514e-ef20-403c-8f4d-82acd9db6de4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10565979-a351-4c0c-b3f4-ad03342cfc22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe906458-7417-4f86-8915-6aadee16bb9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0c54435-9b69-4a33-8beb-437e499483a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5651217-0f0b-4798-abdb-6f2a1beadb92"
                    }
                  }
                ]
              },
              {
                "id": "8195ba31-4a9d-40b1-a85a-f31abd11f845",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "086aa946-81a6-4e75-9ce8-56968a4b0498",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d5299c-0b88-4135-abff-89617f64b80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "70060993-4a84-4901-9610-c3bddb15d233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c08e82-8ac7-43a6-b4c2-7e0164eeac69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cb5990-d519-4c80-b716-94fcea8d7ea2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9be69fca-3429-4acb-9bb0-5519186ffcc6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd1084b8-562a-4607-8679-d8fb2ad6295e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06f66d3a-6208-49fa-8eb3-41f5ce047b39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0d55ce64-0582-48bd-9969-862412c755c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbe8571e-2643-4bbd-a063-f0bd8a832788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae14e791-6fd4-4955-bdd2-c7caf29bf7f6"
                    }
                  }
                ]
              },
              {
                "id": "8cc39035-4b1c-4796-bade-e8bbd3863b92",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0488e7fb-a936-40c9-9e0f-b76717dbfb39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "570b4899-cc3b-45e8-a919-f43026ab0166"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63ab7b60-0484-47a1-b479-da3548eccb96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4348dbf1-1b45-408c-8b63-335d05174389"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d58da24f-ebb4-46b6-b3b5-793d7126a5cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "da1a45d3-b8be-473d-84ed-6aa25f56b19f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf8045b7-8f80-4a9b-928c-bb6210392127",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e01dee0-d0fe-41ec-a142-ade5e6b3413d"
            }
          }
        ]
      },
      {
        "id": "e7738018-8dc5-4061-ba3c-25ff8e8f29e5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7f09caeb-2de8-4b89-8042-ee6b4eaeecf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61a4be98-59e6-4206-bcd1-b33b82827b25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d89302a6-2df6-4170-92ff-2f4b7b7b4281",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa38d9f2-bb8e-4dc6-a1af-fad3723efc62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58c0be8c-4a10-40a8-a257-e9f6eb86d803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543b501a-a68b-431f-b564-2bbbaeef1cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16f6a5af-0e39-4117-9faa-4198577504a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b22dfddb-85a4-4a96-8a33-8286c047a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fbe804f-33dc-417d-a8c8-ef324599ae78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6ea4eac-d2e6-4d14-9ccb-754cc82e2062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b65aef70-5a34-46f3-bffd-62b2e2b83bec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6aa1899-d4e3-48c0-8807-d7cfe3db80d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7de24e0c-454f-4eb6-9dbf-b49c7b826d15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "169d40a3-659f-4c35-abae-d1d961b83cd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bee4135-5c8e-41fd-b8f3-04b3104325a7"
            }
          }
        ]
      },
      {
        "id": "8eb4a939-02b8-4125-9d95-926f51ef63f5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d7ccf26f-88ad-4c6b-a670-90ddedce6931",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2273099-09a3-4c1f-af3f-92619ee019ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16cc2623-3d24-4dc5-9fe1-98d8cf4b80d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3ace93-9887-4c13-8863-4afb11ba83c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "052ad495-0dc7-4d5b-9755-e4230ea10070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6275b2-e1bb-410d-93fe-63361404f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cef2424f-a467-413d-9f2e-7fd4aaefb820"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d4d020b-bd38-4375-ac1a-8834c9887bae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e96423c-7d5b-4538-a8fe-66396cd4f6fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "689d5bfd-ae89-455e-b37b-57df8b60f8ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "069a68c6-ea1b-44a2-a96e-5f16b85b3362"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "502fe648-8ce0-4981-bd65-4d696afcf235",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbef3e36-824b-448e-8945-a262b060f96d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a722553e-3d26-4192-9d92-854d56c18e82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2165be74-05b9-40fd-bf44-bb517992cb33"
            }
          }
        ]
      },
      {
        "id": "9eff11b2-e8ec-4a5a-b98a-1dbb3b9782ca",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "55cacde0-8a24-4c31-b54b-8e2b1f6ddf1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c7769d0-db37-443a-9557-2b511c1f310c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b66c592f-9bd5-4aec-a25c-636b6191f05e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300f0e9d-92ec-4a6d-9ca1-471b29dbf200",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96fb99f3-52be-4886-8f50-04a273f08da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5333ac1c-d26a-4ea7-8705-d354a2f857f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3cb56f7-6003-4867-947f-51ea3044995f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26ffbf22-8da1-48ac-9ad6-bd1bd15dbb89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bdfbc8d-d2c8-487b-876c-3e5655f68d16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "537df1f9-a8e1-4c7b-b8e3-975a517361ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb51b221-7b07-4871-b9e5-3d7dd1c61982"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e2577eb-b7af-4cce-9d25-3b17ea875cfa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a304f662-3ac7-45e4-83cd-2c27c1397bb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e8a29c-f5b8-41f1-94ef-4d69ea94640d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8022826d-0915-4a24-b88e-21f98c772490"
            }
          }
        ]
      },
      {
        "id": "5d248d33-8c70-4625-a0a1-5b16d71bfc37",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a624ee3-f0ea-4573-9214-0925c7c8a1f0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d93ea622-b120-4394-9a4f-32d867cfa006",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1123a745-7d45-425d-94a6-ef3aebe540fd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8d0ac38-e23d-4f82-ae0d-5387eab2e6cb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c8cfaaa-a83a-4fd8-ad84-d1bebbd13220",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.32142857142856,
      "responseMin": 6,
      "responseMax": 8406,
      "responseSd": 578.6019239219764,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717461467265,
      "completed": 1717461500930
    },
    "executions": [
      {
        "id": "be6753b6-a558-46a5-94b9-a9a9d5023ef9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e95d0159-d00e-41bf-a008-e6fb95f98988",
          "httpRequestId": "252289a4-2992-4863-b3a7-ff112c78a1c0"
        },
        "item": {
          "id": "be6753b6-a558-46a5-94b9-a9a9d5023ef9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "004dc39b-037f-4a72-b2c3-34acc1091309",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "4684309c-6f38-461d-814b-8c2ec826ca5f",
        "cursor": {
          "ref": "7c983069-b0a0-4906-9419-6885eb3bf2c0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bcb9513f-c2ba-4e2d-a48d-0ed3bfec171e"
        },
        "item": {
          "id": "4684309c-6f38-461d-814b-8c2ec826ca5f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0325c9a6-d077-49f0-b3c2-a182ad9af4b6",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "66bec8a5-adcd-4810-bf32-81b1a74a1b2f",
        "cursor": {
          "ref": "19a19bc4-a0e0-4b94-a13f-b6ee2624cf54",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "24811706-51e8-4dd9-ae6f-9da19ab807ff"
        },
        "item": {
          "id": "66bec8a5-adcd-4810-bf32-81b1a74a1b2f",
          "name": "did_json"
        },
        "response": {
          "id": "77a51579-2871-4694-969a-9bbff402e607",
          "status": "OK",
          "code": 200,
          "responseTime": 316,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a5d118-45ec-490d-ad19-028e93d4997d",
        "cursor": {
          "ref": "4f3760b6-97c0-4124-9430-b99d24a2bcbe",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2723242c-cac1-419a-a1de-8a79e4f53bd3"
        },
        "item": {
          "id": "d9a5d118-45ec-490d-ad19-028e93d4997d",
          "name": "did:invalid"
        },
        "response": {
          "id": "66cee283-e2d4-47a0-b301-03639311077d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a5d118-45ec-490d-ad19-028e93d4997d",
        "cursor": {
          "ref": "4f3760b6-97c0-4124-9430-b99d24a2bcbe",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2723242c-cac1-419a-a1de-8a79e4f53bd3"
        },
        "item": {
          "id": "d9a5d118-45ec-490d-ad19-028e93d4997d",
          "name": "did:invalid"
        },
        "response": {
          "id": "66cee283-e2d4-47a0-b301-03639311077d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02168379-3cad-4e44-b78f-2e0cc968b4c4",
        "cursor": {
          "ref": "fe252e8c-59b6-4df6-ae6c-64e6647ebea1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "533aa3ab-d32f-49fb-9130-45325c2bd9db"
        },
        "item": {
          "id": "02168379-3cad-4e44-b78f-2e0cc968b4c4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "380a4801-782b-48c0-8009-d7baad02fc08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fa17b3-3191-42ea-b812-5ef2154f939d",
        "cursor": {
          "ref": "5a147f75-0e36-41b0-9d6e-7aab7fbade3d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "179ac46b-06c2-4c1d-9a3e-8f33b8a1973e"
        },
        "item": {
          "id": "a7fa17b3-3191-42ea-b812-5ef2154f939d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7f61f3e7-c0ca-4cc2-87b4-25831e69eae8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795b0703-5c46-4231-8e76-238308a32a4e",
        "cursor": {
          "ref": "b96a9875-d5d0-4fee-9138-e29a6a6c1379",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1c2e9c0-508c-418a-ba06-2afca2ab7294"
        },
        "item": {
          "id": "795b0703-5c46-4231-8e76-238308a32a4e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "928e5347-252e-4cf0-af1e-8f23c3087abf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0330ba10-88b9-4b0b-9f20-14f0c0a22451",
        "cursor": {
          "ref": "871fe212-e16b-4c2b-8431-01876f89ea7a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a0aeed8f-b87a-4ed2-83e7-688952f6b2bf"
        },
        "item": {
          "id": "0330ba10-88b9-4b0b-9f20-14f0c0a22451",
          "name": "identifiers"
        },
        "response": {
          "id": "4c9a8505-de92-4835-993d-0bc7342d2da9",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2330ad68-dfbc-4b95-8439-7f6c8cc158b8",
        "cursor": {
          "ref": "c82de447-1427-434b-b551-8734dcd7d71d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ac671da2-c5d8-4a3e-8cf0-9dfe37817a56"
        },
        "item": {
          "id": "2330ad68-dfbc-4b95-8439-7f6c8cc158b8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4bba382b-9e94-487d-a20b-edea0282a8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abba35c8-35ce-4af6-bdf4-d90c7860a2ff",
        "cursor": {
          "ref": "12af9174-8229-42ff-9eda-73bfa26921c2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "01254cc1-11d0-4808-95c7-683c4c4f8221"
        },
        "item": {
          "id": "abba35c8-35ce-4af6-bdf4-d90c7860a2ff",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4bf9c1f1-ff8e-4032-8762-c48e6d0dd3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb3eca1-57d4-4a84-9462-338b2c6776bb",
        "cursor": {
          "ref": "69fa8d1e-3aa4-4b57-aed6-5d1b7a6e99b4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "750c313e-39d4-43b2-a9dd-d9ab3fabd80f"
        },
        "item": {
          "id": "fcb3eca1-57d4-4a84-9462-338b2c6776bb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c9d08c81-ecc5-4ef6-848c-0c3965df1b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214426eb-8544-4e8f-ab70-498d7590ec10",
        "cursor": {
          "ref": "53ef4e24-b4b4-4c41-a29e-bf7d7e4608f3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab613a60-6f9a-42a5-962d-3cc1a3b98255"
        },
        "item": {
          "id": "214426eb-8544-4e8f-ab70-498d7590ec10",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fe491c5b-24ae-4381-b136-610331178c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516897bb-6181-4d20-93a8-e255c51e6e5b",
        "cursor": {
          "ref": "3fcef2a6-1b6b-4a3c-b722-8434197e515c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "758efc79-e3f1-403c-91d4-7f336afc8569"
        },
        "item": {
          "id": "516897bb-6181-4d20-93a8-e255c51e6e5b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "83ca4627-b379-4a0c-a2e3-1744ddeb92da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2740cd-d4fd-4a79-a435-53b5012239df",
        "cursor": {
          "ref": "3ae24630-7942-4023-b405-92e983d2ea04",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "43a45efe-dfe0-4ea3-a31d-8b0a8002df46"
        },
        "item": {
          "id": "1c2740cd-d4fd-4a79-a435-53b5012239df",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "53922bea-55c2-4f57-8991-a0f891221bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3cac97-c7de-4f61-8948-c749ffe9005b",
        "cursor": {
          "ref": "e222e1ad-81a3-48c3-9832-6ed8d7dd77f9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6fdf85be-5ead-47eb-911a-02b0efa47d45"
        },
        "item": {
          "id": "cc3cac97-c7de-4f61-8948-c749ffe9005b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "edaa4bf9-88bc-4c71-994e-89c40a1c3cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2529dd17-16dd-40f6-9b17-5a7ab1ba9e46",
        "cursor": {
          "ref": "d6968cd1-775e-45a6-9bae-80c7c298ae15",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1a6e49db-f50a-4635-8928-1aaaa64114e8"
        },
        "item": {
          "id": "2529dd17-16dd-40f6-9b17-5a7ab1ba9e46",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "40f53635-0239-4515-944b-de0b5475d4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0571a4a3-ab68-47a6-b0d6-652c38ac1969",
        "cursor": {
          "ref": "69c8af68-37c5-422a-b455-094585e40459",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "49463513-43bb-49d6-86c3-1d096fa0a36f"
        },
        "item": {
          "id": "0571a4a3-ab68-47a6-b0d6-652c38ac1969",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70337954-3d9c-4108-b5ca-2aafec2973e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf7a28-9a90-4f88-a4fd-307b66ee7a14",
        "cursor": {
          "ref": "104f3067-0907-4b92-bbf8-7617d1423c3b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9dfcf6d7-d71a-41b3-9ad9-3ca8167b2f47"
        },
        "item": {
          "id": "cbaf7a28-9a90-4f88-a4fd-307b66ee7a14",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e184d9c7-0784-4e8b-9ac3-5a2b0964c9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56718927-02f0-49f2-814b-1637397e3b1a",
        "cursor": {
          "ref": "285b1c8f-a460-4be5-bc1b-2049d91f7e3c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ce41b1e3-7b3d-49b6-a912-78da4d33871a"
        },
        "item": {
          "id": "56718927-02f0-49f2-814b-1637397e3b1a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "eb6ea89f-c42f-497a-9328-4ff6f7c7394a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f691483-bd4a-44c1-8327-2ecc26002370",
        "cursor": {
          "ref": "a18a71a3-1e0a-48d4-b809-eaf486174543",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6b1c0c98-2108-4677-8c34-d1491d5d4d0f"
        },
        "item": {
          "id": "8f691483-bd4a-44c1-8327-2ecc26002370",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "57dee507-7f12-489d-89d2-ded63258da39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df10ea24-f09c-4a8b-93f5-cd9185441951",
        "cursor": {
          "ref": "82598562-72b9-448b-bca8-b91db7e6728b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "68608a4f-bba5-4353-a20f-cd0bc61b9cfe"
        },
        "item": {
          "id": "df10ea24-f09c-4a8b-93f5-cd9185441951",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8b41937d-94a7-4b61-a633-c0a2fa346c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad0286-4297-4646-9482-a339a598d11e",
        "cursor": {
          "ref": "9999d245-616e-49eb-a362-99128b245392",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e301b19a-6698-4b66-bf6e-d87fe42fd0e9"
        },
        "item": {
          "id": "f1ad0286-4297-4646-9482-a339a598d11e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5ec4e742-b938-4b7d-ac94-6a3f0ac00a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b4116-506a-496a-991a-f44942f5b5ed",
        "cursor": {
          "ref": "93759909-90e3-4f67-96ff-c3c4cc769f35",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0138b4af-f680-4434-a7e7-c253c8f262c5"
        },
        "item": {
          "id": "a32b4116-506a-496a-991a-f44942f5b5ed",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f62697fb-6f07-42a2-ad0e-65b526d107d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090249b3-153d-4ebd-96f5-5682d8e9b1e0",
        "cursor": {
          "ref": "6569f9b2-4db3-4ae5-95a0-1d94889033af",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e91f2116-9651-485f-979e-43f8cc703217"
        },
        "item": {
          "id": "090249b3-153d-4ebd-96f5-5682d8e9b1e0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e797da01-58c4-4ed7-ab5a-a5ab73f5f53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae07750-d029-45da-a9ee-7bb280c76cd3",
        "cursor": {
          "ref": "05544c79-7e16-4078-a68c-320cecc054f5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d70ee6dd-6634-4e22-80a5-2e53a8a94583"
        },
        "item": {
          "id": "fae07750-d029-45da-a9ee-7bb280c76cd3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "676df93b-e12f-44a0-b631-7ff232395f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1022c18c-0f49-48e8-a8e1-7643a165dfb9",
        "cursor": {
          "ref": "e78b0612-c2ab-47de-b1fd-5e4a5787ed03",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0196cd7b-b57e-4c1e-9c06-8ea5e0b0078b"
        },
        "item": {
          "id": "1022c18c-0f49-48e8-a8e1-7643a165dfb9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6b141b7a-e868-4762-949a-4d20111dbc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acac45aa-7deb-4ff8-98bb-081fc88134e6",
        "cursor": {
          "ref": "271fac7a-6b82-4ad3-8948-fc042bdd775f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d3c9c9a4-648d-4efa-a214-969cf61b6244"
        },
        "item": {
          "id": "acac45aa-7deb-4ff8-98bb-081fc88134e6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1bd531d0-8ea7-4356-8fbc-4b6ebba0f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64afd898-b594-44cb-9721-e65d4b6aefaf",
        "cursor": {
          "ref": "0d639194-dfe4-4092-a702-a3156c0f516e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f1456520-6201-4f64-ab62-68f23e3967fd"
        },
        "item": {
          "id": "64afd898-b594-44cb-9721-e65d4b6aefaf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "47d80ef8-4923-4747-9a74-2ccd254f140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039d4d59-5892-4e16-81e7-4ddfc84aaa02",
        "cursor": {
          "ref": "16c54d44-2b7a-400e-9c7b-c210d85af57d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "705abfaa-22e7-4335-b0d1-aca8292afde8"
        },
        "item": {
          "id": "039d4d59-5892-4e16-81e7-4ddfc84aaa02",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "21668bb9-8749-44fe-94e9-b66ccbcbcb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a17c7e9-b792-4a38-9717-e07cc930da4f",
        "cursor": {
          "ref": "a2a596b8-ad96-46c8-b41e-0b16edc747d1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "604d3a81-5209-4d4a-bbb1-461e7b66c37a"
        },
        "item": {
          "id": "3a17c7e9-b792-4a38-9717-e07cc930da4f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "addb14e9-b0d0-43af-a4b0-1bfffde11317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d898bb-06a8-48aa-b2c7-736f62643e42",
        "cursor": {
          "ref": "eea98db4-39ee-4c99-8dcd-209b564c60ac",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "38ef0b52-a06b-4a00-94f0-3091a98f7d9b"
        },
        "item": {
          "id": "52d898bb-06a8-48aa-b2c7-736f62643e42",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "23469ed5-7239-4367-ba60-69c10d4cb26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088a5b8b-086e-46cd-96c4-e57d95b0b9f3",
        "cursor": {
          "ref": "5ef953f9-5fc0-4005-93f5-55959a70399b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "364b308c-00da-4666-b361-e08b6f00b0b2"
        },
        "item": {
          "id": "088a5b8b-086e-46cd-96c4-e57d95b0b9f3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "63096a90-8ce3-4a90-be8b-b3210be18a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e205fac-95a7-420a-b8d0-273b69d83a3a",
        "cursor": {
          "ref": "a7f89624-d31b-4430-a9ba-163ec5d51731",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ed0a15fd-c93e-43ab-a114-f9421e118812"
        },
        "item": {
          "id": "3e205fac-95a7-420a-b8d0-273b69d83a3a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1458586a-d24e-4443-bab2-f0a20d7b749b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29c8850-31c4-48d5-9b3f-35cefca8a8b0",
        "cursor": {
          "ref": "4adb64a9-3a6a-4913-98f6-ab2bda5929f1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f9e7555f-3123-4f9f-ba14-7628742f76a8"
        },
        "item": {
          "id": "a29c8850-31c4-48d5-9b3f-35cefca8a8b0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1fa13038-9ca2-4895-afb7-ec0575df5a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077654fe-07ae-4ec7-8510-23fdaaf12ac7",
        "cursor": {
          "ref": "4ccfa6aa-df29-4b2a-b460-d38c9c7e5a88",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "338b5f4d-5c2b-4f03-8c86-77611d8d4439"
        },
        "item": {
          "id": "077654fe-07ae-4ec7-8510-23fdaaf12ac7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9ffb7e2a-6109-4503-b554-c7724bef2773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac45464-cfb0-4cc5-8e71-58887d277978",
        "cursor": {
          "ref": "88511eca-9d3a-4a42-8a08-e15b090f0a69",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "53c99371-1428-4c04-8f50-6525e1974dad"
        },
        "item": {
          "id": "4ac45464-cfb0-4cc5-8e71-58887d277978",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e099066d-a3eb-40f8-88ac-3f2dd0fe962a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b144cc7-11e8-43b3-a42a-6f6b0d891320",
        "cursor": {
          "ref": "116e47b9-718d-4d4e-8a61-b4fb54c86671",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eda0f9d5-0547-446c-9656-6e4e12d6fb46"
        },
        "item": {
          "id": "9b144cc7-11e8-43b3-a42a-6f6b0d891320",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ce82738e-8bfc-46bb-81b8-27de10e1d668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec477eb8-224e-4cae-9e87-7b1e072a5529",
        "cursor": {
          "ref": "348d3190-1b31-4a08-bb26-44fa368af1a8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b9cb68ec-021c-4e6c-a3be-5938a56cef4e"
        },
        "item": {
          "id": "ec477eb8-224e-4cae-9e87-7b1e072a5529",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1904a135-b5e7-446e-b4c7-46af3dcf23cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a833f620-06e5-4996-b269-c89d9c4e55dc",
        "cursor": {
          "ref": "80129e20-338d-4b77-b3ce-d806ced5a775",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e6618749-f4fe-4b28-a456-10e5c7128c6f"
        },
        "item": {
          "id": "a833f620-06e5-4996-b269-c89d9c4e55dc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "440af276-179a-4ebf-b478-66bad6789a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0a0f24-03ad-4331-a038-4c04717a2089",
        "cursor": {
          "ref": "f37530e4-8964-41de-be5e-aaed0f452c12",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "abce1d51-eb01-4d3f-a5e7-d87a5811a506"
        },
        "item": {
          "id": "cd0a0f24-03ad-4331-a038-4c04717a2089",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d02fccc7-8cce-46bf-926b-6ddc13e2a97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b211f9a5-0fb1-42c0-aa02-966109dceb86",
        "cursor": {
          "ref": "852453f1-fa2b-4680-9a6c-cc585da93dfd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3aa83e19-0b63-4e7f-bc50-72456b7513e5"
        },
        "item": {
          "id": "b211f9a5-0fb1-42c0-aa02-966109dceb86",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "67fc524b-3f9b-4af3-bcca-27cdebed6726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2761c4c0-5efd-4d35-84dc-c9891092997e",
        "cursor": {
          "ref": "ce907f18-8c4c-44da-ba59-46926250b9dd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7cdd4997-dd8a-4575-ba45-e00342173421"
        },
        "item": {
          "id": "2761c4c0-5efd-4d35-84dc-c9891092997e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b57c54bc-feb1-441e-830e-bddfeade8af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0cd771-57ed-4283-898d-f46f41b91eab",
        "cursor": {
          "ref": "b784fb1f-5ba9-425d-be61-bde3d1d33b0f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bcda69e2-24f5-4f28-8b7c-f2c950140b19"
        },
        "item": {
          "id": "ee0cd771-57ed-4283-898d-f46f41b91eab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "098e0207-479c-4096-9d3a-015d5dc43f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f15b09b-d471-439f-a280-23e7da6e14dd",
        "cursor": {
          "ref": "b7c19f5f-89cb-4a69-89ae-a15e6c729aa0",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5a31d0b2-8cf7-4638-ac25-06023192fc8d"
        },
        "item": {
          "id": "4f15b09b-d471-439f-a280-23e7da6e14dd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8175b81d-ece0-44f3-ae14-26f074d01142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e39e16-520e-409b-8b91-ed5c60e19e82",
        "cursor": {
          "ref": "dd30a50d-c644-4319-975d-8eeb628f44e0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53239af0-953b-487d-8664-23dd559cb15f"
        },
        "item": {
          "id": "e0e39e16-520e-409b-8b91-ed5c60e19e82",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b734504-2351-4321-b61b-bf50533b62cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee0425b-dcf4-4fcd-8c18-95c6a4465e91",
        "cursor": {
          "ref": "78d31460-ae8a-4d4e-89a3-0ed4ca5edaf5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9936c312-aee5-4925-a521-3bfb44c7d4db"
        },
        "item": {
          "id": "5ee0425b-dcf4-4fcd-8c18-95c6a4465e91",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ccfeadf-d7c8-4123-a24e-9246409fb315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65426419-10c2-4dd5-b223-bd1104ca8365",
        "cursor": {
          "ref": "bd46de5a-5694-42a4-8ac4-f3a05e55d182",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6cc3a38f-c94d-41c3-b6fa-2a1090952f2c"
        },
        "item": {
          "id": "65426419-10c2-4dd5-b223-bd1104ca8365",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "be9353fa-2187-45d6-92e3-a461f1d0708c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df12be93-8eb6-4430-a25f-347197470e4e",
        "cursor": {
          "ref": "984ded5c-aa2b-4295-88dc-2a7b37c00a96",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1abb2685-9f84-490d-90a4-0fe2ea7b7973"
        },
        "item": {
          "id": "df12be93-8eb6-4430-a25f-347197470e4e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "862ae689-ac9d-4831-b379-af4a7fa4a885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebea2b9-68d9-4978-b498-6200d8fce19b",
        "cursor": {
          "ref": "e17cbaaf-20c8-4832-8131-4fa639b5c11d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "48414d9c-c16f-4d6e-a476-c749a5035797"
        },
        "item": {
          "id": "cebea2b9-68d9-4978-b498-6200d8fce19b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d37cb3c7-0a54-4fed-af1e-b6fe2b938b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bceb8f-a13f-4d86-922f-4610f3433d54",
        "cursor": {
          "ref": "eaf203be-2aa8-4038-9b24-8aa6cd684c77",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "863587c9-8b11-4e9a-bd5f-838f4c6c1268"
        },
        "item": {
          "id": "23bceb8f-a13f-4d86-922f-4610f3433d54",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "acf523de-c9e7-4f9b-9bc3-407e816acb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fc2055-9c62-4cd1-8135-71849967b0f7",
        "cursor": {
          "ref": "e9d68b1f-8033-451d-af61-606c336f5d79",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7747ce2e-10f5-4132-88da-d2ee5758e11f"
        },
        "item": {
          "id": "15fc2055-9c62-4cd1-8135-71849967b0f7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7359533f-b3f1-4eac-836a-591cccd01606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6b51ae-c784-46ad-b091-208e619cdff2",
        "cursor": {
          "ref": "e8c57cd8-2392-449a-80d9-679267cf9d33",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9999283f-b6a4-4f4f-9b9b-30cfcf684c34"
        },
        "item": {
          "id": "2e6b51ae-c784-46ad-b091-208e619cdff2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b5c86eb4-f2cb-4d18-bba9-fdda23c38f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368e8f2b-1bcb-4ca3-8cfe-9f564dfb7117",
        "cursor": {
          "ref": "bf6dca41-556d-4221-bae1-0375a426a974",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "abff0920-3d77-411b-a9f1-03212e70cc91"
        },
        "item": {
          "id": "368e8f2b-1bcb-4ca3-8cfe-9f564dfb7117",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d2c5d0a0-19d7-44ee-8c5f-0154fdda9994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6186e900-8524-4619-a3f9-aac152e65244",
        "cursor": {
          "ref": "cc2abd1b-ee0f-4edb-83ab-6c2257051398",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b7a110ef-ee1f-4624-830e-d5c6ae8eeea2"
        },
        "item": {
          "id": "6186e900-8524-4619-a3f9-aac152e65244",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1f3736ab-a778-4e0b-8d0a-3533762c1ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3bc8da-5b07-4e98-8169-a0b9959aa446",
        "cursor": {
          "ref": "c5af9a8a-987c-4977-a5c7-672e6173ef9b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3b5be1c6-581b-4cfb-80d1-217b4ab2264a"
        },
        "item": {
          "id": "be3bc8da-5b07-4e98-8169-a0b9959aa446",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "20fc8f9d-e3b5-4876-9e5b-b0b4ca7ef6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594df6e4-9a77-44af-8487-60c8c7dc73ae",
        "cursor": {
          "ref": "755dc803-58f5-4e1a-b8d7-4c9ff9c4d667",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36e5854a-1ff5-411b-8bce-148666cd0075"
        },
        "item": {
          "id": "594df6e4-9a77-44af-8487-60c8c7dc73ae",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e89946cc-78a0-432e-b1a8-5a94b88b1a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a53bd5-3191-4e2c-982a-4e42f46b106b",
        "cursor": {
          "ref": "e86188c3-088e-4f98-9b7f-f5e1e9a71157",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c80cba6a-1821-4dae-b3d9-046c9ea3a2e3"
        },
        "item": {
          "id": "e9a53bd5-3191-4e2c-982a-4e42f46b106b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "70dc9c5c-506c-4b2a-9efc-65894e6e4142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7226133b-7c0b-4436-91e5-7817ea4ab5fb",
        "cursor": {
          "ref": "91dbf7a9-45f8-4825-a20c-cf65612581ed",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cf7a018e-0d67-4d00-bdef-14bff3ebceaa"
        },
        "item": {
          "id": "7226133b-7c0b-4436-91e5-7817ea4ab5fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3a2fe627-8014-4273-8f6e-64a7033fd7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4735022-dfb5-46d9-9147-873ff1057710",
        "cursor": {
          "ref": "d4879efe-54ad-4f85-b4d0-a5256bf543b5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d082e49d-2173-4b6b-83a5-83f3acc9d433"
        },
        "item": {
          "id": "a4735022-dfb5-46d9-9147-873ff1057710",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6a77eaf9-144d-4c6b-bce6-a88fd21ce76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4dcb78-934f-4d90-9471-bc13b22e07ef",
        "cursor": {
          "ref": "5ec726d5-1ffb-4ac3-9d82-dea820541883",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e00d7107-44dd-4407-b44f-3dcd3b4d4243"
        },
        "item": {
          "id": "ad4dcb78-934f-4d90-9471-bc13b22e07ef",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "653ab5a7-94b8-4829-a010-da07e3b0697a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d160c608-c01f-4c34-ad7a-817659e91549",
        "cursor": {
          "ref": "b6656042-25eb-46aa-89ca-a981b0d198f9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b33b8da5-641e-488d-834e-afb862ee0001"
        },
        "item": {
          "id": "d160c608-c01f-4c34-ad7a-817659e91549",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8faa6d0b-10a2-4000-97a5-0e7f8f805446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f49cc2-22a1-471c-9eaf-98e02e53cc9d",
        "cursor": {
          "ref": "c1734b0a-29ef-4303-a3cc-4afbe0baed93",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bd051fab-11d4-463d-baab-2a683cfa43bb"
        },
        "item": {
          "id": "71f49cc2-22a1-471c-9eaf-98e02e53cc9d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8104b690-67c1-43c4-bee5-f8ba18a90afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d46861-e598-4741-9a42-c714b9ec6b83",
        "cursor": {
          "ref": "d30ab8cc-225a-4d85-81d2-f9f4debfbb4a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ba9a373a-696e-46f3-84eb-a3bb388bb5d3"
        },
        "item": {
          "id": "05d46861-e598-4741-9a42-c714b9ec6b83",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b1eebc55-be01-462a-a0aa-c3126910d035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9620915-36e6-4311-98db-013f2087437b",
        "cursor": {
          "ref": "f8d2eca3-de4f-4fc7-843d-e64cf24eac83",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "266d1c06-17e1-4767-99de-ba8346c1d81d"
        },
        "item": {
          "id": "b9620915-36e6-4311-98db-013f2087437b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "97b81f83-0d73-4f32-968b-f090cbc5bf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea95030-933a-4575-8770-1092e0e11d0f",
        "cursor": {
          "ref": "416659fa-8418-431a-9919-039bb6734893",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0b075fda-5437-4f8f-93c2-6acef4245d8a"
        },
        "item": {
          "id": "cea95030-933a-4575-8770-1092e0e11d0f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "00515df9-5eaf-445a-92c9-2d3679750fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f439c52-c302-412c-a8d3-5b80646fbc6f",
        "cursor": {
          "ref": "1b60fe89-471b-4605-adc6-ee7ef7311fcc",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2d84df39-05dd-472e-b732-ead65ac2f285"
        },
        "item": {
          "id": "8f439c52-c302-412c-a8d3-5b80646fbc6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "99173e5c-870b-4908-8a15-0d2926354c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5729124-d8b5-4f26-9341-6daf2b1e864c",
        "cursor": {
          "ref": "ecdac28c-cbc3-46b0-963c-770b43c4b40b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7e681cfe-c7cc-47e0-8ab2-48fc8bb36209"
        },
        "item": {
          "id": "e5729124-d8b5-4f26-9341-6daf2b1e864c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b1014a83-ec7d-4588-aaf9-ca5eb545fe68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ce516c-df52-4dd9-9a77-d52d2d0f0857",
        "cursor": {
          "ref": "e99dde7f-4fb0-421f-a2dc-ce7f504e1540",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b8e90be5-fcb8-48d9-bb42-a9f163d81212"
        },
        "item": {
          "id": "06ce516c-df52-4dd9-9a77-d52d2d0f0857",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0b391094-d696-472d-929c-005a8c9e8618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b284e-4074-4cd1-9be9-3c2d6f00de76",
        "cursor": {
          "ref": "57a67a85-ea14-4096-9b10-b87af61a25fa",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a48bf98b-b749-40f9-8033-436daebf2b84"
        },
        "item": {
          "id": "ce1b284e-4074-4cd1-9be9-3c2d6f00de76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3142b75d-3f3c-403d-9611-12ba1e85ee77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54624768-c075-44d1-a8e1-f357fde22113",
        "cursor": {
          "ref": "db624773-7edd-4369-8e5a-625d98d2ceaf",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "088dc37f-34be-499c-b0dc-e4bf372c48da"
        },
        "item": {
          "id": "54624768-c075-44d1-a8e1-f357fde22113",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "27c972fe-b75e-4f0e-973b-d30af554c79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bc2458-f389-4d5f-90ba-93c623118d38",
        "cursor": {
          "ref": "c79f989a-a809-46f6-87f8-8ed2df5b770d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fbb9bc9f-b462-43f4-aba9-9b5a22d4484a"
        },
        "item": {
          "id": "66bc2458-f389-4d5f-90ba-93c623118d38",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "13ae14eb-e5b0-4ec0-9f89-7c100877d69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0818be3d-b765-4313-ae97-8566858c704d",
        "cursor": {
          "ref": "be82e7da-8bf0-4d71-95cb-7e88f7aa5fe9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c461a452-1261-4122-9ec8-0ad2d61453ec"
        },
        "item": {
          "id": "0818be3d-b765-4313-ae97-8566858c704d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "05f01352-99d2-4cf8-8b0f-f052e167ff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784870b7-0a08-453e-9f04-700df397ecd0",
        "cursor": {
          "ref": "c67f7237-79d0-4bf6-bf70-60186941def5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c7f7d48d-4125-48c8-9f50-18ec6763a116"
        },
        "item": {
          "id": "784870b7-0a08-453e-9f04-700df397ecd0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "faf7a198-9a66-4060-b0b7-d1e2184ab3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aaf844-36f8-4c9b-8ed9-7e5b270d993c",
        "cursor": {
          "ref": "cbdf6f87-3557-4545-b1d2-b46ab02ab6d2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6c29e566-0b04-467e-a499-efebff53df90"
        },
        "item": {
          "id": "93aaf844-36f8-4c9b-8ed9-7e5b270d993c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb212e5a-751f-4719-87bb-75f997ea6913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8166eff-5ec0-49a3-8efb-b37f2604c708",
        "cursor": {
          "ref": "d0818fc7-c226-4c8d-8b91-d090061ccf2d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0838c4e5-1739-4eed-b710-4c0a744e15fd"
        },
        "item": {
          "id": "c8166eff-5ec0-49a3-8efb-b37f2604c708",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a98eaf2c-84c4-48a9-a596-b0d6464c4f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d15138-5bd5-4b9d-ac29-8014730c3677",
        "cursor": {
          "ref": "badbec48-4ace-4dcb-b0da-86344572c1fe",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8107b2ba-0e46-4848-9bc4-db77fa50e37a"
        },
        "item": {
          "id": "87d15138-5bd5-4b9d-ac29-8014730c3677",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "192d0a38-07ed-4ac5-83de-6273cd933f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b6ea65-2e36-4639-855b-62d06ca9690c",
        "cursor": {
          "ref": "7226987e-97b0-4441-a333-3b29d4336e2f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f043c9de-0a86-4f83-8bc3-7a91610dabef"
        },
        "item": {
          "id": "d0b6ea65-2e36-4639-855b-62d06ca9690c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "df92421d-d62a-46ef-abe0-2aa5dd7850b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a068439-11c4-47cc-b5b6-d419b4ec2859",
        "cursor": {
          "ref": "922932d5-cc82-4dd0-a726-471c59b543d5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "92f48f50-04d1-4675-a024-70f59d2c770b"
        },
        "item": {
          "id": "4a068439-11c4-47cc-b5b6-d419b4ec2859",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6e164509-3eee-4e26-a2f0-5da6b239bc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ba1743-e9ea-4b76-a449-28f7bbcf2a3d",
        "cursor": {
          "ref": "db202a4a-e5f0-40d2-9362-53e8252d9343",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "62a98142-6cb0-459c-851a-bceec923d8e1"
        },
        "item": {
          "id": "64ba1743-e9ea-4b76-a449-28f7bbcf2a3d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3e9fb39a-52ae-474a-a1e2-fc8dcaca3295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c971b33a-3b84-4125-b73a-a1ba4118f02f",
        "cursor": {
          "ref": "5ddd5409-9a0c-4702-afa9-a3ddad3d55e4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e396a870-0139-402c-9c36-49af357983e0"
        },
        "item": {
          "id": "c971b33a-3b84-4125-b73a-a1ba4118f02f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0e68c89c-d669-4e02-a30c-45e2c2997c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0a4838-3d74-42c5-b7d6-bdc0fd547847",
        "cursor": {
          "ref": "6ca39ae4-f7cd-4be8-ab76-4cc8f7d91ce2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "edc989e1-348c-4678-abe3-94c984320b59"
        },
        "item": {
          "id": "1b0a4838-3d74-42c5-b7d6-bdc0fd547847",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3f6a3b59-4f90-4892-b36a-9aa695dd6fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17adda6-504a-4785-b608-db8270b1ef4a",
        "cursor": {
          "ref": "5446b9b5-eabb-4100-95a8-89b64748ac0c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b91cc01-10f1-4646-be8b-b8617f5cbf8d"
        },
        "item": {
          "id": "f17adda6-504a-4785-b608-db8270b1ef4a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "298b364b-9f66-4cb6-8e9c-8f6326ccd3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baf29c5-1e4b-40ee-a1fd-a44e75ee56aa",
        "cursor": {
          "ref": "f698e528-79d7-4b31-ad00-ed0fe9bb0c52",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fb16992a-3250-4eb4-9d9f-9a12d46970e0"
        },
        "item": {
          "id": "9baf29c5-1e4b-40ee-a1fd-a44e75ee56aa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c6c7ce4f-609c-4422-a9db-dfa5b5ca24ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035d9b87-d022-46ad-ac02-864dad8b43c4",
        "cursor": {
          "ref": "88e80da2-43ed-438e-b5ea-0d04a642735f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b3d866c5-cdc4-406c-8441-93a5ccce4986"
        },
        "item": {
          "id": "035d9b87-d022-46ad-ac02-864dad8b43c4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d875a17e-ab8f-4537-97c9-1dfdd558f0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f7580a-8545-4dc5-a571-c4d42706bd54",
        "cursor": {
          "ref": "864fcf28-e6c7-4882-8d24-ce6676c6d0e7",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "35016ffd-cf37-458c-8cf6-3a0b04cffb49"
        },
        "item": {
          "id": "b3f7580a-8545-4dc5-a571-c4d42706bd54",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b35022a6-e7cf-4300-bfbc-da69f57f647d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31ebfff-6824-4919-97ae-efcd3cd5492d",
        "cursor": {
          "ref": "1a52a1c3-4aa6-4734-9a6d-1584dca97180",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "30d2489f-4ed4-40af-abfa-9d0c413d83fa"
        },
        "item": {
          "id": "c31ebfff-6824-4919-97ae-efcd3cd5492d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1dd3a49b-0248-4f55-968f-d9fbc41d0713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee73478-4aba-4e47-879e-925ee369dd2a",
        "cursor": {
          "ref": "ca0989c0-d3f0-4837-8dfb-e1d966d91c1e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6500729b-d9f1-4455-8f38-0dd8f6fde779"
        },
        "item": {
          "id": "5ee73478-4aba-4e47-879e-925ee369dd2a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3009642a-4ed6-4a39-82f8-820e73a626c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610bd701-ae73-42a9-a0a5-ea65ff947198",
        "cursor": {
          "ref": "e615638b-555b-49fc-a7d0-0de72977f9d6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a5754fa1-0332-4390-b684-f1e1354346f5"
        },
        "item": {
          "id": "610bd701-ae73-42a9-a0a5-ea65ff947198",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e56b5877-595a-49e5-8c9c-847f7ecc6797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0792da-5f55-454a-9cfc-ac633fa6d73e",
        "cursor": {
          "ref": "b3101154-ad88-4e70-8e1e-5da1204cdd39",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6bfce2ab-0f6e-4b39-bd86-c6ac9feefa2e"
        },
        "item": {
          "id": "8b0792da-5f55-454a-9cfc-ac633fa6d73e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7c6ca4b0-84a6-4d6c-b618-14fc4331000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eb09e6-23cf-4155-9e28-d1dbf1e1af56",
        "cursor": {
          "ref": "5e34fcc9-fefe-4a05-81f5-9d7ce1ff536b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bcb5460c-fbf5-4ab5-b477-12fe9822f92b"
        },
        "item": {
          "id": "27eb09e6-23cf-4155-9e28-d1dbf1e1af56",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "199f62bd-d254-4449-a42d-b33ed2492bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3bb09a-b294-484b-980e-31ba34636cf6",
        "cursor": {
          "ref": "70ef309d-27e1-402c-a558-501bd73cd3d0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bb3dc1d3-0bba-4b9e-9a59-b082087e5144"
        },
        "item": {
          "id": "1f3bb09a-b294-484b-980e-31ba34636cf6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "de3d9dc3-68d1-4a24-928c-17d64c0fb742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3659d622-0810-482d-a111-8fb10bf2c0f1",
        "cursor": {
          "ref": "3ec431c2-fd35-48c3-9418-bb73df96ae75",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "57f0be24-2c40-47f5-894d-d8cdafe3bf34"
        },
        "item": {
          "id": "3659d622-0810-482d-a111-8fb10bf2c0f1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "366c94e3-7658-44e9-aaf3-d76cf5c4b580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38e876b-7717-47eb-8c70-be6659a85ca6",
        "cursor": {
          "ref": "a6f2d0d2-5910-4f1a-94ef-d6a0e967b93e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "08444f31-8061-4a2b-9617-30360e644936"
        },
        "item": {
          "id": "f38e876b-7717-47eb-8c70-be6659a85ca6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ddcf4b9a-9b64-452d-8105-7e7fa1295dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520163b8-d9c0-45b9-9f4f-234933648c4c",
        "cursor": {
          "ref": "97e769f0-2220-487c-9493-273c888a3db9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5779e867-6022-4b94-a3c9-7008165b1d31"
        },
        "item": {
          "id": "520163b8-d9c0-45b9-9f4f-234933648c4c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e4a285ca-0478-4a0e-a0ef-27103877ff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0e4f26-ada7-48ae-9892-4eeb1237995c",
        "cursor": {
          "ref": "afce28e5-83a7-4981-9269-ca95fd21d683",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8b426350-4cd0-4b51-ae8a-e0cdf210970a"
        },
        "item": {
          "id": "4f0e4f26-ada7-48ae-9892-4eeb1237995c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "164eff02-47e6-4edd-9ac2-e981cde8c351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc94dfa2-2816-4da2-912f-66d7a78f3e34",
        "cursor": {
          "ref": "a27c4162-be94-422e-b005-bad270d437bc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e509fef4-8e27-4503-a358-15567f790241"
        },
        "item": {
          "id": "bc94dfa2-2816-4da2-912f-66d7a78f3e34",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8597b98d-d4f3-4a65-93fa-caa2649e2475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc450e9b-d36a-4553-8d1d-e0959c1fc9f2",
        "cursor": {
          "ref": "3d5b0314-cd29-40c7-93e1-eabac2470ab6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dc0ab0a0-0604-422f-ad5e-c91c61510261"
        },
        "item": {
          "id": "dc450e9b-d36a-4553-8d1d-e0959c1fc9f2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "223cdf75-e4ac-4a7b-9f98-898b6d5edc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc980f34-98e8-471f-8343-7efce85bc36a",
        "cursor": {
          "ref": "261a15b4-45c1-4b89-8773-b26fce76c2d4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "304eb8ef-1251-40bd-be09-fc40bc67e265"
        },
        "item": {
          "id": "cc980f34-98e8-471f-8343-7efce85bc36a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0cb3e5fd-dacb-4134-842d-8e63b2831f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f45a30-8ca9-4aa5-b553-a33f4ec52e7c",
        "cursor": {
          "ref": "3d78747d-2594-4c06-9a66-915ad57af5a9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f1e8726c-f7c3-44db-a991-9f40a251f620"
        },
        "item": {
          "id": "a3f45a30-8ca9-4aa5-b553-a33f4ec52e7c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8f14517d-b00f-43e8-8ebb-be430fd958d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca28fd0f-14d2-4b77-8cd6-e83f7e9b5e9f",
        "cursor": {
          "ref": "f49fbc08-aeb7-41ab-b0ad-0e871590c4c4",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bac5e154-5592-40e5-99cc-a4d5f06d6a01"
        },
        "item": {
          "id": "ca28fd0f-14d2-4b77-8cd6-e83f7e9b5e9f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "98a35b51-505e-4b28-abfb-40fae2d01da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b42974a-e458-4452-b510-9a7f30e9d00a",
        "cursor": {
          "ref": "01a1dc3d-5636-4431-809a-b27b57ec1e02",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ad357323-5cd3-4aa2-af70-0338aa10dfc8"
        },
        "item": {
          "id": "1b42974a-e458-4452-b510-9a7f30e9d00a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "433ca6d8-a526-46ae-bfdb-398f5aaf49aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b695e40c-1c7f-4e15-b707-1c7599839bdd",
        "cursor": {
          "ref": "e80def87-b4c8-4ee6-8eb2-204246e4568e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c43ade93-9824-4db7-aecc-79b2f392e59f"
        },
        "item": {
          "id": "b695e40c-1c7f-4e15-b707-1c7599839bdd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d863c7c0-b434-43d2-b163-de55ea3ff53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "548bfad0-9f9e-4a33-85fe-2122b839f1c3",
        "cursor": {
          "ref": "f57b3272-1ab7-4d10-87d2-40e75ed58b2d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d7f76bd6-67e9-42b7-b6b1-37258e818e0c"
        },
        "item": {
          "id": "548bfad0-9f9e-4a33-85fe-2122b839f1c3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2371caad-9528-4f7a-a82d-8f715214117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6053c9b3-978e-4344-ba91-840f0f9fac8e",
        "cursor": {
          "ref": "1ab356d3-6e90-499e-a2e4-d09a48301bbf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "971b914f-a8ec-4469-8831-a94b953b4de5"
        },
        "item": {
          "id": "6053c9b3-978e-4344-ba91-840f0f9fac8e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a21efd38-5262-4f7c-88d9-1964792614a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "85848d6c-29b6-40c1-a585-b690e5544eb3",
        "cursor": {
          "ref": "90115794-2477-4f77-85c9-e04ee175ebe7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f73d2eae-657b-48ea-bed1-a71ff880cfa6"
        },
        "item": {
          "id": "85848d6c-29b6-40c1-a585-b690e5544eb3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "39419818-c69d-4c0c-9913-5f460c3496d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "730675fe-4a02-4ef4-9144-11129d3ab9a3",
        "cursor": {
          "ref": "8a615342-5ada-4bd4-b7f3-94aad4fbdc86",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dd166941-c679-408a-8357-fca2c4765581"
        },
        "item": {
          "id": "730675fe-4a02-4ef4-9144-11129d3ab9a3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "565141c5-79cd-4ef4-b302-a255f05e5303",
          "status": "Created",
          "code": 201,
          "responseTime": 8406,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0ffd3c-bfa8-43c5-8cee-1cd1d2f5dfcb",
        "cursor": {
          "ref": "0ea01b88-6730-42f4-b5b2-61fffbb2b188",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a0134bed-d8f9-44b1-917b-e75e85b6072b"
        },
        "item": {
          "id": "3e0ffd3c-bfa8-43c5-8cee-1cd1d2f5dfcb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cf8d98ac-bb65-4b28-a6b8-23d3141e5f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1ee6ccdd-811c-429d-ba5a-66d80bb60674",
        "cursor": {
          "ref": "94f9f10c-588d-4a07-b056-82f4db9a9f00",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "60ebbb36-9800-42b7-8966-5d3cf28609ce"
        },
        "item": {
          "id": "1ee6ccdd-811c-429d-ba5a-66d80bb60674",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "194eb66d-7799-481e-bdc7-7f16c57e517f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "11373ca5-3602-41b0-a2c1-c6df2fbf2316",
        "cursor": {
          "ref": "96608cb9-1a81-415c-b201-625a0b4d2320",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8dd8ab5b-8fdb-4258-a852-77f2265da9ff"
        },
        "item": {
          "id": "11373ca5-3602-41b0-a2c1-c6df2fbf2316",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9e7f2c5-2d2b-4726-8ff6-0ff2b9dc101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad345ed-26be-42be-b825-555a96f4905d",
        "cursor": {
          "ref": "ac0432e2-e113-4c33-8213-2d39ce84ff39",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4311a6b6-8b82-4b53-958a-ed68e560d0d8"
        },
        "item": {
          "id": "1ad345ed-26be-42be-b825-555a96f4905d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "359bc131-330f-4a8c-872d-82155a67cc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87cb1ef-6763-456f-aff0-51921ba86f42",
        "cursor": {
          "ref": "248afec6-a3f2-4f28-967c-441db8e024a1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "87613bad-72e3-46c1-8574-f2b8abc09ec4"
        },
        "item": {
          "id": "b87cb1ef-6763-456f-aff0-51921ba86f42",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1e02040f-49fc-400a-95fb-3a57d6cf47ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8f4b7e-493e-4665-b125-39b3ba86ab48",
        "cursor": {
          "ref": "06bbf093-f311-4b28-98cc-accef6297d45",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "30a7f36b-d94b-4d2f-a885-12b54db797e3"
        },
        "item": {
          "id": "3b8f4b7e-493e-4665-b125-39b3ba86ab48",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1a108cc-50b3-4b48-b132-35b0857dd108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721a1159-6670-466b-80f6-b3512d0b186a",
        "cursor": {
          "ref": "a13a77da-7932-433f-8bcd-ce6a11b42219",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4df7547d-703b-434e-b4b9-478b7ecc1e75"
        },
        "item": {
          "id": "721a1159-6670-466b-80f6-b3512d0b186a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "16d2fd37-44a7-4b6e-b9ae-ac789d05efa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446549c9-c5f5-4417-a2da-ae57e2ee9a4f",
        "cursor": {
          "ref": "578cf604-c427-4810-a082-064d67244f11",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "562646d1-a19d-4d4f-934b-1404d40f4719"
        },
        "item": {
          "id": "446549c9-c5f5-4417-a2da-ae57e2ee9a4f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c2ee29d9-cdbf-42a8-84d4-f8f91708a38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec64342-6afd-488f-b981-805a07d51c3d",
        "cursor": {
          "ref": "84867d17-9eae-4046-9fa5-8e9f2b0a8653",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7cb81664-0d53-476d-b37e-e6790ccb33c1"
        },
        "item": {
          "id": "bec64342-6afd-488f-b981-805a07d51c3d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b5dd06b4-01ca-4117-9d13-d9d273f0d65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9300e736-a3a1-4090-aab0-c32e841c2e6e",
        "cursor": {
          "ref": "265d1eb7-077e-4094-af42-cee9d390b7d8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "475cdd5d-868e-4b3f-944b-b93559b2dcd3"
        },
        "item": {
          "id": "9300e736-a3a1-4090-aab0-c32e841c2e6e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "939376b0-f791-4dc3-b871-7625628628a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1689aa-b5a2-4a4f-86ee-2c90b06f4d84",
        "cursor": {
          "ref": "008d667d-d396-42d3-b2fb-facd0710e8b1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e64139d7-c378-4a1e-96a0-91158a3ff854"
        },
        "item": {
          "id": "4f1689aa-b5a2-4a4f-86ee-2c90b06f4d84",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54c154d6-b749-4156-8ed7-96c58d34f135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f5e2ba-2faa-4fa3-812a-c79734713ab5",
        "cursor": {
          "ref": "03667bda-6bca-4692-afce-231f5191e73c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "54b9dda7-ce06-487e-842c-2700e58113fa"
        },
        "item": {
          "id": "f6f5e2ba-2faa-4fa3-812a-c79734713ab5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b02fd0d2-3001-4110-aebe-88674e1c9af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53508e2c-2713-4f4f-b191-2cbc8f1dccec",
        "cursor": {
          "ref": "25bc2b53-5348-453a-ab8e-445251ffc1e4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7dd09a17-e4fd-48ff-ad77-b636ee145e24"
        },
        "item": {
          "id": "53508e2c-2713-4f4f-b191-2cbc8f1dccec",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "02654d2b-6fb6-4c1a-bd95-a8e445dcbc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df48351-090e-4dae-bdc5-38eb5ac6a83c",
        "cursor": {
          "ref": "9da8c642-0485-40cc-b1cf-be69ee5ae386",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "90551ed3-4f74-46bb-aef9-9a9d02cf43bc"
        },
        "item": {
          "id": "4df48351-090e-4dae-bdc5-38eb5ac6a83c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3d6f9695-f6c9-42d6-8efb-1b1372937e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc39fc60-291d-4d53-8eac-a0e1dfda27eb",
        "cursor": {
          "ref": "2f544868-b4fe-489c-b7c6-7c624b8c054d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1b467a3d-06e2-478b-b309-e6be2d7b52e7"
        },
        "item": {
          "id": "bc39fc60-291d-4d53-8eac-a0e1dfda27eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5a0bbae6-61c1-427a-ad22-c5ccf08f3a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539289a3-f6f2-441c-bbaf-8304f4ce3519",
        "cursor": {
          "ref": "b496f065-7609-48f6-9870-f8d383faf759",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7484df86-9726-4435-9784-3055c3afa1dc"
        },
        "item": {
          "id": "539289a3-f6f2-441c-bbaf-8304f4ce3519",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bb6a0305-62eb-43f7-94e8-c2ab813aa20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4298b3a-5f7e-48d1-b4ab-50c0c6297af6",
        "cursor": {
          "ref": "3d769649-25bc-4975-aabd-746b36e001f6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dc7e3afd-d950-4615-be8c-766e7bd7f93f"
        },
        "item": {
          "id": "d4298b3a-5f7e-48d1-b4ab-50c0c6297af6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45ac17c0-e500-4328-8f52-86d58ffbc081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503fa399-3b61-4752-8bf8-865664fa6bb5",
        "cursor": {
          "ref": "1cb90177-0cd6-48a0-bd44-75b55f1c3ca2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c380c2f-844e-43ce-8c79-6f04338a4e28"
        },
        "item": {
          "id": "503fa399-3b61-4752-8bf8-865664fa6bb5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4a09e07f-b3cd-42c1-be35-5c381a7c5235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db64c91-8fba-4fa2-9140-93cbb4e3f8ed",
        "cursor": {
          "ref": "96373852-888f-4776-872b-3ec3cdb70fd9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "16078e61-c987-401d-ae0c-d8202a2973d2"
        },
        "item": {
          "id": "7db64c91-8fba-4fa2-9140-93cbb4e3f8ed",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aabb3bc2-91e0-44e7-adc5-61b2d28cfb95",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "1de31e46-2a92-4a64-9b51-45c1147ff7f5",
        "cursor": {
          "ref": "6f062658-c389-4980-aae5-041f96112d71",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "779cdeb0-cb9a-49dc-9ce8-ad098a6370a9"
        },
        "item": {
          "id": "1de31e46-2a92-4a64-9b51-45c1147ff7f5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc6b22b9-2acb-4b5f-b049-b7b127eaf417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51ec6a6-f38c-4a07-b9d8-6b8d03419ee5",
        "cursor": {
          "ref": "a4c45a1a-a61b-498a-a751-9c219e5e92cc",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3c7fe8cc-665f-473b-a73b-9ddef06864c1"
        },
        "item": {
          "id": "f51ec6a6-f38c-4a07-b9d8-6b8d03419ee5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8617e686-d189-489f-bf97-b9ebbd17021f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0244af8-c2c5-4e03-99f3-0e154fac2e7c",
        "cursor": {
          "ref": "22cd476d-e4a9-4815-a217-c3838de8a299",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e11815d4-6c04-40a9-b36b-8af474cebd5b"
        },
        "item": {
          "id": "b0244af8-c2c5-4e03-99f3-0e154fac2e7c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd9107db-0c2f-4594-86ef-20d2b73dfd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbae7e35-a749-4c8e-b00f-604d3787f6bb",
        "cursor": {
          "ref": "c5f224c9-adcc-4c8f-8314-7049ca0b52f3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "010fd5c0-05a7-4f3b-9f3a-f855c4eb1de7"
        },
        "item": {
          "id": "dbae7e35-a749-4c8e-b00f-604d3787f6bb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "33c1c860-6442-413f-91f8-58efe45a8d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3909f376-f123-4268-9d44-3a1b9ff4c393",
        "cursor": {
          "ref": "e8cb8abe-003a-4903-919c-cf5707a5492a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c7820eaa-5068-4366-a5bf-736df402ac99"
        },
        "item": {
          "id": "3909f376-f123-4268-9d44-3a1b9ff4c393",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0e2e5b97-34b1-4024-ad2f-c2faf7ad094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f4e9ae-0420-47fc-9e89-f24ea9515fda",
        "cursor": {
          "ref": "0b33b048-ec1b-4ef3-b5a5-805fb0c63320",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3b56dc69-5551-497c-8084-ad58361c7d4d"
        },
        "item": {
          "id": "07f4e9ae-0420-47fc-9e89-f24ea9515fda",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0ab13a28-b4b0-4eaa-98f5-8cae101393ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf7720c-6583-466a-a4f4-171b7d223edb",
        "cursor": {
          "ref": "3ab0e0f3-d465-4ea1-8cbc-ea0a8b2f3731",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "387e5f3c-208e-4929-9a70-dbcaa7db2eaa"
        },
        "item": {
          "id": "abf7720c-6583-466a-a4f4-171b7d223edb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4b6d4e81-3f1c-4b26-9a78-04f13023de65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771db6a5-f31a-4734-91b3-e95ce8a4a14d",
        "cursor": {
          "ref": "18b51d2f-c764-4531-9bdf-e76f6d63409b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5d1feddd-61c4-44b0-b389-0eb1919d6934"
        },
        "item": {
          "id": "771db6a5-f31a-4734-91b3-e95ce8a4a14d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eb384377-2d96-468a-9b7b-519de19f5a49",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f9e86487-8496-4789-979d-1e3c3b60dfdc",
        "cursor": {
          "ref": "518d63c4-1b36-4d89-b38c-c4ac4634ce28",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b7b7f105-8471-4f9f-bfd3-44a2cd9c1489"
        },
        "item": {
          "id": "f9e86487-8496-4789-979d-1e3c3b60dfdc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1e00d606-5c4b-4557-8de3-db21083c4c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea0c41f-0205-4120-9e71-6a179ae4df5a",
        "cursor": {
          "ref": "9de4487d-e7a2-4cf7-a81f-24f9b8652586",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "043b73d2-6a0b-483d-abdd-7a18863d8bfd"
        },
        "item": {
          "id": "7ea0c41f-0205-4120-9e71-6a179ae4df5a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "79c03518-eb20-4bb2-98c8-05fd78457708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ae654e-3e77-4708-b8d6-8591406f8085",
        "cursor": {
          "ref": "c5063977-cb3f-47e3-9692-2af2cd36966e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f9b1babd-bb2d-40fb-a779-295528b65bd2"
        },
        "item": {
          "id": "27ae654e-3e77-4708-b8d6-8591406f8085",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "138bd0c1-5257-4b49-bc9e-33478cffc617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f237724-d877-4fe8-801a-91e2c1b69e73",
        "cursor": {
          "ref": "92a9ccd7-8506-4bee-9ba3-aad92074fb63",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3d2383c1-b776-46ba-9ff9-0300615204f8"
        },
        "item": {
          "id": "5f237724-d877-4fe8-801a-91e2c1b69e73",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "78b6764c-1bcb-4c85-bf4a-5addac2f8104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d16ee9-7900-4ec9-95ae-14a5988af0f0",
        "cursor": {
          "ref": "0a26096a-da57-4f2d-aefa-b955a0d51a05",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4eb95631-0f52-4832-9eb7-4c2f52df467e"
        },
        "item": {
          "id": "c4d16ee9-7900-4ec9-95ae-14a5988af0f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0926c83c-b5c5-4f8a-8198-d9a11fdded70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcd3877-703d-4f3e-af59-01ad48a7f5a4",
        "cursor": {
          "ref": "b2aec822-0699-445e-b69a-8f4dedaf9b80",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a3a6cd27-c750-414f-9dcf-daf1f309d153"
        },
        "item": {
          "id": "cbcd3877-703d-4f3e-af59-01ad48a7f5a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22978c7a-611f-4e2d-aabc-2aefb087d7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84578bc5-f15f-4395-a341-5f6d60ca2b6d",
        "cursor": {
          "ref": "24e02afe-65f8-4763-9da7-8eecb578fc3f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "165c2c70-7c8d-4b86-82b0-7737bcacbe54"
        },
        "item": {
          "id": "84578bc5-f15f-4395-a341-5f6d60ca2b6d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bbf853a6-71ab-4ea4-8846-b55072c350ab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2c7467a2-3a39-4b92-83d2-c839e00573fc",
        "cursor": {
          "ref": "4d6885a1-dfaa-4fe9-b17b-dee7099021df",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3ffed46a-71ff-4425-ade8-937bf500a67f"
        },
        "item": {
          "id": "2c7467a2-3a39-4b92-83d2-c839e00573fc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "05da6ccf-374f-4d08-bfaf-986689b57262",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "6c3dede2-e946-4d87-a438-9d8dc9abe0cd",
        "cursor": {
          "ref": "7b56afc0-6e40-4921-8e41-bf94db70b8f9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2bcbb095-972e-4dee-91a2-a530a1b0266c"
        },
        "item": {
          "id": "6c3dede2-e946-4d87-a438-9d8dc9abe0cd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b6d09ff2-aefd-4e66-9395-e33a26b41a7c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "c4aee98a-f9b5-444b-b672-6efbfc9e561f",
        "cursor": {
          "ref": "c6659899-a3e0-4ac5-b677-c2b42ffdb03a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e5fafa5d-73e6-4aa9-b05d-e8a8f1d8ac2a"
        },
        "item": {
          "id": "c4aee98a-f9b5-444b-b672-6efbfc9e561f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b644e827-4e9b-47f7-b341-bfed95379c13",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "167b6fc5-64a4-4170-8a66-d2134c08f06d",
        "cursor": {
          "ref": "2363180e-c3f3-43c6-8b01-050849ad2b13",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9e72438-1435-4fb9-9cce-161371574063"
        },
        "item": {
          "id": "167b6fc5-64a4-4170-8a66-d2134c08f06d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "55be7f8d-b78b-40bf-810e-8720d6bf5945",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c6a14c23-f1fd-4419-bdf0-af6263482861",
        "cursor": {
          "ref": "46ec78a3-4407-4fec-afed-1d9d2a9af387",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0c7a060-fb4b-410e-9627-bf309acbcf27"
        },
        "item": {
          "id": "c6a14c23-f1fd-4419-bdf0-af6263482861",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e84ce656-062b-43c8-9ddf-5313a69fea10",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "cb0804c4-2b2f-4f9a-a68f-b15854568c28",
        "cursor": {
          "ref": "af3764ad-f897-4a34-9ce3-c8780e16be09",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a8238000-db2a-4b17-ae49-98c989db48a9"
        },
        "item": {
          "id": "cb0804c4-2b2f-4f9a-a68f-b15854568c28",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6bca8d51-a4c2-4a89-8e6c-88891937dc6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26312fc-0d30-40aa-9085-68cf3b83334f",
        "cursor": {
          "ref": "93d395db-5d8a-44c3-bde1-97d81618605b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d6a53c43-6b37-4c7d-beb5-c6c2e3d1b1f7"
        },
        "item": {
          "id": "c26312fc-0d30-40aa-9085-68cf3b83334f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6a222af8-11d2-4400-a79c-dbfdf83b53bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9d007d-6751-450d-a9ac-b46b86600897",
        "cursor": {
          "ref": "622d253d-c9b1-4d28-aecb-680e08e5bb98",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1bddd92a-617b-45e0-9fb0-c442922a7c5e"
        },
        "item": {
          "id": "7d9d007d-6751-450d-a9ac-b46b86600897",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2a98bec6-98eb-4f24-9ebb-d5c97cb7c1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239cab42-2c5a-40fe-878d-8c2867a25321",
        "cursor": {
          "ref": "d0f0a0f9-8d2d-4ca5-80a4-635508430813",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "29193eaf-ee66-4718-9c68-911e6aec5988"
        },
        "item": {
          "id": "239cab42-2c5a-40fe-878d-8c2867a25321",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d303e6a-39c5-44bd-a079-2835631414dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aced343-9125-487e-b97d-cd02388478ed",
        "cursor": {
          "ref": "5222b577-6b5d-4e31-84cf-fc94e45ae9c5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8bf9f0e5-c327-4d2a-8354-6d53743a3471"
        },
        "item": {
          "id": "4aced343-9125-487e-b97d-cd02388478ed",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ad9d87e4-19a5-4d54-9f22-0157206aa5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb78245-880c-4d59-bd25-e54e5c402463",
        "cursor": {
          "ref": "a068d380-19b5-4d6a-8349-7588ba52f33d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2a125574-2d23-412d-81cd-ec89959c80b9"
        },
        "item": {
          "id": "9fb78245-880c-4d59-bd25-e54e5c402463",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2b8ea06d-09ee-46f0-9d38-757936c24195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99bbc1f-ebe8-4745-8b9e-414f696e2b40",
        "cursor": {
          "ref": "21f6c8bc-7b25-476d-b0cc-2ff4af4da11f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "527750f9-90cd-495f-856e-f2d1298abdff"
        },
        "item": {
          "id": "d99bbc1f-ebe8-4745-8b9e-414f696e2b40",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d51a1a20-16bf-4991-ba36-e8b79611eb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aec7a54-b2a3-4147-a9a5-09074ec2749a",
        "cursor": {
          "ref": "c49ae613-30f6-4501-8930-f321e824ea85",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6a8e0a9b-bc56-4cf4-b970-a5439c8ef431"
        },
        "item": {
          "id": "5aec7a54-b2a3-4147-a9a5-09074ec2749a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bcee924f-832a-494e-a7c2-8bbedc3614d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991b2410-69b6-48e9-bbb2-a3946d046be0",
        "cursor": {
          "ref": "6a59e54f-4a65-4428-8408-35489e158853",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "df31c119-d29c-4886-a779-9108b7ca2082"
        },
        "item": {
          "id": "991b2410-69b6-48e9-bbb2-a3946d046be0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4b2873ab-0d33-45b8-9e09-f6c804f773ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2907575e-f896-4491-9146-ad471a1a0541",
        "cursor": {
          "ref": "694e67e0-dfd9-40a5-ba1e-f51d9c2666d1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e4acf9cc-0f74-4807-84d1-e7ed058d8106"
        },
        "item": {
          "id": "2907575e-f896-4491-9146-ad471a1a0541",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "43d4e584-6d3e-4a07-8272-bff44ca1b69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e7dda3-f91d-4a20-a3f7-7fda416792ad",
        "cursor": {
          "ref": "cd3c087b-9a10-4358-8364-7d480440e007",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "871d7d74-dab0-4dff-86a5-ae50033e9be0"
        },
        "item": {
          "id": "11e7dda3-f91d-4a20-a3f7-7fda416792ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "66d5a7ee-7978-4368-8e7a-0e38c07228df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ff042-c5d3-42ad-9176-35b47a1e9e5b",
        "cursor": {
          "ref": "c0fc6ce7-1eeb-44a8-8265-fefbe4ca6d90",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d8fcd94c-1c17-432d-acc7-6dce9d5ff132"
        },
        "item": {
          "id": "381ff042-c5d3-42ad-9176-35b47a1e9e5b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8c59b3bd-36a7-485a-af4e-bb61d6449166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca5bbee-249d-49da-8eb5-67ae9aab742f",
        "cursor": {
          "ref": "5f5a311c-e52a-4183-82c6-cc87b7e568b7",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7252a289-2439-496a-952f-2f755a5a3dd6"
        },
        "item": {
          "id": "eca5bbee-249d-49da-8eb5-67ae9aab742f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ad78685a-0c8e-4697-bbb4-e916ab6a4a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af85542-65ad-488f-83dc-1d3a6e850e1b",
        "cursor": {
          "ref": "9dd2311d-9175-4dc4-9eed-a95212a56344",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d22b2192-52df-4def-a94d-fc2243b1dc16"
        },
        "item": {
          "id": "4af85542-65ad-488f-83dc-1d3a6e850e1b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "70400a63-b43c-410e-850e-b0d7a66eb2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d347aba6-6dc1-4dec-a87d-569fd5c05680",
        "cursor": {
          "ref": "108e01aa-cf46-4318-b9cc-8800a07c60fd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "da785786-7665-40fa-8599-5a1d0c790d20"
        },
        "item": {
          "id": "d347aba6-6dc1-4dec-a87d-569fd5c05680",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cca7bb6c-5d06-497f-aeab-d2b4a511c060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701234c8-f59f-4d1c-a5c3-5911f3f267b4",
        "cursor": {
          "ref": "23e31a98-589c-405f-9077-7e27aaf0a2a4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f8e8512b-6df9-4833-8672-62734f4e6746"
        },
        "item": {
          "id": "701234c8-f59f-4d1c-a5c3-5911f3f267b4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f2f52a8-cb74-4aca-ab50-bebb5cb2b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87f102e-464c-43d2-9db6-df0e579e308e",
        "cursor": {
          "ref": "79489cfd-3f94-4933-ab45-dbbab1c4de51",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4172538f-9e92-4884-8640-16c4327f7b47"
        },
        "item": {
          "id": "b87f102e-464c-43d2-9db6-df0e579e308e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "78e6ff0e-157b-4e10-aa6c-443d837df4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec72aa6e-a071-4efc-8ce8-1b0bef3a8a05",
        "cursor": {
          "ref": "435cfa10-91fe-41b7-b1b5-1427584a024b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b02dfd53-81af-4cec-b1b5-0a2dde4c116c"
        },
        "item": {
          "id": "ec72aa6e-a071-4efc-8ce8-1b0bef3a8a05",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ea9c89a6-5081-4de7-bb46-2999887ec42d",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ecd90349-6a0b-44cb-aadc-99f842c84861",
        "cursor": {
          "ref": "db117a21-4636-4b1a-aa66-6cb69320f731",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3669b724-6a80-4a4b-84af-ae7dc13ee71b"
        },
        "item": {
          "id": "ecd90349-6a0b-44cb-aadc-99f842c84861",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "29551d0e-11b7-44eb-829f-01f6d7d9c39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05128ad-09fa-40ec-86ea-70a94cfbc68d",
        "cursor": {
          "ref": "ac28ec74-8eea-4c31-913f-cf7a5c6716da",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5646dc0b-0664-4fc4-bd18-25c12dc2a8d7"
        },
        "item": {
          "id": "c05128ad-09fa-40ec-86ea-70a94cfbc68d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8be31f95-9400-4572-beac-9a1fd4af44bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb86c416-30ea-4977-a26a-5385ea2202bd",
        "cursor": {
          "ref": "3960078f-35d7-429b-bd43-e03bae1f4b03",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "803462c2-5d53-4e82-9986-c8e372269a09"
        },
        "item": {
          "id": "fb86c416-30ea-4977-a26a-5385ea2202bd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "67614865-2e20-46b4-874b-a9d328c0b3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5968bea2-c5d0-43bf-bef4-977b7f3f3355",
        "cursor": {
          "ref": "26682ddf-45b1-4a4c-94f8-1dbcac2f74a3",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "90895900-a2a8-41e8-a0f5-5ece0d076c04"
        },
        "item": {
          "id": "5968bea2-c5d0-43bf-bef4-977b7f3f3355",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "193cc3cc-f775-40c6-8337-367731ceea9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd293cef-b713-4295-a80b-b0624e31972d",
        "cursor": {
          "ref": "6ee21d34-605b-48e4-bb35-d2954f354f9f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8e607924-aa42-4a87-9b07-f80d40c730fa"
        },
        "item": {
          "id": "cd293cef-b713-4295-a80b-b0624e31972d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bad28e1c-1b8e-4e5d-9de8-3a90e6b3b215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fec517-39b3-40c9-899f-37e2d1d739d3",
        "cursor": {
          "ref": "7ca1a080-76df-4c21-a609-33efc3b545ee",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "728a8f60-a017-4ae0-8c9e-5a2dae4a35d0"
        },
        "item": {
          "id": "42fec517-39b3-40c9-899f-37e2d1d739d3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3123c64f-8591-4e11-ad29-8cb82d186eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c881a31-642e-4608-85f0-0971c96484dd",
        "cursor": {
          "ref": "e9880727-a77b-4860-a1fa-ac16677a85bc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6dedc52d-8444-49e1-a783-308feae6cb01"
        },
        "item": {
          "id": "8c881a31-642e-4608-85f0-0971c96484dd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "df9a9659-fdd0-4a23-801b-2d577c290206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf0e98f-8dba-409e-ae3b-8af440ace707",
        "cursor": {
          "ref": "57fd059e-32a3-4274-88dc-e7235bb07d93",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f9c492a8-e166-4abb-9882-bf6c34d2119f"
        },
        "item": {
          "id": "2bf0e98f-8dba-409e-ae3b-8af440ace707",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9299b404-83e4-47f5-930c-1c30dba5dc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a3d0a9-b849-4fde-808e-eedb4ed5779c",
        "cursor": {
          "ref": "54e87047-4f3e-4166-ab06-dc5e952486e9",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "825b58e1-c1d3-4a93-b6d7-3e764bce9945"
        },
        "item": {
          "id": "94a3d0a9-b849-4fde-808e-eedb4ed5779c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e79a9293-24cc-47e8-b660-0f0f25761745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c8d2fd-cc49-4672-91a2-6f37d65e4013",
        "cursor": {
          "ref": "f04be36d-a7e7-4e13-bc29-6b2633f4ac50",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1d2c3531-eef6-476b-85f0-c0afe16355cd"
        },
        "item": {
          "id": "36c8d2fd-cc49-4672-91a2-6f37d65e4013",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "68d1a90c-65de-4e38-99bb-2220b1158def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0be82a-48c3-4617-a823-21bf3c6adc55",
        "cursor": {
          "ref": "2d34a432-5ced-43dd-a5ff-451474890bd7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a300454e-6304-4133-9cc7-9609bb5d7c31"
        },
        "item": {
          "id": "ff0be82a-48c3-4617-a823-21bf3c6adc55",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "412fedaa-209e-4d95-901b-d2e7a81a5d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b34073d-5c67-4b20-8efb-da6891c126ca",
        "cursor": {
          "ref": "a83dd2ba-7194-48a3-8168-d9c34930623b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a710302c-83f0-48ec-8bdf-ba016005901a"
        },
        "item": {
          "id": "3b34073d-5c67-4b20-8efb-da6891c126ca",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3995f9c4-d0a7-444a-91de-971b53aeae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0104c045-266a-4b41-a4b1-a1c341e9e233",
        "cursor": {
          "ref": "9ddd50cf-d820-42ef-8057-1775434c586a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "45de64af-bccf-4a84-a93f-d5722bed21c3"
        },
        "item": {
          "id": "0104c045-266a-4b41-a4b1-a1c341e9e233",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "df696ca8-194f-4a47-b015-a9e36620b945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8cd96b-b7b4-49b9-9517-a4482cabfeb4",
        "cursor": {
          "ref": "7a59daa8-9292-4864-95da-673e4dec8b5a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "88782b3e-ab80-4ec6-888b-f5f6d85f3e39"
        },
        "item": {
          "id": "6d8cd96b-b7b4-49b9-9517-a4482cabfeb4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ac6e24b5-c8e6-4be5-845a-0929e02cefe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb7c5da-517b-4881-8a4f-b4aaa11f3f1b",
        "cursor": {
          "ref": "19738b66-5a4c-4fd7-9ec4-7338a660c825",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b84b1d02-65bb-43ef-9f86-8d07e0c503e6"
        },
        "item": {
          "id": "1bb7c5da-517b-4881-8a4f-b4aaa11f3f1b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1e7cd2f0-cc2a-45ec-a272-edef94447e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525ac1e7-472a-443d-9bf5-65071fd95cde",
        "cursor": {
          "ref": "cec057ac-8029-4a19-ba92-69eb0d3b79ff",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ec726098-8e27-44a4-8a55-a7c6307149ba"
        },
        "item": {
          "id": "525ac1e7-472a-443d-9bf5-65071fd95cde",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0dc50c60-30e9-47a1-9657-82a0a540b95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9ec6e6-8b72-4456-a303-bd5d8e0f7d6b",
        "cursor": {
          "ref": "30b76933-cd5e-48c0-b589-5c16278ad239",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "034ed2e5-b369-4ed1-b98a-97497f170d1c"
        },
        "item": {
          "id": "cf9ec6e6-8b72-4456-a303-bd5d8e0f7d6b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5fc5ff02-a2ed-45a1-9658-985861ce1c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cceab3-63ed-43e9-b919-3c67ef0c1a3d",
        "cursor": {
          "ref": "8eaee659-93eb-4e97-8bb2-cafd9d725490",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5a4e351e-087c-4d19-9323-34aa5e31bdaf"
        },
        "item": {
          "id": "95cceab3-63ed-43e9-b919-3c67ef0c1a3d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7471388a-911d-4052-a5f4-e9e15c07cc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c067c07-1e62-4325-8d8b-b64905e8060e",
        "cursor": {
          "ref": "b089ba21-2ea9-4fae-be79-1e32629b3e09",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c171ccc5-3b35-4922-9f01-9d2f597d1e79"
        },
        "item": {
          "id": "9c067c07-1e62-4325-8d8b-b64905e8060e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "097bf286-4aaf-47f1-a571-305740cf9420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1a13b-496f-4683-abbd-9517d1088850",
        "cursor": {
          "ref": "e9d22c86-19b3-451c-8992-d3b03342686f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "67f704dc-e709-4ea7-8202-183ab6838d90"
        },
        "item": {
          "id": "afe1a13b-496f-4683-abbd-9517d1088850",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0f3760a8-6811-43ac-8d56-6747a6ee6c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9a2310-c1f3-4b67-96de-8054a2475e3f",
        "cursor": {
          "ref": "fe6a4e4a-9407-4727-8021-a3e29e2ea50f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "41bdad53-0cfc-4efa-a7b8-5d230b68afb2"
        },
        "item": {
          "id": "fd9a2310-c1f3-4b67-96de-8054a2475e3f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "eb79aa2e-a028-4665-b410-d0ee94cd868d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5125dea-178b-4587-944b-17b4e1fcaa01",
        "cursor": {
          "ref": "f5c0372a-3064-40cd-ab21-73f2b837a9c4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4a0b65aa-94b6-47af-969d-4d56ff086c71"
        },
        "item": {
          "id": "e5125dea-178b-4587-944b-17b4e1fcaa01",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "64daa1ea-896f-4217-9ddd-1b7581475191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad13b9a1-03b4-45c2-9d75-3f54d8344acd",
        "cursor": {
          "ref": "0f89dc1b-66d7-4f20-998f-a62724470adb",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "437661d5-fb9f-4f9d-ad96-9d74f1f48648"
        },
        "item": {
          "id": "ad13b9a1-03b4-45c2-9d75-3f54d8344acd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "784218b6-8753-4e56-87f8-c57f5afb02f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65408f06-cef7-44fb-9c8b-969a8ff56bab",
        "cursor": {
          "ref": "2e1fd6a5-bf4e-470f-aca4-a9c5240086f7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cbb3a383-d825-49a0-a492-e96796917136"
        },
        "item": {
          "id": "65408f06-cef7-44fb-9c8b-969a8ff56bab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "19340683-bfcf-4468-8022-047505b65b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b080fe0e-da4c-4b33-801c-1fc25f1217cd",
        "cursor": {
          "ref": "034d5fa3-3799-4df3-a9dc-d303475f213f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f5827386-b2dd-4842-a2dd-dda597a5cfef"
        },
        "item": {
          "id": "b080fe0e-da4c-4b33-801c-1fc25f1217cd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4c1a25d6-2fdc-43c1-9361-f1b4448ef5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb05b90-af87-4d65-b9b7-ce81770ad776",
        "cursor": {
          "ref": "7780b4e4-f08d-4123-8fab-916d73865fa4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "99329928-0daa-4a02-84e1-6efd55f5b8de"
        },
        "item": {
          "id": "8cb05b90-af87-4d65-b9b7-ce81770ad776",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "12157511-0394-4335-a23f-02c21b77e10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162825b7-7790-464f-b8cb-fdd3ddbc0a96",
        "cursor": {
          "ref": "a0b53eb9-1707-4437-b624-93b2ffc5b818",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "eb8aeeea-8eef-460d-ac9c-726c9c2b6f93"
        },
        "item": {
          "id": "162825b7-7790-464f-b8cb-fdd3ddbc0a96",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "771e3933-05fe-4dbf-8ecd-0553e4b87c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09790dad-1600-4427-90e2-b8191c4d1961",
        "cursor": {
          "ref": "59ec72f0-5dad-4c19-844c-db4ce120ce77",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2c077c02-d22f-46eb-bf1e-1e436cfb983d"
        },
        "item": {
          "id": "09790dad-1600-4427-90e2-b8191c4d1961",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "29459c60-01c4-4cca-a0e2-b9c0bceeead9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0e5fd4-e805-4517-9198-7111e9a8444b",
        "cursor": {
          "ref": "6b1131cb-c920-4b75-931e-b69794114a22",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "78d77e2f-df1f-4b7e-a2a1-4ed9e2692b5e"
        },
        "item": {
          "id": "0f0e5fd4-e805-4517-9198-7111e9a8444b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bacc1048-d2d7-43c6-869d-7dd7ad2517cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3cd185-7021-4ef7-a941-6849b0463169",
        "cursor": {
          "ref": "f8883c87-d205-44b3-a79e-174a89e3fe12",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "27414236-4f55-43f0-b0d1-d704a791b984"
        },
        "item": {
          "id": "3d3cd185-7021-4ef7-a941-6849b0463169",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f31cccd0-881b-4362-9e32-ebb9f44069ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bce9e0a-2c13-465f-90de-f4fb435a08d4",
        "cursor": {
          "ref": "99114c5a-44f9-4fc6-9c47-80d8fc6294a6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d02c37ab-a4a6-43a9-89ef-f8fe6bb1ff9d"
        },
        "item": {
          "id": "5bce9e0a-2c13-465f-90de-f4fb435a08d4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cb0d2ddd-6998-4d2c-ad77-f4a663b36132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb2d0b9-f5a2-4400-901f-9cdd8bc622ed",
        "cursor": {
          "ref": "ac841f20-1d53-45fc-b3da-459e3353b744",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7267b2c7-2dc8-4daa-a8ff-552d2eb345bf"
        },
        "item": {
          "id": "9bb2d0b9-f5a2-4400-901f-9cdd8bc622ed",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7778a670-2d65-4064-b1d2-6c86c3d71b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8912f4ea-b61f-4156-8d69-c0a09d2c9371",
        "cursor": {
          "ref": "0703e0c9-d70a-4926-94f5-736c9a34d6b0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b0cf9090-e2b2-4117-a023-1c7f05e7351d"
        },
        "item": {
          "id": "8912f4ea-b61f-4156-8d69-c0a09d2c9371",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "32ec631c-1efa-490e-b653-fc786e39a536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a3a4bb-eab4-4158-95e2-06a48adfa9ba",
        "cursor": {
          "ref": "18f55ff0-4e3e-44c2-a340-caaa09409717",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1e5fe90c-12ba-407e-8086-6216e4ceb551"
        },
        "item": {
          "id": "13a3a4bb-eab4-4158-95e2-06a48adfa9ba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f334b633-6b9c-42d6-9d54-344716efe79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f62982-7821-4713-bdb2-23a21cfb0c3f",
        "cursor": {
          "ref": "626bef42-67ac-486b-abc7-ca7f77614fa9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ea0c9c43-b9ee-4eed-816f-29a460756263"
        },
        "item": {
          "id": "28f62982-7821-4713-bdb2-23a21cfb0c3f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "04af0d96-54e2-4c1e-876e-b1795fedf52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8679f87c-36d7-4111-8e0f-3a32a761c669",
        "cursor": {
          "ref": "9ace34c6-6f90-4d1b-9f92-58eb001fe12b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7468359e-5fe0-4d91-852d-95be18a8f256"
        },
        "item": {
          "id": "8679f87c-36d7-4111-8e0f-3a32a761c669",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ba8ccf33-4cea-4fec-8ff5-4acb1687e387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e14906-be83-4c0c-bd11-7749ae55810b",
        "cursor": {
          "ref": "4035f4b9-b7ef-4436-bf71-d10303fd1531",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f0d9d1cd-0d61-49a9-8222-a2dfe6f7633c"
        },
        "item": {
          "id": "53e14906-be83-4c0c-bd11-7749ae55810b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6e6034c1-1322-4b0c-a555-7ac40b05c937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd6b332-27a9-42bd-b7e7-659c64958e8c",
        "cursor": {
          "ref": "41c89e58-5507-42c2-bdea-709decbd7c1d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9be51b58-e769-49a6-882c-078f9aadbc24"
        },
        "item": {
          "id": "bfd6b332-27a9-42bd-b7e7-659c64958e8c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b38bccb2-00ca-4d14-8b04-b2dd7406374f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3f9d2e-c00b-46f0-9c9a-02973e246a20",
        "cursor": {
          "ref": "bc5834fd-e01e-4cfc-8023-954d4cf61287",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e72e24dc-20bc-4852-a551-ea7cc9eab3f3"
        },
        "item": {
          "id": "ee3f9d2e-c00b-46f0-9c9a-02973e246a20",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dff8e8b5-8612-474a-970f-4ad27b59479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67822ffc-0ec7-4aef-a05a-85eed7b307e7",
        "cursor": {
          "ref": "740894d7-cbfe-4fcc-9d43-05704913dece",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "03fabd21-ea85-46d0-9614-a4786964b75d"
        },
        "item": {
          "id": "67822ffc-0ec7-4aef-a05a-85eed7b307e7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "85abefaa-a2ce-42c0-92a8-93687b5c996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025fbfb2-01ed-4e56-a886-5fdff8002666",
        "cursor": {
          "ref": "03ef4f5d-e829-49f9-a62f-f9d67f36a2f4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "68fbf95d-18ca-4330-8d69-2bf6c266acb4"
        },
        "item": {
          "id": "025fbfb2-01ed-4e56-a886-5fdff8002666",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ee35ca16-699b-4abd-9088-94183307671d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920fbb02-04b4-4ec0-9137-3a3f3a3bcb23",
        "cursor": {
          "ref": "2946c8f7-0275-429c-97dd-81f9cd087fd5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe6d5a0f-53af-4800-ba85-4c0ae9ace925"
        },
        "item": {
          "id": "920fbb02-04b4-4ec0-9137-3a3f3a3bcb23",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b9fa8c58-9265-4ab7-ba90-9f550faf7451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe1fe9e-245a-4326-a640-a5970f66e992",
        "cursor": {
          "ref": "ea209af3-8d7f-40d2-98e6-25ef63cef5ab",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0d6009ab-6063-4467-a208-b555a50e732c"
        },
        "item": {
          "id": "cbe1fe9e-245a-4326-a640-a5970f66e992",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d2bafce8-15b4-4025-882d-9abf306a658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8027836e-304f-49fe-812f-25a7fa0dda3a",
        "cursor": {
          "ref": "aab7766e-794d-4f8c-9c3b-c65f014e02bd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1afc51aa-166e-4507-9afb-4bce3a3cfeb4"
        },
        "item": {
          "id": "8027836e-304f-49fe-812f-25a7fa0dda3a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "916077fd-bb44-4311-bdab-9784751571a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c599b39-0e78-4ed6-812a-8c65b019cc2e",
        "cursor": {
          "ref": "6de61147-6300-4d12-b196-54f93006c97a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "46dc8522-9f8a-4e79-815b-6b46bbfc484f"
        },
        "item": {
          "id": "0c599b39-0e78-4ed6-812a-8c65b019cc2e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dce74c54-2e7a-4981-a021-19967014917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4314bce8-6e1b-4458-bf34-a67b96b3d885",
        "cursor": {
          "ref": "a89e4fcd-b3b6-4d2a-8799-bd2866d45a41",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "91f95f2a-a616-4027-b9be-dbd7a7ec6d9a"
        },
        "item": {
          "id": "4314bce8-6e1b-4458-bf34-a67b96b3d885",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "91c80011-49c2-46f2-910e-7f0608075fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9bd90-19d3-4936-b69c-b12d16298072",
        "cursor": {
          "ref": "eba052dd-f16e-43d9-a8d5-cecedd790b0d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "acb2788a-562e-4e32-b040-14bdefff1250"
        },
        "item": {
          "id": "6af9bd90-19d3-4936-b69c-b12d16298072",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "69fd08a2-3bbb-4570-bf98-67496d0303e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9127f277-fb0f-4785-b62c-3ed7f68e9330",
        "cursor": {
          "ref": "149788f0-4ba2-4e7b-8ad2-5268b71582f7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d0c4dcee-bc91-4cca-b7b9-f1406c5985bc"
        },
        "item": {
          "id": "9127f277-fb0f-4785-b62c-3ed7f68e9330",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dff879c8-0841-4246-8c5f-c25e6cad4c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4761e0-bce7-4f73-a906-ef58ddf64081",
        "cursor": {
          "ref": "43bd388c-7bfe-4d94-b4cc-01b58d657305",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f6e3d432-81d4-489f-b767-58df079a445a"
        },
        "item": {
          "id": "1d4761e0-bce7-4f73-a906-ef58ddf64081",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e501754-13bb-4e77-9b29-ba1b53a6d33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20af5526-e2ae-439d-ac3a-734a82e8fce2",
        "cursor": {
          "ref": "2d0bec8e-41e9-4013-9459-5e6305e08f5b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "99e819bc-bf5e-4219-9835-3df9356ce65c"
        },
        "item": {
          "id": "20af5526-e2ae-439d-ac3a-734a82e8fce2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4dce96d4-2fb5-4d7f-932c-2e0438385343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e62c86-b1cd-4604-9446-280f883a8976",
        "cursor": {
          "ref": "8e6b41a4-5333-420b-9be7-7cee7cde25af",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9575eaec-4590-4fb3-8fff-02025333e41a"
        },
        "item": {
          "id": "c8e62c86-b1cd-4604-9446-280f883a8976",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f3c49465-26b3-422e-ab7b-0bde7a3ff277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0670aa73-4ebc-4b15-8f00-99e56b4b22ca",
        "cursor": {
          "ref": "af7b2cc1-f074-4e17-8e23-bc3ef732234e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "84055a21-2620-4abf-b579-4fdc34095e0b"
        },
        "item": {
          "id": "0670aa73-4ebc-4b15-8f00-99e56b4b22ca",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2ee1bba1-bd19-4ed9-8caa-00c7cc791e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7d338-1055-4a9d-a853-6683f96f9a26",
        "cursor": {
          "ref": "e3b2ee2c-52d1-43d8-bd64-a0dfa0f18ebd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2ff1f134-c50b-41c4-a151-c0d155c6647c"
        },
        "item": {
          "id": "9fd7d338-1055-4a9d-a853-6683f96f9a26",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "70dab687-0d3d-4503-87bc-efd8e2f98de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2329b93a-b007-4d97-8f8a-8a73475a4f7e",
        "cursor": {
          "ref": "7b0d8d55-6627-4403-b118-77078e3689c8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c4906edb-562e-4aef-a52d-c4193f988794"
        },
        "item": {
          "id": "2329b93a-b007-4d97-8f8a-8a73475a4f7e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "510ff6aa-9c15-4e5f-a5ff-addddb607798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978d2bb0-402d-468c-b58b-9e1436f167a7",
        "cursor": {
          "ref": "bf02c452-e583-4e20-94fd-9d608d44eda7",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "22d5f702-3021-4fe9-af1b-4ac96244c81c"
        },
        "item": {
          "id": "978d2bb0-402d-468c-b58b-9e1436f167a7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2f14146b-7d2b-4282-83e5-cc36a3590d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b2a80a-e7a4-4377-b177-e82e69813dc0",
        "cursor": {
          "ref": "9d07b522-6c2e-4578-ac54-3bcd544582aa",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c8432f7e-64b2-498b-9efa-c2ee35244cb2"
        },
        "item": {
          "id": "25b2a80a-e7a4-4377-b177-e82e69813dc0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f39bd180-02e5-4cce-8edd-82e861a07a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e54383-2593-416d-8194-9fff2c719f79",
        "cursor": {
          "ref": "6162de26-c01d-4e47-8d22-3f21861e7fce",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "87769a69-3625-4db1-a130-27924b1765d8"
        },
        "item": {
          "id": "18e54383-2593-416d-8194-9fff2c719f79",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "12599622-ac17-4b34-a001-31a8e1abcb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb353fd-8c80-468e-b757-64de65b33240",
        "cursor": {
          "ref": "229d7a1b-7dd4-4d7a-9cd9-c397db0ca50c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8ba4d4f6-42b6-45bc-a85a-93bd4f4a8290"
        },
        "item": {
          "id": "dcb353fd-8c80-468e-b757-64de65b33240",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "686c7fe6-999b-462f-9534-56517a671a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56872e6-6cad-4b23-82ec-47e8ac3c0c62",
        "cursor": {
          "ref": "6ed1d8b3-7361-48dd-b9e6-ded1ca3daec1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "75122030-967e-4a15-a324-5b5ebe981f98"
        },
        "item": {
          "id": "f56872e6-6cad-4b23-82ec-47e8ac3c0c62",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e81de6de-2ebf-48c4-b116-3d24e157643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5211ac1d-998d-4a99-affc-08cd911f6312",
        "cursor": {
          "ref": "7007fe14-fcf5-470d-aca9-b73a7dd4052b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "13532d9c-4a20-4bb3-b8ab-ebf3d8c23f91"
        },
        "item": {
          "id": "5211ac1d-998d-4a99-affc-08cd911f6312",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6be0930d-8e78-46d6-84fd-7e6ed940580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d2766d-5de7-4e16-be5e-5ff5e41fa910",
        "cursor": {
          "ref": "23d8784f-7ddc-45d1-8d5e-d7fff445fe31",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d0be9fcc-8854-4005-97bb-14d4198e4ec9"
        },
        "item": {
          "id": "b6d2766d-5de7-4e16-be5e-5ff5e41fa910",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "113a713a-032b-43ea-ad3d-8415ea6f78bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2c2422-93c3-489b-a833-220ed0818ad7",
        "cursor": {
          "ref": "ea9f7202-2ac9-4c79-b5a6-2c29c7ad56ba",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9320bf70-863d-4508-b369-7d05052130d6"
        },
        "item": {
          "id": "8a2c2422-93c3-489b-a833-220ed0818ad7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4cd2eab6-abd1-4c59-af4d-d058ab82fb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316c9806-95f4-4905-a6e3-8842c83bb696",
        "cursor": {
          "ref": "a1394df6-fed5-45fc-8f26-ca2270f0bd6a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "49d54887-78bb-41af-8af9-b9fb19ba270b"
        },
        "item": {
          "id": "316c9806-95f4-4905-a6e3-8842c83bb696",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "034fc17b-8d9e-4007-b959-307171311e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6a89cd-23a0-4b75-9092-cf25580eeef5",
        "cursor": {
          "ref": "309a1e0d-1e48-44f5-b3ef-c46ec83390ec",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7eeb0f11-fd7e-40ec-b424-faa937e248c9"
        },
        "item": {
          "id": "dd6a89cd-23a0-4b75-9092-cf25580eeef5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9166c98b-b487-4d2f-b227-63f130385516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a052e108-1781-4bd2-8aa1-52b981ce8234",
        "cursor": {
          "ref": "2a6f52ee-57d9-4981-af66-35d87b657146",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "28a791e8-42fd-4cbb-947b-b7bfb1185eb4"
        },
        "item": {
          "id": "a052e108-1781-4bd2-8aa1-52b981ce8234",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fa1173df-db12-4711-bf8a-8f7096fd3ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71592fdd-d719-4513-9828-5e9fe708e395",
        "cursor": {
          "ref": "aa128b12-e5e6-451f-aafc-7bea3020172a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fa7c5b6c-44a8-4bd3-91e9-941df8837e58"
        },
        "item": {
          "id": "71592fdd-d719-4513-9828-5e9fe708e395",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7624d642-cf74-456a-b1f0-72ab27819d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc469f8b-5673-4e10-af5f-951c2e8bf22c",
        "cursor": {
          "ref": "4037364c-4aa3-4acd-81ba-faf222b43b23",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d10da63b-d917-40f0-bfef-7cb4a87d44d7"
        },
        "item": {
          "id": "bc469f8b-5673-4e10-af5f-951c2e8bf22c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "940e3710-ab98-41dd-8593-113092af7797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258c6f5f-1d5e-4e98-8785-736baa3ee901",
        "cursor": {
          "ref": "e4fd4fd0-e311-4b7d-8d04-55dab410da72",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cacf19b4-01e4-4ff8-b5dc-04d2d555ea0d"
        },
        "item": {
          "id": "258c6f5f-1d5e-4e98-8785-736baa3ee901",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d5756866-0909-4bd8-aff7-6919347d915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c81def-3fba-4bd1-8767-333477a1ac8e",
        "cursor": {
          "ref": "e8865117-597b-468a-926e-bf7589b442c3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "767b8d6b-5446-45e4-b629-e436823a0c88"
        },
        "item": {
          "id": "e0c81def-3fba-4bd1-8767-333477a1ac8e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "68fd20b2-fe99-4fc0-bb92-14223ba9c956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b179aa7-a05e-438d-968b-012b02c3b660",
        "cursor": {
          "ref": "414c728e-63ce-46a6-8e58-fad6f1966e33",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f04cbac5-1798-4033-bb1c-5b7b78de22b8"
        },
        "item": {
          "id": "7b179aa7-a05e-438d-968b-012b02c3b660",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cbfbaf18-b4fd-40ee-ad22-1d1ab6e1f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e82b0d8-c1df-40ba-992d-7f3f30c5e709",
        "cursor": {
          "ref": "0077e555-8d4a-4630-bf55-68ee48dc140d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a1490337-ea56-4852-84eb-c6ea175a42c3"
        },
        "item": {
          "id": "9e82b0d8-c1df-40ba-992d-7f3f30c5e709",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fb4337ba-b5bd-4481-908e-290f2838607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac561814-2516-4862-bd9e-34f06e28a13d",
        "cursor": {
          "ref": "48cc5baf-43db-42ce-a080-46002ed74f1f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "96f7295c-ca7f-481e-96a1-9960d2fe166c"
        },
        "item": {
          "id": "ac561814-2516-4862-bd9e-34f06e28a13d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a7b2344a-13e7-49f6-b665-bb88c6011830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3993e931-74a3-47f6-b985-c5b3cc97f5a4",
        "cursor": {
          "ref": "f8fe5c37-8444-4f1a-9f74-0c0ed72f180c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "da5d2dc5-3975-4ae5-ae23-ec7a8449568e"
        },
        "item": {
          "id": "3993e931-74a3-47f6-b985-c5b3cc97f5a4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "412650cd-641f-4c84-8fdc-b13acb89faaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab4be25-bb09-446a-9992-6a89c6026ed9",
        "cursor": {
          "ref": "d48f1e94-da45-4277-a58b-b881a5f7bede",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a11c3432-4cde-47f9-a5d8-6fa36aa1d3d1"
        },
        "item": {
          "id": "fab4be25-bb09-446a-9992-6a89c6026ed9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e3883f41-be0d-4ab9-9b46-42bef9969c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5110f893-666a-4a08-8598-90748f008b65",
        "cursor": {
          "ref": "65360367-a75f-4099-8240-7ada4cef9574",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "73ac5709-3ee5-4e5e-becd-6819529633e1"
        },
        "item": {
          "id": "5110f893-666a-4a08-8598-90748f008b65",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e1768abd-72a7-4fd0-acb7-4641417b067b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee03613-8eec-42a6-bcbd-6511b3076c97",
        "cursor": {
          "ref": "f9e41b7c-ebc7-4283-8dad-6540bd84a878",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c43003f5-a4f7-46c2-af18-b45993652587"
        },
        "item": {
          "id": "eee03613-8eec-42a6-bcbd-6511b3076c97",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f95696a1-0d6e-4c7e-9f3e-edc19b5fa20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77934794-3ee2-4670-bbdb-5cc06d2b91b4",
        "cursor": {
          "ref": "a92b6597-fef9-4a3f-ba27-05ddbe2a418d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "34cf4f67-b7dd-4254-bdd5-b057ddf2b35d"
        },
        "item": {
          "id": "77934794-3ee2-4670-bbdb-5cc06d2b91b4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ff40a267-f28b-440b-ad7b-aa9596405163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a75d308-aa57-49db-95ce-a318fae41005",
        "cursor": {
          "ref": "45585fcf-f637-4980-9b9f-a325a6247ef6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9621432e-c654-4756-8eb7-de011e95bee1"
        },
        "item": {
          "id": "6a75d308-aa57-49db-95ce-a318fae41005",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0faf57cb-5dbd-4025-8cb9-45cb98cbadaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dfbb80-60dc-49b7-85df-5844d90acbf0",
        "cursor": {
          "ref": "3c755b91-c283-4365-8d1c-98185d1b82f3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e704e550-2cad-4b6f-801c-17ec7c23cad2"
        },
        "item": {
          "id": "63dfbb80-60dc-49b7-85df-5844d90acbf0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e8b13462-0266-4a3f-963c-a056f1caf1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bed03b-9a5c-4a36-8f71-ae4c2ddbe733",
        "cursor": {
          "ref": "9b4ada3a-17e5-4c4e-a640-24cdc4679440",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5fa700ef-e5c0-4562-8a80-1bed601a7518"
        },
        "item": {
          "id": "98bed03b-9a5c-4a36-8f71-ae4c2ddbe733",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6843a718-b131-46b1-8531-5729505f1502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8187593-1cf8-4c41-979d-5f642a1f9f16",
        "cursor": {
          "ref": "96a17032-3493-45cc-8d58-757e79ba55ae",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "addc8f4a-2ebd-415a-a839-7cc76a6a37d7"
        },
        "item": {
          "id": "b8187593-1cf8-4c41-979d-5f642a1f9f16",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0f1ca728-b1b6-446f-859a-7390fac70c16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086aa946-81a6-4e75-9ce8-56968a4b0498",
        "cursor": {
          "ref": "4efa97d0-9a77-437c-84fb-bf27881c673e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "af0d83d9-00e2-49f0-a77f-0dccdb2ea6ed"
        },
        "item": {
          "id": "086aa946-81a6-4e75-9ce8-56968a4b0498",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8a0dc9ae-c466-4e35-b222-209880909dee",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1084b8-562a-4607-8679-d8fb2ad6295e",
        "cursor": {
          "ref": "3fe1447d-bfde-491b-a244-b4bc9621fdb9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fbb13486-2a64-403f-9433-b902267d6047"
        },
        "item": {
          "id": "dd1084b8-562a-4607-8679-d8fb2ad6295e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f7ff48d4-ba33-48dd-96d9-714c934f3616",
          "status": "OK",
          "code": 200,
          "responseTime": 2260,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc39035-4b1c-4796-bade-e8bbd3863b92",
        "cursor": {
          "ref": "6fc27651-5881-483a-9d67-e86ae74a2591",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ac0689a6-c670-4e0e-b1b6-71ff0aae74c8"
        },
        "item": {
          "id": "8cc39035-4b1c-4796-bade-e8bbd3863b92",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8c187ab0-2ac5-4bd5-a88e-0c2771a0b162",
          "status": "OK",
          "code": 200,
          "responseTime": 3036,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89302a6-2df6-4170-92ff-2f4b7b7b4281",
        "cursor": {
          "ref": "7f72ce06-eaab-4e53-a825-b566e1cf779f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "39ea7b46-1bc0-4373-8bde-4c750847751e"
        },
        "item": {
          "id": "d89302a6-2df6-4170-92ff-2f4b7b7b4281",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c4559107-ab15-480e-ab9c-993b56ae2d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89302a6-2df6-4170-92ff-2f4b7b7b4281",
        "cursor": {
          "ref": "7f72ce06-eaab-4e53-a825-b566e1cf779f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "39ea7b46-1bc0-4373-8bde-4c750847751e"
        },
        "item": {
          "id": "d89302a6-2df6-4170-92ff-2f4b7b7b4281",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c4559107-ab15-480e-ab9c-993b56ae2d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cc2623-3d24-4dc5-9fe1-98d8cf4b80d7",
        "cursor": {
          "ref": "9a6b7e52-3586-48ad-ba62-883da4ecf8dc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "17bbfe02-0cbc-4fc1-b594-c0caef1c99d3"
        },
        "item": {
          "id": "16cc2623-3d24-4dc5-9fe1-98d8cf4b80d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e8c9025b-244c-46bf-a067-a086661bf504",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c592f-9bd5-4aec-a25c-636b6191f05e",
        "cursor": {
          "ref": "87c169d1-c5c3-4534-956c-38d7b702d2b6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "50257825-e549-473e-8873-7bb84ca8ccef"
        },
        "item": {
          "id": "b66c592f-9bd5-4aec-a25c-636b6191f05e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e7b43b45-0acc-47c2-b4e0-7137c66a046f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}