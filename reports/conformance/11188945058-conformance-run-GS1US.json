{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "801befae-0ebf-4ed1-b749-f6733c95b83c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7cc9c369-35bc-4f10-8ffe-6903e46eb1aa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a641e81-8897-4d0b-b41c-acf70434c9c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "170ffffc-39a0-4f71-883c-bce68bd7591b"
                }
              }
            ]
          },
          {
            "id": "63184030-9634-4a4a-be9b-5e32d55db77a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0668e0f6-f8ae-4b89-8962-57bf02c2b5ed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20d70f21-6243-4216-8b3d-9dae0090dcf2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3e866927-7244-4337-9321-65f07807d51a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d4c4d734-04a4-40f5-aeec-2e3b8dda8ec9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "393ef3d5-9b6e-456c-bb05-693bd6bf2b42",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff23ca96-35e6-4fd1-be6d-2d6568f6895e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "552e5e52-b469-4cf2-acb5-8bbc6a83e51e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f366905-9fc0-48b3-a917-c64d70916c0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c05cd8d0-4aed-4cb4-8847-56746b5f6265"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37e697ec-f942-4012-a283-46ddf928e9ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d45df87-f9ad-4788-a8d4-fb51575346ab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a733f80-f590-4b33-8fe4-961f024fd104",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a6ca5e80-d8b0-4f37-8a10-993ad3f1f831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a07fb630-1f29-46fb-9ada-623ea40cbf52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79fe119a-bfcc-40d0-bbb1-93e43a767583"
            }
          }
        ]
      },
      {
        "id": "79b59357-07d8-41af-9b39-85ad97efd7e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ab496d29-0b1d-4bbf-b8e6-3b911592afd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91ae7c9d-0533-4ea7-9133-472939ddde6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48be6f4f-f3f1-4354-a3d9-b6d7c2ac3124",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa836c18-314f-4783-a37c-f38e4cf2dd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96484fd9-65c7-4718-9d3b-37f0882dfaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bb4751-82a2-4b6e-9b5c-5f9572b5f353",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825d8d87-a722-4a8f-b9bd-d14840503881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dd2f68b-3523-48ac-a7bd-145bb7962fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2d824b-9dfd-4ac9-a914-17115cfdabd2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1ea8c4-1590-4525-a894-3ac13c8b8f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e01666b7-db2a-4022-b808-a6e245b299e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "481f5c21-9f1d-4e71-a2bc-b01804d1adeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8cf438d-aaf1-4df4-bf5a-e9e4eb82ed56",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c4a687-7142-4ced-8562-eec79a1f912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc70f8ef-e3ff-41ba-8aeb-075c54e41aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7f7991-4cfb-4f94-a0e4-ada42b2164c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fe8607-e04a-4c2c-8a6b-fec281cc149a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9dfbffa4-411e-4b13-ac25-d2f1445872e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6fb0fdd3-cdfd-434b-9a08-c1bb57835c3a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98fc7ef5-54d9-46eb-8568-32cc91e9486a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b3989e54-932b-4e7a-8ae7-7929d457525c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f4f1210-47e5-4407-b537-33d1f8d43400",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8157521d-3b3e-4d30-843b-4435300df1bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6893bc9c-305f-4ccf-ba53-55969700994f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe4a0202-22b4-4960-97d7-df8f08f0b430"
            }
          }
        ]
      },
      {
        "id": "d7436b86-77c5-4402-ab3d-4f96ad6ccffe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a2487d1f-c806-4283-bc18-39995e4e4a3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b37dcf2a-55b5-4597-9405-c0fd38f62c23",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1e4fc0f0-f0b8-4bc2-8218-d2860f7bea32",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b994fc7d-0f2c-42c6-a6f2-670429d80343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faad2a1b-893e-43b4-93e6-d002c54ae10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189a63a0-cb22-44f5-95be-6d1d71672e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "995c68cf-0efb-41cf-b43e-f3c717f648f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc56d18-97b7-4cc7-a2ec-da2a157e8ee2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccd92e8-9dda-4ac9-b05e-ebd91aee6395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e0bf0f-fff2-40fb-aa7f-96a2fa4d0baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f26796e-254f-4567-8dfb-dd8ecd2e1a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ae8234e-4c83-4c06-a99f-af5bd023ec30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e3aca8-80de-46d8-a978-409babc29b33",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a50305-f144-4d35-82c6-508efa71e91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b934e30e-1ba1-4b2e-839b-7991ce4c6ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dfc202-eb36-4ec6-87a5-0f97fd0a5c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04bdf785-2648-476e-acec-e56bf53adffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c647f4d1-ff23-4ca9-8990-348d264b3705",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362e6d54-2163-42f5-9f3c-288346d1ac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d33348-7fcf-4ed5-a6f3-01cea0a9cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c80689-c2ae-46dd-9225-5e4d8ebfaccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee20cd6f-2789-4457-9e3a-794d448ccb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dced2ac9-171a-4197-aa87-04c59b3c33ca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa7682c-1297-4899-b85b-f341ee58651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75195fd3-96e2-47db-b397-eb591a17575f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede29b4e-b2c3-4ed1-a151-8570634a959e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889bfcfa-8c1d-4efd-b7df-3bd2fa764e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddacb9ad-0760-437e-8b3e-304d6a1fab7d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff12672-44cb-493a-87e4-1baeb322abc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3f68b4-de53-4914-a0a0-058e966aca9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f97571-5a52-476b-b621-f6099f877933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19b6c63c-7ed5-4352-bb6e-cc0a955f1aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc34ec9-e81d-4027-802e-cbf1b5d07edf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73c986a-7a3f-4ff9-8345-b0f720f0f002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b23cd1-9b3b-478e-b4ab-90b8f5527a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d25fca-6a9c-4395-a3bf-7d03870ef39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7cf7bdc-c3df-4665-b16a-1ac9a05ecdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eb4d1c-3422-4865-a051-abdbe9cd3e65",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feda045-23d6-421a-9be0-b7be305cbab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fddc80-2476-4fbe-8ac6-4d99b4e3b57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916ea7a0-5f31-43e0-bce9-d5be075349ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edfb191d-41cc-4acd-ac0e-606c6a23e412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bad578f-773a-4b85-89e2-dee7b84c8884",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2716e9f5-8649-4d78-8f38-9d7ad175224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55fdfb8-29b6-40e6-84d6-74d5b8fe150f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25661e-55e1-4301-9608-9d474f282e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "346c9cde-272b-4c13-9374-7047fe69fcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fed41a-f846-41c1-b1c8-29ac0464531e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09804ecb-7492-4528-a27e-a423f54ae05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619ad5db-d7b1-45f5-bb7d-519eb80de1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8032bd68-5161-4645-a8a7-1d038a72d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c728a37-5608-440f-b143-b91e73082e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc31f05-c655-42dc-88f6-f3b4b0e1a2b5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cc05cb-d7a2-4417-9af0-98f482071116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d6e529-2cac-41e6-b64a-4bc9680dbc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a233a2d-c26b-4587-bf23-15d8fdb6a7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30bd64ac-9837-449c-a6a4-0ff801decff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3921e4ba-da1c-412f-9b42-041215676ea9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c956ac4b-dd86-4948-9af9-a28a9efdcb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a590430a-4e27-4c75-98f1-cbdb02b19c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4d7901-5dc6-4fb4-974d-19c898858b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87cdc374-0d9e-4a8e-8f57-0a2ca4dcb913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458e0616-0851-4e6f-be91-66783f1e072a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd045d4-5a13-47ae-b3e5-c9aa69f4535b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cbadd4-5ba1-44e0-b5a4-a755782e78aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779d7466-305a-4628-9128-e0708d8f9ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d82ad190-359b-464a-a62d-60dc3d603dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d636cad7-713e-47f7-a27e-b5c5809f6582",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b48f9f4-ff10-4b5f-8eaa-a1d4472f51e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b91c09-4fbd-4cd6-b20b-cee0c83077f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1982b9-bc6e-4e3b-ba15-afed1307891c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9348bdad-4ad0-4f58-b48b-6970309660fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb01e20-e6ef-47ac-8780-f0c5c3230dc7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e4976d-28ed-4ccf-ad96-dd6a49df71b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed195e68-98ce-477e-b55a-601acba5f348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb891a-391f-4f81-a14f-9667f7b8b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c907dc80-67a1-41b9-957b-de0a731baec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf851df-06ca-4950-a924-254aec5d2060",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7c59fa-c6a6-4ba2-8d8c-3979dbdf7671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682290bc-0551-4bc0-86a2-d4d11f0cc9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9e9d9-d536-4898-a92d-f8538b6bca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bae8455-ebda-4b80-a10b-c092a3d1a50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decccefa-2324-4fb8-bd82-7d86ab616a90",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29bdf10-13b7-47dc-a9a1-32ea1af7388b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0992f8-8893-46d2-9404-65046a720e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b6a7a-e2ca-4485-85fa-2a83774571bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4a946f6-959e-4951-8ee2-af686ffeb5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc2056a-10ec-4f2b-8349-dc5ba109dedf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a176a5-2334-4b04-a333-419c9ce026b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b6383d-6572-4bde-8fc1-fc9147c662ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2f301f-99a7-45ab-b1f9-d65285006e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "755ce64d-d230-4239-a7ff-6ea6df0652fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919c58a4-eb9d-4f47-bdac-5635aac4569b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec71ba4-3afe-4d65-8249-0846aa02ad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941fd91c-f259-4469-922f-4d46539a4619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929afff0-fc4a-4820-a01e-a7add0d31ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffef3e6b-f356-4aa8-a526-889c71b475f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33828051-a852-4a2c-bb1c-a7f6e2a91b0a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4171bb9a-673b-4142-9c98-e444aecc9005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86c24a9-db9d-44ec-88ef-03f02ab9f0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a728d205-1fae-4ea7-88ca-7371c927965f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6833f35-6506-42b0-9bac-f96574a009e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8ffe11-88e3-4eb3-9ea0-37c3150989f0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbcf8d8-e227-4679-b737-022c89a82308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc83f247-3d48-489c-bdd3-b096d8b5f889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee1a7d4-f337-4eb3-8da2-abe27878e98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4346e8a2-5c96-4622-9c82-9f6d3acbdd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa53e26-7ef1-4d65-a3e0-886cbb7c449c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6d9a3d-febc-4be0-a695-b37ce701df7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed19595-4996-449b-97b1-2386e943fb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f935d8b-b21f-4b70-b377-2047390a2185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "335f894d-d931-4d32-905c-a8160555550f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98051cbd-42b0-4e12-99c1-d30b3a97e8cc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6be6abc-788a-447d-97b8-f68e0bfd13c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbc9388-bdf1-417a-861f-20a59795ec48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83ef402-a393-4410-a8d9-dbc068272440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebcca51-99c8-4b8c-ad33-f3a2546cce09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30351252-c858-47a0-8333-80b34ec2d01c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab2c504-b0d8-4950-b3b9-2b35fc350ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca9cad0-0ab1-40fe-860b-20af15318e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e514ed-ed7d-4c0d-89f2-b78cc8de461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db5faeb-6be7-4209-bd31-af4d9b928ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ec8f00-4866-4f78-a7aa-df289cf242fd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a8b0a2-f0ce-48d2-af17-2fad986d7e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cf1b6a-da7d-41e3-8f4b-e92b8eb99021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e2f2b9-8b3c-43f2-8e12-2819b66a6c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0ae9c9-beae-4dff-b278-9c6e52cd4872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbfec47-e0cf-4557-a0f8-a0e99cc41791",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d92a771-c3c6-4206-85dd-04a561872073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2be364-393d-4f6b-849d-506d46a84ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a20a792-e98c-49b3-8356-ed010da44325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81438401-4148-400b-93cf-e56e49603b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d287617-e9ba-42fb-add8-7423b5934286",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488214b6-3e26-4829-b74d-44922bac8e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdebc9e-0547-4164-9dc9-f76e18eed10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e8e757-02ed-4a7b-be70-78597a214dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eca6287-d986-4511-a4be-1aa17568b6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2087cfa-e0d7-4184-90aa-cd4d1d169e3c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cbd8d7-c165-4d51-9c96-28089ec1348b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7b08d2-2d14-4de1-9579-d8c39d7750a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e463ac-490a-4277-a3c8-8695fb825b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "947cb656-7a89-4510-9f78-09c142655d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656e4e05-1e8e-4e1e-b34d-a37b73e6ffa5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c089d69-2d21-466a-b91c-af9f1dc3fcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c93d2e-3fb9-4f03-a84b-724e14f317d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e76f08a-da04-48c2-8045-2c0078912365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f5a3d7-a27f-45a7-afaa-117437768945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc1978a-9ae2-486e-b1ac-0f4c429ca29a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d573c41-d091-453b-a936-a16981f18dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeff0f77-f35c-4f44-8ef2-fbb0d28e2390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f60200d-c24b-4f89-b12b-497ab61cbf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ac8e68-080f-4d38-8db7-a123e8bb0df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a91cb0d-3c3a-4b6c-9db4-227915e7ef29",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a82b12-2ed5-4716-9b57-e0a738c2ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5a227e-52dc-4e5e-a483-81c37e5e5899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09211db-3ac0-4095-ab7c-25e2cfdb6968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9808b20e-9987-4478-9a29-bdf340e1cc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673f622a-7349-4d96-8fad-7f9ce9d7233a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec0de77-5e10-44aa-bfb5-a0cd3c8b6c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb78cf2c-03c4-4610-8937-898226eb099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d80e0ad-28b2-4e42-a802-20b33c960103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b9ca1f-9220-4385-a59b-2f840beed1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6d987-0e84-454e-88a6-bbf9413e635f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e34aef-33cc-4ce7-bec8-1fd60ec8ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8dcfb2-3ad3-4898-a2ab-753ea7d01730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613170c4-01b2-4051-932f-ccabe6030e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abb00ac-ed42-4c27-b7ff-dff2118e6255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670d6b1e-4715-4d39-9f94-3ad81481d937",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1e5d05-8194-49a5-80bb-4e4db3abc65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9737879f-35f7-40c2-9b6d-fd520b1f3fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e3d2c9-0fc9-4090-b162-3cd8973b3be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73192bf-f806-46fc-adfd-86e1cb0d4aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8d728e-8633-4482-9e06-6c3cf2a8be39",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f229feb-6fb4-4b66-a71a-e8d1c18e6229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbbaf81-74cf-4242-b94b-186552021ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1031a18b-28a6-45d0-a52b-a45620d2bcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3995dc-11f8-417b-b05e-ce7751a61137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf8c6e0-98af-4790-a5c4-4665f1dc1621",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89544778-664d-48c5-b34a-eedc7b9fbdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1baab26f-96db-40e8-9f10-b40d19786a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960ffa8f-df4c-40cd-a162-0ff274c8e622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42d1c573-2ed1-43a3-b03f-6dca912d3ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88caa96-aedf-484e-b94d-7f5c296e41e5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eb6fc7-b20b-4502-a917-96851c3062b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb417e9-2548-451a-b717-b7fc1b35ef73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f594a22-b8e4-4173-8883-2b05a8f48aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c88d46f-efa0-4aaa-9c59-46d64834a9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4276cf8a-c22f-435f-92a8-ee3b4bea8f55",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd8f5ec-bc81-4fb6-9100-43a2b9f2f1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27001447-6b8d-4a7b-aab8-5b9232c762a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c82346-97bc-4051-8ec2-2021464ff1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6842f430-da6d-4302-9e76-5c2e094a2ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ead14de-8db5-4b1e-aca6-3cd3258251b0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71254c89-bbff-44c4-986d-9660fcbed0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4fefda-ff9d-4b60-9c25-bc31ee6391a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4fb3c2-ef33-4ef2-b131-0fea83ce5185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "564c77b8-3506-4673-bcfd-d2d44f8ced02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b76a073-cb67-4c90-9513-1d04c83d73de",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ad5fd-fef0-4a89-aafc-8fe286d4b080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819b88d8-7091-4203-8896-f190b20091d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dd3d13-e639-4832-bde8-9af88b76f8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5860d2-a5d3-4ce7-823d-1c9735911928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09041c7a-8714-40c3-b9a4-a40bb51c08b3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e56169-6dc6-4151-9398-d42b69efe8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69b2b7a-c356-46b2-85f0-32a21b1d2b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05367d7f-08c6-4bb1-ba48-268780004dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1016896a-9c75-4284-89f1-cee009e12084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdd4fc6-1e2a-41d5-bfa0-898a6cd742d9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc1c7f3-ac18-4182-9620-941cd4e71ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7425bc-142a-4b2b-8e8b-e5cc10ca571f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86a4711-66db-4cbe-b304-c303c4d831f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0b33e512-4dce-416d-8109-c674bcbec6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ca7ca4-ecb3-45b2-b1c8-b9eddb0ac544",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507ccd2d-1b96-4347-b149-66abde5022b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3b8973-9265-4a83-b77b-6678a212904e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72d136d-97f9-45d7-8751-fd9a50985ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "afff2045-0743-4782-b474-560ffb675549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba19dbf-88a5-41b6-a75d-72e564e8141e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2585f58c-dc53-4352-881e-57abed1fc25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a196b483-49dc-4212-a4a9-e6ba236c18c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e717b9ce-98d8-49ef-8c1d-1122b139ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4331a4b-ee5f-407e-a062-390c08e6937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece26f8e-b537-4a56-95e8-5e8017e7880f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527a1035-481c-453e-986d-823e29114434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877b24fa-dfcb-49f8-970f-91c07604cb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7413fff5-e457-4c9a-b63e-8e77f0028771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1951fed8-55dd-4450-8a7f-ce040b646e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d758efb-f2e9-4925-8cc9-423483909be7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c9877f-6e39-44fd-ab88-22b1eff61b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0689fb-1922-4eb5-80b1-d375f388f38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aede582-f7d5-46a9-ab19-d1ca7c12712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2f6ee9-f53d-4daf-9765-c3dc89f2ddd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95e26de-ab37-43e6-94d9-042c7c810e4e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ece8fc-abc0-4386-8b53-e9324ca87c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4421b99d-dd86-48f0-af62-2f5117377579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d4104c-4eec-46f1-b7ab-9f81db4c6341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e100b98-388e-4989-a01f-49b8900d819b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b554eb39-f703-4b06-a74d-29a692d6bedf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d6ddb6-7d31-4356-9826-e78477211ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6a7ebf-dc6a-4b00-838c-19cceaae85d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bcf90e-240b-48a1-878e-1971e6dc0afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4d6b82-83b5-4017-b2f5-e2bb8f9a1a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf55bac-cfd2-47de-9075-d23e902a3388",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13a0f96-11dd-4ba7-9e50-ee63a445361e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2309ab1-2b4f-4cb0-98d6-72aeab2292ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1310fe3-0844-4b12-8acf-791f61a35c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec86e81-47c0-4d38-97a1-6e44f1afbadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6da147-a710-4e24-b39b-5b33037f59f5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ee3780-fb5a-46df-bd54-ad666ad432a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce82a73-d546-4721-bf76-3ddf9a951711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6183f61-bd75-4427-936f-e64c815cbc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f536da-7b04-4a2a-8510-69ea7dd2fa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc85890b-b20a-41ea-98ce-f8227bc415f2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447880b7-6776-47cf-8b81-83533fd49129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f913325-0f55-4142-aa2b-36765d88ad32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c221c6f0-5a71-4fd1-956c-14dca3394a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c128f1b-2be4-43df-9071-cd1a22ae783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce74822-aa60-48c4-83f6-0e656a0b7600",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3617eb07-72fe-45c0-ba22-3347a31d0956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f847c11-2cf2-4691-8581-c9a9038d4adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a007728-4b85-4f61-9814-e9ccc655d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dd317b-4fac-4e72-a644-b9d430daa5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43696cac-3546-4910-b815-ebfcfff9c685",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c9daa4-4a14-4f0b-914a-b05d0a88a89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0680fa69-19b3-4302-99b1-2c1548685e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cb4c62-4a2e-4e80-ba60-6784e46b7671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e85f196-ece5-4720-a61d-55e9a086ad52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa81f1d-eabb-4cfb-90db-a8756dfbbf7a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79288e52-580e-49cc-b201-ba5fee3ee2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671821f1-b6a7-4579-835b-a27b077601f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e51a626-8806-4487-8b3a-b6a22114be34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a67af2-0ffc-4135-bcc4-b2fc24890dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69523e20-565f-4b12-af26-25bb235f7854",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06297cc3-cfe0-4fde-b73b-008b7c319010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a529c0-643b-4caa-a60a-20465ab01dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15f6519-37ac-4258-a005-744e0c6acf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f816c405-824d-47bb-b3b4-7caeba729b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f7ad75-600e-4c9f-8f72-25d30eb186d1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c20ffe-59bd-4859-9c05-3009bafa6d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79647654-474c-4a80-951a-404282045b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14678f47-2fee-4032-8d0f-1dfb06330b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1d615905-0b13-41d3-8587-8ae45d31869f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfc78c6-c3cb-4ac2-bb91-5fa6b42c3f13",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61275bab-083e-4af3-ab2e-d85c4149f132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff0bc7b-aac4-4947-aae8-acbf8bdd676c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6389a72a-259c-4bbb-b1f3-44ceb82c4760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c16d2a2-3902-4cc8-99f5-155bb20936e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ad68cb-d670-4374-9983-ed530237f508",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67baeb65-5b62-48c5-adee-983afe5ae9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01e4013-6865-45fa-b54d-307469a56e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387a196c-1329-4496-b518-ef0d044d6eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5b2ccd-5bda-450b-9864-58b4b2475fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58edd28e-c97d-4629-a8d5-d023b41b01f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f389674-aed1-4427-979c-225c8cc0208c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98921b24-6675-48b1-b313-672ee0e7f164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913a8e88-d4b1-4645-826d-6ad1d1694a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87a6188e-9de3-4552-8574-4d615ecb650d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c05e481-bff2-4c69-9cb8-128293c3f459",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3d1708-b255-4124-85ce-0ab33e34cba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f641560-1380-4701-87f8-0655ec94047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144e4148-a990-4c45-afe1-ad9da8e76708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea5c7cd-7808-44ae-8b3d-7dc6608cadf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b415c19e-3df1-4a0b-93ea-dd10c0d02c43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d2c27-ad8b-49bf-834d-c86ddf0c711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21eb3de1-1da2-4d87-b8de-742693dd3cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d41994f-60bb-4695-9458-306ebdd805bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d12c641-2d61-475c-8064-4fd6e7c84c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998d05b9-9983-47b1-ab67-ce974f63e193",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62853cda-6edf-4698-a001-2fe0be1446e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ad5b3a-f61e-4d2c-a448-91b044c7cc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb9228e-0514-4d00-bd98-be6b88406800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d48e4f-d589-4e57-9770-9744133df3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c4779b-356e-4150-8979-4c8afd56058a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f9b46d-2105-4474-bc7b-91b7133687d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2533a2-923b-4cdf-b3bb-0420976f829b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeb2722-1240-4e5c-b245-0bd558263495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "64af5e4e-12c1-4c79-8b49-cbb2c5867b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ab07f8-8c9d-407d-b7bd-3b83dfc23fe2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702973b-4bc5-4372-ab89-14a4f350f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea0a09a-48df-40c0-942b-fe9c4eaed06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561ebefa-70fc-45e3-b984-3421b73a730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caec0a53-2b3d-41b9-b602-442df912cb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43d1acb-5dd7-424d-88fb-79eb70f8d4f5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a41a39a-7449-4146-99ad-6b9bc7f7d848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9fa847-c05a-4856-ba24-26ba4f3c3f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bc84c6-ee28-4ca1-923a-523e6c2ed91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "810e60ed-85ce-473e-bdca-cd07c852d7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25703ff-c65f-4843-ae43-d3780b942598",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c22513-20fe-41e1-a13c-edee5bd7b5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23303916-61c3-49cb-8017-3f657b5f50f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da07bd20-0f5d-4f85-a233-dfd795b6dc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb4f9dd-c0ef-49c7-a6d8-deffff56fe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226ebd85-db20-44c0-93a4-07409569434f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4942eed-46a7-4ba8-9048-34179a12eb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324b8957-a80a-4dec-8f0e-2d943168cf1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2522db77-f155-45ec-a0ad-6f7241791e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fac7ae-5c4d-435e-b06e-01d5b0a444d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abebd6c-ce67-4bea-bca1-0d4babd87597",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c8d0d9-bb73-4835-a9a2-3350dcacaa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aed7b87-7a50-4567-b45f-dff3882facd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5469cce5-931d-4ad7-aade-6e1f6547e58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3a08e5-38e3-47c1-9ced-6050b6c28af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ad6cb4-ced8-4720-9ef2-a86c149a8417",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2f87a0-efa1-4699-9085-da4d201def8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ec65cb-0949-46fa-8bbf-5749273b8715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353a9565-dee4-46b8-a09c-1390745e8867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3f618a-8bce-4f29-b15b-dddb2ab68747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a2028f-2449-440a-a165-e5a9f6a95d95",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb1c8bf-b72e-4cd5-b199-bd53330af530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a47aaf-505c-42c3-b2ac-0c50c7bc8437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44d5389-a7d4-43ed-b4d0-31fe71fc03f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "448f2075-5b42-466f-9a2e-44e39d988edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dac9ec5-9ca4-4bf1-83ed-8af2f1b03e5e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb9355-d416-433c-b7d3-21831b772512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900f600d-775c-4374-82e7-5977b7788649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0364d2c-2cad-4dad-be23-73ac4c38e216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a30b5f37-f376-4eb2-874a-fa8bc20b673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b539e286-555a-44d3-974e-7708d2e28e13",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96789e4-9ef4-45fb-a7fc-bc1ff0cce137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e013c4-2e11-47ef-81a8-ff33f8a27ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e25e11-1d5c-43d8-ab7e-8d7944ea03b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c84633-f056-4aa6-88b4-efe96ba0ee67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8560272d-62f9-4e96-b055-3202b089145e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95139e86-37ee-49ed-9544-48f65b073dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615ac582-4dc0-4a04-b4b8-2a2f79c44715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afb6950-8fe6-4cd8-bf66-abaaeba27194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96bbf9a6-10ed-4558-9574-a6d33f04cb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e884c2c2-2e35-4a75-9cb8-49d39b588121",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48916b6-5448-4a11-9cff-f9fb68f82c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4386f85-4acc-4df9-a2b4-66e21cb1a419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a749e1-7f2e-4767-85b8-c2f3f16c647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "455352ed-a05e-46c2-b73d-09580f80186b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7897c37-b70d-43e8-a612-70a205da4edf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d7700a-e694-47eb-9d9c-5375a6461b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6545372-db87-4edd-8d5b-b46a4a472e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ab39e3-c6f2-4cae-962e-9f144e834616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c39375-9ba4-42f9-a0d7-bcf16758df0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b1e6fc-aa87-4e58-bda2-4efcbf028f22",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448913ab-3c86-45dd-a3d7-e22e3b45bddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cae4cb-0c71-43fe-9ab0-3f3a2f141031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df100ae3-b3ba-40fd-b85c-61ccb27ff8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d9d836-ed63-4d46-94c9-ae0e05616c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263b690a-7afc-4b11-acfe-68bb816672a2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcefe64c-029a-4e49-af3c-84bedd562b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d62db7-ec7a-4a37-b46d-b02e3cc6333e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d357ac-e1cf-4230-8f7c-79bc9de19106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4050fe1e-86a9-4ec5-95d4-8d74b747bdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7518986a-1588-41de-966f-dfdba7ef25a4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5b5dfd-ff79-4231-ae0a-ae135ace89a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed97009-93be-4118-ac35-208d0e5af545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ee4043-3831-4dcd-ace1-45062e759508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4155b56a-5249-4891-8ff8-dd23e861d33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9fa7d2-83c4-401d-85c5-19d08189e264",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17582d23-ca0d-47c1-a5e1-f6b9d60df9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759aa7ea-c8a3-49b9-9482-4a7d72fc75fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8471dd9f-8ba8-4a33-9a9a-a2ea3785bcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "192fd40f-3c60-4e3e-b585-d74bd0c761a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9455f992-1a9d-4b35-8b29-8fd016e01121",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2717d2d-494e-4957-a268-c97bdf059fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca6d980-ca97-44ff-a6f4-5d499fa8a494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe17749-29bc-4f4e-9281-e7a5f6b8d779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48d91392-b4dc-49cb-ada5-3965878f3424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e373f4-f0d6-40de-88ee-1a1ca993706d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49132fac-93ee-4e4a-aced-84b9269c0b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625754e6-e8fd-4d77-bf98-3ea5ba7eff3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767d434d-e34f-4756-8afb-7c7bea5b9bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc18bdc1-5ddd-47a4-ac9b-4c6a80ea94b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a9619c-8d81-46d6-bc5e-84ce7b51218f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95777210-eb3c-45d5-8ed1-b1b915235c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77df660-e2f0-4d55-94c5-4cd07e1122a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01075ac-de10-4a3d-97b4-e66d19b21f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e68153-5037-4ba7-bf5c-8caf49483ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1858631-63f3-4c06-81fb-e49ea39384f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa68c4f9-e382-4b88-8eb0-a7d6006d95cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01da1a80-8aac-4260-bcb6-953c2e56ac87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a14c48-8b70-4ccf-9234-bacaa7a6ac0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0911f33e-f32f-4e8d-b0af-3783e8757e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a11a51-cdd0-489d-acba-bff8dbc076c4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfdd605-73e0-4634-be1d-f732d2853631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8962381-9923-42ee-8ffb-36592f54db35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09495bd-3eb5-4bdc-a9f8-454570b3864d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5c84be-d96f-409e-a737-da1178f11e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13964415-bea4-41df-adb3-f2885f968479",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f47bed-47dd-43f4-b31f-011d741cf210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05fd426-ccc2-4882-a535-4183505fd8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a56fb3-9f07-4fab-8d46-487f06e2cbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a233627a-864b-405a-9744-5bdcc9e6af8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6493fcb6-dfd6-4cca-a187-853813b348f7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f7ee10-61cd-47d8-9c1a-6c18fa8d8c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31c0246-75c1-4a92-a4f9-589d08ee9dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021486e5-a931-47cb-b7ab-700c0d7295ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e30418-5fec-43fe-b3e6-70f237891b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a1ff08-4c66-466a-a7ee-6b08813019d7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46237d32-d180-46a1-a476-7d65b891d432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d914c084-8cfa-4d19-bccd-92501f97394e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa0ec00-4733-433d-972e-75c9afdfa8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2b308f-8098-4855-a6c7-e4a29250ab44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f1ad27-dde3-446b-97a8-96f35fdae405",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf52be3d-dd19-47f5-95bd-144973b4e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dbcfc0-6307-47be-b18b-4f6ba70986a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d3bbb8-9a4f-417d-9081-150108b77227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c976e86b-cb10-4ed8-aa36-82e1e4c057b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8cd2d4-6a97-46a1-aa61-f9012dfd4ff1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd578bac-550a-4675-a73f-3f4ebd202e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c6d035-248b-48a4-aceb-cced1a072310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895b1be7-eca1-4d3d-a5fe-028b0791ed29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ec404c-2133-4cdd-8eba-c927d4c5ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44461a52-3066-490b-bd50-4ad3f81cc6e3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaba96fd-daea-4e7f-aefc-000b94e5f05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f15714-1389-4cfe-a9a7-b287481c068e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c51fa7-2bf8-4db1-b78a-8c668dc52e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "212d4bfc-53f0-4782-909a-ba9b4bea487d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a81d05-7791-4d0d-bda8-f927005e3ee5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0b0e71-ba10-403b-83bd-7004a4fd39a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2212f321-22f2-4560-b27d-b0777d9aeb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fdff4f-11a9-48b1-bf7a-741e87c58f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "042a5b99-d065-443f-a2cf-6059ec489734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e44362d-1bd9-445f-b611-c3fcf40607b6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36971673-7ba3-4645-9d15-e99099a21ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9e50194a-9a21-4fe7-9bd9-5c3735ea3bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9032d139-3fe5-46bc-8691-17e234868e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "632c9bdf-9475-41f3-9380-a2f7bbeeb7fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7c3634c-7929-43f1-9989-e027f95ae693",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb5a34c0-6423-4571-8662-6d7d7aa0517c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f845c3-4852-4ce8-8ada-40104a2e4d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2c3def4-3f70-462d-ad5d-90b11eaaa2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3220bbe7-ae4b-4b54-b7ff-8f4eecf3b84b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b9e36c7-02b0-4d98-abe9-6c8a1baaac7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9332841c-6768-444d-9652-bd50cf54bd9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3fdee33-4448-4f01-8863-75f6db4aa635"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a92f0a0-4180-4805-b29a-184d95dbd086",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37fe52c-bb23-445a-916a-45b061b8675f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2948849-7704-4143-9f6e-83c10bd4f7d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "720eb5da-0ada-4387-bd25-8042585fa235"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a6c7c60-c637-480c-9bbf-4b9913fea2df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5eb7ccff-15bf-49bc-b01d-f4a95c7edcbc"
                }
              }
            ]
          },
          {
            "id": "3f496a83-0398-4329-b769-bd6efa58e4ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68920919-c738-4d68-a5e4-378b109035f8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bf20f935-c791-44c9-afb2-c965e780cd9b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1333b26-f4f2-496f-8ae4-0e5e40e116a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "56ec1f31-cac6-4f29-b478-014874a33197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e54d2d-3e79-4218-973b-6bce33577a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3349796b-60ab-463d-8142-6fbfd27437ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "811fd995-7649-4503-b7a7-5ed3f0a316a2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30b229b0-00b0-449a-8de1-130e1d280504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e71628f-f3cd-47d2-83b9-9e5f5883fd6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3b65f17-1e78-4a6e-a7b7-d93adc38e41c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d14c83c8-f422-454a-9d4d-e097d249fbf7"
                    }
                  }
                ]
              },
              {
                "id": "9c6ff36c-c80b-4e00-91de-f2f18040ab96",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4564cf19-3d80-4260-90b1-81dd2f859278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73576815-4cd0-49e8-8cdd-10bdf405c031"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53c3a670-ac4b-4561-a96f-484c3a5bd439",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "734744c4-dde5-49af-a97d-0a1433ce444f"
                    }
                  }
                ]
              },
              {
                "id": "7bf71558-6b0d-45fd-9826-3fa4f6c4fb92",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e036be2-362e-4fba-abad-5fe9d7820829",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d524c862-9c24-4c9a-bc33-40380d9b95e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b1b65d8-3743-4d6b-8ecf-9a0ac21bb46d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89fe8e6a-a5ec-4c3f-95ea-144b226800d7"
                    }
                  }
                ]
              },
              {
                "id": "a89e6031-b2f0-41eb-9c1a-63b61e0b7087",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "787b67cc-1d50-4059-9bde-a6b753f7fd93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42906ddf-5053-4111-803e-7eebdb63843a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd0ba509-761f-49f6-971e-77a51f21172a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6c010843-add5-46da-8b81-d7c91a102dd7"
                    }
                  }
                ]
              },
              {
                "id": "52f7cbea-a9a1-42f2-9c41-4e178f5077d2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fe0f389-2f0b-4dcc-9471-2505c1e4c868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85505d5f-6073-4ac8-add8-caf79910ff89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1a3afce-9acc-4955-b984-7323da198f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9187de43-3ab9-4721-a4b5-86895c2e4d8e"
                    }
                  }
                ]
              },
              {
                "id": "1b58b520-eda0-4ad1-a23e-bfe70bd5461c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37f0d026-17a7-4c99-8eee-7af527b9b078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba07382a-8530-438f-a2c6-23bc98f1a3de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f832961d-56a9-4350-9cd5-b26fce9d1d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b3a21856-1cd6-487e-af6e-576e87f95d99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "711492bc-131f-4884-aa14-a35595acd036",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b41ad218-ce10-4a5e-8f7f-4e9f2abf26ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "24a1bd24-104a-442d-8c9b-88a510b448d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a395d17-46c9-40d2-8b2d-08878f315940"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25f2709f-9db8-47ea-9fdd-5634281d8adb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cb201c36-e1a8-4553-910e-0659b8e4a8d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b126b4c1-7216-4476-9525-ffb8fc091365",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbc6832b-efd3-4e78-8bc0-86f7030be0d9"
            }
          }
        ]
      },
      {
        "id": "dd808b83-5a85-4b1f-bc28-232dde27e2fc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d2ecd9ea-0079-4050-8a28-32429882537d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3bfa9d0-6f6c-4755-abd1-4bec6c3f4cc3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7809f2c3-25c2-4bd2-aa2b-9dc1b3327f86",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71ed82c-7fdd-45f1-9601-f2d32a4b5b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeed23c6-e456-46a1-8c28-eda8042e4895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42e8365-b610-4b10-8d51-2ac320b0dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec08864-9708-4153-abef-0cb51782db7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcace8e-63bf-4106-8d60-9cfdb9b34ccb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35925d6-2fd5-4383-a9f3-35511b4a71e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69030956-8b1d-4cef-9ebc-6179b584619b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c42a17-9a83-43a0-a2f9-2b334d200294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3bb3de-7805-4e51-aebf-291cfca4f1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcb3876-47b5-4e18-b500-4e1ee7fc4ff6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636e4724-a452-4ceb-8456-38dae23bb975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fa0394-5c38-4151-84be-9e53c99370b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdcf4d6-367d-459e-b45f-01f6fcedaa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2695d123-ed31-46da-a628-37dc390e8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f083049-4947-4af6-8260-59db65df2e31",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d66dcb-a7b8-4ea1-b290-2737fe92a5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9faa81c3-98b4-41f5-a0c3-e89de429ed4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c96357f-1779-49f9-af61-a3b5b027c6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3b7ab6-7798-40aa-810a-28ee5bb3fd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4c4cb8-dbce-406e-a395-be0df5096ac1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0d1e9f-cb0d-4295-bffa-e770af86a040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e783fc-9485-4e45-9aa8-2696a0493288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de40ac8-4568-4f82-8517-aabf3407a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9e7df2-e4d0-4129-a5a2-07c447be1a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2932fa4-210c-43be-aa61-10d2f061978e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78392854-e880-4682-813a-f4fe75510e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aaec70e-0648-433e-8d48-a5046f699815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a1be1-2757-4bde-932b-3cee2113cab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d844b177-566a-4e79-bea4-c9e0d43c0106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815605b3-8eac-4816-bd1d-3be28ef7b819",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889910ed-2037-4422-8a39-666a1e507e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c43c80-4fd8-4306-be62-1ee4278c45ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3e6dbc-157c-4b5c-bf78-6760d755d217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "50dd8bcf-e6e7-435e-beb3-64275164dba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697c25c1-bf43-4ef1-b2f7-c1c133541b2f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e530c1-d2ec-4c0d-b4ed-b415831889a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82692362-6788-4dd3-91a1-b0d010c615fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66699be2-b540-480e-a015-71ec82506327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f67fb5-6534-4275-9e9b-1f433dcf2709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e229df3b-3722-4679-8358-be740b6b254d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f14350e-ee9b-4fba-8c6c-5ca3e498d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f0ef6f-802a-4d34-9f5e-2d5ed77df404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b502b0a-89d7-4320-9b07-a03361e9dd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa1ac33-f7dd-44be-9ab4-a489e630ea15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fa9c22-1a76-4241-9e7b-df647ae72b07",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49c73a4-340d-4c0b-8bac-135830668f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e7542e-c66a-4256-a7a7-54a85f2ef666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b440f76d-23e0-44f3-9bb6-af1b4701480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77913d8b-4e93-48a1-8939-d83471d25d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e605894-9f0f-467e-8679-399b0f2d227b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b41f6bf-6655-4fb2-a569-40c0b249814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3afff7a-13cd-462e-8fc3-1307d24f60fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b03c10-33e5-485c-b0e8-dd96ab6df2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "65cfebaa-4443-4a83-9c2f-6d5b936825f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ef8e63-83b4-46f1-ae42-e04ec008163b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750f4a60-213e-4c1c-9904-a5d1c40cf758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dec80f9-b8e2-4f63-af26-bafa7d0a7fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa095da5-4fcf-48b4-bf4a-f0d12ed361a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6081cf8-118e-48e0-bf45-19f6f9fb9253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c64b75e-8816-4f18-8690-476e11029d3f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf51a0ad-5735-4cb2-b47a-05fdf6e4791a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75e91cb-7830-44c5-b50c-2e24a4481cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffda3dbf-a43b-418e-a9d8-416437ddedd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73cbf8b0-3ed5-4ccd-95e0-79e7dd42b8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4844f2f4-24a0-4c6e-8823-380aa3d381f7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6536f48a-abb1-4307-939a-a5611a8bcb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0161079-22fd-4d50-bcd7-f59ad14db3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec6e9a1-6c5f-42e1-8faa-abd19a33322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbc7927-c9af-4ab5-9267-c371141f0612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0f08e5-6a5a-4628-9562-4b55236cb2a0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8e886a-6951-4215-a73d-fcda70b5d9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d251b522-bf39-4576-8ff0-04843beb9d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64631a6a-7f4a-4286-aaa0-9742cde5b60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9efcdf-1d17-4e6b-902d-d37b60b8a23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57370828-9576-4fc6-8f1c-f4659e3d50d7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b944385f-e74c-43eb-a04c-906308b62902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c942118-1917-43c0-bac1-cc8bd36fe79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a272f2-423f-4f67-aa1b-e27acae44b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "408d4780-6733-408f-97d6-023701f865be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2c146a-b5ac-476e-beed-94941db567a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7728b6-b30e-4386-81e8-51d9e038ab0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526a49ff-dea7-49da-b271-8a620acc55f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76312f39-4056-470c-9499-7f432ef2c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cceda03-24d7-48da-905f-a67d2a1f7665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f4097e-8bed-4260-9bdd-e252d729f2cd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1208bbb9-4e6d-4e4a-b397-98391e21dc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8dcce6-b332-4fb9-9df7-3461e87200ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d15aea7-04f3-45d4-8b80-f05a5a27c20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0c28ad-a1e7-4022-aa11-c106bf8e20f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95a6aff-80e8-4574-814b-88f54b237e48",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1a5f04-f445-4f1a-9b8e-c36b8026f865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e0c069-c798-480e-bd3c-ddb06c335892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8d6e04-4cf9-4f73-a70d-340c2336fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbedf1a-ef31-47ca-8a2a-0ef16ed1147f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c8143-e211-468a-a03a-5c7e34497acb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be5ceb3-3dce-43c4-bd67-65deeb07fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd522ef3-9df4-40dd-8817-e9ce43c15829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aeefbd-a232-4577-853a-74d5e2bafdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e32b9e-5a09-4866-9bd9-1088096c55bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0fe8bf-0947-46df-bf04-f50d9a8727bc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ab17ff-cbfe-4f8e-9a41-0bb2152e5ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7189dd26-b8d8-4b32-8049-6de3c65a8596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe511d29-602c-4af8-910d-8e28d7cdadb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db97acd1-5bc8-4bf5-8382-222a74376243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdfc4a0-2fa0-423e-908a-dbb23c7ad884",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02667f6c-351b-4ddf-92b9-2b02e829b058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5feed4-0546-4362-91e6-3b235b270576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca4a164-303e-45c0-9335-e9925609a4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe2a017-8cca-4bd9-bf0f-fa17691831f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad49d66-cd9d-4064-986f-68e2c9e86ffb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea5e3a8-376a-42e4-badc-b7a81f307f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb309458-714c-41ca-9f38-e352733cffd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f819ed12-8e5c-4231-8875-6a124c8ff391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a313269-ebad-4037-8616-5b0c5e0af69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8173e514-cc8e-4cce-870e-363c091e4af4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9509b28c-99c6-4cf6-b2e4-f53d5dfe9db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79593831-c764-4bd8-9f1b-1d65ad252509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277d9cd4-a548-468c-baae-00cfbfb63ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddeba0f-b377-4acf-b09e-4ab442425c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa39ee7-37ac-4f61-8736-69175658168a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ba2963-60db-43d8-86e3-4664049f804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2624e908-646b-4ef8-b62a-95f5aff01fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da6535b-9437-4501-a482-06bc386a5b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4688ca1-3138-4e22-9107-ab7fe4d15229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bcdc06-8788-4fe5-abb6-9e5f9b932c52",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15c02fd-28ef-4996-bc9c-49bbb2d93b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ed5608-fbc2-4353-b567-98912fb87a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98afdb12-6fa3-4659-948a-0a95150c5d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0af38ba-1482-46c3-b3c5-6964da5f9b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78acf465-6a10-4bf3-ac24-663340345c8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79a16b1-6b33-4a76-a601-c50d993d4d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92da4c6a-9bcb-4bbb-870a-fe5a8c096ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68e8bd8-c946-4100-9ee0-fdd0b56bc988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120c5242-1308-4520-b56d-6604da292b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62da2eea-3674-403f-845d-10d2ef8206b0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaf792c-cd1e-4426-a0a5-2677b25c35d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f57a03c-ec56-4a1a-a06f-1d4068fa140c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ece4c05-9f69-4c55-b81a-e6b427f32f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0714805-9c3e-445e-bad9-27c5a49618df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386f16af-ea49-4340-82f5-976e3be3bb6a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6d5165-baac-453a-8fdf-ce00707a541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649f09db-b57a-4f44-a724-de58e3816448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9191322-5dea-415a-9403-da08a4fcd705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "140d57d2-af8d-4abb-a42d-5223f0116672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c40a1b-ca87-478f-9127-f8022d6d0dec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e66d80-a6e7-4ced-80cd-1f07ef65ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c91b44c-367d-41cd-94ff-6ce5d6a86aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1c0b67-9b38-49ff-b65b-e1d017a7352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "539858f6-5077-4f63-b3f6-1d07163470d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5860b27d-68cc-4f1c-aaca-f48040f4dbe4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09584e05-bc54-4261-80ee-baa346fdb1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf62b3c-708e-411b-9019-7f77b1623bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78574398-d7a0-447d-a703-31cf958a1128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cbcccc-0bc0-441d-8014-b926458f0c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbe7de3-f153-4dc4-bad9-a2a1a05725c9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc99daa-f404-4594-8f31-a99de49a0f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09e303d-ed5f-467f-9f7f-ff02b0e40d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec138fd-da6c-431c-a04c-ec5bc7482b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015797e3-0dc4-414d-adce-8f0e5a4a0226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d420b6bd-824e-4b62-8c93-cbe0b402a496",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea2cd91-84fd-4c9a-bb64-533ca3cf61f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c7c1a1-ccdd-4383-a731-fad925b46957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf95d737-f2ee-452a-b79d-46609f7f76ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79fd4bdb-c055-4fb9-a510-0fb1e6c63011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0026ad-2be6-401d-8ac5-10e81a5e0617",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8981cd41-827a-4c5e-9b9d-1bcc45ecf828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c84d11-4956-46ac-b57b-5b0d151c0408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cef7c4-95b9-45bd-8b42-09c13b0917b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac88acb5-9269-448a-bf8f-a5e63c9fb0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef176be0-8268-4c5b-9d43-8cce0ab40b95",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cdc724-e6bc-44c9-aea6-b15aa4d185be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c70423-9873-4b51-a1c1-df9d4aa67d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2bf2da-1160-4b87-a92b-565baaec7c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f36188-bb9f-4e5a-9dae-06f3fdd0f592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f9eba8-f144-4bde-bc74-b74dc46467fd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dc6af6-0745-4742-ad0f-bdfcbbd92555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54bb70c-9fcd-43af-a95c-cbbcd056ea8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eac991c-f459-42ce-9eba-f2871b6588ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5ebdee-986c-4dff-bf5e-707d6d0afffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c5375b-8f94-4c78-b522-14b17ce61633",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7371ca89-4dac-4c1d-a70c-2a3a1d8714ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1369975-168c-4985-bc92-fa79e6601a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec161d6-6382-4ce6-826d-9d639743367e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080ec76d-62b8-4f3f-a087-c04a133f464c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c64039e1-b931-499a-b7d6-9b2b41faf284",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ab5ee3b-d8b5-4e9a-b65f-c8d36e42899d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c292bf-d939-4aa8-9e60-a12dca631916",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "91f00080-d337-4906-9052-91869c825e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7a6711-1d72-4b31-bbda-059cdd1a2a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6895c07b-e8f8-4956-9879-ddae758ec4aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3b754e9-6e60-403a-adbb-9fa35a633366",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a8d605d-d14c-49e2-99fa-f3967f9ecffb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "108455de-f68e-4032-b6ac-3756d8e965c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50bb5991-f404-45ae-a7a9-02a45e0db3d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06e424c4-52e3-4ca5-a022-f031f1c937d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91276f61-ccb4-4b29-ab29-523285fea600"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2ddecca-c30d-45a1-917d-030ab90954b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa1b7f27-520a-407a-8c22-0036f255c820"
            }
          }
        ]
      },
      {
        "id": "0cfaed0e-cac6-4feb-9021-672932db58c3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "afe851de-c82b-4122-8fcd-f6930a36223f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "285a42a4-462f-42ff-b0da-f99c48b2488a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f0670d7-3286-4cd7-b795-cc3f25140d6f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61de5115-e334-45d1-97d6-ca4b4f6a722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fc9775-8d8a-474f-9fef-4fd4c18d9481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e734e86-cff2-4897-a5b3-9592090c3a1a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e01a85f-8137-448b-81f9-dcfc5e319a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adb2753-c025-4666-ab98-4e9ff362c279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c9cfc-cd15-483a-89fb-16d3104f9de0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ede6d3-6b90-4d77-b0d4-0da0dbc7ebc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2169791e-7fe2-4f11-99d6-4e3508f633be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de2c1f2-a4e6-4aa7-9dc8-147feebda030",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843c9f3d-eb8e-4c88-a589-503934a96090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787d2c05-edd4-4d42-a153-758fab38f3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcfc71f-08c1-4faf-94fb-6adf3e13a88f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44c487-a4cf-4fda-830d-db34d5839195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d154970d-7830-4a6f-bfb6-e36e3f10b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9ff1dd-eb01-4258-8c98-599e90baad6d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5476a5b2-bba4-45f7-922f-0212121b2068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93c047e-8787-477f-b370-2e4c9034fc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab7fc20-606a-40cd-8cdb-b8fa181287ac",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebe10db-3cd7-4164-8692-14c176850d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8defc0a4-c22d-4cb8-8055-a0b1bc314954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22db7db-0751-4025-b78e-fe3f09c496b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1b86e6-d6c9-4e19-91a7-af13f2eff6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70cf643-ffbd-40e1-90aa-290de1ba141c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415961c5-9e78-4d05-a880-d2ee8f4d3c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50903daf-71cd-4c68-8969-058cd133a430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca88534-05cd-4e87-9a11-2962051acd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d877fac-1584-4811-90df-df73c9255bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58b225f-9c70-4514-9022-6c5a221b2bee",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e19f5d-f0dc-4434-9d1e-12720c0237fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4932c517-01c5-4362-838a-058d1d4ac3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89c01c6-c81c-4045-ac3a-3ad6cfe7672a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92595767-9d9a-453c-aed6-936fa9281571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50286ecc-7da4-4ea9-be23-1f85140ded2f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325a659c-5e68-4ef5-9bb4-f8c4665045ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d97acb-6d4f-47ba-a083-26d700c0925b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c306cb-7891-4f1b-bb45-b5900c3f042a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d2c301-13d7-45aa-92c2-328501dac365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482c93f0-bf01-4cdc-a219-51606e987d93",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd49521b-29c9-4ccb-82b5-1fbc1215db33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f88f285-c6e2-4ba4-9545-02bec4575e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7738b98f-050c-4920-9195-fccf01d1ce14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2062941d-8b46-4b27-94f8-4f19f3effc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61dfa65-42e0-409f-802e-6c036bf741ac",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55b80db-aabc-4333-876c-bd09d4b39a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87750685-5f31-4c5d-ac7b-b7c73245927b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9ad22b-dbc3-4d28-b07f-aef09b14afce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cf80db-4dd2-413e-8476-bdac1e1dd67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e915c3d-4d7b-4656-b6eb-f81fef24c6ef",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2063d1fe-cb15-4fc6-acec-1185c35174bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63200cea-c754-4137-8698-f01e1328aa70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb9aa2f-0403-4059-924d-c2d8af02d605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7aaa95-1694-4670-867a-51634dbeb339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c29dbc5-a5bd-4ad0-87c9-de650aa22304",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56150d8-f98c-4736-b9b5-5add3f49ede9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcc5c39-8523-466d-bc85-e6374dd45d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb545ad-d36a-436b-ae0e-1d59ac1b4d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f3c151-ea14-4694-95a7-54bf14722103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feeb8539-bf44-4294-9827-6ff2f3b4ac26",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431d2edd-dea1-413e-8a2e-73863ceb4b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf8e704-e9b3-4720-bb47-4be3b63efafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa6a0d5-c195-4751-914f-880c9a88d463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea6f617-5572-4653-adfa-b3db1bc0acf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba3002c-26c6-4c00-b7c9-1860b425c207",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8644f3-ae42-45fc-8787-4f905cc83574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ba82e7-3205-4d5f-af6c-f53aca5c36ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280fcf8f-875b-4993-b99e-5e9b36c95c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c173d814-6d93-466c-8725-3bb4dd8e0e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792e4220-d41d-4764-9932-0949690682b7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18879a7-f0d1-4c04-8b20-33918da120fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f709b7-6c43-42fe-91d2-e455a7be35fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e8d802-ec8a-4700-ba96-c3d87971706a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ce0311-a0f5-46a2-8277-cddefd2eda40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f95651-0d5b-4a00-8ae3-91ea32f41a73",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9340515-2a79-4e16-b100-8ce849801203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80748a9a-d844-4ad8-bd98-8f0da3b78eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf97c15-5fb5-4709-bae7-fed741e0a69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c3d45c-737e-49b8-93e3-0c6a78a7f176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da98fbd7-1799-43d6-8387-697b64e36fe7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327ceb5c-c9e8-4e82-966c-1b1e03e5267f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218ce87d-8120-49cc-b6af-597c8f55ab7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cec3bd-8fca-413c-848f-b7d55414e974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8fec7d-e026-4af8-b200-cbddde5db00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c13b7bb-259e-407d-9dd6-20d8d11dd1fb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e9856-8736-4aba-9f00-e9ee657a7345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5a8403-f59c-4db1-8cf0-30d581070c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded00f6b-3ed3-4edd-b35b-3a7554a8ae69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93cf23d-52ce-4014-b0f7-32d84c47fedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b5ed0d-1aa1-46d7-a8d0-d72b10fd4512",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9712e0-aa4b-48d6-97bc-0ae1dcbd4fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17a1994-7889-4f68-a56d-73fb0548f869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36109d5e-f879-4e46-9473-1b3d8721f603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86b4c97-9649-4a78-90e1-f6cd4ec750f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4fd917-585a-4979-b5d4-115b3556ae9b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c305ed3-0dc8-4674-9ad9-2d4b6790abee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b315d1f-2a34-4224-a9af-442137656c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c756b1-8c36-466c-81ed-cdb89eab997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafdd7ce-df36-475a-90f9-24d132f40b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc1351f-aabb-42d2-8ca3-9dd8377beb92",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a40bfd3-32c2-45d3-8036-fb743aec7d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9609241f-43a1-4dce-a1f9-45881314de22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf8174c-843f-4f04-b5d4-add20ca42f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf914be-268c-4a5b-bc9a-db602b5a3df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54580e6-9d49-4677-a299-e68eb209c256",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2413f4ba-ee54-4b09-bd1f-0db37b61fcc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a734b42-6933-4457-b654-5dd3b6fe33f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ad74e3-2b24-4f83-9ac8-8ebc461f5b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050f4afa-446a-4e3e-a9f9-c7ffe88e576d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca69ea0-a63f-4308-b735-7993fa7f8a78",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac51ca23-1e3e-448d-a47c-70bcfbce10bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb11f0f-5067-4230-bf22-dca3638af01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35297a8-f636-4ece-b3a2-1c06002d5c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37ede2d-161b-4885-9306-d48eccf35bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15433e10-af9f-4d8f-b6ac-e0079f79f31c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f371dd-a414-43a8-bd3b-ae4d2e3d0433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279e7001-c350-4d9f-aaa6-d0a538c82172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615de50e-3dea-4a6c-9348-51d288d6105c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ce90fd-c2a3-4a57-a2e5-ca5318ecba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57099a1-7ab9-4a74-8af7-650a86045c04",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613214c8-7340-421f-ae7d-67d566d607c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe0deb6-c46b-48ca-a8fd-2c6cb26000f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28a0d75-6107-4c88-82b2-3836dc7a18ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aac64c0-9db1-4549-a508-1fee97a7e223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1a837f-63ae-4d41-898b-4e6053cfdc4a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eeb6e3-d91e-44d1-9bed-84b4807487f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bab2cf-eaa2-4e93-8ffe-b6072f45db57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de3ec6c-52c4-4f17-b282-8addbf9218c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a069c3-0198-4fcb-a1c2-17a3b4bae4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5e22d5-0c8a-454f-89bb-1cd6cf78f1d1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc54f4e6-c1a3-4ad0-bd93-35ef0a7d5022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3def54-bcb5-4b28-8a25-20b1b06eb85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6c5ff6-ed49-4297-816a-dee11afd73e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870e5150-c952-4351-bd18-69f618ebe7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d00ae7a-576a-4cb9-9042-81b10d4fbc2c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f6040b-5e47-4c4f-a62a-f6490fef3f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00efb69-e7cc-4a25-93d5-512c26ac95bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc83ef4f-e3e8-4243-b707-54cf563594f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b6ad7d-d517-4a7c-a140-8ef177573811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7f6c39-f69e-4c3e-bccc-7f4c9425a1ee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2c1c09-4ca2-4e62-972b-3f6bb4d7f789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64bd4645-8991-40f4-b900-6f4daea1b776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32557ff2-53a9-4bed-9593-79d5aa6f0d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae874bf-56fa-427c-9a4f-fb66aafd4150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184efe8d-5d6b-4680-a967-0288925876ef",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc405d06-4ef7-47b3-8d37-99dbe5d43c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74aa234-e4ef-4729-8bd1-067e4956dd24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed84e35b-c266-4110-bcff-7050b1b891a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff31ce1-ceac-4fc2-91fc-61ffb4ca8fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff8ad37-4f64-44ac-a6ba-6892b631e385",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e9b509-2083-4d8e-a575-32e5c2afd5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62aada39-f549-4117-b33f-4a8aa8225f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1623c6-5b9c-45b0-8013-ba9376ec3f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5134f3d7-c04d-4392-905d-a5996f695f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e839813-e980-4337-bd28-f31eee669017",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5479aeec-ea97-429b-a0a9-2cd5093ad8b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9730d145-f039-46c2-b1b4-9e56f0d14c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96345494-aa3b-43f5-a851-f56db655b113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84096193-7a49-42cc-894d-5eb6f98fba26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7247920-1f1a-4657-8732-6a0e2de14ae1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c30762-76b6-4c5b-8f6f-278ea1ad8308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9663bcc-665e-4e25-9277-44b6cc5a9d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99569094-558e-4903-a3e0-eb3b8bbf54db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7c9fb8-3474-4314-af4a-96723bf2ee94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19116de3-97c8-48ae-bdd5-306a33184e40",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691ca51b-ee2c-4cd3-bbcd-6256654fa3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8d51a3-0638-4a0e-a383-4d9b295d1952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cff51d-5376-41a0-8e0c-690b78d82e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09b2e30-44be-4258-978b-7caa9883987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f0d139-1441-40f9-a655-12470da818c5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f183ed96-1154-4438-9437-582f29c84764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf04945d-9717-4f67-9770-f78bae1e3bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b8634c-9d5b-4cc4-9e0d-1b2d1130f181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001d8fd3-d36a-43f8-8398-80d4a3f83832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776e0537-747b-4fdb-bfb2-3252da49011b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46424de7-9cb1-46ce-ba92-a125f4eb8901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854df275-1265-4cc4-9e3f-07cfd43319b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfb2d97-29de-4998-b738-3bf4701ab316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e971f5b6-dc96-477e-a154-9d3ad49ce444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407081df-700d-4669-b546-d61d693df8ce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ed7a50-6d8e-4248-b7a4-af218afa1bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be46b488-a780-4619-9560-4e82ce23e827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada7fd27-1bec-4bdf-bfd7-d28cdd4ff9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2a09b9-8ac9-4b47-ba4c-f3cd56c39358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da67895-c3f5-4962-a361-d6a8ca92214c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a504bba9-86ba-4d53-bf7a-5a769d99fa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d751c75a-12f3-4d16-bc5b-f10cf9dcbe00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8324254f-4d60-4043-9948-99b5a0fdf02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c85337-f94f-4535-bcf4-624c82d62322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5907d9-5de9-448f-a3db-cc838ff6c10b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7fa276-8780-4174-b2c8-c056c8d37007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5eaa8e0-ea19-45a6-91bb-8a10d6d3c858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ea2e83-39d1-4768-9f91-97d3a6332008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00878e5b-b53e-4cb2-add6-657319a52235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e78180-60ac-4090-8ae4-7104565dcead",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2823aca3-b52f-49b3-9ead-301046d9222c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8eb71a-74cb-43d3-bd1f-8ddd0c983d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b000f692-67c1-4f96-9f8e-9d536fd761b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c88efe5-b8ec-419b-8660-bf7ab3424ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a40541f-424b-46ef-aa3d-eae1a8567b3e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4671d15-8b00-48ea-ab55-8e6f2a56690e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604d69fd-cd5f-4302-92cd-e579594e34d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546c19d0-405d-4aeb-8490-b2ecfac533fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672a5955-3788-4a85-923e-f46a79a1f6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af077a8d-840d-4a61-ab3c-1f8573e475a2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dff1dae-21de-4134-8f0c-6f2af7b88122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6498989d-2a1d-4e84-96ae-bc3e72e7dc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f5df66-1c17-45af-9f50-b32f76199ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555b70e3-bc4f-43a7-b758-cf7e884e893a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb3ec60-5571-46de-a022-e2a4d1075fae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ede857-c5de-494a-bf78-463dc5815588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b620d944-65fb-49df-b2f0-b28d970a67cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a696b989-160e-410e-a3fd-c91f33643ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cea409c-7295-4354-8c87-ab07466092cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bfd715-bf1d-4725-93fb-e2cda0775b06",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0687d276-92d7-4532-9038-219d2d263e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b35baa5-87b7-4d12-9859-c688ec88f07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3351bbf-5c7c-40b2-982d-8a93c5c77585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b200ad5-bfa0-4cbd-a64e-83f606178d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4b245a-f81c-447a-9fda-de0a478db1ae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641532ad-c3a1-4ea6-8468-37e9b3502a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3a31da-17ce-4353-bc52-ffba74a783db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3917a778-0c2a-4978-9eda-e659d85ae57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3232c041-9333-46ee-9c9b-932a7f55eedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc96febf-5a80-41ce-8674-ec4adb1fc4d7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06362ce3-95d6-48cb-b11e-afc121c658a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cc84d0-9742-4fc8-b611-e2683e239064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ff7b40-f443-48ea-8010-f56ebc3b9180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb35241-543d-4ef8-aa0f-e6808f978e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ba0ce7-4a5b-474c-a06d-6f94ffc0c81f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8478a8-6862-42fd-a7a7-8c0f90fcdff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fab8fe-06ba-49d7-8123-431a176e219a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b04673-0bdf-41e7-81a6-245b75e529e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd99c70-5b8d-4ff3-ac8c-ee047b2b148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03eb44a-8a51-4622-8d5d-72f9215d3551",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67cafdd-c1bf-480d-adec-4bd16a393275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2708e230-e613-405a-9701-1cdd8ce469a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446f2392-479f-4e8c-81f3-5b89cd59f7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a8271c-cdb4-4031-beb7-2a722976334b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249f635f-afdc-48b9-9d1d-741718739f11",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46635c30-d223-4f3b-96d7-2d538d626663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa255452-8575-4a3a-aa97-185ed9d700b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa832a6-7ede-49d4-a631-71b1acd83183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51353f9b-3ab8-4fab-a04d-b79a61af5f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4acd55e-bc44-46a2-8896-5f6fa380c041",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a7d58-22f2-4c31-a42f-5268001e405f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5b495d-de85-4884-b1c3-4c4fbd852569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880e9b33-05f5-455c-a5f0-a9e70f825c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b44260-1ede-4e18-9852-f1fc88a6edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa0aedf-f807-40be-a805-75aab622cce2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35db9b66-73f9-4c82-9595-f0476a35f201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10acb5f-8640-4be0-ab9b-71150f960f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffdb3e2-d07d-4680-b8c3-1b0ab2fa29f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e58e5a-7ec0-4ff6-a671-92475d62364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc9ce88-4892-43b3-aea0-9e2a4734aa35",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e67ce9-fe3b-4cdb-940a-a8671dfcc1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5134897b-f879-4d0a-bdde-642f2645f332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c77b9a-18e6-4b74-85bf-232524605d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc6b3eb-4238-404a-85fd-e33e38467e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a66e6-3a3a-4c14-8e24-476199d6c1e4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd07f32-4575-4ad4-85cd-1b390a2dbe23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c1ea1f-ba3e-4b40-88c4-1dbf46affc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf965db-e694-4c4a-b136-d69801619bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bf371c-49ff-45b0-a81c-854da0c8fb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532a9d2b-88d1-4627-b197-a2d83bf83fe0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e641a44-831b-424b-a023-59a91af2a0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80b5fab-7aee-4a27-8b3e-2cce43bc422e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d531712f-5d49-48e5-9e10-2d161b3bc074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320fb255-df88-4617-a037-d1848d509781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5417cd-4cc3-46dc-8e40-7c0922599b40",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf13028-13e3-4c6d-9bfa-c23ab5ec5e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd94b742-4a70-4d35-80b5-e6e93e269561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f16c6f-76a4-4a4b-aa76-3b40c116a507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19a2482-3e1e-4a65-8b77-f610ccd32727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c400ba-6dd0-4168-a585-1fe7d610c096",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7709521-bdc8-420d-a731-053bc7c99166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d14593-4cdb-4559-b067-898dfeb84fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337fd2d5-4620-48f5-b47c-f33ed4c0039a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800e8e16-6d37-4d2c-94bc-9ce5c6736413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1631d419-7772-4306-b4f7-8f7914f8a0ca",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501ed683-f0bd-40ac-8060-84988c40e54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0b5ef2-aacc-4cd7-bfe7-483295b4bed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ee2fe6-e08d-49a5-a01e-3c5dcc028ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3690a9-8d33-4a0d-9bbf-26708c87c661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a702d088-0642-4c3a-8715-96e302218e80",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8d8d96-2f99-4500-89e6-ab9a16c1be5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71db922b-9b8a-4bb6-a39c-ed4543578b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde80634-e88f-4c35-867d-f971b3d7b71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08aee42c-a8df-4069-8dba-a942478f9649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37de21a8-1864-4619-87ce-bf88894cb16d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022412e5-51a9-41a0-a078-acf1ea09bff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495e695c-5760-457e-ac48-99608a305213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2ef3b2-26de-4fae-be52-1a525a981fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0db994-d77c-4b62-bbf9-8bb08a786300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0d873b-6318-4443-af11-3260b0a43574",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ae9ac-11e8-4bad-a536-d984dc80f726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501def23-119f-4359-b511-674267985fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f14f09-af85-49db-83bc-79efb560d476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d534b9a7-055c-4728-b39d-7e6ddfa800c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dba5e88-3047-4978-9a80-90bb41573e1b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d6badb-6e82-45ff-ba2a-c85685abc880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a024c4-5930-4837-8202-11577f34719e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802fea28-b608-47b8-8a8b-2a49ccfc5cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77767514-36de-4e4c-9511-bd4acb662757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6108a7bd-8225-4bdc-b775-e3a87348ba86",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e42494-99b9-4454-a673-d14aa5eed33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8a1f87-d0a5-417f-bbfc-fd6cfee3835f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb94321b-9e40-41aa-888c-fc3587251102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b59f3c-dcd1-4424-9e07-111f8c16dc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd75f02c-cffb-44e3-9026-538a192b87fa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ebd871-ce12-44b1-85dd-36b477776d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5440614-46f1-41c2-9716-7d24b18e44bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454ed195-50ef-4c75-82ac-d25652b4501c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1091d8b4-2419-49a7-9a5c-24caa2998209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2346d5-d781-4e9f-b545-aebcfd4c99f8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede031e8-3db9-4d25-8c81-406d053723b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9408a538-60be-40d3-b604-ed284ffafe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab02867-0adc-4600-9a82-05c5c81c7146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38ff1b2-3729-4601-8893-25a440d47ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b44ba4-c932-4fe6-9865-759f690dfecb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60893075-4015-4568-b31a-b2c1b1cefc8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f6167b-e42c-46e3-9e60-df539d6092d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf960b0-723a-489c-b827-5b042b51d596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1712442b-83fe-42ec-90e4-6221285cd589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de59d4ac-7bd1-4c9f-b849-ccfa02826a52",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de8cdc-2906-4a3e-ae1e-02dc985128f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c25e1349-955f-44c2-b949-aa9b0a2c319e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539a28fe-c444-4565-b547-ca0fc58d3e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e83d53-40e0-4bbb-b6f1-797a151c78b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e9829c-984b-4a40-85c3-4b5eb9598bf3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb9a826-5cba-43e3-82d7-3cbef9be1cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1d5aba-2619-41f3-9561-8c5a0890991e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4328cb74-eec0-407d-8ca1-f9f8f5160417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024452f3-79a6-4e60-86c3-12da34f394be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada4a5f3-8fdb-4073-b4a7-6798df48a283",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a75d3c-3fa8-4bbc-b410-6e83e34e3157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f16e73b-8ad5-49d3-a18a-ee8fd0baf503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfacd194-b99f-435d-9e5a-faf3bfed53d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332226f1-f99c-4077-b060-18a9edefe01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f1e6f8-acd2-4291-86e7-b2350e126d0d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72419d03-6b16-497b-aa7b-dcff902cf450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f8feb9-44f3-4ff5-b3a8-024d293ebde4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04ed9d1-f4e4-4e93-853f-85f3eb20739b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243fb83e-c7af-4a08-99c8-cec9d99ffd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3bc6cb-6676-416e-9263-b1faabe22447",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0946e49-f083-4133-b516-d6e708926c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd82430f-ff42-40d6-a154-88fb28fa1d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542317da-c0bb-4273-a0ec-69bd47aeeed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e88cdd4-2be8-4b93-bb91-f705ba7925ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac46471e-6637-4680-a117-ad4fd6a4c888",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce00298-77ac-4d79-8acd-3f7b0cf8a447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3157d75-7472-4c00-a369-fbe88db830ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e7fb3c-2baa-4806-a709-3beeadb9afa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30fe57a-4c12-4e24-b2b2-9243149f42c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa52f932-803b-44c8-962b-eef1b0506888",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5065d9e7-229e-4d19-95f4-0973a7790a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235d37c1-dcf4-470c-bd63-fae7b2165775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985c9558-5d2b-43f7-b2bc-8e7a9d74707f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feef4a40-2496-496d-b4ae-36aaebd136a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc3c604-5f2c-430c-b78c-4242b627a54d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ee5351-a74c-4f13-a0bf-22fc681db188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da7def3-487b-429d-a201-7aa7a8aaa089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52e51aa-69f5-491d-9104-e611527f3dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc10267-6c7c-4a56-9a70-252ff86f025c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c9ec0b-fb5b-4618-8c3c-9d63ed9b6641",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a25e1e-9356-4d43-80c4-d1cdd2ebf9a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e310b10-28e9-4208-a130-d8e9278c90b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b348d7-59e9-42b8-866b-37a81ce1f603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7888e6c-97c1-431a-8cfb-46178bd038d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c2dff5-96c6-40a6-adf4-5177ad52fea3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d08f67b-6afc-45b3-bc6a-7a73e4ad2908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77de0b7-c73c-4a13-ba0b-dc418b098ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2beb579f-8a8e-484f-b725-1328f5b54488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72648d9a-8024-4c62-b909-720df3658735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b43680-faba-4eca-b560-7bbf08dff20c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127e54f-1ad0-4f8e-b8a4-a767c7cf0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee150307-0927-4451-9051-ef18bee429a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79de01c1-2083-491d-a13c-d187eaf54c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b9f0be-8a9b-4586-a50f-3851a5d3c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4824e0-e2a8-4844-a3fd-25929e52f740",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65116fa0-80a8-467f-8517-61f695387d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fa413f-44e2-4c6a-acfd-c4f4662b669e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7324dc09-9d1f-42c3-9c81-1aaf3dfdd055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdd938d-8970-4ebf-870a-ce6bb1f4f7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8f2f2f-b4ef-49cc-8b33-4a9be6125799",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e91234-bc5a-4d47-a7ca-18d125d154ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21eda9f8-ef41-4454-a913-e997a4a1b0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f63d73-01f1-4f99-9904-59fea329cb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666d35a6-abf2-4060-a4d8-425d6b003805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4f417b-33a2-47a8-a6b8-7bb19f0b4a39",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f489d4-93b5-48aa-a19d-44db6138aded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4f5fb04-b99b-4677-9529-0c11dc507c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1426cd67-50db-4a0c-8089-fcee941fb82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f13b7b5-f00a-47d5-81d3-8ef2b5ead3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb73e3a-6ea7-4b2a-b292-f15b15055b08",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2249e63-850f-422e-8207-ba2a6100eeb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84e8bce-dba2-4276-b0ce-ee60dfcfb03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b3e685-6a64-4eed-9536-1e8305dbd38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74cd61a-4400-46fb-8588-4cbb1c92ae1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bed504-305c-4370-bad2-05e9f8e357b2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cfaa93-6dbd-4c05-95a2-743ce837c94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d2c648-d69e-47a2-8003-c28a58d24b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60658d5d-1842-4961-a957-f39f42510adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bc8a2a-f15d-410a-ad76-2f218cf82d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ec1c4b-b4aa-4ea0-a16d-cb43b1391b14",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5028eba8-f9e9-49b5-8648-b15c5231b94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e49d8a1-6b66-4488-a44d-c61ee12bf8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d729171-d389-458a-948c-9bdeee920e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5a41af-a97d-48f8-bcef-bf846587da7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4b27fc-7525-4684-9ce9-0fe3ebe42de7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9ae512-d307-4152-a401-f447741e6c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d466564-2f7e-4f9c-b151-a903538b86ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f726ed3-5cd6-4ba6-8201-596fca133f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab6886f-d32a-4502-a165-03066503a32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f96b08-7918-4d9c-bbe9-513bde70aeac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a9c379-996f-45de-8e08-24eb4f74d4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8720096c-50ed-4791-b740-ea94845e0c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66cb33c-a97f-4652-a4bb-82b9250d2ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf03c34-11a1-4716-bbc9-7d361de86246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5933268-12e7-43fc-98aa-9c2c2a90573b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2c569-a682-4ae2-9312-eb0d627aafdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd48dbc-c032-4506-b0d4-553b24cc6baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa39e43d-0523-494e-b4c0-af3646753a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec9bb5b-110a-4b50-90d4-3c12bc328448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ca9690-24c0-4e03-84ef-66e4105c8e12",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1329f22f-43df-4dd6-b78b-be3574d9f0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6808fd-c8d8-465c-9688-f99c491ee57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76341572-1afc-4e4b-9fb5-9a47b2088f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af60172-0522-4aba-9b48-797ec852033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0329f5-43bf-4929-aaf9-c7ee7f720310",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b773c08-3e63-426c-8b60-fefcb2426fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47617577-09c8-43f0-a84d-1ad1d2fad5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e570f92f-da35-4efe-9c91-13805380d7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479194c7-868d-4d36-b831-0c8809690442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a71f73-74fb-4638-9934-7c5e4de8df85",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9c0b30-90b4-4cc9-af40-84f2b37184b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c005eac-70af-4932-b5b6-57afa7279ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f82a607-d383-4bbf-b166-1229810e5009",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8908b2-5a17-42f6-ac4c-368004b50e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d131255d-4dde-45dc-9bbd-c19f872d566d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da9371c-4c35-404c-85a9-bf16487815af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9118ac7-da6d-4c9a-bbe4-dc66a16be668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2243e6c-7652-438a-bf44-e8d7ded8c7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1796645d-cb6a-4306-9315-16bec38f65d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a508b2-f36f-44e4-94c2-909f641f669f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010fd327-aa2e-425a-aff6-ce9679d4e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d730ae31-e554-4d02-acee-7881bbe3de59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5021adf1-f40a-46dc-a270-c0ae43b22cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034bdc4a-e6e3-4ae1-8431-0082f1444fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1ca1b2-a017-4fd1-a973-2f92bc45374e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906dbd69-2517-4aed-97be-fbe9d422b700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f172c9-2488-4725-9ff7-675e60f1993c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463bcf75-2eef-4756-94db-8ef75f61f909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052fa00e-a448-40b5-9aac-da7e8f223325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab9bbcb-27a4-4297-9c17-8db122d33a94",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eac9cd7-9496-4f51-a05d-d8428bec0851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8784c0-5674-4c2c-af52-ba1101388467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886e51a9-92a9-4ff6-8bba-74755fbe1d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5700394-e653-4fcb-9077-1d15fcb5b4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5271f08f-dd1e-4682-a577-a29c9d08582a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3000d7b-7f3a-4c89-bfb5-89da9150a19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40279d39-16ab-4ddc-83d4-7d40e593af07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75104c5b-9c0e-4d5f-aff1-2b5cb5c3b954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69558c4f-7047-47fa-9c51-699441a753ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a967321-ef85-4bb1-9721-68559172bdbb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b044ac-a0a0-43a9-9612-4da1950f88e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00977e3a-1323-458d-bf69-4f238a86025e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4c8184-97c5-48ac-8e83-42e570fab0db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bc39a9-2d97-4f20-bb26-984a34706f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8462c5c0-7bfd-44cf-aac2-f5f9661f6ba7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aace2c-31db-42f0-85de-6bd2900cae9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83174ed9-49da-4572-bf7d-1e9368a85b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45c2c04-6461-4949-9ee5-a07c9cd699ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc43869-e2e1-47ea-9bc9-22997cd13408"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46ac67d3-d4e6-40be-8476-6f5104ba923b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95dfa101-4983-4c16-b435-218078381798"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36b516b7-18fa-4124-bdcc-ea9d453d14b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0062ab5e-9544-43da-9547-1309b3103dd6"
                    }
                  }
                ]
              },
              {
                "id": "79d34b29-dabb-4ec2-b12a-78fca44b0664",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d7f8a85-572c-4324-bdb2-13375807cca2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7c0150-7d59-4b64-812c-dd75f7eaf9cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "10b47647-e226-42dc-a09a-0079c8cb2b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a91b6a0-a567-43fc-a333-60a8eb776f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69ceabfe-f8db-43a5-a49e-3e0d0ebda556"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e02f977-5379-4be1-bcfd-60b77b81db99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b2f3e35-01db-4728-828c-008b79707d7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c15bf673-c812-4637-a936-a7fbae55d86d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d5a5e5a-d1d4-4724-8d57-fe11accfc8cc"
                    }
                  }
                ]
              },
              {
                "id": "f605a31d-8560-4351-9311-4068263d10b8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "55ba6a68-0655-4216-9738-3c19974b75d6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03190a9b-c63f-42ed-bf68-3a516f72aef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6f2183cc-0b2a-4f0d-aa5e-62dd32176dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf36363-fe79-4c65-8597-56851d3cddf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bbf413-56a8-44c0-8438-942103571eb0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9091c8a9-5431-4307-b92c-3613391c57f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f1a025e-5510-49cc-8065-73efcb5bdcbd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6968169-c664-4089-ae43-d882da0a15d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ece38b81-3188-4f01-8844-135d002b4bfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14161109-75ad-402b-b959-7d70be943433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3803d4b0-7c76-4424-acf4-e3309897c8e9"
                    }
                  }
                ]
              },
              {
                "id": "210893b1-5606-49bb-b6f7-ef5638522558",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43468b30-cc8b-4b3b-ae33-66dac78ec0c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3334800-4552-4eed-8711-3b5abb720abb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afc8f9cc-4c4b-4a25-8ace-5ee431e1ab32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4af6a78-7f9b-4c93-b880-7e626f328e62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2695a550-ba14-4fc9-9a6c-1a9357e3aeb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "baa9b4f0-8c41-4148-8283-1fdbb189ab5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ffa9693-e461-418d-8234-add971dd7c41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dcf94fd-e081-49a5-8605-b68882f8c199"
            }
          }
        ]
      },
      {
        "id": "73877d69-2687-4535-9182-d3f0d47308bf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "13ba2725-1dd9-4d5e-b6dc-efd98b2a4842",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14ab95eb-c772-4252-8808-7716620dc8fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60dbe613-e6e5-47e7-9b77-4dda227e1767",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfaef17-a6a6-4555-b837-d45fae1dbf79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f7a598ae-69de-49d2-b106-67a2589d8b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6603132f-ea43-493c-8a69-d5698ccc88c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f86ecab3-425e-41d9-89db-74683840d08d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66dab6e4-a7a0-4741-b4ac-4577f4306fb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b41c09c-d383-48f6-91ac-df950d51a52d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34d8810f-5bcd-4244-ab10-fea9243ae1e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c5e210f-825e-41f8-af3b-2a6be507cfd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07442973-7b91-47b5-bc5f-7ef7e8552317",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ee2b7d1d-7265-4518-97bc-9cc357901996"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d510986-8aed-4326-a448-85adf5e73896",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc0ae1ca-2b3a-4316-ae26-96df12aef446"
            }
          }
        ]
      },
      {
        "id": "74bf856d-0991-4937-8cbf-ef1fbc1d75a0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5a429534-16a7-4f4b-9ec6-fef3ab4c8ae6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8c115ce-f20f-43aa-921e-e5e6b7733009",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "540a9003-aa26-4327-b857-18a83dc563ab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0b48a4-ce57-4a30-b282-1994b53676c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc526ec1-2e19-418a-820a-ebff8abd0766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6f6db9-f9cf-47b2-be2e-860f5b9bcff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8441ddbc-aa6e-45ab-b75e-47e1550c350e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01fb69b8-85f0-4fdc-b73e-74aea23157d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7364cb6b-a0c5-486e-8fa0-b63433902ca4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9af0382-ff0f-434b-87a6-7e55dbdccc02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae77db02-4954-44a7-a1c6-8ea55d999740"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afd5e16a-da42-4d03-bd01-8caa3b531aca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64d9a4ff-c503-4416-bee9-55f4580a5ce7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f99683f3-742c-48a8-ba20-e2b7f32c610c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c3693e9-f671-4550-afcc-f024b0d0282d"
            }
          }
        ]
      },
      {
        "id": "b5693581-fe59-480c-b8d3-6f9f33fb0db2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc1d5732-3c82-42da-8fbc-42fcaf830cf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e0a05e1-fb5f-4197-87cc-7fd24814bca2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "525ca9a7-217d-47fb-8a43-97074d739f59",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839ca2dc-8e9e-45a8-8bd5-d46475490da3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5981c733-c433-4bbf-a835-cae7aaf817c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fac2451-78da-491f-9cea-72f36461a793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a5a764a-19a9-458c-822c-31c005fa1410"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beb3a988-64ab-4f21-ae89-bc806ef2c5e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "195d8115-9fdb-437a-bbb9-d2fb5fbd7e1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3b982d2-dae8-47a0-b6bd-076654b0f7ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6011eb16-0e11-4308-84b3-19b80875143f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c170bc44-2fdb-46a3-9f97-64d633b8aa43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c98fd914-37a4-4103-b978-3bffaecdc286"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1685ae8-e53e-4a7b-83c9-95a057feec2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9798ced-d586-4160-bf7b-760f2cf1902c"
            }
          }
        ]
      },
      {
        "id": "fde69d9e-250e-4aa9-8aea-a3d5d08e37d2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48340194-4a5d-4a54-8e00-62f000065fc7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea2227a4-65c9-4cd3-adc5-afbb04d48cf2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f2551838-9360-4f5a-aeb3-7f0df779d09a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "034b7a73-3ad0-48b8-872d-28b426b58490",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "787ad8f4-3506-4b96-af69-62c61998c1b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 39
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 148.12301587301582,
      "responseMin": 11,
      "responseMax": 8467,
      "responseSd": 719.9065558479168,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728089084749,
      "completed": 1728089130335
    },
    "executions": [
      {
        "id": "7cc9c369-35bc-4f10-8ffe-6903e46eb1aa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aa87e8f5-757d-4c3a-99f2-17e1fb20ef3f",
          "httpRequestId": "eaacb35c-ade3-493a-a434-e2c59e2321f2"
        },
        "item": {
          "id": "7cc9c369-35bc-4f10-8ffe-6903e46eb1aa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1660924b-795b-4c36-9d79-69d3911cce4d",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "63184030-9634-4a4a-be9b-5e32d55db77a",
        "cursor": {
          "ref": "5f220a36-676e-40af-aa86-697022d40293",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1432d7b8-0a78-4174-9f19-225fbcda678b"
        },
        "item": {
          "id": "63184030-9634-4a4a-be9b-5e32d55db77a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8647ec99-7299-45c3-8107-61fee22c1fbb",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "393ef3d5-9b6e-456c-bb05-693bd6bf2b42",
        "cursor": {
          "ref": "94ee42d3-4ba9-4ecb-baa2-e4d5e974902a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "67a7b5fe-10dd-4e9d-88d5-44bf5c146f14"
        },
        "item": {
          "id": "393ef3d5-9b6e-456c-bb05-693bd6bf2b42",
          "name": "did_json"
        },
        "response": {
          "id": "fc1f0da3-7215-45e8-a01c-d3c452ad4849",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48be6f4f-f3f1-4354-a3d9-b6d7c2ac3124",
        "cursor": {
          "ref": "bb2e999f-dc99-4334-abf2-01cce140b01a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "500c02c3-5911-4afe-add3-d414820a1029"
        },
        "item": {
          "id": "48be6f4f-f3f1-4354-a3d9-b6d7c2ac3124",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c7eebcd-eb4f-4f9b-bdb3-3e55aaf813f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48be6f4f-f3f1-4354-a3d9-b6d7c2ac3124",
        "cursor": {
          "ref": "bb2e999f-dc99-4334-abf2-01cce140b01a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "500c02c3-5911-4afe-add3-d414820a1029"
        },
        "item": {
          "id": "48be6f4f-f3f1-4354-a3d9-b6d7c2ac3124",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c7eebcd-eb4f-4f9b-bdb3-3e55aaf813f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bb4751-82a2-4b6e-9b5c-5f9572b5f353",
        "cursor": {
          "ref": "15459221-72b1-4d7c-80e4-229220dce05e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ccccefea-9cc1-4e6c-83a6-83208d0adbc3"
        },
        "item": {
          "id": "15bb4751-82a2-4b6e-9b5c-5f9572b5f353",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d4e150c1-4543-44d4-91d8-4618407cd194",
          "status": "Not Found",
          "code": 404,
          "responseTime": 149,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2d824b-9dfd-4ac9-a914-17115cfdabd2",
        "cursor": {
          "ref": "f8136e49-3edb-403e-a023-939360dcb095",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f1cac6fa-23ee-4def-be0e-cb52eed563d4"
        },
        "item": {
          "id": "1e2d824b-9dfd-4ac9-a914-17115cfdabd2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f358de43-b989-412a-b614-3f90752fdf60",
          "status": "Not Found",
          "code": 404,
          "responseTime": 93,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cf438d-aaf1-4df4-bf5a-e9e4eb82ed56",
        "cursor": {
          "ref": "91cec0a2-676e-437f-8373-18bdc3d11575",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4bc32637-f848-443e-acdb-847ce0fdff27"
        },
        "item": {
          "id": "a8cf438d-aaf1-4df4-bf5a-e9e4eb82ed56",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a66d4af1-d000-4d2b-a93e-b9ae3ed338c9",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "6fb0fdd3-cdfd-434b-9a08-c1bb57835c3a",
        "cursor": {
          "ref": "e6d412ee-6980-4a24-886f-35053e027413",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a8a3201d-6d6c-4dbc-abd4-bd0dfac3977d"
        },
        "item": {
          "id": "6fb0fdd3-cdfd-434b-9a08-c1bb57835c3a",
          "name": "identifiers"
        },
        "response": {
          "id": "45e6f2b9-3a45-4346-97ad-28852e7d7e11",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4fc0f0-f0b8-4bc2-8218-d2860f7bea32",
        "cursor": {
          "ref": "40662c21-7d62-47e3-98d7-db514f5d1f44",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7d38ccb1-05fe-454d-b9fc-a47217117dbc"
        },
        "item": {
          "id": "1e4fc0f0-f0b8-4bc2-8218-d2860f7bea32",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3bb20315-fdf6-47b5-8e18-c70e65fae162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1772,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc56d18-97b7-4cc7-a2ec-da2a157e8ee2",
        "cursor": {
          "ref": "a2cbc91f-48fd-4199-8d51-f731ad16f43c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eec83c5f-715c-468b-98f7-9627f53ba6fc"
        },
        "item": {
          "id": "6dc56d18-97b7-4cc7-a2ec-da2a157e8ee2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8beb54d7-198b-4a33-8b37-4d3bf1612f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e3aca8-80de-46d8-a978-409babc29b33",
        "cursor": {
          "ref": "0668a8b5-896f-45eb-9695-c30a1e5513ae",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a6ec689c-18aa-44c6-899c-380aeee6de69"
        },
        "item": {
          "id": "49e3aca8-80de-46d8-a978-409babc29b33",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9d88e128-bd4b-43d2-8f50-472cc9d3a402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c647f4d1-ff23-4ca9-8990-348d264b3705",
        "cursor": {
          "ref": "de29e04b-b27e-4419-a5df-83b3e5b353a7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3718bb27-1926-4e83-893d-ee45a8c07b37"
        },
        "item": {
          "id": "c647f4d1-ff23-4ca9-8990-348d264b3705",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "93e14a57-2a24-49fd-8029-de99d7de1345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dced2ac9-171a-4197-aa87-04c59b3c33ca",
        "cursor": {
          "ref": "c51746a9-e9c4-4fbc-a9ec-481a04ac0232",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a4a268d4-0468-4782-8e7a-7b9e402aaa47"
        },
        "item": {
          "id": "dced2ac9-171a-4197-aa87-04c59b3c33ca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a275aab7-157c-4184-aab9-d2990ae46d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddacb9ad-0760-437e-8b3e-304d6a1fab7d",
        "cursor": {
          "ref": "86ee0d2d-99c1-436a-bcfc-a9b3ee759667",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5d3ff8f6-defb-494b-abc9-cb993628e5ff"
        },
        "item": {
          "id": "ddacb9ad-0760-437e-8b3e-304d6a1fab7d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2db4da30-a03e-46c3-873c-4f24a97ab20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc34ec9-e81d-4027-802e-cbf1b5d07edf",
        "cursor": {
          "ref": "35c3b156-b974-4bd4-a6ac-ffc951321238",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1babadb3-fc84-414b-a0db-a2a6430164ae"
        },
        "item": {
          "id": "acc34ec9-e81d-4027-802e-cbf1b5d07edf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4b4edbae-053b-4366-838e-79e3cebc605c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eb4d1c-3422-4865-a051-abdbe9cd3e65",
        "cursor": {
          "ref": "cefce8db-7e35-4453-acdb-72dbcdba8cbf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8497c782-b3ee-4f37-9805-f0a495a4f812"
        },
        "item": {
          "id": "04eb4d1c-3422-4865-a051-abdbe9cd3e65",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7d0d2710-d438-4131-8e2b-b0a944dd29c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bad578f-773a-4b85-89e2-dee7b84c8884",
        "cursor": {
          "ref": "d2926d69-b32b-4ed6-9051-ccb76dac3ccf",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "230ffb6e-5efb-4e51-8652-185978bda12b"
        },
        "item": {
          "id": "2bad578f-773a-4b85-89e2-dee7b84c8884",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2956b3c5-7680-408b-9fa7-845851797754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fed41a-f846-41c1-b1c8-29ac0464531e",
        "cursor": {
          "ref": "faa9cd30-c9bb-4c50-8ea9-d6cc55c47a12",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "184afb30-19b6-47e9-abcd-d8e959f8b286"
        },
        "item": {
          "id": "67fed41a-f846-41c1-b1c8-29ac0464531e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d68a50b8-81e1-461f-9483-4146c50ed33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc31f05-c655-42dc-88f6-f3b4b0e1a2b5",
        "cursor": {
          "ref": "4e29f5f4-6686-40ed-baee-4032e101b1ae",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a7d1daea-a383-4105-a58c-e6516f0ffd0c"
        },
        "item": {
          "id": "4bc31f05-c655-42dc-88f6-f3b4b0e1a2b5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2f1f4e3d-b88c-4819-a0ea-97cf3afd95b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3921e4ba-da1c-412f-9b42-041215676ea9",
        "cursor": {
          "ref": "13bfc256-04cf-4045-b5b8-094ad5726fd7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d52bda0d-3ba0-4279-bcda-0d32fcdb48d7"
        },
        "item": {
          "id": "3921e4ba-da1c-412f-9b42-041215676ea9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6dded9f8-0878-406b-890f-890aa0ee5768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458e0616-0851-4e6f-be91-66783f1e072a",
        "cursor": {
          "ref": "a6ed4e94-9689-4f3d-95c6-9dbf326e4728",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "44c85b72-4b38-46b0-a7d0-5a635b3b22da"
        },
        "item": {
          "id": "458e0616-0851-4e6f-be91-66783f1e072a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fa921e3c-32a3-4d7e-ab30-2cca56644e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d636cad7-713e-47f7-a27e-b5c5809f6582",
        "cursor": {
          "ref": "1a9be9e7-363a-4299-94b6-75e21b45fa79",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5634bc95-7f6c-4ea3-bf54-21020a98d2ea"
        },
        "item": {
          "id": "d636cad7-713e-47f7-a27e-b5c5809f6582",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "50eadbe9-9ead-4b0d-be6d-0c143d6301f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb01e20-e6ef-47ac-8780-f0c5c3230dc7",
        "cursor": {
          "ref": "6b0a15e3-3b22-477f-b382-338a10857f0a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ac2e15e8-b1c1-4a5c-bee8-5e64a719b44d"
        },
        "item": {
          "id": "9fb01e20-e6ef-47ac-8780-f0c5c3230dc7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6b092b8-7fe6-4f5e-93ce-75afa3a14f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf851df-06ca-4950-a924-254aec5d2060",
        "cursor": {
          "ref": "78623e1e-bac6-4c39-8a36-0e931d01f33f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1b18e2ee-9428-4775-8093-b8f98faaf276"
        },
        "item": {
          "id": "cbf851df-06ca-4950-a924-254aec5d2060",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "abbd92bf-79bf-41be-96a9-5b50a59360df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decccefa-2324-4fb8-bd82-7d86ab616a90",
        "cursor": {
          "ref": "b3312478-f067-4dcb-a311-caf3e7359ac1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "81588745-e3a8-4366-a826-d03d8df4ffc8"
        },
        "item": {
          "id": "decccefa-2324-4fb8-bd82-7d86ab616a90",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "df8f3ec8-ed87-4e37-9fc1-8269128249f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc2056a-10ec-4f2b-8349-dc5ba109dedf",
        "cursor": {
          "ref": "d29973cd-09e6-4ba3-846e-2087867badcf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a7cd787-564f-48fa-bbe7-ff217b98998f"
        },
        "item": {
          "id": "fcc2056a-10ec-4f2b-8349-dc5ba109dedf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "99295331-470f-439a-aefd-f6a6c5cad4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919c58a4-eb9d-4f47-bdac-5635aac4569b",
        "cursor": {
          "ref": "0c5341da-48ba-4b34-8d6e-6db607c7438b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "36294801-54de-4e8a-9b6d-2c8736186147"
        },
        "item": {
          "id": "919c58a4-eb9d-4f47-bdac-5635aac4569b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f9d6d58c-85c7-45b6-9b4d-1ede67a146e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33828051-a852-4a2c-bb1c-a7f6e2a91b0a",
        "cursor": {
          "ref": "5e766c51-f336-46d6-a455-f7cb9ea4c5c5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4bae9460-f4eb-4c81-96f1-275efddcbc11"
        },
        "item": {
          "id": "33828051-a852-4a2c-bb1c-a7f6e2a91b0a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2a01e88a-561b-47da-8b02-f4a8a2ad7d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8ffe11-88e3-4eb3-9ea0-37c3150989f0",
        "cursor": {
          "ref": "2e1fd7f3-568d-4ae8-be59-7e308286d85c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0ad3e567-3134-4bee-aa50-afb06587ebd8"
        },
        "item": {
          "id": "3c8ffe11-88e3-4eb3-9ea0-37c3150989f0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "54688d68-2bae-4d87-b39a-f3e9e4b82ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa53e26-7ef1-4d65-a3e0-886cbb7c449c",
        "cursor": {
          "ref": "7642cc85-7211-498d-8a4e-17b9ea2fd522",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cfceaff6-0b39-4808-9f3d-ee608ff386fc"
        },
        "item": {
          "id": "7fa53e26-7ef1-4d65-a3e0-886cbb7c449c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "35d681fe-d3df-4144-86ab-fdad2bf38941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98051cbd-42b0-4e12-99c1-d30b3a97e8cc",
        "cursor": {
          "ref": "2f8cdea7-13ce-42db-bd51-00dbf8017753",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d7c53d21-e08d-4b75-8930-7dc5e8c2f6c6"
        },
        "item": {
          "id": "98051cbd-42b0-4e12-99c1-d30b3a97e8cc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b422a1a4-29b1-43e7-9cf3-e493a2b7d0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30351252-c858-47a0-8333-80b34ec2d01c",
        "cursor": {
          "ref": "f02cb023-5593-487b-befd-05d720151953",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1ecee690-5d79-40b3-95e4-44829c072ab6"
        },
        "item": {
          "id": "30351252-c858-47a0-8333-80b34ec2d01c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41dcb5d2-2d34-44a4-9017-76feb9968675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ec8f00-4866-4f78-a7aa-df289cf242fd",
        "cursor": {
          "ref": "10d2c968-d833-40bf-bc08-e61acdca63e6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "34b8326a-7fc5-4c59-b5e5-8604dbd34287"
        },
        "item": {
          "id": "a1ec8f00-4866-4f78-a7aa-df289cf242fd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "33b0f205-d667-4a05-90b6-a02e7139c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbfec47-e0cf-4557-a0f8-a0e99cc41791",
        "cursor": {
          "ref": "4ac3383f-d8ed-4eea-9a70-29d5a7b54df0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0135e747-cc68-4c5e-aa52-4cd5fbab2362"
        },
        "item": {
          "id": "8fbfec47-e0cf-4557-a0f8-a0e99cc41791",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e540bcd6-aa32-4054-8d25-7be930c50055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d287617-e9ba-42fb-add8-7423b5934286",
        "cursor": {
          "ref": "f42bbedc-e910-400a-a66f-8a8e2a68def4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dac1fe42-89b1-4caf-a717-139a6fa8b69e"
        },
        "item": {
          "id": "9d287617-e9ba-42fb-add8-7423b5934286",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bd5a0307-6c24-4645-b021-ea6cd32be80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2087cfa-e0d7-4184-90aa-cd4d1d169e3c",
        "cursor": {
          "ref": "277ce03b-c675-4be9-bc69-90b60441ea07",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dabf5061-4dce-4765-ad71-1d41c4289bb6"
        },
        "item": {
          "id": "d2087cfa-e0d7-4184-90aa-cd4d1d169e3c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb74107d-8d19-4b03-a0b9-01cb54010d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656e4e05-1e8e-4e1e-b34d-a37b73e6ffa5",
        "cursor": {
          "ref": "410b5201-7a50-4494-9244-658030bce34d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9e86c123-8f2b-403b-962d-e4ae8fcb4f5d"
        },
        "item": {
          "id": "656e4e05-1e8e-4e1e-b34d-a37b73e6ffa5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ddf00909-25b7-435f-a4bd-5e0dd84ac614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc1978a-9ae2-486e-b1ac-0f4c429ca29a",
        "cursor": {
          "ref": "4d29e3d5-5e35-42a6-a8dc-253fcde295e5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6650df8e-b60e-4729-9afe-b642b41628ec"
        },
        "item": {
          "id": "ebc1978a-9ae2-486e-b1ac-0f4c429ca29a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "595ab510-8d00-4144-94bf-df413d1cd18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a91cb0d-3c3a-4b6c-9db4-227915e7ef29",
        "cursor": {
          "ref": "501aaa8a-cca5-44a3-8ad3-51f2791bbe04",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6a5e54bb-8ec9-4dcb-a084-645d32be3a67"
        },
        "item": {
          "id": "5a91cb0d-3c3a-4b6c-9db4-227915e7ef29",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "380c3afb-eb47-4a5b-aa6a-eee78e0ddfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673f622a-7349-4d96-8fad-7f9ce9d7233a",
        "cursor": {
          "ref": "1c5882b4-804c-4d79-8de0-fb734c9005d3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "748b2bb9-0a3f-46e8-9faa-7ebd13b9639b"
        },
        "item": {
          "id": "673f622a-7349-4d96-8fad-7f9ce9d7233a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1ff3690a-5074-4290-9148-b309f6c10b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6d987-0e84-454e-88a6-bbf9413e635f",
        "cursor": {
          "ref": "7a505adf-4d17-4e5d-a477-5afb8c2dcac0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a84ca121-8289-4562-b3f4-4da72f18df77"
        },
        "item": {
          "id": "bfc6d987-0e84-454e-88a6-bbf9413e635f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "03ba79fa-8938-4010-8c0e-c05b3a181914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670d6b1e-4715-4d39-9f94-3ad81481d937",
        "cursor": {
          "ref": "c2c6acb4-c52d-4171-84c4-97e1770ba577",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b61e4c07-f521-48c0-840f-05f154a38b5e"
        },
        "item": {
          "id": "670d6b1e-4715-4d39-9f94-3ad81481d937",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9db22327-a9b6-43d1-ab74-52f75e35d5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8d728e-8633-4482-9e06-6c3cf2a8be39",
        "cursor": {
          "ref": "66de9ba9-3b2c-4a2b-ace2-7af180324aa9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7da381ec-9023-48db-b7d7-669f4ad4bb1a"
        },
        "item": {
          "id": "5f8d728e-8633-4482-9e06-6c3cf2a8be39",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eeff1900-def3-49af-9bd1-22a5cf261e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf8c6e0-98af-4790-a5c4-4665f1dc1621",
        "cursor": {
          "ref": "fc9ae1a8-141b-444a-aa8d-85d43cc47e35",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a1391c54-bd04-4373-948a-6bd95771c054"
        },
        "item": {
          "id": "edf8c6e0-98af-4790-a5c4-4665f1dc1621",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "679cd3fa-169d-4d3b-9cb4-5d915f05ca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88caa96-aedf-484e-b94d-7f5c296e41e5",
        "cursor": {
          "ref": "e12c6a2f-5633-4019-8198-e9e10cac9269",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c70749b1-e17a-483b-8cae-4218cb44d715"
        },
        "item": {
          "id": "e88caa96-aedf-484e-b94d-7f5c296e41e5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "801c0340-01c8-4618-ab34-70ee9a022f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4276cf8a-c22f-435f-92a8-ee3b4bea8f55",
        "cursor": {
          "ref": "09070fdf-5fa9-4899-a441-b977f6da5eba",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7a59f78e-edb3-457f-9f37-77950a4b67ce"
        },
        "item": {
          "id": "4276cf8a-c22f-435f-92a8-ee3b4bea8f55",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "da6fcebf-d57f-403b-b6c2-9412225949aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ead14de-8db5-4b1e-aca6-3cd3258251b0",
        "cursor": {
          "ref": "f2131069-3184-4e5d-9ac4-13550a0c462d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dd773a2b-b814-41ec-9f49-b199cb4a5785"
        },
        "item": {
          "id": "3ead14de-8db5-4b1e-aca6-3cd3258251b0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ea277010-187c-4e32-a5b6-88836cafdc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b76a073-cb67-4c90-9513-1d04c83d73de",
        "cursor": {
          "ref": "05cdfd34-7e1e-47d9-8f91-4c0e74e74ff2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d54e52d1-c828-4876-9e29-7fc524adb49a"
        },
        "item": {
          "id": "8b76a073-cb67-4c90-9513-1d04c83d73de",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "67068160-a3dd-4f8e-af01-c77b52e00b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09041c7a-8714-40c3-b9a4-a40bb51c08b3",
        "cursor": {
          "ref": "41350b46-3b16-4c95-8424-107e0667d48f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b6957e63-8706-42db-bee8-42c83a0023b9"
        },
        "item": {
          "id": "09041c7a-8714-40c3-b9a4-a40bb51c08b3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "06c7c5c2-eaf4-433f-8ffd-6f6b7a1abcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdd4fc6-1e2a-41d5-bfa0-898a6cd742d9",
        "cursor": {
          "ref": "bb9fe56d-2a95-4d2c-836c-2d9557fd650e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bfbcbe82-f49f-4876-a7ca-d23ef2a4fc9d"
        },
        "item": {
          "id": "0bdd4fc6-1e2a-41d5-bfa0-898a6cd742d9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1748dfea-04a5-438a-9399-be4b5baaef9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ca7ca4-ecb3-45b2-b1c8-b9eddb0ac544",
        "cursor": {
          "ref": "44bae812-66c0-4dd4-9b03-d559cb8b7877",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00c82e4c-1f63-4452-8906-c9828ebff986"
        },
        "item": {
          "id": "a6ca7ca4-ecb3-45b2-b1c8-b9eddb0ac544",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5b6a991c-5db9-4dc7-b9aa-94758c6c6817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba19dbf-88a5-41b6-a75d-72e564e8141e",
        "cursor": {
          "ref": "c49602ce-e70d-45cf-bcf0-8000e3d61e26",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "96cd4b13-0c82-43b0-bd3d-0fac74b028b4"
        },
        "item": {
          "id": "3ba19dbf-88a5-41b6-a75d-72e564e8141e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f31e800e-8242-42be-a64f-1371b879384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece26f8e-b537-4a56-95e8-5e8017e7880f",
        "cursor": {
          "ref": "3cf332fd-91c4-4dee-af68-70f9cfe755dc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "32d81081-f0ce-44ef-888e-b00a572522de"
        },
        "item": {
          "id": "ece26f8e-b537-4a56-95e8-5e8017e7880f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6e8e9662-7e40-436d-b878-28e8efcf7f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d758efb-f2e9-4925-8cc9-423483909be7",
        "cursor": {
          "ref": "cb1dff2f-f066-4703-b86b-3a8187bdbf4b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eb8d0b1e-b95a-41ee-9bb6-ba0ba5d570a5"
        },
        "item": {
          "id": "3d758efb-f2e9-4925-8cc9-423483909be7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4ac90b86-ee4f-443d-b340-b617c08bf043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95e26de-ab37-43e6-94d9-042c7c810e4e",
        "cursor": {
          "ref": "f22bbf74-265a-43f8-89e3-1ae7fea8a3fa",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "06bdaa69-ede7-47ba-831c-15825199ab21"
        },
        "item": {
          "id": "a95e26de-ab37-43e6-94d9-042c7c810e4e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cf90832c-3e1d-4e72-9ca8-00b0a9d06891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b554eb39-f703-4b06-a74d-29a692d6bedf",
        "cursor": {
          "ref": "5a993816-fd8f-4243-8f24-840eaaf568bc",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a239b0a1-93a2-4f43-b46a-311dfdf73b0d"
        },
        "item": {
          "id": "b554eb39-f703-4b06-a74d-29a692d6bedf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6ae5fa24-c3bb-4555-bb35-2baa3c9b34b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf55bac-cfd2-47de-9075-d23e902a3388",
        "cursor": {
          "ref": "7fb9972c-673d-4457-999f-80047f5291a7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f7051d64-8e77-464e-b856-cb589224a190"
        },
        "item": {
          "id": "bcf55bac-cfd2-47de-9075-d23e902a3388",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9b2539ef-10f9-47e2-958e-615de00d3e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6da147-a710-4e24-b39b-5b33037f59f5",
        "cursor": {
          "ref": "9d283f4e-d39d-41a8-a3d1-715a32672ded",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "34607b10-ad1e-44a4-84d8-df3d4538c8de"
        },
        "item": {
          "id": "8d6da147-a710-4e24-b39b-5b33037f59f5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "538fa751-481a-4687-a981-8da80fe8a4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc85890b-b20a-41ea-98ce-f8227bc415f2",
        "cursor": {
          "ref": "7c4e6e24-58bb-4343-85b6-8cf9330e7568",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "05e2d2a0-7f89-4cfd-829c-eb24974d02c7"
        },
        "item": {
          "id": "cc85890b-b20a-41ea-98ce-f8227bc415f2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5a8bd9a1-ae2b-4457-92e9-a9c060dd3785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce74822-aa60-48c4-83f6-0e656a0b7600",
        "cursor": {
          "ref": "78ce94e5-bc49-4ba5-b37d-a02d16573014",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "16ef00ab-769d-46ad-b2e1-6aca60278370"
        },
        "item": {
          "id": "6ce74822-aa60-48c4-83f6-0e656a0b7600",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d28d3b17-51fd-43db-ad47-9953ed38e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43696cac-3546-4910-b815-ebfcfff9c685",
        "cursor": {
          "ref": "ed5aac7c-5b63-4ed3-8a93-3709d3170705",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "210bd6c4-bac5-4ce5-ab7a-90a476f9879a"
        },
        "item": {
          "id": "43696cac-3546-4910-b815-ebfcfff9c685",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ce84a8de-5e2f-4b5e-8230-9a933e957404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa81f1d-eabb-4cfb-90db-a8756dfbbf7a",
        "cursor": {
          "ref": "e13c935d-2660-4c3d-821b-17e43d404e64",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e04d7760-f08d-4ac6-a3b1-9b10b814983e"
        },
        "item": {
          "id": "6aa81f1d-eabb-4cfb-90db-a8756dfbbf7a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "62b81f67-0638-4b54-bbed-0112bfac352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69523e20-565f-4b12-af26-25bb235f7854",
        "cursor": {
          "ref": "d20c9794-1594-41b2-bfca-4aa818413b14",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bd9d1906-1ab2-4f7d-8327-5356472eb3be"
        },
        "item": {
          "id": "69523e20-565f-4b12-af26-25bb235f7854",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b7bcdef-84e5-4e5c-a1b7-d787f4d6ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f7ad75-600e-4c9f-8f72-25d30eb186d1",
        "cursor": {
          "ref": "1e0e8745-6e31-40c1-a429-78783957ae87",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5df56115-79f1-4d6c-9490-5b1312a953a7"
        },
        "item": {
          "id": "d7f7ad75-600e-4c9f-8f72-25d30eb186d1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1082bd17-aa0b-4c79-8486-fae7c0af8a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfc78c6-c3cb-4ac2-bb91-5fa6b42c3f13",
        "cursor": {
          "ref": "1c2fe66a-5a34-4d3f-b7fb-e56d49582e88",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c38f1641-ba52-4ccc-ab96-4760f331ed5b"
        },
        "item": {
          "id": "fbfc78c6-c3cb-4ac2-bb91-5fa6b42c3f13",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f79ff4c6-7faa-4738-b531-ea2a4b8e837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ad68cb-d670-4374-9983-ed530237f508",
        "cursor": {
          "ref": "7df15f06-6fc6-4569-8e4e-d3a287b66dff",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5cd98574-f6f9-435c-8252-bd09126a6ed8"
        },
        "item": {
          "id": "17ad68cb-d670-4374-9983-ed530237f508",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5b2bb592-4d4d-40a1-b449-30fc421884ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58edd28e-c97d-4629-a8d5-d023b41b01f7",
        "cursor": {
          "ref": "60942fc5-0a49-4003-8198-4ed121a971a3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "89e57ac5-cd24-40fd-8560-c64961cadae3"
        },
        "item": {
          "id": "58edd28e-c97d-4629-a8d5-d023b41b01f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9582d27b-11a7-43a7-bb5c-695b1e322357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c05e481-bff2-4c69-9cb8-128293c3f459",
        "cursor": {
          "ref": "d72bfcdf-3c05-46a6-833d-b2712f86c61e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ed35b712-44a4-4611-87c9-da94f8afdf25"
        },
        "item": {
          "id": "5c05e481-bff2-4c69-9cb8-128293c3f459",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bda3d9ca-e282-47f8-9ab6-a613a909860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b415c19e-3df1-4a0b-93ea-dd10c0d02c43",
        "cursor": {
          "ref": "ffc47f25-28f4-4d35-baea-66e424854fab",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cc6e6a6c-c3cc-4636-86a8-4df1bc0af709"
        },
        "item": {
          "id": "b415c19e-3df1-4a0b-93ea-dd10c0d02c43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0e18f852-b9a5-492d-a923-03bdd18b02ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998d05b9-9983-47b1-ab67-ce974f63e193",
        "cursor": {
          "ref": "2ae48713-ed5f-46fc-95f6-3c478b05e5e8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9962b2cc-eef6-4e68-91a0-679f04642a5b"
        },
        "item": {
          "id": "998d05b9-9983-47b1-ab67-ce974f63e193",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a4694aa8-e119-4a01-b0b0-ee7476b5a246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c4779b-356e-4150-8979-4c8afd56058a",
        "cursor": {
          "ref": "1628c7c9-17f0-4a47-b418-d77a5f9042c1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "11cce859-96eb-466c-bc22-57042a4f229c"
        },
        "item": {
          "id": "92c4779b-356e-4150-8979-4c8afd56058a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8a5d8d5b-9f4d-4a37-9abb-6e06d79819ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ab07f8-8c9d-407d-b7bd-3b83dfc23fe2",
        "cursor": {
          "ref": "9fb6d791-83d0-4ab0-b9f3-e10c39e05595",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0b73caf0-e828-4209-9f42-efe207b4fcd1"
        },
        "item": {
          "id": "57ab07f8-8c9d-407d-b7bd-3b83dfc23fe2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b80d60d0-e290-4fec-8aca-7825fd4960d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d1acb-5dd7-424d-88fb-79eb70f8d4f5",
        "cursor": {
          "ref": "809894f9-ccaf-4d74-937c-e4fa28e5a0a1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "84bd7a6e-bd74-4d7d-94ca-4818541890a1"
        },
        "item": {
          "id": "b43d1acb-5dd7-424d-88fb-79eb70f8d4f5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "383c34e1-83c5-47b1-b4c6-e63abcf7961e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25703ff-c65f-4843-ae43-d3780b942598",
        "cursor": {
          "ref": "6c35cf25-c506-46b1-bd6d-9d688b9ce22f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d8f91ef0-8939-4010-a075-ff00d94bdc20"
        },
        "item": {
          "id": "f25703ff-c65f-4843-ae43-d3780b942598",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ecfe400e-d252-4277-920c-ab3dd2c8dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226ebd85-db20-44c0-93a4-07409569434f",
        "cursor": {
          "ref": "e7bb5cf0-0ac3-4d41-9806-9adbbd992c73",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7361b77f-8543-49dd-b705-254b3748a772"
        },
        "item": {
          "id": "226ebd85-db20-44c0-93a4-07409569434f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "527f79e5-cf24-4779-9706-fa58f0b08f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abebd6c-ce67-4bea-bca1-0d4babd87597",
        "cursor": {
          "ref": "cfa00f97-5205-44dc-ae52-5ad8ee2d36da",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0326db83-92f3-4b0f-87dc-f62b781b07a6"
        },
        "item": {
          "id": "8abebd6c-ce67-4bea-bca1-0d4babd87597",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "333c12cf-a940-46cb-980d-d4362c6f1b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ad6cb4-ced8-4720-9ef2-a86c149a8417",
        "cursor": {
          "ref": "c5674f68-0804-4dcd-abb1-2acb3acb7eee",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd885263-f681-455f-af53-1683e2c3b481"
        },
        "item": {
          "id": "85ad6cb4-ced8-4720-9ef2-a86c149a8417",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "192eefa4-be0c-4041-8508-04826f811101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a2028f-2449-440a-a165-e5a9f6a95d95",
        "cursor": {
          "ref": "b1ced4ef-dc17-4aee-8eee-d27781062f0b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f6e771b9-c286-4e3b-9fa0-a8207478523e"
        },
        "item": {
          "id": "71a2028f-2449-440a-a165-e5a9f6a95d95",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ea765f35-5890-4e95-b509-ef8f42a47421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dac9ec5-9ca4-4bf1-83ed-8af2f1b03e5e",
        "cursor": {
          "ref": "d937317c-b2fb-4823-94f5-68ab100dc188",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0d1ab33b-a26d-4f1e-8cc4-b2462c054871"
        },
        "item": {
          "id": "8dac9ec5-9ca4-4bf1-83ed-8af2f1b03e5e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b5803a54-c2d3-4c5c-a3b2-b0bf4beaa244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b539e286-555a-44d3-974e-7708d2e28e13",
        "cursor": {
          "ref": "aa39ab43-0a80-4235-baef-33f6e2dc1ec5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f71a9b9f-cc68-4381-91cd-7feab135aa42"
        },
        "item": {
          "id": "b539e286-555a-44d3-974e-7708d2e28e13",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "133fdf7c-ec58-4455-8205-8e18cf2606ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8560272d-62f9-4e96-b055-3202b089145e",
        "cursor": {
          "ref": "d24c9fb6-8871-4ad4-919f-8d8af0e5d2a0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c560b7af-d454-4fe4-8892-51f4102a27f9"
        },
        "item": {
          "id": "8560272d-62f9-4e96-b055-3202b089145e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bc84d848-9f13-485f-8f6e-5412c85a325c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e884c2c2-2e35-4a75-9cb8-49d39b588121",
        "cursor": {
          "ref": "1d93eaf9-842a-436b-820b-13651a738247",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "97998624-9fd5-451f-bfc4-6aadbf45a285"
        },
        "item": {
          "id": "e884c2c2-2e35-4a75-9cb8-49d39b588121",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "be4694f3-a5e7-46c4-bae5-02d058e97f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7897c37-b70d-43e8-a612-70a205da4edf",
        "cursor": {
          "ref": "b64c4f3a-2b84-42f5-ba78-10bd4b669226",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eaca8b33-b3b8-4369-8738-343f69e670f9"
        },
        "item": {
          "id": "e7897c37-b70d-43e8-a612-70a205da4edf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9e6be5de-3933-4cf5-9264-de84758d48aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1e6fc-aa87-4e58-bda2-4efcbf028f22",
        "cursor": {
          "ref": "7371b0f0-e315-48a6-bbb8-fd160fecd074",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bd509bb-b94f-41a3-a936-8ea526863a18"
        },
        "item": {
          "id": "b9b1e6fc-aa87-4e58-bda2-4efcbf028f22",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "106b8db1-79f3-47be-89de-e93987d5473d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263b690a-7afc-4b11-acfe-68bb816672a2",
        "cursor": {
          "ref": "090218d6-5629-4215-be01-c411d40fbc46",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "947a0c75-6e59-4705-a242-df2fa44421a9"
        },
        "item": {
          "id": "263b690a-7afc-4b11-acfe-68bb816672a2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bdb97ad3-30a0-415f-ac5d-b30b64197234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7518986a-1588-41de-966f-dfdba7ef25a4",
        "cursor": {
          "ref": "cac1a495-37c5-4a38-a56f-9b0245db15d6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "25c09c13-a8c5-4740-9f5a-5f23f61b01cd"
        },
        "item": {
          "id": "7518986a-1588-41de-966f-dfdba7ef25a4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3211920f-59d3-40c8-8be6-4ed9eaf8e360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9fa7d2-83c4-401d-85c5-19d08189e264",
        "cursor": {
          "ref": "fba9db0b-9c12-455a-b8fa-a107e135b787",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8381dee5-790c-4475-ac85-8b5ad9d41c01"
        },
        "item": {
          "id": "ea9fa7d2-83c4-401d-85c5-19d08189e264",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ee1d66f7-1b95-4e62-a58a-5511e20d1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9455f992-1a9d-4b35-8b29-8fd016e01121",
        "cursor": {
          "ref": "01b64d0b-df6f-4037-96e7-82ce7596cabe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1fa4c769-1c7d-48de-a54e-b5f3481a5e43"
        },
        "item": {
          "id": "9455f992-1a9d-4b35-8b29-8fd016e01121",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "36f140a7-d054-497d-927a-6781fa466a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e373f4-f0d6-40de-88ee-1a1ca993706d",
        "cursor": {
          "ref": "de4e6b83-2660-4b49-bc76-b55fd4beb350",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4b7a9b70-2d8d-476e-9280-2f0bdbec3bac"
        },
        "item": {
          "id": "84e373f4-f0d6-40de-88ee-1a1ca993706d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a5a6c27a-5955-4c12-af17-1fff6b356d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a9619c-8d81-46d6-bc5e-84ce7b51218f",
        "cursor": {
          "ref": "4ddaf5db-8c91-48b9-bd96-8c0e47022a7a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dceab866-67ed-4ecd-8d95-830fd9850dd3"
        },
        "item": {
          "id": "a4a9619c-8d81-46d6-bc5e-84ce7b51218f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d4523c51-111f-4568-96d2-a85364669c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1858631-63f3-4c06-81fb-e49ea39384f2",
        "cursor": {
          "ref": "a55d0bdb-8b12-4a99-b771-87bc4db5963a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e16eeb68-8234-446a-959a-5defc04a90fc"
        },
        "item": {
          "id": "c1858631-63f3-4c06-81fb-e49ea39384f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c2d3dfc9-5a94-460f-8917-011c0980c502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a11a51-cdd0-489d-acba-bff8dbc076c4",
        "cursor": {
          "ref": "26fd8533-393d-48ca-beeb-f009569cb815",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6b2af0b8-34aa-4e00-a5a7-88cf263ff338"
        },
        "item": {
          "id": "88a11a51-cdd0-489d-acba-bff8dbc076c4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4dbda0d8-c9f1-492b-94b9-4614dca5143d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13964415-bea4-41df-adb3-f2885f968479",
        "cursor": {
          "ref": "24e7a4f4-1bda-4134-87e4-9f6f59fafe97",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2c0453e2-4557-4339-aa3f-61c417bea334"
        },
        "item": {
          "id": "13964415-bea4-41df-adb3-f2885f968479",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a2a59e21-08fa-4e50-bb45-e4a4b83f1061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6493fcb6-dfd6-4cca-a187-853813b348f7",
        "cursor": {
          "ref": "7eec9079-aa02-4b06-be82-8c4f5f82315c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "de0dc690-dc22-4ae5-ba78-d6efada5aadd"
        },
        "item": {
          "id": "6493fcb6-dfd6-4cca-a187-853813b348f7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eb18da7a-5d14-4cb8-b27b-c0c9b1133e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a1ff08-4c66-466a-a7ee-6b08813019d7",
        "cursor": {
          "ref": "cf21522e-df18-4d70-8e62-6cc00e753f8c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cbfc6dde-8c99-4860-874c-ee800300ac97"
        },
        "item": {
          "id": "99a1ff08-4c66-466a-a7ee-6b08813019d7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4e47e42c-d2e0-4a74-9b94-08faa8c5c63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f1ad27-dde3-446b-97a8-96f35fdae405",
        "cursor": {
          "ref": "d8c12f2d-462e-4f17-b1f6-740cae8d3459",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "25320ef9-1934-499e-bea2-e069eab153e2"
        },
        "item": {
          "id": "60f1ad27-dde3-446b-97a8-96f35fdae405",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2227af14-ccec-4174-8760-e1b561bbedb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8cd2d4-6a97-46a1-aa61-f9012dfd4ff1",
        "cursor": {
          "ref": "dfc6f355-c9a7-453f-9fb0-adeed3c279c9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d76d2be9-dd2e-4ef8-bca9-f10089d2a1c4"
        },
        "item": {
          "id": "3c8cd2d4-6a97-46a1-aa61-f9012dfd4ff1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "15ade438-ee31-458f-9940-d8a89d7fb263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44461a52-3066-490b-bd50-4ad3f81cc6e3",
        "cursor": {
          "ref": "fa165707-4457-43dc-8383-8d3ab8723ae5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "660e8ae6-ac91-46d4-bde3-052dddf7e526"
        },
        "item": {
          "id": "44461a52-3066-490b-bd50-4ad3f81cc6e3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b227c0c4-0cba-4bd2-81bc-0a66b23471e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a81d05-7791-4d0d-bda8-f927005e3ee5",
        "cursor": {
          "ref": "e23f5b20-44be-4b2b-b6e8-a55e24c3b7f3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3aaa9457-ec16-4baf-871b-7751c8c2b77b"
        },
        "item": {
          "id": "22a81d05-7791-4d0d-bda8-f927005e3ee5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "add3146c-dc91-47fe-a7a2-09f00b242bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e44362d-1bd9-445f-b611-c3fcf40607b6",
        "cursor": {
          "ref": "b3fc51b6-e6e7-4653-ab25-0d4719fd33a4",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b5d47c6f-2ad8-48f1-8378-7c4a2da3730a"
        },
        "item": {
          "id": "7e44362d-1bd9-445f-b611-c3fcf40607b6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18f740b0-e547-45dc-bec8-98f1810c034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5a34c0-6423-4571-8662-6d7d7aa0517c",
        "cursor": {
          "ref": "1e741f69-e2ea-4e4f-ae95-a8d183f2c93a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "782350e0-40e8-4290-b286-f2ebeeac2edc"
        },
        "item": {
          "id": "eb5a34c0-6423-4571-8662-6d7d7aa0517c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2f8c5413-df5c-4132-ac84-b85a09b7b9e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf20f935-c791-44c9-afb2-c965e780cd9b",
        "cursor": {
          "ref": "8664ae8b-774f-427f-98d9-d6278bb4c33a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a2562b0e-d020-4801-9862-1230142b797d"
        },
        "item": {
          "id": "bf20f935-c791-44c9-afb2-c965e780cd9b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c2b906b0-ff58-49e5-8d7b-05825ffb0ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "811fd995-7649-4503-b7a7-5ed3f0a316a2",
        "cursor": {
          "ref": "0956b8ec-1618-47f0-a78d-3dce4723fc42",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e5f76919-8c58-4c79-a17a-66118b2d434c"
        },
        "item": {
          "id": "811fd995-7649-4503-b7a7-5ed3f0a316a2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8bba3034-c3ae-4df8-8f95-3884791b7ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9c6ff36c-c80b-4e00-91de-f2f18040ab96",
        "cursor": {
          "ref": "77b85dc1-ab6a-4e3a-a128-fd01fe38285c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e8eb26e8-9e85-4f66-97a3-ce1783667d17"
        },
        "item": {
          "id": "9c6ff36c-c80b-4e00-91de-f2f18040ab96",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2b88fe03-a4ff-44f6-ade4-c3e3edde8e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7bf71558-6b0d-45fd-9826-3fa4f6c4fb92",
        "cursor": {
          "ref": "3ace79de-9fe4-48cb-937e-ee848606b0b1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e45c5de2-28d6-438c-b2aa-64ffdbec9734"
        },
        "item": {
          "id": "7bf71558-6b0d-45fd-9826-3fa4f6c4fb92",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cad38ac2-f2cb-4ec3-a26b-5bab7511f842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a89e6031-b2f0-41eb-9c1a-63b61e0b7087",
        "cursor": {
          "ref": "b523afe5-9fc1-4e16-a9c1-8119de75d3d5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "90d6718d-98f4-4ae2-8ba4-c3f084b8fc1d"
        },
        "item": {
          "id": "a89e6031-b2f0-41eb-9c1a-63b61e0b7087",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7068a4dc-f62e-4c56-bc17-b99a16d0df3a",
          "status": "Created",
          "code": 201,
          "responseTime": 8467,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f7cbea-a9a1-42f2-9c41-4e178f5077d2",
        "cursor": {
          "ref": "2557e124-78ac-4fba-944c-854c21bfd0fd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "67051b5f-279c-4879-ba45-550cdaea5fa9"
        },
        "item": {
          "id": "52f7cbea-a9a1-42f2-9c41-4e178f5077d2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "82fca587-e5ac-40d0-a387-8fc419c043c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1b58b520-eda0-4ad1-a23e-bfe70bd5461c",
        "cursor": {
          "ref": "5fedb93b-a403-45c0-b3cf-95122a6349e4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63476798-6c17-4cb2-86e9-e64ee33d2f0c"
        },
        "item": {
          "id": "1b58b520-eda0-4ad1-a23e-bfe70bd5461c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "54f8e5d0-b5fd-4ebc-bd6e-7a37c1deb41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7809f2c3-25c2-4bd2-aa2b-9dc1b3327f86",
        "cursor": {
          "ref": "41661739-066e-4143-91a8-4983cdd58e31",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a93d34d6-523f-43bd-8843-8ee171a42bda"
        },
        "item": {
          "id": "7809f2c3-25c2-4bd2-aa2b-9dc1b3327f86",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9022d50c-7979-458f-89aa-dacd5330031a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcace8e-63bf-4106-8d60-9cfdb9b34ccb",
        "cursor": {
          "ref": "557a5dc5-6a58-449f-8c79-eec8f408c2c0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ded00140-0a6f-482e-843a-eaba8ef2f36c"
        },
        "item": {
          "id": "fdcace8e-63bf-4106-8d60-9cfdb9b34ccb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "852d3337-428f-43f0-9b2f-9a9e630649a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcb3876-47b5-4e18-b500-4e1ee7fc4ff6",
        "cursor": {
          "ref": "d7f70012-0672-4cca-94e6-cb39229dc882",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4959c98d-0738-44e5-bae1-ffed36af3eee"
        },
        "item": {
          "id": "cbcb3876-47b5-4e18-b500-4e1ee7fc4ff6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "927f18ae-358a-4be5-b43d-85716fc917df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f083049-4947-4af6-8260-59db65df2e31",
        "cursor": {
          "ref": "192f4d4e-51f2-44e5-a6f7-7f415563eb23",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ce8ea158-dde2-49e4-b262-7b8eb8e43be4"
        },
        "item": {
          "id": "3f083049-4947-4af6-8260-59db65df2e31",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e751125f-f78c-47fa-8311-035fb47691f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4c4cb8-dbce-406e-a395-be0df5096ac1",
        "cursor": {
          "ref": "e90ce914-cd2b-4035-8b3e-9938b44a3fde",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3e7e7da3-1fb0-465b-bef8-124168c648d7"
        },
        "item": {
          "id": "6b4c4cb8-dbce-406e-a395-be0df5096ac1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "920ad519-d812-41db-8299-c7c8167256ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2932fa4-210c-43be-aa61-10d2f061978e",
        "cursor": {
          "ref": "df5a9280-4d1b-4561-9167-124bbaae7b4d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "377d5c1d-a54c-4335-96aa-312f3b6796a2"
        },
        "item": {
          "id": "d2932fa4-210c-43be-aa61-10d2f061978e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e730c129-7232-48c2-a63b-2ed75e425ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815605b3-8eac-4816-bd1d-3be28ef7b819",
        "cursor": {
          "ref": "e82aad60-f410-4799-a8b7-e947cbcfc817",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "55405335-5e43-4004-b5fc-5556141c5f47"
        },
        "item": {
          "id": "815605b3-8eac-4816-bd1d-3be28ef7b819",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eeb94616-a0d8-4b58-bb71-5b62af17e747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697c25c1-bf43-4ef1-b2f7-c1c133541b2f",
        "cursor": {
          "ref": "4945d2a5-1f4b-4b35-9bb0-2adfd0925759",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "412a42e9-99fe-4a87-b9c5-d903a4c4759a"
        },
        "item": {
          "id": "697c25c1-bf43-4ef1-b2f7-c1c133541b2f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b1c641e-0ca8-40c7-856b-af3ee5701c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e229df3b-3722-4679-8358-be740b6b254d",
        "cursor": {
          "ref": "086422e8-61f9-4708-85a7-3b3144792598",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ee536e29-9f31-4a74-ac2d-b35ae913a825"
        },
        "item": {
          "id": "e229df3b-3722-4679-8358-be740b6b254d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "98bc2329-a41c-4c8f-bef8-d4491a7001e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fa9c22-1a76-4241-9e7b-df647ae72b07",
        "cursor": {
          "ref": "916baf11-ecee-4c71-9f44-3b92060e8f2a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bfe12993-dce0-438f-a90f-b3fed967d6dd"
        },
        "item": {
          "id": "f5fa9c22-1a76-4241-9e7b-df647ae72b07",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "baee4603-1774-46b8-b5ce-e5d436e68854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e605894-9f0f-467e-8679-399b0f2d227b",
        "cursor": {
          "ref": "ecd3cfa9-8023-4108-b88d-631826a892b7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a1955c9a-d8bd-4a44-bae1-b3532686b60f"
        },
        "item": {
          "id": "1e605894-9f0f-467e-8679-399b0f2d227b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75a21553-0998-4ac8-bb3d-a683e583f24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ef8e63-83b4-46f1-ae42-e04ec008163b",
        "cursor": {
          "ref": "21d52833-9bc2-4351-b6e4-155a5eed09c8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e264ae56-fc4d-4486-87fd-2ca67f59824a"
        },
        "item": {
          "id": "21ef8e63-83b4-46f1-ae42-e04ec008163b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "48b92e38-c496-42de-a6d6-7f60f7e00cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c64b75e-8816-4f18-8690-476e11029d3f",
        "cursor": {
          "ref": "5d88e566-5374-4a90-85f7-cb00aec567e5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8949b40b-7d4c-4df7-818a-1ce815b1747c"
        },
        "item": {
          "id": "0c64b75e-8816-4f18-8690-476e11029d3f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "52becaf4-72bd-4d1a-9826-ec055f842596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4844f2f4-24a0-4c6e-8823-380aa3d381f7",
        "cursor": {
          "ref": "19fe1cbf-49fd-4c12-b470-b50405e3b399",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "db5cd189-07c8-4585-b2bb-4357b6907f3b"
        },
        "item": {
          "id": "4844f2f4-24a0-4c6e-8823-380aa3d381f7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28759358-89a7-484f-8d7e-ac3300e26a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0f08e5-6a5a-4628-9562-4b55236cb2a0",
        "cursor": {
          "ref": "563cd880-08dd-42f4-8354-a70e84dbf981",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a7dd35ea-48f8-4f12-b665-5fa5d52d329f"
        },
        "item": {
          "id": "5e0f08e5-6a5a-4628-9562-4b55236cb2a0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "91474f2e-136d-41ac-8437-4f0cfc84a3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57370828-9576-4fc6-8f1c-f4659e3d50d7",
        "cursor": {
          "ref": "af64aaa6-dec0-4749-b461-231701d9ed11",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "16a4fbd5-bb90-47e0-968c-62fe6c1689df"
        },
        "item": {
          "id": "57370828-9576-4fc6-8f1c-f4659e3d50d7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "77d9ee3e-f43d-47b1-b971-0ce8113f8c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2c146a-b5ac-476e-beed-94941db567a7",
        "cursor": {
          "ref": "11b259c1-d0e8-46f6-ad60-7c0be636b090",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "638b54fe-63d8-4ed8-9981-b993730456f5"
        },
        "item": {
          "id": "1d2c146a-b5ac-476e-beed-94941db567a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0407b408-86e9-4675-a570-638f70ff9485",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f2f4097e-8bed-4260-9bdd-e252d729f2cd",
        "cursor": {
          "ref": "a8118767-a1a1-4433-9595-24026dbcf954",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "290e80c8-d34f-4c06-97e6-e9f8bd849d9c"
        },
        "item": {
          "id": "f2f4097e-8bed-4260-9bdd-e252d729f2cd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ec498a8-5a63-4282-90e1-d11dacd0c693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95a6aff-80e8-4574-814b-88f54b237e48",
        "cursor": {
          "ref": "4c891f84-34d5-444c-ad4d-54030c5b2909",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f238e171-ca06-4f19-afae-abb97a4799f9"
        },
        "item": {
          "id": "e95a6aff-80e8-4574-814b-88f54b237e48",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a0b8997f-20ec-43db-b4d4-f42d997b4617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c8143-e211-468a-a03a-5c7e34497acb",
        "cursor": {
          "ref": "ef405c8a-1432-4dd0-820c-62d58e3fdc63",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "16185f51-7954-40f5-a15f-33872eb7eedb"
        },
        "item": {
          "id": "fe5c8143-e211-468a-a03a-5c7e34497acb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb87beb3-e03a-4ea2-82b5-ec31946ee533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0fe8bf-0947-46df-bf04-f50d9a8727bc",
        "cursor": {
          "ref": "da3c0bd1-c4d0-433f-8f72-523a097a188c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3e155bb9-4dba-49a2-9e12-12462b866d2d"
        },
        "item": {
          "id": "2a0fe8bf-0947-46df-bf04-f50d9a8727bc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f850e2c3-5c40-40ec-a231-bbbebdee8675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdfc4a0-2fa0-423e-908a-dbb23c7ad884",
        "cursor": {
          "ref": "6358a593-0396-47fa-99af-5faa9d5875bb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "05e8ee94-a6cf-4e38-a28f-49653b2c49c9"
        },
        "item": {
          "id": "1cdfc4a0-2fa0-423e-908a-dbb23c7ad884",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e3db98e-aca2-4b5f-ad0c-3df6c7bd37d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad49d66-cd9d-4064-986f-68e2c9e86ffb",
        "cursor": {
          "ref": "4a322d4f-41f3-4a2f-acb0-8167598122e0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bcc4be13-f692-4bd1-b1a8-bac77b6d1326"
        },
        "item": {
          "id": "cad49d66-cd9d-4064-986f-68e2c9e86ffb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c67a16ed-ad1f-4fbf-92cb-92f7cdaa0ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8173e514-cc8e-4cce-870e-363c091e4af4",
        "cursor": {
          "ref": "ff257c57-dd5d-49d4-8c35-16446065cbdd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5afa2bdc-748d-4828-b4c3-3190f68896e8"
        },
        "item": {
          "id": "8173e514-cc8e-4cce-870e-363c091e4af4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e24f31ba-25b6-4d76-b1c9-2cf1aef95e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa39ee7-37ac-4f61-8736-69175658168a",
        "cursor": {
          "ref": "32f11b76-ea4c-41c7-8a0b-b4544e70b848",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "120dd069-5bae-429d-ae66-77aaa05cac4d"
        },
        "item": {
          "id": "9aa39ee7-37ac-4f61-8736-69175658168a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b9df6085-3cbb-4cd6-8f25-aa4c68a6e3c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "68bcdc06-8788-4fe5-abb6-9e5f9b932c52",
        "cursor": {
          "ref": "32bdf570-dd61-4d67-b426-34dc8949059d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b7428a78-9b5d-40c0-bc63-9f0d8487b296"
        },
        "item": {
          "id": "68bcdc06-8788-4fe5-abb6-9e5f9b932c52",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2fb42117-c074-481d-a731-3bab1c210cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78acf465-6a10-4bf3-ac24-663340345c8a",
        "cursor": {
          "ref": "9f2f3192-fd3f-4410-85cf-b03b73b5b303",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c60b085b-ab42-4e3d-91ad-e9c522a339f0"
        },
        "item": {
          "id": "78acf465-6a10-4bf3-ac24-663340345c8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7834bbd3-5fa0-4cb2-8734-11e09c5c8282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62da2eea-3674-403f-845d-10d2ef8206b0",
        "cursor": {
          "ref": "54c39e25-8dcb-48c8-a1f5-42ba21f6355a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "df29721c-442c-41de-a7fa-cafd74dd83ca"
        },
        "item": {
          "id": "62da2eea-3674-403f-845d-10d2ef8206b0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dbe0832b-12e7-48e7-916e-06e11d5c95d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386f16af-ea49-4340-82f5-976e3be3bb6a",
        "cursor": {
          "ref": "2cb96517-d29f-4484-9419-5c908ae6243b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f360eabf-4405-4edd-ad16-1b59c13cc5ea"
        },
        "item": {
          "id": "386f16af-ea49-4340-82f5-976e3be3bb6a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d1d86393-3e94-48e4-9e96-770315c7bf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c40a1b-ca87-478f-9127-f8022d6d0dec",
        "cursor": {
          "ref": "1e8e614f-720f-4ce7-ad1b-ce8f27ff2d75",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c295c80e-5436-4808-887a-022557022627"
        },
        "item": {
          "id": "97c40a1b-ca87-478f-9127-f8022d6d0dec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "90967df2-de9d-48a7-a8b4-dc5823e63691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5860b27d-68cc-4f1c-aaca-f48040f4dbe4",
        "cursor": {
          "ref": "6cdd3f8e-23b3-4389-b895-534c0bca4c9f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b1baf168-a79a-46fd-b56f-816ee98e60c3"
        },
        "item": {
          "id": "5860b27d-68cc-4f1c-aaca-f48040f4dbe4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4a90c7c0-12be-416f-869b-ae5f95a96095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbe7de3-f153-4dc4-bad9-a2a1a05725c9",
        "cursor": {
          "ref": "a7219499-db61-40b5-a934-1fa1d31562aa",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d9084839-906d-452f-8b49-e1ad741277d0"
        },
        "item": {
          "id": "2dbe7de3-f153-4dc4-bad9-a2a1a05725c9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cc95b548-38e8-44b6-97e3-5e219352ab79",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "d420b6bd-824e-4b62-8c93-cbe0b402a496",
        "cursor": {
          "ref": "17202d9f-1d43-45a1-9ac7-f7eda1c159bd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc0e840d-f747-48d2-927c-0540eeabf83f"
        },
        "item": {
          "id": "d420b6bd-824e-4b62-8c93-cbe0b402a496",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "27e21449-f8ba-45af-bf16-0a44c25127c6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "dd0026ad-2be6-401d-8ac5-10e81a5e0617",
        "cursor": {
          "ref": "316cfc56-3e52-4fb7-ab5a-45e2d3110f30",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d5d08048-d3b1-417f-9cfb-d7f1af78ec07"
        },
        "item": {
          "id": "dd0026ad-2be6-401d-8ac5-10e81a5e0617",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dcd662ab-c9b1-4a42-92af-c0c1de804351",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "ef176be0-8268-4c5b-9d43-8cce0ab40b95",
        "cursor": {
          "ref": "41222a48-60be-46ce-a1d2-28052522b72e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1146f549-567e-471a-9f6f-abf9b87345da"
        },
        "item": {
          "id": "ef176be0-8268-4c5b-9d43-8cce0ab40b95",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3b6c4354-ee1f-47f6-819a-b0d90ea96583",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a0f9eba8-f144-4bde-bc74-b74dc46467fd",
        "cursor": {
          "ref": "dc56fca7-68cd-4bd6-a77e-ef30a1cce42b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d1fec361-fbf1-4554-aef1-59df6b4000c7"
        },
        "item": {
          "id": "a0f9eba8-f144-4bde-bc74-b74dc46467fd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a7091aae-6197-4114-94d2-6382f6124426",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 157,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "62c5375b-8f94-4c78-b522-14b17ce61633",
        "cursor": {
          "ref": "69e0204c-8544-4ab2-a13e-7f74613532bb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "15f136e3-4e5d-4cfd-b5b7-8c95f11cf180"
        },
        "item": {
          "id": "62c5375b-8f94-4c78-b522-14b17ce61633",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f3810a88-884b-4b58-9d22-c5bb9dd4f24d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5ab5ee3b-d8b5-4e9a-b65f-c8d36e42899d",
        "cursor": {
          "ref": "d80318ad-9702-4c45-97fe-1d1fd42502c4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3639e836-cf61-405f-9596-8c505a3eabf8"
        },
        "item": {
          "id": "5ab5ee3b-d8b5-4e9a-b65f-c8d36e42899d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2bc4eb99-da2a-4d75-bba1-622a0bb32575",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0670d7-3286-4cd7-b795-cc3f25140d6f",
        "cursor": {
          "ref": "4eb28503-4b9f-421e-8148-278697e3a9d8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2e9b3536-ad92-4c56-b8e9-5bf5c4e81bb8"
        },
        "item": {
          "id": "5f0670d7-3286-4cd7-b795-cc3f25140d6f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c4aeb950-97ef-4e98-969b-0d74c386b262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e734e86-cff2-4897-a5b3-9592090c3a1a",
        "cursor": {
          "ref": "f6fa4872-a1b3-43a4-be2c-67f9390fa88d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e08c7fa9-a493-4ec0-ba98-e564a70fdf69"
        },
        "item": {
          "id": "4e734e86-cff2-4897-a5b3-9592090c3a1a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "71c60f90-9173-4fd4-aea7-7b8f1655f5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c9cfc-cd15-483a-89fb-16d3104f9de0",
        "cursor": {
          "ref": "31dac21c-9ab4-4011-9c5b-8309b6a58576",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2b576fb2-91ca-4db7-8b6a-1eca3f0ff0ff"
        },
        "item": {
          "id": "332c9cfc-cd15-483a-89fb-16d3104f9de0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0162a5a7-3adc-44c6-82e5-3a19a49f8dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de2c1f2-a4e6-4aa7-9dc8-147feebda030",
        "cursor": {
          "ref": "7d420de2-f8fd-4939-82ee-22c7ad1bdd7c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "12e4ffec-ee05-4447-9f10-0a8b0777a092"
        },
        "item": {
          "id": "1de2c1f2-a4e6-4aa7-9dc8-147feebda030",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9dc2663d-87d8-4c98-9a3b-e089494a8846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcfc71f-08c1-4faf-94fb-6adf3e13a88f",
        "cursor": {
          "ref": "2184a815-77fd-4225-b21e-9ccd28428d6c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "17c2e294-8c00-48b7-a7e3-dea212408ec5"
        },
        "item": {
          "id": "7bcfc71f-08c1-4faf-94fb-6adf3e13a88f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c8c2f73d-f881-4cc4-8211-4595a6a71948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9ff1dd-eb01-4258-8c98-599e90baad6d",
        "cursor": {
          "ref": "ec43958b-08c3-4bbd-b9e5-f2694e62a8ad",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "da0ff7a8-8422-458d-9a79-448097db99a9"
        },
        "item": {
          "id": "9a9ff1dd-eb01-4258-8c98-599e90baad6d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8f4c59cd-0c6f-49c3-8bc9-175a2390343a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab7fc20-606a-40cd-8cdb-b8fa181287ac",
        "cursor": {
          "ref": "c9295780-0688-49e8-bd2a-2b8cea96ec49",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9f75f5c3-100c-4640-a75a-dbc6cc689ab6"
        },
        "item": {
          "id": "0ab7fc20-606a-40cd-8cdb-b8fa181287ac",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3c64874e-c484-44c8-b2ec-d7437ae5e7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70cf643-ffbd-40e1-90aa-290de1ba141c",
        "cursor": {
          "ref": "0af1f33d-2a10-4c63-8c49-a10c04a91475",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "afc9e3f5-2d7a-440d-a253-beb07d6c7ffd"
        },
        "item": {
          "id": "b70cf643-ffbd-40e1-90aa-290de1ba141c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "37b94cd0-a0f8-4a9a-984d-777757eb2c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58b225f-9c70-4514-9022-6c5a221b2bee",
        "cursor": {
          "ref": "79c4e506-e9dc-4181-a12a-a1770d26741a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0d74793b-6310-4036-aced-b01b950ef0a0"
        },
        "item": {
          "id": "c58b225f-9c70-4514-9022-6c5a221b2bee",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2232bf0f-c3de-4cb4-b269-13b7039ff704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50286ecc-7da4-4ea9-be23-1f85140ded2f",
        "cursor": {
          "ref": "29829d18-317b-4020-8627-d775e744b256",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d41fd34b-c903-45dc-a461-23f483dd13a8"
        },
        "item": {
          "id": "50286ecc-7da4-4ea9-be23-1f85140ded2f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0d64ce75-ac57-4a0f-a328-f5e940a2eef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482c93f0-bf01-4cdc-a219-51606e987d93",
        "cursor": {
          "ref": "585c933c-7df2-4a04-a19f-351bc01e1509",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b105e4fe-2e8c-4dfa-9c42-d4740684761d"
        },
        "item": {
          "id": "482c93f0-bf01-4cdc-a219-51606e987d93",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5bc1c6f5-f073-4184-8ac7-99b4ada7582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61dfa65-42e0-409f-802e-6c036bf741ac",
        "cursor": {
          "ref": "fffea6b1-2087-4233-abbd-bf34bf0ed1f8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "84823e7d-3cd5-4306-b763-f957c344f69d"
        },
        "item": {
          "id": "f61dfa65-42e0-409f-802e-6c036bf741ac",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4861f9b2-d5b3-4f14-a6ee-f33880f1acbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e915c3d-4d7b-4656-b6eb-f81fef24c6ef",
        "cursor": {
          "ref": "7a395c23-8261-4189-a840-9777390f5ea0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1f358fa9-cd1a-4197-ba9c-38a9bebceb9a"
        },
        "item": {
          "id": "3e915c3d-4d7b-4656-b6eb-f81fef24c6ef",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "61953794-5c5c-49b8-a742-4323c437d8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c29dbc5-a5bd-4ad0-87c9-de650aa22304",
        "cursor": {
          "ref": "e934c7aa-e043-4c47-ae13-40605e2065ec",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "55f72f62-f0d1-40bb-93d4-c923af4cfaa4"
        },
        "item": {
          "id": "9c29dbc5-a5bd-4ad0-87c9-de650aa22304",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "327d225e-dba9-4146-9e53-370864f44ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feeb8539-bf44-4294-9827-6ff2f3b4ac26",
        "cursor": {
          "ref": "e7f3c913-1c95-4ffb-8dae-f8f5f80a36d6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7b414f08-86ab-4fc6-84f7-857fab5116d5"
        },
        "item": {
          "id": "feeb8539-bf44-4294-9827-6ff2f3b4ac26",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3c4a402a-76ca-473e-a8e7-ab2aefb553e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba3002c-26c6-4c00-b7c9-1860b425c207",
        "cursor": {
          "ref": "517527ed-dc66-45ef-b27e-f9cb77185af3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "28f57358-d9b0-486a-b453-824942d67b5e"
        },
        "item": {
          "id": "cba3002c-26c6-4c00-b7c9-1860b425c207",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a2eae8c5-a25e-4c12-8dea-4d7fef5144d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792e4220-d41d-4764-9932-0949690682b7",
        "cursor": {
          "ref": "7de9b8f8-d6bb-4381-b53a-6caf27210f4c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e3b041df-696c-41cd-9259-19091131d886"
        },
        "item": {
          "id": "792e4220-d41d-4764-9932-0949690682b7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "649c83af-0d95-4cec-b1f5-eb6c54f38dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f95651-0d5b-4a00-8ae3-91ea32f41a73",
        "cursor": {
          "ref": "b81cb928-41e3-4598-9d2f-cd24fbe44806",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "03346055-2851-4d8c-a1f6-9b229f2b2ba2"
        },
        "item": {
          "id": "16f95651-0d5b-4a00-8ae3-91ea32f41a73",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e38aa94f-e83c-413d-af56-ad0a6ce4190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da98fbd7-1799-43d6-8387-697b64e36fe7",
        "cursor": {
          "ref": "26ba58e8-43c5-40ff-9ac0-b2c51d121794",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e7ebd5f5-58ad-4643-8fb9-c0ac02a9b10f"
        },
        "item": {
          "id": "da98fbd7-1799-43d6-8387-697b64e36fe7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "071bc513-2ba5-452a-b9f0-0db57dd2787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c13b7bb-259e-407d-9dd6-20d8d11dd1fb",
        "cursor": {
          "ref": "7fdfcc39-c94c-404c-8616-68f9aeea18cd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49ba7038-4f8b-443f-939c-2c28b636e2de"
        },
        "item": {
          "id": "6c13b7bb-259e-407d-9dd6-20d8d11dd1fb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9499fd0d-64ac-4b64-acf5-fd5d42cf71e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b5ed0d-1aa1-46d7-a8d0-d72b10fd4512",
        "cursor": {
          "ref": "9ad6a4d9-0d94-4c21-8763-fad4eceb2a7a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cdba0b2d-63cc-4b0e-8e2c-6d36074c639c"
        },
        "item": {
          "id": "94b5ed0d-1aa1-46d7-a8d0-d72b10fd4512",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fbe245fc-5712-4fac-a672-ecbdeb3bb9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4fd917-585a-4979-b5d4-115b3556ae9b",
        "cursor": {
          "ref": "d6079fcd-b54f-4a67-8bf3-e702a5d52d67",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5811cd92-af1e-49a9-8c0a-d253b7429784"
        },
        "item": {
          "id": "cb4fd917-585a-4979-b5d4-115b3556ae9b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "adc2972d-4a0d-498f-a8b8-210d2302a692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc1351f-aabb-42d2-8ca3-9dd8377beb92",
        "cursor": {
          "ref": "236bf91c-ba39-4c40-8f3b-b56a42eb4bf3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6bb846b1-59d1-47b9-b7a2-2dfda10367f1"
        },
        "item": {
          "id": "fbc1351f-aabb-42d2-8ca3-9dd8377beb92",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f28029f8-ce8c-4711-acc7-dc14c0c56c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54580e6-9d49-4677-a299-e68eb209c256",
        "cursor": {
          "ref": "7be4d502-40d3-4c31-a11f-9796a256499b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b013ec0-781a-4df5-95b6-921d5ae0abaa"
        },
        "item": {
          "id": "d54580e6-9d49-4677-a299-e68eb209c256",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f3999667-b84c-4975-b9aa-767a1d34ce0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca69ea0-a63f-4308-b735-7993fa7f8a78",
        "cursor": {
          "ref": "3faa95f6-5868-49f1-b555-8350a6cee8e2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f2332d2b-501f-4d7e-bee9-518f2a3b3d99"
        },
        "item": {
          "id": "8ca69ea0-a63f-4308-b735-7993fa7f8a78",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a6c7454a-fa70-445e-93bc-43b04c6ce2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15433e10-af9f-4d8f-b6ac-e0079f79f31c",
        "cursor": {
          "ref": "128f64b5-00f8-4a5b-a914-7dd7852f0236",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "04a24ae3-98c3-438e-83b6-39241273c1b9"
        },
        "item": {
          "id": "15433e10-af9f-4d8f-b6ac-e0079f79f31c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2d99e5ee-79c0-4c98-90ca-bc98fba4b4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57099a1-7ab9-4a74-8af7-650a86045c04",
        "cursor": {
          "ref": "1533d430-bf2b-4f5a-b813-c141ce4932bc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9f615f88-92d1-4c93-83c7-a8c942ad6b1a"
        },
        "item": {
          "id": "a57099a1-7ab9-4a74-8af7-650a86045c04",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fea3e614-f7f6-4d18-b082-df4f2ba249f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1a837f-63ae-4d41-898b-4e6053cfdc4a",
        "cursor": {
          "ref": "074181ef-2899-4176-85e7-32c33aac2d97",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "48ebee08-5df4-48f0-b689-f49dd48ead7d"
        },
        "item": {
          "id": "7b1a837f-63ae-4d41-898b-4e6053cfdc4a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b1015e42-ed08-436d-bc90-7eb693a2a297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5e22d5-0c8a-454f-89bb-1cd6cf78f1d1",
        "cursor": {
          "ref": "111be6d8-318c-40ce-847e-6c87549c399f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "75ebe8cf-102a-421e-9bc3-81ab69b6f26d"
        },
        "item": {
          "id": "4f5e22d5-0c8a-454f-89bb-1cd6cf78f1d1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a26beaed-5462-4e65-8e78-10fdcab8e752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d00ae7a-576a-4cb9-9042-81b10d4fbc2c",
        "cursor": {
          "ref": "e245be2c-6017-4cc4-a53c-1d1e7080af52",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "39e2750d-a711-4e50-9b0b-d1190d689767"
        },
        "item": {
          "id": "2d00ae7a-576a-4cb9-9042-81b10d4fbc2c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "121766b5-202c-4c6e-8229-51ee2ef3cda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7f6c39-f69e-4c3e-bccc-7f4c9425a1ee",
        "cursor": {
          "ref": "f51a18cd-aac1-47df-817d-8425020bc927",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "73486823-aa4c-4d1e-8345-fe4ef0e1b23c"
        },
        "item": {
          "id": "ec7f6c39-f69e-4c3e-bccc-7f4c9425a1ee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5e3e215a-6525-4009-bc93-487de7e720af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184efe8d-5d6b-4680-a967-0288925876ef",
        "cursor": {
          "ref": "68e0d6f3-b1f5-4af1-a659-da7ff5ff8fe4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "29711d02-c5c4-407c-b3ee-6ddd83e1ce79"
        },
        "item": {
          "id": "184efe8d-5d6b-4680-a967-0288925876ef",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "114113c5-b532-4542-9e74-a67ffbb3e00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff8ad37-4f64-44ac-a6ba-6892b631e385",
        "cursor": {
          "ref": "060e62c7-ba27-4c3b-97e8-a6b03100b5ad",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8009c10f-5dd9-4335-b155-685fc6cac886"
        },
        "item": {
          "id": "3ff8ad37-4f64-44ac-a6ba-6892b631e385",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de00d490-4340-4373-9d84-16939dfeafd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e839813-e980-4337-bd28-f31eee669017",
        "cursor": {
          "ref": "73df0ec4-565b-4229-9017-4e315a88f429",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "165f495b-4938-4f69-a8d4-6f27788fae99"
        },
        "item": {
          "id": "2e839813-e980-4337-bd28-f31eee669017",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "361b0ea9-636e-4626-9a96-400f83511a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7247920-1f1a-4657-8732-6a0e2de14ae1",
        "cursor": {
          "ref": "40c997e5-c8f1-41a3-900b-e13605b2a2eb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2e7d5fec-1218-4b51-8c8a-64a0845143e8"
        },
        "item": {
          "id": "c7247920-1f1a-4657-8732-6a0e2de14ae1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6369857b-6474-4f70-8fa6-fc6451af382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19116de3-97c8-48ae-bdd5-306a33184e40",
        "cursor": {
          "ref": "119aab9c-8900-451d-9320-b5a67d4c7340",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0d93859d-e20f-4e5f-8beb-386462a871ec"
        },
        "item": {
          "id": "19116de3-97c8-48ae-bdd5-306a33184e40",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6780c89b-d3e1-46f5-9d90-14faa1a0e6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f0d139-1441-40f9-a655-12470da818c5",
        "cursor": {
          "ref": "07ea2af4-c5a0-4b77-8722-9d9aabc6d634",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ea169d9b-6b28-4322-8dc3-b58b27567bc0"
        },
        "item": {
          "id": "e7f0d139-1441-40f9-a655-12470da818c5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b2643ac2-229c-4499-935d-5940f276cc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776e0537-747b-4fdb-bfb2-3252da49011b",
        "cursor": {
          "ref": "47b98eed-2c92-42d8-8dd1-410a4fa2fc3e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fa980101-5e7f-42a5-b994-f321828382a2"
        },
        "item": {
          "id": "776e0537-747b-4fdb-bfb2-3252da49011b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "433c1927-ae33-4c74-9022-547fdad46074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407081df-700d-4669-b546-d61d693df8ce",
        "cursor": {
          "ref": "91263873-3b12-4c36-84c8-c7bbf31ce634",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6fc27161-6c7e-4824-ad4f-bb246674501e"
        },
        "item": {
          "id": "407081df-700d-4669-b546-d61d693df8ce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "62e50169-ee7f-42ff-a9b5-bf86aaec0c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da67895-c3f5-4962-a361-d6a8ca92214c",
        "cursor": {
          "ref": "43a1723d-df04-4072-a08a-d2842dffc592",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ce18081a-143c-4cf1-aabd-2f4ae20c65c6"
        },
        "item": {
          "id": "9da67895-c3f5-4962-a361-d6a8ca92214c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "675623ad-b348-4a1a-a6c2-0bfe2564d949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5907d9-5de9-448f-a3db-cc838ff6c10b",
        "cursor": {
          "ref": "1b8a8d0a-9137-41e2-85ec-f4701c3c6c3f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f7c2ddd5-caa8-4f40-b7b8-9b59576a4de2"
        },
        "item": {
          "id": "fb5907d9-5de9-448f-a3db-cc838ff6c10b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a123a808-9e06-4cce-a6a1-d649ea8e91d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e78180-60ac-4090-8ae4-7104565dcead",
        "cursor": {
          "ref": "93142d4f-489d-43c6-a118-ffc83fd4be2d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "029ca9ea-aac2-4912-ad58-951102b19d6e"
        },
        "item": {
          "id": "90e78180-60ac-4090-8ae4-7104565dcead",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a274b332-e0cd-416b-a50e-04c5faa48d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a40541f-424b-46ef-aa3d-eae1a8567b3e",
        "cursor": {
          "ref": "05787680-ce7b-4ed9-90f0-51c3691c92fa",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b0c3d8da-a9f0-4d96-82c9-f2bc78764672"
        },
        "item": {
          "id": "0a40541f-424b-46ef-aa3d-eae1a8567b3e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a8d93a43-659e-45c6-8674-99eb0b220db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af077a8d-840d-4a61-ab3c-1f8573e475a2",
        "cursor": {
          "ref": "d8989b3d-2b13-4ca9-8d47-9d63744dc698",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "60f3133a-2ad8-4ce6-b9bb-2ae92cec1f95"
        },
        "item": {
          "id": "af077a8d-840d-4a61-ab3c-1f8573e475a2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b4048173-6f9e-4283-9ef6-4de16602afa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb3ec60-5571-46de-a022-e2a4d1075fae",
        "cursor": {
          "ref": "3fe4b298-7fff-4cb2-a16f-10e1e46d7649",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "36e0a220-0f32-47c9-8966-e5d342c5d9c6"
        },
        "item": {
          "id": "3eb3ec60-5571-46de-a022-e2a4d1075fae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7916ff03-3ecb-4ba0-b9ec-4d8550132693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bfd715-bf1d-4725-93fb-e2cda0775b06",
        "cursor": {
          "ref": "495a9939-45f6-40c7-93b1-f2a1c6d92325",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "25106cfc-e9b1-4b29-8b00-6307917915b7"
        },
        "item": {
          "id": "c2bfd715-bf1d-4725-93fb-e2cda0775b06",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "41d4ada0-7707-4995-85f1-ab93d478313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4b245a-f81c-447a-9fda-de0a478db1ae",
        "cursor": {
          "ref": "6ca2e9f7-affc-4d22-a627-cc6e8366cdaa",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8552a450-f026-48a7-b3a3-1b23652aa6ee"
        },
        "item": {
          "id": "0b4b245a-f81c-447a-9fda-de0a478db1ae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8c0a8436-a006-4b92-9c79-910ac067b56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc96febf-5a80-41ce-8674-ec4adb1fc4d7",
        "cursor": {
          "ref": "76aaede8-d85d-44c8-8aea-e615ba5c9924",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "68ea9866-f81b-4967-a918-c7f312efc7a5"
        },
        "item": {
          "id": "fc96febf-5a80-41ce-8674-ec4adb1fc4d7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "971fcf37-6faa-4bd2-815b-6867769462f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ba0ce7-4a5b-474c-a06d-6f94ffc0c81f",
        "cursor": {
          "ref": "32eb76c9-6568-4ae7-901f-c7c74a744889",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7874cee9-6795-44a4-95ea-aac54098b6b1"
        },
        "item": {
          "id": "86ba0ce7-4a5b-474c-a06d-6f94ffc0c81f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fd09f9c3-b19e-4ff6-9d27-a14430e0fdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03eb44a-8a51-4622-8d5d-72f9215d3551",
        "cursor": {
          "ref": "4f7a235d-ee22-4cc6-a573-a38708d62577",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fdc5cfeb-f799-4a43-9c58-b281219e66d9"
        },
        "item": {
          "id": "d03eb44a-8a51-4622-8d5d-72f9215d3551",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6b5c4c92-3d28-434b-b95c-52eaf250d426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249f635f-afdc-48b9-9d1d-741718739f11",
        "cursor": {
          "ref": "dc676980-c1cc-40de-9cf9-385b5d655a49",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a5db7a90-8f91-4e8d-808e-0aca7dda6931"
        },
        "item": {
          "id": "249f635f-afdc-48b9-9d1d-741718739f11",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cd95e8ed-dc30-4967-b624-e30e23e9dc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4acd55e-bc44-46a2-8896-5f6fa380c041",
        "cursor": {
          "ref": "c7ad41bd-f323-45af-ba2d-7ead290aaae1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "06ab61fe-e025-4d90-be0a-de2c8246680c"
        },
        "item": {
          "id": "f4acd55e-bc44-46a2-8896-5f6fa380c041",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "18cd3259-21e4-4d03-a62c-4b4ff22d598e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa0aedf-f807-40be-a805-75aab622cce2",
        "cursor": {
          "ref": "93ac765e-e33f-4c17-baa8-8aa7fc4d1dff",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e789e309-d22b-48eb-9eaa-56e257d0f2a8"
        },
        "item": {
          "id": "6fa0aedf-f807-40be-a805-75aab622cce2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b1fce55e-aea0-4b2a-b97e-b0ff529aa257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc9ce88-4892-43b3-aea0-9e2a4734aa35",
        "cursor": {
          "ref": "c895dd9c-b08a-447b-a3d3-2cf3cf96f966",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f61175a6-8a15-4072-af6c-5a6bfe599783"
        },
        "item": {
          "id": "8bc9ce88-4892-43b3-aea0-9e2a4734aa35",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "401c748d-ac12-45d3-99f1-3a43a60bd587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a66e6-3a3a-4c14-8e24-476199d6c1e4",
        "cursor": {
          "ref": "52de4740-9025-467b-a938-34781dc4e7c2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a63cd190-f527-43d7-b30d-82f9b93af01f"
        },
        "item": {
          "id": "846a66e6-3a3a-4c14-8e24-476199d6c1e4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ee45f3fd-9208-4591-92cf-16fb9d556806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532a9d2b-88d1-4627-b197-a2d83bf83fe0",
        "cursor": {
          "ref": "68377117-5f96-44ec-b41a-7402a9d2297a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "60a6add0-9c4e-4b34-97e7-5314c058f8a8"
        },
        "item": {
          "id": "532a9d2b-88d1-4627-b197-a2d83bf83fe0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "06b62108-7d24-4831-becf-850367b8b18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5417cd-4cc3-46dc-8e40-7c0922599b40",
        "cursor": {
          "ref": "f9508f26-0578-43df-a85c-91e7b30ff0ec",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e42a7c88-8a7d-454a-8f9b-6b011975c220"
        },
        "item": {
          "id": "9e5417cd-4cc3-46dc-8e40-7c0922599b40",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "941619ed-943f-4eb1-94ac-a1b572e0748a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c400ba-6dd0-4168-a585-1fe7d610c096",
        "cursor": {
          "ref": "7a22fad4-b8f4-4c5f-b277-685a686dea80",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "91b45807-9e40-4c3a-9d5e-898d7575da90"
        },
        "item": {
          "id": "d7c400ba-6dd0-4168-a585-1fe7d610c096",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "340b0a8c-7a94-4eca-8421-29523b001b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1631d419-7772-4306-b4f7-8f7914f8a0ca",
        "cursor": {
          "ref": "2f3a7099-1b77-4137-a20f-41b8ae4e5799",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d9fd2c41-a987-4639-baeb-8a128ede01f0"
        },
        "item": {
          "id": "1631d419-7772-4306-b4f7-8f7914f8a0ca",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "82c6e3e6-66a5-48e7-acbb-47eaac4c1fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a702d088-0642-4c3a-8715-96e302218e80",
        "cursor": {
          "ref": "16d5ff76-7287-43ea-8635-0b394c82df81",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7b2b9f1c-983a-4f20-b911-0232676cbc96"
        },
        "item": {
          "id": "a702d088-0642-4c3a-8715-96e302218e80",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "78d025f9-2dae-4dfa-8306-248c5882db23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37de21a8-1864-4619-87ce-bf88894cb16d",
        "cursor": {
          "ref": "97121c13-4420-4919-a8f9-d8178f7a3ca7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6957cc0d-432e-4cc1-ae11-36fe27e94590"
        },
        "item": {
          "id": "37de21a8-1864-4619-87ce-bf88894cb16d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4ea38d8d-9312-4ada-8b4d-069acc41f9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0d873b-6318-4443-af11-3260b0a43574",
        "cursor": {
          "ref": "daa13a31-0065-458c-aebd-2b958708c1e1",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b043e93d-0ca2-45da-8e9d-8832f91592f9"
        },
        "item": {
          "id": "2d0d873b-6318-4443-af11-3260b0a43574",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "856147c6-51a9-4793-93bd-c64c5d82a8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dba5e88-3047-4978-9a80-90bb41573e1b",
        "cursor": {
          "ref": "e137a560-36f5-4774-a9bb-e376718d0118",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02102ad2-6cb1-4bc2-95b3-fb1a546cbd07"
        },
        "item": {
          "id": "6dba5e88-3047-4978-9a80-90bb41573e1b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e363c588-e79d-4683-877e-bbfdeb5e9ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6108a7bd-8225-4bdc-b775-e3a87348ba86",
        "cursor": {
          "ref": "92295d0d-8c0c-41fd-aa61-986e77340c9c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6e42ba71-5186-4943-b02a-6effab950a94"
        },
        "item": {
          "id": "6108a7bd-8225-4bdc-b775-e3a87348ba86",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0b2c5f50-89b0-4606-a5f6-fac58305cad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd75f02c-cffb-44e3-9026-538a192b87fa",
        "cursor": {
          "ref": "41a8452a-37f6-404e-bb1a-25c8c88039ce",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d723dd9e-e620-4d83-a8e4-87f50e842a9f"
        },
        "item": {
          "id": "dd75f02c-cffb-44e3-9026-538a192b87fa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a5129df-5184-44b9-bdf2-597151a34d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2346d5-d781-4e9f-b545-aebcfd4c99f8",
        "cursor": {
          "ref": "45250e95-5d7b-438f-89ac-02221d910ab5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8268bce2-4db0-4a71-9d0e-7cf605291841"
        },
        "item": {
          "id": "8a2346d5-d781-4e9f-b545-aebcfd4c99f8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "839804a1-10cd-4416-8812-c1e74486d143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b44ba4-c932-4fe6-9865-759f690dfecb",
        "cursor": {
          "ref": "9e8f575b-dab5-4451-9f0c-b532b27449d8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9f420c5d-59ed-4f35-95d6-a97cb2614edb"
        },
        "item": {
          "id": "56b44ba4-c932-4fe6-9865-759f690dfecb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ae8720e7-77ca-44a6-985c-df6b0c5656b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de59d4ac-7bd1-4c9f-b849-ccfa02826a52",
        "cursor": {
          "ref": "3d1dcf62-72f9-45d3-825e-cf3eca6b1050",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f192267f-d33e-4426-93ed-126efbc93539"
        },
        "item": {
          "id": "de59d4ac-7bd1-4c9f-b849-ccfa02826a52",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a30f4590-7c22-4b4d-bcc0-fe347a961e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e9829c-984b-4a40-85c3-4b5eb9598bf3",
        "cursor": {
          "ref": "6ce71d99-8682-4a52-bf4e-2791ad7430f0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "22477a3a-b5de-4550-adb2-5300f0901d23"
        },
        "item": {
          "id": "a8e9829c-984b-4a40-85c3-4b5eb9598bf3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0bb68d99-7585-4371-92a2-29dba146209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada4a5f3-8fdb-4073-b4a7-6798df48a283",
        "cursor": {
          "ref": "265f5799-c603-40c3-aa01-2136d4d070b5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e6756cb8-06ac-4f47-98f9-be3b3947b964"
        },
        "item": {
          "id": "ada4a5f3-8fdb-4073-b4a7-6798df48a283",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "653dc336-382d-4c2c-a52e-18eef2d4fda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f1e6f8-acd2-4291-86e7-b2350e126d0d",
        "cursor": {
          "ref": "f32576e2-eadc-43f5-a27b-f8320010d54d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b3dceb5-d1ce-4f57-a1f8-65e4839961e3"
        },
        "item": {
          "id": "91f1e6f8-acd2-4291-86e7-b2350e126d0d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e877dd5d-b4ae-49e1-9409-0b021c42b20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3bc6cb-6676-416e-9263-b1faabe22447",
        "cursor": {
          "ref": "8a9bc7d5-a288-4a12-814b-5244c8816a08",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0d74b11c-4b7b-43ed-8e12-12a2452136e7"
        },
        "item": {
          "id": "1b3bc6cb-6676-416e-9263-b1faabe22447",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "859c53b3-6a79-4d68-8307-9206bd4f65d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac46471e-6637-4680-a117-ad4fd6a4c888",
        "cursor": {
          "ref": "28d0df84-3bf7-4ad9-a9d6-f83a3a688aa9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e130e164-42fe-4e72-81f0-877c52302ec7"
        },
        "item": {
          "id": "ac46471e-6637-4680-a117-ad4fd6a4c888",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "236d5076-cc49-4f4c-bb46-27d9241259f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa52f932-803b-44c8-962b-eef1b0506888",
        "cursor": {
          "ref": "3ef15b18-0f11-4e91-bca7-6cd0d81428e3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7ddb2219-4e2c-4844-9eab-bf4c9340489e"
        },
        "item": {
          "id": "fa52f932-803b-44c8-962b-eef1b0506888",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f58d25ab-0c39-451f-a99e-31d4bba46a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc3c604-5f2c-430c-b78c-4242b627a54d",
        "cursor": {
          "ref": "7bb2a74d-cd49-42bf-8dd7-c97fcdf38532",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d47d7eda-91cc-4f0d-a398-360e5770fa57"
        },
        "item": {
          "id": "1dc3c604-5f2c-430c-b78c-4242b627a54d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "67bc3537-086d-494e-bc2f-f32bc73cefff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c9ec0b-fb5b-4618-8c3c-9d63ed9b6641",
        "cursor": {
          "ref": "e18365f9-cd57-49d7-9535-2f7f42e47a1f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e9afa658-8a5c-4934-bf7f-4f76b499c1c0"
        },
        "item": {
          "id": "30c9ec0b-fb5b-4618-8c3c-9d63ed9b6641",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "816d603b-d420-469f-9755-6220cf2000b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c2dff5-96c6-40a6-adf4-5177ad52fea3",
        "cursor": {
          "ref": "420fb324-b316-4269-9470-42634db233eb",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0cdc1e0e-1a44-4b29-9328-d4423f76f625"
        },
        "item": {
          "id": "06c2dff5-96c6-40a6-adf4-5177ad52fea3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "397ab410-bdb2-4811-b05f-88f999cdac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b43680-faba-4eca-b560-7bbf08dff20c",
        "cursor": {
          "ref": "78aac290-d25f-4369-ab22-73b4fd5fca26",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "731d1564-e0e1-4216-89b7-21f0de0c61a4"
        },
        "item": {
          "id": "c5b43680-faba-4eca-b560-7bbf08dff20c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9879be49-fe84-4816-a7f0-d0e7f35d0244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4824e0-e2a8-4844-a3fd-25929e52f740",
        "cursor": {
          "ref": "01afe691-0173-49ce-9f46-442ab4ca1472",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "60af862c-9715-4942-9e5a-f89ec0ba2a03"
        },
        "item": {
          "id": "cf4824e0-e2a8-4844-a3fd-25929e52f740",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "77ffc7a9-1c47-4c5c-945f-dff19555dd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8f2f2f-b4ef-49cc-8b33-4a9be6125799",
        "cursor": {
          "ref": "7ef26ced-669c-441e-b742-78965e5412b8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c7af76a9-29ca-43be-994a-70f37a1b7eb9"
        },
        "item": {
          "id": "6a8f2f2f-b4ef-49cc-8b33-4a9be6125799",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "625a4a97-9ebd-409e-aab4-5cdd421d7c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4f417b-33a2-47a8-a6b8-7bb19f0b4a39",
        "cursor": {
          "ref": "f2c91ded-d578-4c0b-9f8f-81dd9d32d733",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9938a167-6a34-479b-9350-0cbfc82306ff"
        },
        "item": {
          "id": "2a4f417b-33a2-47a8-a6b8-7bb19f0b4a39",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "27d17e45-b6be-4b58-a376-48ea32f5da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb73e3a-6ea7-4b2a-b292-f15b15055b08",
        "cursor": {
          "ref": "ca1372a7-4a76-44b7-a845-9c0743ecbca9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3ef9e1e4-6e42-421c-b239-411c1f4f880b"
        },
        "item": {
          "id": "ebb73e3a-6ea7-4b2a-b292-f15b15055b08",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a88d5036-109a-49b8-925f-6cc965b4423e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bed504-305c-4370-bad2-05e9f8e357b2",
        "cursor": {
          "ref": "abefffd1-aaea-4dc6-8ce6-f1130310613e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bd7e523-d7ab-4050-b9be-d0e78d39997b"
        },
        "item": {
          "id": "a6bed504-305c-4370-bad2-05e9f8e357b2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "523d486c-e77d-41e5-a71c-cf779bab7f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ec1c4b-b4aa-4ea0-a16d-cb43b1391b14",
        "cursor": {
          "ref": "320bf052-f75a-4d89-99e7-fd98aab79e42",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ab0e3455-82b7-47ab-ba27-3766be84528c"
        },
        "item": {
          "id": "27ec1c4b-b4aa-4ea0-a16d-cb43b1391b14",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "561afb2f-777d-4e8a-8784-4a757cdb567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4b27fc-7525-4684-9ce9-0fe3ebe42de7",
        "cursor": {
          "ref": "12e19105-afcc-4346-b673-010bf4780946",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a8b6e7e3-c267-4e2c-8e34-15a9aa7e83ba"
        },
        "item": {
          "id": "8a4b27fc-7525-4684-9ce9-0fe3ebe42de7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e8bd66d2-df36-4831-bb73-9b42e3baa5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f96b08-7918-4d9c-bbe9-513bde70aeac",
        "cursor": {
          "ref": "0150568b-d185-4a1a-9e4d-ed4304e2d6d4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fba41f3f-066e-4bb7-8bf2-2f42d8e4669a"
        },
        "item": {
          "id": "61f96b08-7918-4d9c-bbe9-513bde70aeac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b8977844-e0ee-405a-ae5c-3a35501ab819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5933268-12e7-43fc-98aa-9c2c2a90573b",
        "cursor": {
          "ref": "8ec9de33-9356-49c0-b201-08d0fd61b9dc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e40ac236-73f1-4d0c-8e7d-59cbfc3a75ad"
        },
        "item": {
          "id": "d5933268-12e7-43fc-98aa-9c2c2a90573b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "779679ef-3d84-4cfc-8c62-fbd53d6f22e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ca9690-24c0-4e03-84ef-66e4105c8e12",
        "cursor": {
          "ref": "1659ba0e-ccde-4a1e-bce4-67cc2b4832bd",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1a27a0c4-31a3-4bf8-9d71-45ec9da20e87"
        },
        "item": {
          "id": "46ca9690-24c0-4e03-84ef-66e4105c8e12",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3292d017-6bb7-4fb4-b6f5-475c3f630e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0329f5-43bf-4929-aaf9-c7ee7f720310",
        "cursor": {
          "ref": "9431d98b-d0a0-477d-b8d2-c428055747b5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b1394dc4-9f13-4b08-aab7-b289f1367a37"
        },
        "item": {
          "id": "cd0329f5-43bf-4929-aaf9-c7ee7f720310",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ec6e84ff-190d-489d-82df-e09a9fee8858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a71f73-74fb-4638-9934-7c5e4de8df85",
        "cursor": {
          "ref": "771c3330-40ef-4172-ad1b-2ea2d590e3d9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b745b21-59da-4353-a6bd-c4423efc180e"
        },
        "item": {
          "id": "d7a71f73-74fb-4638-9934-7c5e4de8df85",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3a0951ff-3cc9-4b08-8032-de73644b5a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d131255d-4dde-45dc-9bbd-c19f872d566d",
        "cursor": {
          "ref": "2c6aaec8-8d3b-41b4-a51d-75657dea1b6c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "960a6248-ffdf-4817-9ddf-c363076eba8e"
        },
        "item": {
          "id": "d131255d-4dde-45dc-9bbd-c19f872d566d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7eaad2ce-8ac3-495a-81cd-53feb15fcc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a508b2-f36f-44e4-94c2-909f641f669f",
        "cursor": {
          "ref": "fb4e8949-b8bb-41e4-bcf8-cadb21f7497f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "500e0580-f7db-419b-8132-8b0d6b947b59"
        },
        "item": {
          "id": "a6a508b2-f36f-44e4-94c2-909f641f669f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0d3f3cf0-902c-4ddb-9bec-90f340b7dc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1ca1b2-a017-4fd1-a973-2f92bc45374e",
        "cursor": {
          "ref": "2da6678c-85eb-4cff-a20e-4e81daf08b85",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b340b0e1-3709-46bb-928d-f0a1dbb12cec"
        },
        "item": {
          "id": "8a1ca1b2-a017-4fd1-a973-2f92bc45374e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "315f8656-bc05-4c80-a9d9-c166a0946784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab9bbcb-27a4-4297-9c17-8db122d33a94",
        "cursor": {
          "ref": "f2671f57-2c52-44d9-894d-8798edd40054",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "033c3704-afcb-4dac-a88f-a3c8e03b6f4b"
        },
        "item": {
          "id": "2ab9bbcb-27a4-4297-9c17-8db122d33a94",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "287a4b1d-e892-467a-87ba-8e935b265d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5271f08f-dd1e-4682-a577-a29c9d08582a",
        "cursor": {
          "ref": "15590fcd-e6a4-4aac-a3bb-9adda85e58e8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b4a8126a-4860-467c-8682-4e8028d36c38"
        },
        "item": {
          "id": "5271f08f-dd1e-4682-a577-a29c9d08582a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "45bbf80b-3a55-4b90-8af6-21912f09ea6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a967321-ef85-4bb1-9721-68559172bdbb",
        "cursor": {
          "ref": "b06207fd-d038-486d-af00-789d6fcbb64e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a92334b5-08fd-43bf-a90a-b65ac1e6df6d"
        },
        "item": {
          "id": "0a967321-ef85-4bb1-9721-68559172bdbb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6335a95c-45aa-4ac2-8c35-f67c67e8bd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8462c5c0-7bfd-44cf-aac2-f5f9661f6ba7",
        "cursor": {
          "ref": "6a9f5131-fdb2-4568-8195-552752dc52a9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "59d9a3f5-fc50-44eb-ac65-c09e8127d4e9"
        },
        "item": {
          "id": "8462c5c0-7bfd-44cf-aac2-f5f9661f6ba7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ba0fc655-e677-47c1-8621-8326767feddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7f8a85-572c-4324-bdb2-13375807cca2",
        "cursor": {
          "ref": "6cd11d4c-30ce-4770-aaa6-cd8af6490bf8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bc6f303f-a2f2-4e1b-8149-ee8115f6fff9"
        },
        "item": {
          "id": "9d7f8a85-572c-4324-bdb2-13375807cca2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "93cfbf7c-023a-455b-b19e-a331d50b577d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ba6a68-0655-4216-9738-3c19974b75d6",
        "cursor": {
          "ref": "ab585c15-fd97-4d9a-8d1c-7f5cdb8bf065",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "feded5d5-5a97-45b1-93bb-a1e7b7d81775"
        },
        "item": {
          "id": "55ba6a68-0655-4216-9738-3c19974b75d6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d099b37e-22c7-46f1-90cd-083a2eab5262",
          "status": "OK",
          "code": 200,
          "responseTime": 185,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1a025e-5510-49cc-8065-73efcb5bdcbd",
        "cursor": {
          "ref": "33346213-6a21-4574-bf95-2e65aae613a9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ab1f1daa-3793-4108-a890-1c9958161eb9"
        },
        "item": {
          "id": "9f1a025e-5510-49cc-8065-73efcb5bdcbd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b9511e91-d29a-4d61-9ef0-a9d2f739a245",
          "status": "OK",
          "code": 200,
          "responseTime": 4828,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "210893b1-5606-49bb-b6f7-ef5638522558",
        "cursor": {
          "ref": "95511113-b19a-44a0-a5e2-b3a27fcaa4a8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d5a97278-6403-4dbb-8201-02a1dedc22a3"
        },
        "item": {
          "id": "210893b1-5606-49bb-b6f7-ef5638522558",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3137a9d6-6785-4230-921e-0aec8f646bab",
          "status": "OK",
          "code": 200,
          "responseTime": 3682,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dbe613-e6e5-47e7-9b77-4dda227e1767",
        "cursor": {
          "ref": "e19bb131-58c4-46d1-8967-8fcfb9277472",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "74e9ce5d-8aa8-4022-85ed-04f5de858adf"
        },
        "item": {
          "id": "60dbe613-e6e5-47e7-9b77-4dda227e1767",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "517cf8ea-2b18-4ca3-87a6-f62f46d392dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dbe613-e6e5-47e7-9b77-4dda227e1767",
        "cursor": {
          "ref": "e19bb131-58c4-46d1-8967-8fcfb9277472",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "74e9ce5d-8aa8-4022-85ed-04f5de858adf"
        },
        "item": {
          "id": "60dbe613-e6e5-47e7-9b77-4dda227e1767",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "517cf8ea-2b18-4ca3-87a6-f62f46d392dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540a9003-aa26-4327-b857-18a83dc563ab",
        "cursor": {
          "ref": "0b64a1b7-d419-48db-82cd-e24de119eb24",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4bcb035a-fc03-4303-b94a-98d48d885f68"
        },
        "item": {
          "id": "540a9003-aa26-4327-b857-18a83dc563ab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4ef11ed8-cebc-4c5c-ab74-7179b782481a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525ca9a7-217d-47fb-8a43-97074d739f59",
        "cursor": {
          "ref": "dac36cae-a7f1-446c-bea4-e2e95fb39b9f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e9a4ae1b-3eaa-428c-a3e6-eae75b9b21f4"
        },
        "item": {
          "id": "525ca9a7-217d-47fb-8a43-97074d739f59",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2ebb5bc9-f1a3-4fce-9ea3-1427a4e00d18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}