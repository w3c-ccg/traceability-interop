{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf084775-7080-4e45-ab52-52ece52eadde",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ae927e6c-c1d8-46e9-9b4e-2d7549abc1ad",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5eab815c-c097-4e39-a941-18c6a66ec1d4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9b05c45-159d-4506-a0a7-ce3d5f3a9a4d"
                }
              }
            ]
          },
          {
            "id": "94246a4c-cbbb-4c1b-b780-4fac02fe71e9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35ccfef4-fbc9-4a25-887c-ed6775dfe9c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4cd31d90-c9bb-4a1e-9425-0f8f4267d3ce"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9cce11ae-c7a9-4ad8-a576-13316d21e764",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2f616c18-38c1-4044-b7e4-75c1051fb6cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2806398-6300-4ddd-bf04-c309d3a0ae2b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96beb1a7-1c74-4659-940a-1e1fbf6cc417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd2f5ca3-3775-472b-a325-abdc9ded271e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25f35703-297c-41e9-a194-0719d66624e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c01b9294-ecb1-4649-a131-01741eff781f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45ec9a30-af37-4b1a-9f2f-1fd25a9a1da4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b978a054-9d36-4a74-bf0f-96c5ee3824fb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d71cd7f-1396-461b-989f-4680c1c86ab0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "20306500-d3fe-468f-9d6b-9ebf8c611891"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b757fe19-ed44-4553-8d5f-9ec24bda13f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21b5df81-f8aa-48da-ba4d-44bd3345388a"
            }
          }
        ]
      },
      {
        "id": "59fa8f1e-6618-4e2c-91ba-0b4d42e2a91e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6c00716c-579b-426d-b86a-9406f5c0a075",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b393c281-b6a2-4b2b-9267-7cb2dabe5614",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a14e170e-294c-4e30-aac8-53e8fa5c45d1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a533dabe-5e55-42c2-9dc4-df96529b06e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e7ef54c-0009-4c4c-bfc3-3e2f2d89a1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247e3911-7230-4085-a10b-d9af0ed84ea0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16b1bfe-5596-46ea-914d-b6eb6b4e6b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe570e3e-25ec-4d63-bf21-4f464df872ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d15d405-f093-4d61-9ed6-0ceb10833f4a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019f57d3-707e-472e-a195-3fa7df82f536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17426972-3ecb-475e-851a-da1655e3a6ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1447f3ac-36ac-41be-b2a5-07a9e11e5f6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "128da71c-c55b-444d-9e1e-9b8527cda002",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7b2db6-bd9d-4845-a80e-c1d94d3ccbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdf7dc16-4e99-4e29-b4f7-f25687944440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebfee61-bab6-4a7c-aaf6-22114be1c9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9296ac-0a8c-4338-b036-ae40f8744677"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6144bb2-2afa-447f-8a42-10fa96d9cb81",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a693da6d-d771-422f-b2b9-af1e52f0c231",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d57c41c-f5f6-4e21-9b9f-8eb437c5cfb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b60d6bc2-a0c5-4171-ae40-e37d99ffd08f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f9216ee-18bf-4d34-bb34-3117cf065108",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "32d1940d-99cf-4e48-8914-358b48e2dd31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cf3fc02-db0b-43ef-9fcc-72c2731a0cd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23540580-23e1-4bf7-bb6f-968e238f4186"
            }
          }
        ]
      },
      {
        "id": "9fc31a1f-d361-4810-9951-b5ceaf7af933",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6d62e204-b3f6-47e2-af46-08e28a1fe40b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98e24842-0a09-4cc4-a23c-e32953d45286",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fd3ad388-e778-402d-9dbf-c03c1dfe622d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e510e2-c5bb-487d-8466-0f8d95a969f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fcb6ce-7fa9-43e1-b2a0-563a341b2cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf75b59-fc49-4c68-940a-c26e3589cd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "938fe790-5ee3-44fd-94fd-c0b3e39e8e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f5f27-0017-425b-a6ee-ebd01efda466",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276252e4-8b92-4493-b682-c07a2e30e142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac9a058-2b9f-4686-bdc7-a455b02e67c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33192c0b-b362-4571-93e5-af0923f48fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f51fe31d-38b2-4604-820b-90a62b475523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4b9a0c-bb08-47c7-b315-d72eae3bb08a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b07d49e-d051-4551-92a1-a269dc9fcc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45979e8-2db0-46f5-80e7-d4daf23e9b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110e6d9f-bf19-4966-ba23-d779ba5c0845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e8fc2f-f077-44f9-bbee-04aa6919d07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffc35b8-7531-405b-8860-dd82b709d402",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ea83af-0aaf-47dc-8b4c-49843fa29c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cd2cab-7396-4382-84f8-a85f38340704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c37a32-6f54-4ada-8f36-ced89b889c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5d624ed-94b9-4c32-8424-637803c0d7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02648cb9-a89b-4995-a5c6-f01a7699a16b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644dc189-c17e-4d2b-a6aa-1abde4cc6c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48bcb76-3b83-4223-8411-816970260b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1591bb9-d073-4434-bf9a-360132dad7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7fb5bd3-5842-4811-b367-b8b09aa16300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ba3d8f-8edb-446c-a1e1-a4bfc023c3a9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463b02f5-59d2-48b5-b783-1b480a54d384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f47847-a9a5-4198-8b04-25ed279b462f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32049b2-92dc-4c2c-9ae6-87da98b5962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa4d9f5-f45b-42df-8b09-76d7ca37b711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c2cdcb-f3a3-4c9d-864d-63d5adc76e98",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b9ba6e-7ac3-4572-893b-e7aa41234612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5849878-0441-4c44-aadb-b02206b708cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c8bb90-a673-496b-a84d-b3b4e1041e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "750d46f8-d4fe-4d59-b023-a7b3d43c5e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba52a54-7263-41e1-a947-b8639a17cdf6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4e14db-b12c-4120-96cc-f4b3175331be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce65a1d9-35cb-4f40-9973-d2378ab04cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f59f4e-456f-4611-9003-df9db1668ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6842f0c-ecb2-41ec-8f17-9d5835452c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa0498a-c7e6-48d9-87b2-591d97eb8f41",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcee4555-1d88-46ae-8150-7592568be216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95117aa9-f9ef-4316-af84-d59cc52a0c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d101f61-292a-4b86-aa41-a5c299bfbf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26a98e05-2f22-44d9-8648-26b29344da6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b2a374-c9ad-4d20-a09b-13bbe87e9823",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f52ff4-1743-4d91-9184-3e1c5ef9f2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c241b35-36ee-47ae-89e3-3a673d62cdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a795b96b-b463-4baf-88f2-fc7ece98fae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33a27dc4-9939-4a3b-9d6d-f58ba8b8a301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822eb719-8045-41a5-926e-edb2506ecde4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3f7484-ecc0-48e8-8ac6-96aaed4ed2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9def6d7-b11c-4bc1-a882-c3b393742306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbbb665-f4b9-403e-83c8-032a0ee511ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22a9a311-577b-458e-9b27-acf277190d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278520d5-5904-4693-b509-782489f729de",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e2ea3d-8241-4c8a-a551-62100e30c57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd6f49b-d1de-4d0e-a699-fbf6be467dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804f40e7-f66d-433f-8ce7-217dc7608eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d62232ef-7316-4f6c-a9ae-85b489f4198f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135b70bc-8cf2-48db-9003-5a016899801c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71032659-4511-4b89-b9a7-e9c9aad3525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9707eb4-1a98-4a8e-b63b-c9a1caa1dcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b51865-9669-407e-a062-db188bc5e49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6b48f57-96d3-4ed2-8f99-bb2f3df23c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3768694-39c5-47ce-a036-9ee542f3cf48",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8367731c-c328-4b55-a715-6ba649fe570d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39913ef-b3ba-4528-8d8c-195029db3b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383240ab-1b8d-4ca6-93ab-8e84a60086d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddf7c43b-25a8-40ac-9bd8-9bf44f605f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4f075c-9f4b-4b72-a27e-5ce124dd06be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db5fb0a-2271-4b6a-b59d-2be91dab5111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5f7dfa-7061-4049-953c-122a644a1c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d766131-aaf3-45e2-82b6-0e6141ad8c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e6e8953-7c7f-49b3-8984-01b47189e95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31333d5-20d1-4190-9617-09448dc155f7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d24bb43-5718-40f1-be4e-a0572537b458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a24627-88de-4641-aadb-1f41d8f70c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097155ed-ea40-4951-8abb-57a8ae0dbf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c23faac8-dd4c-49de-bb6a-087179cf6d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1a3233-375c-48a4-90ae-2f163d449308",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcf084b-b854-4a06-b592-0ea92e7e2354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71f1b18-41a4-4083-b38f-23f152012555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e707ef-dc50-4bf3-a9e4-9c90ce08c3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "580a3fa6-ff06-436e-b94d-5202ac101d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f69a27-1965-458a-8de8-f32123789a15",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0654474d-6dd3-4619-b931-81dcc56c5cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016c4dc2-36b9-4848-8f89-d6c62e4124ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f15c439-4b16-4577-9383-798d09a7f710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c71a709-cee9-4e49-bd51-4ef620d5b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d5afab-0916-4b23-bfdc-a560986a4f13",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f296be0f-0c3c-49cb-ad5f-d4200c6d7185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d8ae74-0698-4859-9b02-6d2a0fa9b7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971144ed-6f8c-47cf-885b-b9b258f37d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9935642-09bd-4a32-85f5-68e0f314c26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46411bc-1f31-4102-a1fb-36969d47df18",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092380f8-437c-4870-808d-33e2238c124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49782742-f0d6-43c8-bb4c-d58a24c2714d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d74916-de0d-4d0b-b916-05e824abda10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c63f65-7035-474a-8558-296a3caf226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7aaa86-d071-4c24-bfa4-92df6a65e8df",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca62e66a-805a-4e0b-8088-80ef01e99ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c26bfab-f2d8-401a-a375-3f8e4d794879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7ebae3-9168-41b4-a13c-dd2d294c830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3df22b7-1400-4be8-90d2-3f4c7ef5663a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72010e8a-53b4-48da-ab81-102d814391fa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69035798-4218-468c-967c-d340430737e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706a253a-eb9a-479f-b6bb-5bf8fa5736d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8974545-9335-407c-b71e-ee2c05fa5b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a76161ca-f237-49f6-8ef8-581232ff00e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e68d27-a1fd-4733-8d2e-ca01f0b691e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62ee505-3f07-46ce-a1e5-4fedeb103d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8061b612-91c4-4123-aec9-573a410b079e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b36385-d836-4120-aacd-f3d1182ac513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b500975-404f-46a4-9c0a-81e32e0c5757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6b9411-e282-4fb7-8cc4-b7465407ae42",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09088276-0051-4149-91e3-b2ee9418d392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68859646-8543-41ce-8be6-ee1c9a98ef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feadad48-3753-4eeb-873b-5b71ee44ff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bab3fd-4af5-40ac-a7b7-d93d661291c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7071926d-403d-45cc-b917-8420bb624e0f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa317514-380f-42e8-8f02-0af2b9bf53f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a9d4f1-488c-4929-b6f3-8976a4b4718d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba79882-0539-4dcc-b116-a986be7bfba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8377eea-577e-4d25-ab20-c55ce8f4e140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112f4991-f80c-40d9-a7c9-36b701983f44",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59467f7-cec0-47c5-8bcf-6ea4f8bca150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7768ad74-ecce-4db4-99fd-ea9e112c2da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5926db0-c5f4-4d19-89fa-9346f7f2076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ea0d48-baf7-4bf0-bf16-cd37bc0d6a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d5c226-f259-4790-a2f8-f7e615e09cb2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b1ad3-52d0-4dbd-93c0-03c20c14aa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9b496f-aecf-4473-ac8f-ed82751a471f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f95cc1c-e0ff-4599-a8f7-90b3c33ec011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e344c6-1fd9-44c5-9309-ef264312cd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e790ab6-a246-48c9-b7ad-dcf3b43c6164",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1db01a-18fd-423e-853d-e655e5be9dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c835a5-bab9-4b56-bdde-02be9cf052a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa594f29-788d-4b37-8fd1-ba385d357b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cccb0c-2577-43fe-bf67-99147bb0c145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8e7a55-b6db-4dfe-94cc-314113d2495f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a29d0ce-496f-4b90-816d-70fbe87dce0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11545840-7f56-4765-ba5e-cf3f5e4c9e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdb1319-c93a-4f77-8bc1-84333198a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9860b0-b0be-4813-8efd-3e940bbd75ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed9d575-3750-48e9-8a53-10fac578a2ee",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43d2bb8-c727-41aa-b270-92b296600a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4a5926-ace1-45e5-8732-9d564d202192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bc7381-1d6a-4ae2-81dd-a20e85dff7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "85922c2d-4cbd-4f92-a9cf-6c276cfbd513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b561ce33-6470-400c-be27-691a45f57b6f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523fb6bd-6a6c-4d48-ad6f-df52c7cd4d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5488266c-e9de-4674-93f4-dbaa547c91a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f628ed-988c-4099-b1f1-d10cce24e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b23d93-2ac4-4916-8b53-56e6619d64a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c150b4f-e618-4d34-b5c6-9eb47faba2b2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3b5b71-bb3f-43dc-a01a-6b036b0ff808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467001d9-b883-43ac-82e4-56656abc1459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c32b3e-6531-4535-adc6-f0058215334f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f803295-4e5c-4369-9984-37bb91575de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f3109f-9868-4805-8bc5-4df612ace9ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10319ea-feb6-450e-9893-04d751ecffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688b0397-b5c5-49cd-8555-13f0502f6386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98f34b8-5c37-4010-8b2b-8533f3437cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "121c4e3d-a68b-4e8e-b338-ee224d7dd954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe0c3a9-7c49-41c4-8337-b13510763ccf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f7c83e-7cc8-48e6-8eae-ca2a2e9f4c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6ed61c-f5bd-43f3-9fed-13d564e1bc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b1e9b0-c35b-4c14-9cf5-06d1fd244fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b165e3fb-beb5-4d10-af64-2629be2f27cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19821e65-82f3-4f6f-96e1-21f43cb66934",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847e64d5-74e1-4c10-9f76-be7be3b85b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aec2f77-2477-4db4-90c4-a6b61b78d706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ca120e-0a8b-4ad0-99f0-73d7e1a26779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f3203015-7354-4a2c-94a6-87c4b2426dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f979b1e-67b1-4db0-8199-17ce0ed57dd3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10df0d29-3b12-4719-b766-dc184fb7524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcf74903-e4dc-4102-8524-bbbd996cd5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0ced4b-380d-4db1-9400-d2b162d86490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d4d112-5ca6-4302-8459-5e30776b02e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9249b2-6a3c-4ca8-9a0a-1ae5df2812b5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af533238-9cb5-426a-a6db-1c8cddf3c8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59619c3-b5af-4a0c-8e88-48fcadfa8968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd79d9d-e2ec-43e1-b7ff-ca0540d03cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf579f1-0cf3-47b2-9dd8-eb4fe113832a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c059f3c1-d8bf-4206-80c4-9ee0a5844440",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c481a7e8-5327-4797-8f10-2db4e3de5ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818038e7-f613-4e91-8510-2e1248cbbdce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee448d6-b83f-4455-b290-e10fbf5132eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97c4a364-ca92-4e39-a59a-5c35b736f222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9392408-db0e-41ab-9dcd-65cfd73b280b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea3195e-9e65-4689-baa5-8d48a6825af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5d5fa8-f821-4bd5-807a-c3c1bd83479b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee4accc-f429-4fe6-96a9-3a79b6caaeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1edc034-ae81-48cf-a217-9ac3c817fa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962d4fc5-a7ae-4d52-8a87-ee1161f99468",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451bc097-3ee0-48af-9a07-1b7a546f802e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c538abf1-4971-4be9-af22-bd9dcb9b07d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27176140-d829-495a-993e-f3e31935660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1d2dc7-7e6f-4cd8-809e-bc837e80e0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63912382-75f3-4aee-903b-832e0e3e63aa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee8ce6e-760d-4b66-9612-3e7a161b215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea87c842-199d-4b91-811e-73c83b7e8622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d19430c-233a-4c01-9d52-3faa8b94f42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8995365f-f0c0-412b-bdc7-604c00f65cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdf2d94-706c-46bf-a124-4a56bc2d9a31",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb540d9-e1bf-4ba5-8581-91526490aa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a877787b-5b7f-462c-95e4-956c1ec1da59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52759fe-9745-447b-bd21-fb01c81b349a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "67686fe7-fc96-42be-a974-97c643676235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fb2010-9e1d-4ccc-a317-d6ca4795db53",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0dda78-b014-4246-b59b-181469295bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d129bd-723c-4fb4-9e40-b96c55cd99d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae32eca-3003-4440-b8b6-33a80ccad1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2b52c6-707c-4059-b499-ccde1ca773c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45ddc5a-f919-4490-90b7-12251a8b8e13",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6caefec-1374-49b5-87ab-a05d5540c0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c82040-0db5-49df-b08f-d4434942d31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f8b6ee-efd6-4aa6-b5cc-0fe1ec29fcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ba47b7-367b-4b6d-956e-c5000f71880c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d00b823-ebab-485f-8322-43e980a39325",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf53bd33-fb87-4464-aa73-e3d887a060ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc1e57a-b045-41aa-b9e7-00e7ed1d79ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d28b96-dc60-45d7-a481-61e19bd40e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea484430-efc6-432b-8ac4-4f69c99be504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d062fe08-3b52-452e-b0ba-ebf0e2da7f59",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7774ba-f464-4de6-9193-2013e2b8d98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a40ec1-9943-4a8f-8184-e6c41e171401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7b12b8-253c-4bfc-8b0c-5ad7b8d94b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96de5e5f-ed02-4500-bedd-db5222662d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650a0dd5-112f-4c2f-874b-042ee823ff70",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3111a3-f63a-4564-92cc-1697a61c5be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba425996-9084-45a2-9849-e6098e0c7101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c659e0-3d7a-4010-9841-d946ba09b850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c65f805-20eb-4b20-aeff-c1f969f6850c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e64117c-4bf6-4106-90ee-caee2e06f004",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf82737-6dff-4d80-81bf-72b68aba5eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78abf60-180f-4b93-bc10-565a7eb428b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768f0fdc-97e8-4f5f-b023-37ca839a07e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccb56a2-dfe0-4ec1-96cb-62c5e999c74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c3bc22-f970-42a9-a194-a4b28e09b0c8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7408ed-e5b7-45ff-849b-0e17be482ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63acfb67-36bd-455f-94f0-a3ed7cbd18b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195c4bd1-58d7-41cc-968d-675b14fc7e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebe6626-46f8-44e2-804b-382593fad7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb47af24-18f6-4099-9a68-3bb138069db0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bd9d22-f348-4196-a9dd-d813f2bd0632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b9b4e1-1979-4824-b028-129e6b9ad03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066e1c09-4d29-40d0-afe9-534070e57b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d934475f-1434-4f35-9346-bad312bf65b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051823b8-ef4b-471a-89d0-f6f500cdf565",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfcb33c-b544-47bb-b1e3-315eede6ffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca19614-a7dc-4e6b-8390-5c466abd2381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92f0eb-f6e6-41be-a6c0-29e79a7411d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac08e20e-897b-41b9-866e-424af16b7428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b067305a-f502-41ca-932a-4f12bae89657",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de5bc49-f61b-4561-bb7c-aa34fa8890c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de2b153-b814-4875-856d-f8f65005f4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ce3415-97d1-4e49-b0ab-048f87e006ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89cc1d5b-31c3-4483-9144-83d1ac4a0111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d69ee47-492e-4f8d-b949-5c78fd365caa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9c8078-8c8a-4347-9e96-b2087ed87739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2403afb8-51be-44c4-a7a2-eaad7b372b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da61a92-afc6-4ba0-a03f-436f7157af32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bee46a7-408e-4cba-987e-341541e0588f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f52681f-c5fa-4010-a88a-76262c54c38f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b633a8-c779-4172-9843-0e3255e7cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438b7658-9751-4a79-92b9-26344c6bc733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4503a609-7e09-420a-946c-c7da066c05eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e91c709c-f603-44f7-a034-0bccada55c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65902f5-7680-4fd3-8429-66651666fff7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbb969c-3304-4be5-9150-2b6a30afdea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77729240-ba77-4f5a-b086-cdde4f564ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c475719-f662-4add-b917-d1782e4929d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e0cd4c-02e0-4680-affa-f3f8856d16e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a1203b-4e7e-4a8b-a46a-8bc8463e34e9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9f7e03-e18e-423b-b4f3-167a7ca48e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb167f6d-b4bf-48d1-ad47-245afdcfc9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe060002-ea97-40a1-aef2-a87dba788d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "379a9c3f-11b0-4514-ad1b-cdc7e012af3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6948ec94-7bbe-4f95-9419-ec7d8a7afc0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5182943d-c5a7-41cb-bf91-656a6acfebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9d953e-b678-4e03-b858-b95614d2a629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1a812b-0e7a-43b8-8bd3-37ce5e0308b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "206644df-52c6-4ede-9d41-b0c36b44c7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c4587d-0eac-4306-a29e-005bd5e4ce4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9ad713-6f53-4b71-8770-4bfc5b3bdbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e8e27e-8802-49ea-988c-d4c820d77ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483aa2d1-5572-42c5-ad0e-67ffea36b79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa64c1d5-aa2d-4240-84b2-58b338ee6fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca2eeeb-2362-409a-acbc-b526530ca929",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5502df9b-ea44-4371-8bff-70996ee1b898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d97e58-5080-4b08-8196-81ed0f304cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7c6d17-6ca7-4b97-92b0-671c50b8b0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "79a086b7-57da-4485-a97e-7d052c257423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5f6636-423e-48ef-badf-a055d4837e5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f739ed6-ace7-4297-b1c5-eddce927c0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697324d1-b6c5-4785-b63e-cf4459ff74e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae834db-738c-4631-a970-3706550c2e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "733f86f5-0fd2-4555-88a7-917b0c73402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c316e9-cbb5-4b04-a6e0-7efd034da8b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caff1cb-7502-4b8c-a358-1576a0afa427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be31a80b-38e1-458c-9a01-dbd77e0d5b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d376c97a-b418-4a1f-8bf8-f837a90b859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5061ebba-8581-4ac8-a9c8-a0f5992a3db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78c55bd-22a1-40d9-8c01-f167f671dd16",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9c775d-8559-498a-b9d4-f6d0efdd955f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673fe98b-dbba-41f6-9972-f914139a4e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a054374f-e706-4820-8228-2b45e10afda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74d67f4-609e-4cb0-a003-2c1a7d8ee13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bd46b0-7b09-4d1e-9f5f-bc311b17712f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931e7f8e-48bf-4884-bd00-b990204b64a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46472a2b-139e-4a5e-9593-26dd059ef58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ebff46-47f8-420c-80cd-c4c6b016e6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e87922d-5532-493c-8c84-0b27dcd16c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7640f199-1d27-487e-8504-0c579438b300",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb1808a-bbe8-4fc9-a669-0293448f8cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6906506d-26d7-45c7-acc9-582c3c6eb418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7b603f-49fe-483d-b698-62fda42b468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "609d7429-2400-45aa-bf01-88dbd3038aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a90d2d-749b-4fb2-8d5e-683e0bb495fc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d4e540-36d4-4ad7-8a5b-d15a32cddcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b814dfd0-e107-4573-977a-f471822d6373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc570fee-91ae-46d9-9625-56c6882d1dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94f0f239-1b5b-4725-a63c-66bb7e9975bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586dafc7-7792-4574-8b8c-327a7e0dd8d0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7ac4f9-1596-4731-afbe-b28706baa93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19c0eae-6d54-4750-9abe-332dcc99e4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c245c5a7-c48f-4c94-ada2-574a1f6312bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04cf9f51-2984-406d-9b08-90ab67614865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1597d353-238b-408b-a7e3-7c97127fe989",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20bf96a-f5bf-4576-b23f-60b84f5bde7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9942b376-21a8-4592-a104-d3f3bf7ce4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2808a04-7e4d-4eaa-a51e-a638801b422b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae8485a-afec-468e-884f-9696bfc2afa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a33a5e-61ca-4f65-b245-057175b8c5fb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3521314-5922-48a8-8b91-8e76c5049ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3ac675-fc60-40ff-8290-ecf2fbf73aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4654376-5640-448c-a0aa-a3afea151bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a224614c-25c9-46cd-b047-d28ac66a6137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e5b246-07ed-4e65-ba76-0fbef7df4827",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f19b3-bb37-46e1-b06e-efa733444429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b996d8a-b8e0-4b20-b971-1cb38dfb20e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5976a2c2-493f-475a-96e0-e00a18873581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea0dcbe-12a1-4038-9d06-0e86e84d195d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc46ea7-3a37-4d85-855c-79f5f200a88a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9591d8d8-6a66-4c12-93aa-7cc5966b78cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795cb932-efe3-4ff4-9de9-b859b58e726e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4ca135-dbbe-4497-9274-2c2b43596790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "522a21ae-6658-4d84-b39d-41f621270afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cb7591-4044-4205-ab62-e7f354c05f72",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b395325d-e333-4b21-83e8-0d6233f4af25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a27054-3bcb-420f-b929-5baacd259865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6189886-839f-448d-aa49-83fa1f0acdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb6522b-c60e-48b4-8c4e-fc71c97a9afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75c570c-8fa6-4f0e-83d5-ef4b5277e522",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7435928-f24e-4af5-8a7a-2aaaee544419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a93f00-23f0-4b21-96f7-f5e757e749c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff864b6c-1db6-4afc-926e-e8171177b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5251e3-8e27-46dc-9521-cad7f2c2b5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6800a3-8079-49ca-85d2-a6c32143e309",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71a5f25-4bb5-463f-9758-ad576645df66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82972bb4-5522-4caf-9c16-affbc206365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b0a6f8-0634-45c7-ad73-f293e8dcd151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f12d3bb-a7de-42a1-9172-cd80c1106154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557fdc93-1466-4955-906a-5564ac84dfba",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79570f7-2a98-4236-b860-fc7ea020cc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e5d281-b7ba-46bc-8178-93e4c8b7f51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a7d697-1312-49bd-b4e7-f2b863c276cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae8dd43-7b68-4916-a487-1055a3a4eabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cc5f2f-d9ac-414e-a966-b9a6ad6971b6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11543ef5-fcb9-4741-bd7e-4f7d56ddec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c036d73-9a2d-4402-9583-0f59d8123c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7dcdf0-3741-4fad-86b1-635db081c80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7ec22e-3f52-4961-ae5b-4a0cd99ad7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0a12ae-fba1-4138-ad01-6cb79c2098e3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b21ffc5-e1c7-4059-8b46-e83181b0bbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af59545-6588-4518-aa06-b7e0c621c6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6a0e3d-7272-4237-9348-a3648ac399f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77300efe-4c47-470c-93ff-d4dbb5f919dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c69ce4c-8a52-4af3-8f64-337e304db721",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2025370-f6a4-4bf7-8e77-0806e7e319bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbf5945-63c4-4606-9303-df05237a6d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac6fa2c-a3ae-46ab-8e51-1da6461570e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd18d28-587e-427f-9773-95eeae05f606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2e7167-d570-4889-af12-72be7759ac58",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a34d7f-8bfa-4c6a-aff1-e816a0793da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7f0686-c8db-4e05-b005-4bb02153e15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d2127a-07d6-4f8c-aefd-ce59d64fefb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "858bdd00-8634-45fb-bcf2-4eee0bf2a8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a951e1c-86dc-40b4-8a9f-4c38d062c148",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577cbd41-2dd4-4707-ae4c-45c07cca6e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3673d248-c9cf-41fd-86d2-280ba859d1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5612f7f3-6704-4188-8184-b441470faf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc056793-364b-4241-842d-ee61af0b9397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b7e46d-238c-4e9a-b0e7-20b63e1ec202",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84dc361-ec4b-4906-b688-6f0a79a77997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f08455-72af-460f-9e16-fd7e9f23167c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0709e47f-bad3-4a7e-9233-bfa214012135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebf3ab9-7118-406a-a120-430b39713c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39414e83-ce71-4a69-8700-955338b924c6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9970a2-7ba6-4bf0-95f8-d34eadcc73b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dcb965-c98c-4bd1-bc7d-f139b84508cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a08478-777c-46f1-8e1a-028a05bca6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9231a15-13fe-42f2-b750-975a0ea4a390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b39d0e9-350e-4b62-9907-2c916d4125b0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4356c6ed-6a0b-4872-8bf6-2646f445a6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ca16fe-60e4-4891-8b5b-5c65feca4f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49608f9-ad06-4854-a351-b034c0d0e640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1395892f-3c61-44d1-a627-f2519317efdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c87f2fd-70ee-4602-b495-42c0629520f3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b438c6d7-d056-484b-b3db-69a70a18fe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d527ddca-b123-4dee-a796-40ffcaa366ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40556e85-d231-4c32-85b7-1d7ff2d2f593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c36e063-f20a-4579-9a60-5f1af20206a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b83be7-92ea-4b30-a566-d970fd8a86a9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cd61e6-89fc-4c31-be1c-02a5968b40cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d59c33-d567-4c3c-978f-0725e1552375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890871db-c855-403c-9da5-3fb2577e9c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fadbcc16-2abe-4ff2-9ace-5dba9fc4eaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e4dd5c-5528-4533-b2b4-3ce60fe4eb7c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99669b16-50bb-459d-bfc0-34b030666375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668ed412-6641-4cdf-97aa-dc2e5eee6d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a34a6a-fd7b-404f-8266-45ed77f60c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20cf1847-89ef-447d-ac51-837baa7a3a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609f7354-92c7-4844-b174-c994a5dcf596",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ae90da-50cf-4353-86fe-31e89d7d105b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa650323-fae9-4c47-bee0-b1927843acb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c29beed-a500-4699-9539-e02d28ff9bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2240e6dc-bfd6-4262-8277-7a05bdd33b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423d25de-26b1-41ac-9c9d-12da2b4dc9f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c4875b-284e-4dad-b0c5-3f35cf1ff17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1514dcf-7482-4080-9028-1cfff36ee30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fe90d9-bb57-448d-93e1-979308a1dbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d23ed1-1847-4547-b16a-34135963402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f286a21-4f31-4dbd-8b65-eafbc8fd40d1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f1e5ff-f395-4bae-9b16-c0acc68ca69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b4f352-3c2e-4957-818a-ed6f88c88a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3b4cdb-417b-42af-a51a-271de1c5c415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d672971-90d1-4f1e-841d-ead0d19e426b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99316340-7055-4c55-9d80-08ac453e0a84",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88387d34-d742-4336-8432-d71d6392573f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c202e5-edf9-49b8-b6fc-ae6778f2134a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb71e3f-24ad-41f7-8f8e-e603be33fd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "025a858a-fc48-426d-acd8-9b2594b98422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91f371a-ef36-4b08-a5b7-919ecdc0213d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca32498-1bdf-40a3-bddf-a42b76b48fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1180f4-b645-4a60-9910-2bc7157df55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7927fef-f83c-45a2-9a86-e48c2c3b48ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bbe46a-aac2-4a15-a8ce-68af472c7be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e71ba-6b47-4e92-801b-086327772323",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536557a6-7f3b-4cab-ad4b-c2bc595b56dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0fa95f-206d-446c-8877-e206d273af8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf9741a-1639-4258-9f8a-450dc849efaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "82bd8bfb-28e1-4be8-839f-b5196a71a53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39d6dd8-0a24-4286-990b-46fb11cbbce3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd94315-1e10-4876-bbf0-566abd0c003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1ae99433-0c32-4375-862f-25eed47f3ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61e20b4-c8bc-4b5e-933a-1cffc36c0cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "235eaf9d-e7f2-4c73-94f1-047fa1cad1f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19f5a9a7-535a-4f06-830e-1c237611b97e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe45a7ea-0662-4873-a200-2262201474ec",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671c91e6-bc65-4cbe-be56-f64ff59659aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "045de4f7-4344-4b9d-93a2-bde928f3caa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266caca2-198c-4f31-8521-6968e608e5a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c2a37e4-09cb-4e22-85a2-a6481d101a47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1185c940-b545-4a80-bde9-16f7e73edfc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1a45ad5-facd-44ce-b60d-27e5d123a5f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "013b4fb7-b99a-42c4-97e0-f3f7ce0c2cfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcbf75d2-49d4-471f-a894-4987f4cd7dc6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "783eccb1-7632-40f2-bddb-9a79c0f5bbb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a110ff6-8f13-49f5-934e-50a159ad3e7d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abb7e2a2-d215-499c-9ddd-bf4c04bccd3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa966276-31e7-43c4-8340-c0ae4bf6c337"
                }
              }
            ]
          },
          {
            "id": "106b0072-67ff-4c0c-8118-c920cf4c9457",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64c0edd3-c270-41a7-98e2-7ad75765a9d2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1238e368-b141-44e5-aad9-6b1b49b0b054",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bcf87b-b6c7-4dd6-8d42-2ee98d94a515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ea7c524-d19f-4570-b07a-824593c50752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35bbe79-e67a-4b35-bb10-0135898b11b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377be908-47df-4a4a-948c-be973c00733b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a4a093e-8e17-4423-8bc7-2754c87e996c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cb0ada3-b043-4fbe-93ab-2835cc956fc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8334258-7aef-475b-a06a-31009ef23957"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21d15e8e-eaa3-491a-9e44-cc02a2e1210e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0892bbf6-44b7-4208-af83-eed2129cbf3b"
                    }
                  }
                ]
              },
              {
                "id": "0a731a95-ddf4-4558-8522-c0b430f890ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28004c0f-d7c5-472d-883e-411b83bba03b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8e813e9-3114-41a4-9289-23f0f0f320c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baf6cfb5-4968-4d03-b836-11d5ad54a31e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2bec32e7-b99a-4c87-852c-4b4dba4b86f9"
                    }
                  }
                ]
              },
              {
                "id": "56572b3f-c85c-431d-b771-2fe8b266ba67",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b30586b1-bd82-46fa-941f-31e8c256ed1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f041b083-281f-44ee-9f6c-43e08e0e3c9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eec5a1e4-d792-4ee4-9be2-3ce2316d87a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e97e5ca2-0be4-4920-a093-b24f61be89d7"
                    }
                  }
                ]
              },
              {
                "id": "4133580b-606c-48de-b9fc-735f01017e66",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe3679b0-4620-4db1-a4cb-07edc8493f33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26f1114a-46e1-4dcd-a85a-6f21f6152a10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56eba207-ed10-4351-83e0-3accbe8459d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7a43447f-c9a6-4d89-83e5-4a9b4a3e214e"
                    }
                  }
                ]
              },
              {
                "id": "f0ab1079-8cca-4b07-9b95-3682d0ef24c8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "987cef31-0f14-4a2a-867b-252e5cc6b421",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70aa105b-23ca-4c13-828b-2f8bb27085f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c6bdb3e-345e-4bde-afbf-8283584ae779",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "420e8405-10f6-40b5-a97b-cd4e0f129a78"
                    }
                  }
                ]
              },
              {
                "id": "3ca5d102-200c-4576-afb3-c513aa1c9447",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b537a111-ac80-440f-8b8b-0c67d4478d8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "440d6ff8-1608-45f1-bacb-b1bd81e41592"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2a7fdf7-e921-4b23-8301-2abec4645491",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d775e66-36ca-43fc-ab6a-1c01c8ade33c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c34a205-ac6e-4326-9fc1-9a68adac5de8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99c54f2c-a8db-482d-94df-7b13e9a3a4a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8876877a-54ff-406a-8c5a-9730e9dec3a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7efb99b0-c48e-4d8b-892f-8e6ab0c6b1d3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9043fa08-2b22-4365-8ca6-603f67438d5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0ae67535-64ba-4b40-8233-6378ce860c26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03ad8e3b-bc5f-4090-b41a-f629d14fdaaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1bd5cc8-bb49-4046-b267-a9e8abd908e0"
            }
          }
        ]
      },
      {
        "id": "6a38c807-3749-4efa-aee6-9046b18d8c85",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c720b635-83e0-449a-9f63-70391612db91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0841691-8ace-4be3-83eb-a1c7d9709eeb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2287e1f-1bab-41a8-b30a-040eb657c7c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba8fb1a-c5af-4dbd-af78-f479c1803ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a484200-132a-489b-a5be-1176f8188f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4615c923-58f8-4e8c-b583-b4d2862e0f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "83533898-f4a1-4e9c-b3e0-b5070feebf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2421a55-e7e2-4181-82be-82aeee76adaa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211da63e-8df2-407b-9d45-d55bea99849b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6075b3-639a-4366-9ab1-dba02dbd2d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae9dbbc-52dc-4a97-ad7c-2a56b57e21f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb651467-a806-419f-b9a4-fbaebb3749a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9097ec82-dcfc-4bb9-8a94-e3eae4650c2b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d61fb1b-25f6-43c3-9ba3-c82142957c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfc0eb5-0a77-494a-9eb1-0b59cd858747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686abd0d-141c-4da9-bb16-80ebca7532ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "305a0098-d242-4060-b714-dc76bdbefe0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddfbf85-d8a9-4502-bb13-3f88bf7dea09",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e8c02a-1ae2-421e-b62c-eed5cda19de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d891ed2-0000-4485-a80e-651b8d9617da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076c503c-8f70-4fde-9dad-3d29ccc419b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f895c11-f3d7-49a2-8e5f-dca253adf32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246a7f52-e0ce-403e-93ae-c2e8df660d4b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bf68bf-51ee-48ae-bdc1-a17fce07e755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b2600e-7916-4cee-b2cf-38dd64883cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04871518-ae26-4ef2-9e77-b00a73017258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b2817b-0e36-40e4-8576-65fd5a4a9431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff9bd2c-921b-4953-be12-3ed64e292383",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d21135-7492-4dfd-872b-61a640f0939e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2ef8be-8120-4f34-973b-bbe200b14448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f45359-4976-4f35-9f0f-ced5d3c54d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51070f82-fa19-43a0-bd3f-d474ac7a4151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684dd76-0a2b-458a-9fa2-a068fb2129b0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffb0210-de26-4c9d-9589-5ec26eb59a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bd5673-8865-4159-b85a-657098592a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1d0860-b16a-4282-83a6-b2d1ae4e0974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e336219c-fb84-4a62-be61-96637a9f0bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1462c76-8e50-4c90-84e2-68f4ec567705",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28015232-369a-4b5c-acba-3e508e08e7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58186bd1-81f0-405f-9c13-2800db6f855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5defd427-8c14-4f06-88f2-977aee6f9423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be19c55-7d7e-4b4a-a7e8-332a45a0af39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d5a886-5da9-460e-bd32-6c79d87e8aaa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2624f7-668d-4a64-813f-21b06f76c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98128b2-103d-4293-a3c2-e4bf6cfd7464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc16773-3dc9-46a1-a70a-c42f3746819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e464e8-a820-41f3-bc10-4639de0f5788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c40951-7425-40d9-be18-bc0120c0a759",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2904b3fa-83b5-4727-a2dc-cb7ff4fc1718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bc549d-fc8c-4b73-be5c-e013a94093af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e4823f-6423-4e0e-b4fa-a104195075dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7789d55-5049-4257-ae13-1d0d89d1983a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a5e638-da12-4c16-98c0-f1b84352a7d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7541cf-7ea2-4ecd-97ed-e62eaaf3ee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04022d6c-68d9-4883-8364-8b0f17836b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ed2265-fe72-45ff-8b9c-15e8855d68db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45bcf40a-39b0-43a1-9a68-c25662d58781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28ba90d-f6cc-407d-965a-8582d68d4c88",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441be395-6314-49cd-b5c1-92a0429233d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed08fb2a-686d-4e0b-bfb1-a6179da07d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c31655-d00d-455c-bf20-1ee9947c3518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0beab9-25c3-4063-a2f6-e08c13b0e81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d29292-8dff-4cbf-9811-f1cba94468cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7babe8e1-630d-434c-8798-ecb3e593bd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c59c70-0ff0-45c8-ac00-32e608d30704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de8ac87-0e04-46d8-a8d2-ce3a71e26ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12b72ac-f3e6-4526-b4bf-7ec336f70d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1497f5ef-471f-43c6-9ecc-49c8bf9201cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b14477-aee9-4c3a-89a6-7fe0fa1a7453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced0ed18-af74-4186-a2c2-c081d5551640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9c7298-2c09-459e-b276-c92024d98126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea6894d-7567-45ff-a506-9d41bd0bf1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a5dc57-d456-4ed2-ba75-5ef8b86bc211",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13cfa2f-6810-4138-9b43-fde0127bf18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbc66fc-55b8-474d-8a0b-37dfafedfb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e80ea1-8a49-4194-9f4f-57c509ba06ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5489ad4-cd01-4773-9e45-14738590c525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f5b57b-508d-425d-b7a3-3108d654ae97",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567e5686-283c-4b22-8265-cec3f30e5afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabcad43-2bab-44d6-9d48-666ef0dd5c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fd8113-bd93-48ba-923a-f082ac96b9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c783d434-56e8-4ef5-a97e-dc6c3dfc3044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e99dce-5f37-4527-8154-ee2102502124",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a0bbef-5a47-48c2-b8d9-d2deb764e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928613fa-3325-4b12-a5ec-fb3820025c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52862f2-c8b9-4000-9eca-788b2e7fbc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a32c24-b236-47d4-ac53-7552fe9c6383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc31a12-2f7d-4714-80b2-ecd8d764eea5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf84715e-22e4-4fac-bd02-dfd3b06a0259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce34a49-0b65-4241-9eb6-a392d5ce5072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3921bcef-5863-4883-a24e-83c90abb3e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e7908e-6e0f-44a8-af30-89257a5ac65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67202ed-d00f-42c8-bf7e-b4a1b5af5d5a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd04b51-5ff8-4c77-acd1-d4932035647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4707667c-eac2-4399-8c61-3f2162a514ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd928bb9-ce07-4ae7-84f6-6e77f5f28a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4be52c8-837e-42e5-88ce-3974b2657898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c94195-4a1d-43f6-b447-59f8858c6ffd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78e6d0c-3706-41d3-a8b8-ecd3b4070435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf74cb5-d107-4cd5-a37d-0cd048e3f39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774149b1-755a-48b5-ab71-d0be79b4c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc48c720-78cb-4426-a54f-dde83bdfe157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdf0b2e-fcb6-4afc-8b3f-e5afd7520e14",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4457c258-9744-4424-8a67-64744ac50534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc567c95-8dad-4e0c-8d04-ddef3a819789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76076874-2810-4282-bcbb-8cfbef4bdd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69107366-702a-47ee-ad3f-099887be9c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90c1aaa-5786-4280-bf0d-226ef686a03d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9528f6-8791-40d3-a69d-da7bb608780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e24ff8-3894-472f-8ec0-f577a6c8b8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7b3bce-1437-43fd-832d-a53a0e767448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f20ccd29-ba5b-4d35-8200-5f518e0b42cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77dc6bc-36d1-49ce-884d-bbcc23b883fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10a9f98-278b-4f36-98b0-dc392fb3f417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bf40f9-e613-4aec-9735-057f902c2e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a09cbe-fb47-4ae6-815d-86eeb36aea2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c808a1f-faca-4628-87d3-3f4776307ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dc0b9a-52aa-4e39-b68a-7ae96e1e254c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5db8cd-f859-432b-b70d-c4b069a260aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a3f4a0-a3d0-4658-b646-48ae892a4f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8ddadf-adbd-49c6-bf4e-509c0274c766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19ca2ba-52b0-4603-a8ff-9e86db0775f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6855135d-c0c8-4828-ad5f-6d7536f5ff91",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1278a0f-8091-4cb8-9ef4-9984a35056a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62e1956-4fc4-4846-859c-4d2f6a054b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df36c9a1-7922-4165-a11e-be8319997bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef53eab-777f-4cba-9033-0766bcb2806c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30164824-a3ac-49e2-bf50-4ad07ff6870d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8fda26-6424-44ea-82a0-3c1014998871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07fbb93-82b1-4c05-827e-e218776399e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e20af1-824b-4b1e-8072-225fcf18cf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "770fdbc3-b75c-4644-a9a6-b1e125ec4922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a77f04-cc24-4d68-aa74-a4cf83d3b34d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1283804d-b455-4a85-a453-fccda68802e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daef1b98-47ff-4e9b-8e24-88aeb8aeabfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7f96a3-2cfc-454c-a439-dcfc6df2f6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b5784a-426b-421c-8f75-afe41c836128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a02cc0-2854-4021-a0e5-0e150b3a1c87",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e765530-4da5-46af-bb21-4edbb764b451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed42c14b-fc59-419f-ae7f-974b3aaaae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bd4673-c865-4419-9e10-3de56af79cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd75ee5-102f-415d-bfd6-2ce09adfec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c88b6ae-80a3-43b0-98e4-0d6d2467528c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa50a4f-0969-4883-8448-7ba313ac562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760119d7-8140-4fda-a7e3-f99e90c035d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d499b8-822e-46f0-afe9-28f53793349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9466097e-0d95-4988-905b-2ee813faa40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcdb189-7e2d-4455-92c3-11aa91d44928",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89894174-1b72-4b6d-bdb7-2e2f9c11254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13da86ea-4cb3-4ca4-ba10-8c8dfbaae53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4346374b-bb0e-4f8a-9e07-1a95f0f9322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45f7298-1fb1-45c3-89a8-b285ac11afaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ea3639-430f-478f-bcaf-851bac38f6ae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c21622-d4a6-4595-b17b-72d9794095df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb07110-2c09-44bc-9eb5-cdfe3065054e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4b7004-e3fc-4b36-936d-00f8b9f13a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71f145c-44b5-495c-809b-2cabbb911d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26defe71-f2e6-4c3e-b941-8d2065294c73",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e418e15-a10c-4f67-8f2e-f0d159dd69d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb34491-fbb4-42c0-b7b9-9a602093eee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2d505d-539b-4580-85b4-48a750eee7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12793388-6e5a-4401-a8e4-8d5d16151cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168ac7bb-af7f-4450-ab34-a773756ba879",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445b03e9-c27b-45ae-b458-8b322f655fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e804f41-4ddb-4380-b8d9-eb54e0464808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8597303-28c0-4bf3-9d01-99c801e8e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00becb11-7100-437b-b5b1-52a58f28d502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa59c79-e5e2-4c9b-9644-c9a6082e665c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52749d94-8113-4369-8d1c-afcdd1ecd431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f77549-fe99-444b-b017-8043e0d3a04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0def93b-b124-4fa8-851f-d36cb7ef734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa023c3-162c-4aca-af96-8e256ea6b903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f01d319-9fc7-438e-a672-b7e8673b15e1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5350e8f6-faa3-403f-a59a-8ee8669dc857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b3d1ac-cd86-456e-a029-c1c0b5e4ebd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf0aa25-46ef-444c-84ce-8cefe6f388f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f205883-4004-4470-b9ff-4450caffe4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f84674-235c-4b48-a4b6-71c7aa9b1b26",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6294cb72-947b-4511-96bb-80403140d736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fceb4a98-c6a1-4e8f-87a0-62e747498532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d65b20a-f572-4970-92ab-ee61c2847832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adbd76f7-dad0-4649-b68b-a05685b7aad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae692ca0-f034-4e4b-b951-a70426e8d6ff",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0720f61a-ab08-4884-b333-fcc1fa04d9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ffd034-6ed8-49a6-8f9e-84dbcfa6c6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d056798-390d-40af-9163-b8534e1ce74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fa8540-7eb2-4dee-9400-28e70c5433b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e78e303c-8837-40e6-8e84-33bba7cb59c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b004db50-b5c5-4cf9-9e57-a8b6041bfa98",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38a173-5b53-4a73-9abb-6e8f391b4824",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fea98d-585d-455e-ac61-9a9879224a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68e460d-2a06-4f2d-b61f-cc6ad3f19531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28177006-b3ce-46d1-ba6e-7c71e36bca6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ac842eb-a2c7-4bc9-8e0c-cd476b7a9be5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e896ec22-c5d2-4b19-9481-5e5eeff47c9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a83dfbd4-153d-4091-b128-bf268f7c3a55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2babaf15-0b04-455d-92a9-90d5b906ee26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6933df7-5251-4312-9b05-a6d5ff49b22c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2451ed2-cda2-4498-a1c2-63658d8b1daa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b19c788b-a130-4007-8342-5486af470de8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c955cbf4-49be-4775-98c8-adde7e64bdd3"
            }
          }
        ]
      },
      {
        "id": "f50a3368-b866-4648-902e-41f947eb4fae",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6c5d1c4b-483f-4deb-a5c3-7b6f067d2a23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3749aa0-9159-441d-b67b-6f196b4adf3f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05a17418-881f-45ba-ac7d-76c399928c7a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc23c9f5-bfaf-4350-98aa-9dabdd3aa79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d783fccc-2560-4d2a-9ad7-b6122eab39b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2403edc9-9b67-476a-8e8d-4a2b66fe6522",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3471e9-f03d-48d2-b61c-6979fe72b37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db5bcbb-7044-4afd-81cb-0599f005ee48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20cd1f9-cacd-47c6-93d2-43ef34225313",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157be59a-7107-4c88-81e0-3994e72c1535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706f30a1-42ae-4ea7-afa0-1bc87775ce57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f559ee-dfbb-4ad1-b1ee-517c034bb59b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baff0e5-39d7-4bc5-acb3-63825d1bc58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e62cd2-f742-4128-9af4-3b7ff0a104f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b696a508-de03-450c-9ee7-dfca19d54563",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ea5d4a-199a-4d85-877f-9e4109a98866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a666ba-58b3-459f-9c5e-4a488c7936b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89849b05-d278-48bb-86d2-05e1b0443a2e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ef3e78-b9bf-4dcd-9c08-b5a2810ece1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1ffdf2-f0c7-472c-9d0c-65543b74b1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb98180-9387-405a-9768-99161fe23163",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b699193a-b9e2-4f05-a3d7-20abe5d53f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc92a8e-924e-47cf-817f-340fdbfdfe05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a582a1-87fa-44f9-9db3-0fec196d4911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba390df9-c806-4771-b40d-cd8dcd5dc867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c28a1c0-3de2-4ed7-ab27-ce4bc1e9c475",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23cdf59-4074-4ae7-aab7-f2b18dca861b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753219ac-2590-4322-b94d-a6aa99db8e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03278ca-ef31-4e28-b5c6-9894cc863a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceea8a6-1dea-4290-9095-5bad2edc11cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329ff9cf-8096-4413-be65-d12361ad1908",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a42a96-2963-412e-88a4-16da3ce952d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2077ed37-f11e-4570-94cd-b660a8ede179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec8d153-126b-4537-abdb-819217d85277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55594ae3-f7bf-4083-b6ca-4cc0bde9a48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6743f1-82cc-4e1a-8597-f8b61c077167",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc57959-ff0b-4f05-a625-df73308d88d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a4c77d-2d39-49a9-b4c5-0a8c8b4444bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23857404-8099-4fab-93c6-856c1323c484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7f7034-c138-4d51-a264-4c1eb6f62d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a26e77-b890-40a5-ad86-bccbf1f25b30",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b330c9-b8f0-4693-86ea-1c930ec32e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b46a3e-e4aa-48b7-b69f-0a95af35fe6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb39cc0-373f-48ef-8f41-c75ba4b96eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1021982b-d5ee-4ed5-95d0-c921d238c147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff044dfc-f482-49df-8048-618e17e0651b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dcb57c-5f00-4c21-ba16-bca988e6042b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58902743-f8db-49b2-b761-7c9035e9933f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0ce8ce-64ef-4896-8967-b010e79727fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792c54cb-ae35-4bf8-af34-3e1113ff6c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023c437d-cffd-4b69-9a8b-e153b612982d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa191ea-94d9-4550-ac60-82853e634866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312a1933-a797-40a4-b914-a4ee49619f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7313ce-1755-4744-9290-ce7cd2cf4232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8efc851-200b-436c-a214-472620463bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb37182d-c9ff-44ac-b77e-1aa3c0431567",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5a6af-c879-4c7c-9304-4b0ed909a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ac1b94-4b75-4490-95d4-682e7f9a5af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6b137a-8e2e-48df-ba9f-0375fea70759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa78ea8-7a30-4ed2-af3a-0ae676076400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7347224f-a39b-4345-a3aa-0772dfe71504",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889c246f-68cb-4fb9-83e9-ae538efd5805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1383ade1-a9b3-4b1e-960a-94c466563c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812f2ff4-2fc9-4f03-9966-f51dc29ca693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a74756-f8d6-4046-bbb8-942aed9b8a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a747d687-9c17-43b0-9350-fce9f92841e3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5157c7b8-b4fb-43b7-a89a-0cef83166849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f379f7-20cc-4931-88f0-457f99173a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3760ebca-973b-4ce9-bf81-300e755fae37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85b15d5-2862-49d9-bc2f-3ef522b12649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918acd9e-b22a-4ddb-ad3e-3c4c04248f09",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b94f75-e6f1-46af-8002-ac6e98ab4465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8d31e9-e22a-4a12-8a2e-86b2c9da7546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55258da2-6c87-4bf4-9def-a176b975970c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6392e4-4476-40bc-9759-1c953445376a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43378dbc-295b-4220-a0bd-d0867d22c7ed",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4bddb7-6b2a-4f15-a987-4c4205cfbb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3761e13e-ec15-4446-88ed-cf6f31009c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e689d8e-358b-4ab0-990d-790e316cf02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50de10e6-20e8-4f7a-bc6d-a0806e7be4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b77c5-5035-4237-8d70-9708e4247756",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ab25a1-6a80-4434-8a51-becee056f8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fa11b6-ae77-4cda-8d21-3e0976b8d178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f26b5e5-807d-405c-bc5d-fa50f84b0011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bee735-410a-4452-a164-be9fda005f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a6c9bb-75dd-471b-966c-ac84b33aee52",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032f925d-53d8-4b86-90ce-0d52c59f13b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f22546f-2ca2-4f0d-b8ff-dd5f290b939c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889950c8-5abc-4b62-9a53-18b5cd9c2283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2811fa-8ce3-4bcc-980f-5f0c376a4b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba983eb9-6eb4-44ee-b1a9-990c62f52910",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2d7998-1efc-4909-a354-d96785d69f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0985fbd6-5ea7-43c0-bf7f-7f3375c58713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9793947-d100-40fa-b85f-176dd4d89f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de914ff4-2251-438a-877f-6d12f60b8e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a70d21-8e56-47ab-83c5-6898346a9d61",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ab9643-3523-4e0a-8c9a-ca53f751297b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee469da-127a-4e50-b960-354190c8f28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16bedd8-81eb-415a-9011-f93ccad7560f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4970d532-be6c-4114-b985-4b1c4a2fc338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f3cea3-b627-476a-8711-697985c1345a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a489d94f-1e7a-4454-9d27-3e6285a34161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e95402c-6933-4b2d-886f-5ac0a4b1b762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055a023d-99f2-41f3-9700-a2ddde53d400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7ddc9a-43bf-4e37-8dac-1352c2e28efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5040de51-c387-40fd-a788-a6cc7289773e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed57c83a-6462-4a6e-b3ae-eb7b9c68262c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a436f8-785a-4538-9c75-e380c038c8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0fcbd3-48ff-4410-be8d-7b1f0574b8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc82b5d3-596f-417c-99e6-c31c20cf19b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3f8e5c-1296-4e49-be14-0c857789e41e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fe3615-3712-4b45-ab0c-7d565145677e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf44eac-e70f-459f-8d82-afc02afc2f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb11b57-24d1-4323-9918-d633f8a1c52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e54975-9e36-4b0a-ae84-e6f29f1fdde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae2e8ac-e4b5-400e-945f-a044171c7501",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81c5599-3fcc-4582-a161-6d8153fd86f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da499ec-678c-4a71-9344-1a5df6b5accf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5365464-0d70-4a76-ba35-db264c20e67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a9900f-c7eb-41ea-94b0-798f5cb6062d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a602a3b-9103-45a5-a441-20358469397d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc728b87-f843-4aad-ba84-60406cc4e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b9f530-d3ce-4495-9df2-8eb376827c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a3e1d0-def9-46dc-a3c8-f64d307e3b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90aae264-c762-4071-9874-9ba2ca91b73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2a303d-6a4e-4b4e-8575-d8203a06b686",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550239ad-ca88-4eb6-9fb4-721f70a40bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6b3963-bf0d-4cb0-8f50-7a7dad0d83d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdb6180-2094-44c5-b465-90afe489cb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c543019b-20cb-4c73-bc18-08119398091e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707e5e78-5abe-476e-b97a-ae6eb7151d59",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d078a021-d047-4869-ab81-c43686bc65aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c5759d-3aa3-47f0-975f-01665aaff0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0230294-2999-4293-bdf8-b583197cc53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21511470-7bb9-4ce2-9923-c49ea4fbec7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b94975-c6af-4378-8200-08371239861a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0319c8-0029-4843-a4d3-c1762d9d326b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648cacbd-3745-4d9e-ab3b-bcfcea64ce61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381741d4-7612-4e5e-8f9d-219133afe436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6673c1bf-199b-4295-8334-54aac9795b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec8751b-e7b0-41f0-970c-747ea82c20a6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5f4e74-6062-42d0-b893-9735c30de0ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6ef34a-48c5-41c7-8602-c438213cfe0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb581e2-6a4c-4ed4-a6c7-3db6e4b2344a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2d0b90-ccf5-4c66-8dbb-97c18a95d105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62cf592-a92a-49ea-810f-f82b0521a2e0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dea874-6a23-486d-a36f-269a6bc49fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b66e03bf-c34d-4def-bf65-8e0402be8ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e739469-358e-4da8-ba56-94feaf9c1805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc45138-edaa-473e-90f2-1bd9eae3d374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2585a9f6-1f5e-448f-a33a-321d0e9be6d4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a414de-3014-4a28-8999-d3a6171f4c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "136898e1-6b57-4ede-85ed-9394ad59cdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340d916b-365d-4281-869a-59d99b4d0525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14c605a-f40b-4d38-8b3c-b32df1d034f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ecf6af-9b61-4b50-bbee-039341ae8a63",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a140bf2-e55a-4486-a9b5-0fe1b93aa0ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea686e77-bc0e-460c-a964-48c76f00963a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4129b0a-764d-49d6-a71f-73be9009e3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a10c0b-bc60-44cc-95ca-661b91bb81b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30187264-60da-4d63-ad66-f25df669495e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5c7a56-a5e7-4f63-a141-e775d433033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c79374f-34a7-4eae-a0a9-cffa2c8dc2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8687b3-e85e-48c8-b705-47adfe3ff6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8f5a1c-6843-4db6-9fed-a5ab61b5ea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c039a8-bb78-4e33-b47b-67fa3a30fd15",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece14027-8fbb-4dce-a91d-956e4f7ab79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1dc5f3-7129-4312-8b47-3585bcc3388b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b8e606-fc71-4637-b26e-369dfec3c83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f548a1-f1da-49d2-bda3-25159f841b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2205b76a-3be1-4770-adbb-c929a7c032b1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0d798b-ddce-46bf-be96-0f8ab9f652de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c966f6-ffe2-410b-a583-76ba8611e9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3db00c-53a6-4f7d-97fd-ce435d67bc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280ceff3-e4ac-4ad4-a1b7-e541fd32d07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13dfa32-f43c-4eb5-bdbb-3f047d1a96ed",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec76135-6108-4f6e-afd8-efa66a3c48f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba60d22f-8ba8-4072-8078-38baeb46de5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26878b3-f184-404f-a10e-c3f16ddaea8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7464e7d-92a9-4abd-bdcb-ae7243a5e9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932a201f-4c06-40ac-bee7-089c7837e844",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd71fe5a-8544-4327-bd2b-09798c6e9616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1da8a1-3b97-4e45-a9f9-f198122802f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ece3bc-a0f7-4b25-83a3-9fcc93ac794f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dac7fc9-1264-4166-af6d-752a931921d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e967efe5-98c7-48d5-9427-abe94b7811f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0837998f-7912-40cd-a2fc-a4ece0bf6c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45083495-be3a-4d84-8858-39b8b37909e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ca9739-c0ff-4e0b-9d5b-43fbe3dc6db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67d699d-f046-4e4b-b9b3-f560bd52bcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0a47cf-c53a-4dd1-9d67-122aaa1868d1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a36dde5-8568-4531-9f31-a9fae5502865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f570c25-9dce-445d-a8cd-bbdc6316b0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c9de78-e218-4085-923f-a69adc204ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8acee4-ad80-47fb-bfbf-0f871559ed42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28022d5f-9c31-41ad-87cd-30479efe80a5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce5e8e-19fc-446b-b982-a383d78d215e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad69d37-db69-493b-98fc-714645e76dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35dacd1-0b80-4172-9021-5caa2ef9218e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905c69bc-b0a9-4caf-a488-a2b6c23f5d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38c14c7-98a6-46a0-8a1a-bd56d910808c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3279fd3-c084-4e73-a84c-6114bb5456a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6febd71b-a461-48b0-bfc5-e5c6f5ac9bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd147e4b-76a0-4ed9-a27b-4a477dfae6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346353ee-c361-497f-bb31-effb5e8e7453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f610cd-b8f5-4c04-9ccc-6c4f59d5b99f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e9db45-9209-4221-88b2-6de40c69b1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e539bcd4-b4c0-4f91-8c3c-2d2ea0e4c137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a34a89e-fabd-4c45-8677-3ea1b9203ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd81abc-ea46-43a3-8965-aac3ab609bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04566c3f-cfe8-4d1b-83e9-b68e536e23fc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284972a5-d7aa-428d-bc99-b815a9863fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ffd33c-088d-465c-90cb-fbc249d9d08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa8fcb5-0bfd-4a42-b744-a564519bdd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9169da7a-1801-48e5-aae4-d5ab57fae9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6925556-fb8b-4c4e-ba4f-4acde219c85a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72cf9b8-6cb6-4eec-9209-c70d0498e051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f25e238-dc25-45d8-a9b6-41c680445758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634c65e8-b30e-4fee-80b9-9f23c3a2ec19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743a6bc3-2800-4cc6-bec3-bcb9b236cb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43919216-64b9-4df0-ab91-52a029926c71",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2bd235-4ea5-4cca-924e-32843e7117fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364bf118-5295-45d0-8ade-547a43be94e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d50db3-68fd-43f3-ae53-593f96128c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6757600-7c6d-41f3-8ca3-4c75d0e3815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7371bcef-ccfe-4b36-954a-6c2cc25c9abc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b1c7ec-52b3-4ab2-a79a-86b42454a61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84686f7c-9432-4348-b5ec-57af41070b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a56fdf-48b0-410a-9224-2688b235002e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037013b4-1eff-4a8d-8153-a97e52d8fcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9196f439-cf65-48c8-9156-7b820ccfef7d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58eb9c6-bfd7-43bf-a470-c810ff4ba165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f29cd9-0e28-4e79-8b30-dc30a7a13d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d91a9f-c799-4445-965d-b47a23358e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e8e3a2-b1ee-42e0-adc3-f30344132577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9b382d-3bd5-48d2-ba08-c76b94828f19",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f989eb-a550-4bfc-afd8-dc705d799282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae81bea-927c-4a30-bf13-6048e57e346f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c355daac-5e91-4df9-8164-d3685a52c4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a85853-aa1e-43ba-b27d-37b7aeaefa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdc760b-02f5-4013-928d-5fac3a1f7463",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815eab30-e191-40a7-a896-5a1152430f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb7fd33-8526-4f98-92d9-6b14f5cfd2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d143496-5647-49ee-b4ec-b1429a5395b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6386291-8307-4b52-ba85-9e90f29e7264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45f6afb-c5e0-4f1a-98e5-01374a60b04d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe510d2-e348-4947-a9b5-55ce21164601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ab5374-e231-4939-9fb3-176cb227e9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147057e0-452a-426d-b859-cf167cf7636c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257ed388-b99c-4319-92c1-1d99245c9cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31559cba-1952-4ed1-b4a8-a87ca3ff4dd9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ba0de6-d1c5-400a-90b7-0219cb6e8733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd4b8e0-e29d-4f63-b0bc-8580d0d92004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ef2fbf-3d60-4f0e-a88f-549fb13def08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d87431e-80ce-4cd6-9859-a9a658e6c2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2da0e-5638-4fa2-810d-7561ec369ee7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226d927c-1b8a-40cf-b4d3-a92c76a17635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7054b8cf-ade8-4260-9566-58d2497ad035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcec1ed8-faf6-4033-a72a-d0ea4fb8fa8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be939de0-ea90-45df-9a94-773e6472d724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ca4300-08cc-4693-a884-641f84d8e5c3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb60592-da45-4b40-b78d-b798c7e89c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d3046b-55c8-47f0-b377-fbb459923d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2266a2b-e22c-476e-b626-e6775b4406e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc0b4f3-3f04-4a90-a867-57996e7f8dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452ffea6-a336-48c1-8885-4113533bb359",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e121c80d-950c-43fd-aef0-1f0afc6acf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e2967b-5fd4-43e0-8821-66cd6163000f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db6290e-15ad-4859-b1e1-faf2d9f4171b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c1ad5a-882f-4c13-92c1-c28700fb89d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67fa740-52f5-4a14-b0e6-89d8d77d9674",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7243297d-0f60-4700-9233-f2f0bf867c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92acca8f-fa69-4b75-a0cc-8db80c3b2363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b85cda-e916-4b27-b04d-80112d48c363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951417ca-b3f9-458d-b3a8-813b272f9d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d70e98-eeb1-4c29-a5bd-5231ec2139c0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1150c589-d1d4-4653-9832-22cebd4ac1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7387fdcc-c5e4-47fd-b4dd-af7903626906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075db155-55b8-4eaa-a85f-52b75d629585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c8b982-af79-4965-9d47-85f64bb04506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a80edf-228e-467f-8d6c-86761fc47bc2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db57741-dc3b-4f84-812a-32649ad7dbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fc1bd0-a243-4b75-8c23-d406c30a273e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99535fe-c41b-4e0e-a3d1-1e8caff6a12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22401c3c-cb45-480e-953f-f42dda75f7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b2f2b1-36cc-495c-8d0b-e7fc0f45e080",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a843f9-39aa-4649-85cd-b8b7aa46976d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1624d347-c185-42bc-95ca-feb140ba4d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b69b6c-f62e-4892-a26f-4246a615f4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3b802a-b59f-420b-b808-da8766a8bacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b63dfe-f103-48e3-ae51-f799cdfd239e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b407cfaa-bc32-4455-9ab3-4860fb5de03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f931af-3643-4bbd-8526-ce7e3c33dfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faa2ecc-d31b-4445-8066-b226bbf483cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7351a6cf-9739-4621-8ae2-26e986af0ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d853a5cf-f4e6-4c2c-b2a8-ea26ba217c8a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b779c484-483f-4c1a-8b43-a70ceac38398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efbb030-68e7-485c-a484-3d860a125491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f13f743-5a12-4abf-80b8-9fa179735d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697be5a-aac0-4f39-a586-1d895c53a100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05030c07-3c73-4337-9287-cec279461086",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a27359-5bb8-4cc9-8180-0cf16c31e914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98cb8e2-3f8b-4143-921d-e541d8d88421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f0cd44-30af-4fd9-9b41-3caf87858953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ad674-282d-4722-917a-f3bb46484e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2d468e-5caa-4da5-b47c-6ece0ca32b24",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b22cfe0-1144-44a7-a25e-48db9affbe6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873b9e79-b95b-42f2-aec6-ab67ead12564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b253f952-d3ef-4e70-888b-bf618357198d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e33762-28d5-48d0-ab7a-bb9866ffa07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148578d-b818-4fa5-822d-a269e5184cec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46573a6e-a672-45a9-b2b3-445b141b58f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147a4ba1-5496-4ac0-a7f9-1d2ee61512ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa78458a-a6fe-47eb-924e-7d77f179a002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b087905-8224-4ec5-8321-f9984ec073e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c43dd-8bd3-4dec-a5dd-7cb92c7a64a2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baccf31-008a-4351-9c5b-96c6a15c5a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91dbda00-d1ce-46b3-aaea-d0d468117769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04e980a-e730-4a6c-8719-95e967e5c638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dad929-6ced-435e-86cd-848122867409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5af49cd-4843-44f3-926a-79ecdaeacfa4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3025739-e5f7-46b6-b3ca-d0bd24f87344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9962becf-d1f7-48fb-a890-51489604ff71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba78476-c1dc-47fb-878b-528e3dd54e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06319aa-c20e-4433-ad85-d02496b7b90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ae7030-1a4c-4cbc-9475-a7425459b216",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f0ed38-22c9-41ad-bb0a-b584bffda3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1c4550-d365-4ec1-a2c6-6fb7c237ed1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292946ae-e432-4269-9dbe-020f856c9696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aead2236-1293-421c-9d41-b22563317675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472b9248-a888-4e98-85c8-38fbf6913476",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d4686-bd27-4c54-8b4d-f4d56e9e6198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b369883-e747-471f-9f53-b6c3369ae2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278bf91e-a439-48f6-b456-bd387b888f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6331f7ae-3df5-4069-bd64-e2f6d4d7955e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ba9f7-91fb-4ea2-b210-3d2c5312d1a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9847df03-656f-4a85-a5a2-d28cbacda2e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f2ee7c5-fbbc-47d7-a38d-c9822eac6132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d992e48b-1525-4d7d-9b68-2c5445efc929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad3072d-4cbc-42ca-b44c-cc4d4569771b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a578be9-495a-444a-995f-bd3de5b9632d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621ed436-fff9-483b-a568-2299e4e2354c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00da7ce9-b954-444e-93ef-4bee4239257d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254f771a-6c93-43ab-849e-e7ab67b6dca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ea211e-dd30-4396-8f81-df2f8a09f5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b29ffc-a4f9-4f13-9788-f75a402d8b59",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3e01ba-83b2-4c14-8c28-c94c131f4bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48e9620-bd80-4b92-a4de-882f6dfc7221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc8b9e3-9a60-49d5-b869-edac645ac5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4680f356-45ae-47ce-ac83-875bf55de673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52278d3c-f395-4d6c-bc02-7a952c68ffa5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c37d58b-5460-4ae1-aa45-b8d9c548ceec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6925f8-e9f5-4830-b416-7e197beb2ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085f6d61-2625-4bba-99e2-8e5d8caef63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70ade2c-63be-4ce7-bf3f-40914f15adf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebc226a-dbdc-4626-bdc5-d92f5e539eb6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5231681d-2465-4d8e-8efd-42cf88ac52c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafd85b3-d1da-4c64-9544-d0d25dfed970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2bb507-e634-4bdf-b630-3942e74e15b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500af829-52a5-4e29-b71e-55df2f9226f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9da345-b9f4-467b-99f1-ed04554cde5f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90b1223-d07a-4b08-8f25-867a10d98458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab16ccf3-0932-4a11-b289-6411c2dfaf99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec87f1e9-469e-40f9-86f4-49ae4b0cdca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474f5772-59aa-4087-9c5a-91b7bf049cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a4e951-17f1-4524-a42f-26ff438a99f1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a837295f-93ac-4e0c-b21c-2e04d52035fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd531fe8-2f2f-4f93-8b2a-ed91b98b05e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0caa4ef-08c6-4543-a13a-04df93b3512a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56db481d-d9ba-4ae6-9a48-9d8069990581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0621e9-c679-4b25-b4ce-92a100263142",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddafc331-91d5-4938-9859-f2dd9c9b678b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43d8968-f912-43c6-a8cb-b4f054b182bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb33d2c2-d708-4859-bc6c-a6f8ebebe8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0dbf92-e706-4835-b315-aa4c47158c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3ae6ea-a311-4199-9c71-6c74d71fea31",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899a5417-8035-4f52-8622-97daad5569c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce709501-ae55-4d72-8a29-2846c162f3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baaec3a-e924-4628-a15d-d134d3b52e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65041191-6c30-4baa-aa9d-740eaba354db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc3fc1d-64e3-423e-a2d5-db6a3f3f470f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a42367-abfb-4c78-b512-39bc34b3ebdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56e76d1-56ea-4339-8939-e39b8d1a56a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8c3cc0-c5b7-4a4c-b0b2-21505a5e8c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d50abff-6e79-40c1-af49-ce2be95e4c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fcef51-e80d-4e0b-be09-7e5cd05805d8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90f371b-b97a-4f65-8425-311010faaea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca9957e-470d-447f-82df-49abe2d25087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a315c1e-d745-468b-a65c-3eead9fb2f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0414562e-8128-454a-9962-c22a65cd4773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d81eeb2-9edc-4c1b-9554-0f1550165823",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18acddff-3d21-45b4-ad02-86f6e8c1cb0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceab987b-5f93-4d10-843b-198286258e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ff1445-b72a-4e08-a085-ee3c5304c197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cf10eb-33a4-461f-a28d-25abb6745ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fac07a-3a9e-49d6-b1fd-4ebc73d01b24",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c87de-d857-4d7c-9458-ae3045885dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16143c68-562a-4bf0-ac71-6d8304f514ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca0fab7-fdf5-494c-8f8a-24b548f8b1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0926f8a-b1a5-45b5-8edb-d5fbfc82231b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e66ca-072a-41ef-8037-375c1d7824a0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fca061c-145f-4d28-8d81-3becff1570e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8149977-64ff-4e34-a048-6e15587f09c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833e5d86-94bd-4f21-9ff8-852e2ec0dac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce19119c-9005-40f7-85b2-ae1a21eef456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2b70e8-8e79-41fb-ad3a-b527be00f528",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f59c673-76be-4517-8efb-5ccc167391c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b35018d-f3ba-4af4-8094-3170d8336a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d94217-937b-474f-bcbf-5a870327e44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105f88c4-5698-4161-a480-6ac9fb0edfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c20d453-8a1a-4adf-b9e8-565f489698dc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5333aba-6fdf-4b6b-a0e4-195c95737a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42b2300-911d-44f6-b7d4-3f30d4b6cebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb69b35-f65f-4fcd-b698-373bf7d80354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8b8eb4-6d95-4b2e-89dc-275b518c9856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ac5cc1-c1fd-417f-8336-569b1f7927a5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8647715-ecd3-48fe-bb29-fbed3b6a1781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff46f69-923d-4086-bb1f-6c47f43148c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d01d816-4adb-4b0e-94e4-3fac1c9120fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f743e9-69a1-48d2-b6e4-711b42721835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f687f8ed-510c-4a73-9098-1c9b5a314641",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f9dffc-61e4-4473-b264-5ce3654ba1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0c38ac-6d4e-4325-b86c-922267fd01c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b08629-afc9-46c1-b7be-7f9751e6be9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd339cbc-233b-4145-b208-b5c8e10812d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad16d9a3-d670-4327-942e-20601546f521",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e6bd00-ba94-45e5-b0f0-803d9903adeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c602c2a-829a-4847-a48e-54432b56d328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1710cd8-5803-44af-b260-02c4a6437b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebefd4d-24d0-4a63-a345-c12a4961b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673196a9-7f64-44d2-ac8f-f6c69c554a9a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49435496-8bd7-416f-a1c8-8f2d6b394ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd579579-8208-4d16-83cd-cc338a77c530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c3c49e-658b-4eb0-87fc-42950c5c40be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bc424f-4744-4dde-9fb1-3c6394759c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69be41e7-0e30-4e7f-a8f4-46b83d9ebbae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ea8c0f-d178-4e30-b235-6128e21a0dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e49be73-37a6-406e-b78a-50f9453b7a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a960a7d-cdc4-4e02-810e-6676b3d43ad8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454d53be-da50-46cf-b633-6418ae017595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11065524-b17a-4bf5-8d5f-e333fa94d4a7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a0e634-d680-4c64-afc1-cece64c6a03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7fbcc7-28ac-4446-b24f-ed9519abee8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f322f878-c8ac-4c9f-a14e-69c433b54fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504aee16-1d40-4438-957c-9f0b918e1326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232748fb-a445-4ab2-a663-2b8ab4f94420",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5738f215-6f8d-48a1-a43b-1de56855f231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0502a7d-7ad7-43c4-a184-475c890b8c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e0a31a-da90-4ce9-a604-be020d14acfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1322088a-df56-4373-b619-bf6ece5128e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2d69b7-18ff-49af-95f2-4f5b5fa529fd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ac234f-ddd4-41b7-9d35-6fc209df1088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d131a854-a3c3-4914-9917-9fef3e87985f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2464554-ceeb-458c-b3ed-344b9a62fc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb5c849-8c03-48e9-ab30-b3e1f390d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094754cd-95fa-4983-9d3c-f83d53cae082",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76360bf-2203-487a-9247-0497571869d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2e91ce-4ab3-4fb7-9446-0bdb50aadbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5458f04-ceed-4e13-bbca-983ed8a15d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e642f2c0-0963-41f3-bd80-fc39334138db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d4a8d3-ff22-4232-9352-dbee17177712",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bf313f-648f-4aed-b7a4-25040e3e20c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f490b95-35e2-4131-873e-a567c4562fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7957ec33-7727-4ffb-a725-12eef22880c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fae344c-1c76-48c5-a1a9-11080c480380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c450ac-e6fa-4f5d-aefc-5f420c6b2b79",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba63fd06-30fc-4e83-827f-9773528689f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a869c52e-aa44-47c1-a655-ee19f6cc681a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779a4b62-42f3-430e-993c-24be5a6f91cb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d547e287-02df-46ee-8e05-209c8b6c6933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1938a4f-4159-4a33-aef0-7d3553d73f3c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6220ff3-eb9d-4996-8ee7-ef3de5ae9758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bdeb12-739b-4a2a-a638-ad75b6bdc7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71f751a-befd-4cfd-b4c8-7b110a1b4816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04d0167-4671-4eae-9d3e-339428553f6f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c52e77f-12d8-4e3e-a4b3-63d471778c0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c4865b9-3e4b-47eb-b0e6-47e1ccdda4a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5e54e28-f8b8-4c6f-af1a-99c89565f63f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23976a9d-c671-495d-8a3e-e7b6bb0292a7"
                    }
                  }
                ]
              },
              {
                "id": "e2d36b4a-40b4-43bb-92b6-8ea69c1b3eff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc286a96-2c24-4265-9d92-6629668b95cc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf866f22-e006-4ddb-95cd-41f5421bdbf5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0aa1eee2-f038-4a2c-99b7-b22241816200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a785f0f5-4376-468d-9db5-561061af7346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e8d3aa5-7b04-4ebb-a908-1d098753eabd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfd8a8ba-f80e-4dd6-b651-8da5b6b4eef5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85170483-5257-48aa-9d16-021992764456"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72df83b0-410f-4de8-a215-2801bbde6cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a44519b8-4915-4c8f-9d68-35ed6fe5f965"
                    }
                  }
                ]
              },
              {
                "id": "b5a88cc1-2b36-4bbc-9162-ebfb5dc98640",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fa73fbb7-9f23-419d-a1ac-b5f64064ddd4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb6419b-7628-4ca4-9679-d05d2b172b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f16886a7-60df-41e2-83c6-91047f31280c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd64577-e39f-4efd-b24a-55fa77c2af8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bcc45c-6fe4-46b3-8dd3-ae8a6d063e35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "def869d1-4bba-4f47-b7a6-ad2237c0ce2e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f29a7ccb-fa1e-4cee-bbac-ffb51e18355c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "003fd7f0-ce2b-43f1-b201-744d040c4a4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b61aa8a1-7056-4f93-9f28-31fbf785e5c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5909ce2-87c2-4658-bb05-018056a4ae03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb620a51-3807-40bc-a2c7-fa8bc57c403f"
                    }
                  }
                ]
              },
              {
                "id": "dcbe54bf-4e05-4b3b-a0dc-14eb8715f4da",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eebbc1b-a209-476c-bcde-12752dca43f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "41c1fc9b-ff0a-41b9-819c-6cdcb06c878c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5af353d-2cf7-4bb4-9707-248485c8a627",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42b942af-91ad-4f5e-9811-cf6cc2e42e37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f883ed6-47fe-40b6-907b-237bf8391bde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1e9d2eb-6076-419e-b228-9ccb5218b154"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67772dbb-28e3-4ed3-a52f-784715cce1d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f91f6ac-c5ef-4227-adff-1d9a55911475"
            }
          }
        ]
      },
      {
        "id": "3c816b8e-0d58-4efb-a731-1b4ca06ca426",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "07bc4b52-0bf9-472c-8035-728ec34c83f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f1b717b-43a9-460c-b4d3-b3166ce02d49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c7018d1-7fba-49cd-9b00-b74e86088557",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712853b2-3b0d-48fd-9aa4-eed03a8a1cf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3fab1d6d-fdb5-4eee-9188-ab079aaafcbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3929244b-2a0e-4cf3-b317-81c09cdb1750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "550654aa-c426-43e7-954d-3ff4c9f9fb25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e65b09a1-762d-4191-be72-2dca00b56db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d901dcb1-6027-4ad0-9d64-673d4ca05c64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bb7660f-2bad-4177-a9a2-0738c3ec561a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0ad0910-932f-4eb4-aedd-eca79f243978"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78a0b2b2-c176-47c1-a5e2-6c5d5e8ccbf8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7ebe77e7-241f-438c-bb12-d9a1b7e7c536"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8cf942f-eccf-408b-9449-1b2ce7fedb90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fb8168e-dccc-4703-b037-5c5ed798f9cd"
            }
          }
        ]
      },
      {
        "id": "876d28b5-6cb5-49ce-a7d6-e12ffca9263d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ef3ab74c-aebb-48a8-bd19-51b8dc87ceff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a851541f-c2e1-42ff-bed6-0694d5fb3e82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a22d9b7d-d038-49bb-a8d6-dc8d072f05c3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a1ddbc-5ba5-4913-bdbe-a6d1338447b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f1399c8-d624-4d87-b322-3628c55e812b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1a0316-613d-44eb-8bb4-32ecf65920ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f63201e-4e16-4963-b23b-fd125a9cc8b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16a9b51f-209a-4aca-ba92-1eaca21de899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e006117-7b81-4401-a9ed-c28f094f8f43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7c82a1b-bcbc-455c-8e2b-541ec796a9cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd524c25-a0d1-44ef-880f-cbfdd6c295f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a837692e-e043-4905-86bf-82903e749ff9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8797b677-a4e1-4485-81b6-c2ef47956de0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b8f119a-6591-4b05-b39f-61c38fe1b73c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d7c66d3-469d-4bf0-92e9-59ba34e80b99"
            }
          }
        ]
      },
      {
        "id": "81f724f7-fdcf-4e81-ae67-d51b9697b27a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "921ba1df-e885-4416-9a62-8a1f18df1580",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb53f8c8-2d5e-450e-83a5-1344a96ee8e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00ad3ae9-6e83-405e-b2dd-a7c63a7ecf29",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503c2bf1-8214-4a56-840a-69da8a49e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2675438b-2266-468e-9126-3168c30a2016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc5d10d-abbf-417a-aa35-a5ab695183fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e65319-7726-40d0-b5a5-df68ac3ae0d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2579efcc-6662-45d3-b8c8-a20d66e6c2ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f626976f-72b7-48a8-ac91-26bc1b12c2e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc8ece7d-a5fa-48b6-885b-20b50dd562b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e164f257-0b7b-4aae-9d04-06904aff1091"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed3eb39d-ee71-4317-9611-af3df0b4bf56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "980f7480-eec0-438c-b705-c62b217761d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f86a1915-9d75-4fb3-9f49-0ed13e22b913",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02e70eb9-8ccf-4462-83c6-625893a52bba"
            }
          }
        ]
      },
      {
        "id": "e5bdc380-2307-4db3-adca-d5fd5208cc45",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a940f69c-62ef-4f37-a8fa-0e8037b7c81b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c5fbaff-0a4b-4bd5-9b59-f1556b478b5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aa48fe19-5544-469e-8e32-1ac6dc4dd65f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39c6485d-be24-4b36-a9b6-c934c83705a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a61686e5-1191-434e-a9e5-926a8242c621",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 139.24603174603175,
      "responseMin": 10,
      "responseMax": 11408,
      "responseSd": 826.6660492173952,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725756443087,
      "completed": 1725756486309
    },
    "executions": [
      {
        "id": "ae927e6c-c1d8-46e9-9b4e-2d7549abc1ad",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "285ac1c1-bcd1-453d-9cd0-d683c75083a9",
          "httpRequestId": "826cd298-d5f0-479f-87ae-0352fc207924"
        },
        "item": {
          "id": "ae927e6c-c1d8-46e9-9b4e-2d7549abc1ad",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "74fdb294-fcfe-4ac2-a912-3e5db6fb5d54",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "94246a4c-cbbb-4c1b-b780-4fac02fe71e9",
        "cursor": {
          "ref": "26aeb627-e575-46a8-8631-0aaddd758ec6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f779bdf4-9ef7-491f-93b7-409a470e3f3b"
        },
        "item": {
          "id": "94246a4c-cbbb-4c1b-b780-4fac02fe71e9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "029ade9a-2b10-4b6f-a113-4af752373aab",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "b2806398-6300-4ddd-bf04-c309d3a0ae2b",
        "cursor": {
          "ref": "eeb09041-62b6-4459-8449-9dde62b9ab87",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "35e13998-3930-4e9d-8509-fc3274339b87"
        },
        "item": {
          "id": "b2806398-6300-4ddd-bf04-c309d3a0ae2b",
          "name": "did_json"
        },
        "response": {
          "id": "f7453ea5-2e80-4a20-badf-1b6736da5f14",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14e170e-294c-4e30-aac8-53e8fa5c45d1",
        "cursor": {
          "ref": "2737a5d5-038a-4098-9914-65b0ce28d87b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8743e35e-ddfc-439b-bcf7-32867b3beda1"
        },
        "item": {
          "id": "a14e170e-294c-4e30-aac8-53e8fa5c45d1",
          "name": "did:invalid"
        },
        "response": {
          "id": "6f9d5285-6be4-4a89-8ea7-0a611016bdc4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 443,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14e170e-294c-4e30-aac8-53e8fa5c45d1",
        "cursor": {
          "ref": "2737a5d5-038a-4098-9914-65b0ce28d87b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8743e35e-ddfc-439b-bcf7-32867b3beda1"
        },
        "item": {
          "id": "a14e170e-294c-4e30-aac8-53e8fa5c45d1",
          "name": "did:invalid"
        },
        "response": {
          "id": "6f9d5285-6be4-4a89-8ea7-0a611016bdc4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 443,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247e3911-7230-4085-a10b-d9af0ed84ea0",
        "cursor": {
          "ref": "1cf2c906-ad52-41c5-9183-8e6ae1f9b6fb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3ff13fb5-10c4-45b2-a347-da054d9c75ba"
        },
        "item": {
          "id": "247e3911-7230-4085-a10b-d9af0ed84ea0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe246a82-b50f-4d1f-94a8-90ff23b75bb9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d15d405-f093-4d61-9ed6-0ceb10833f4a",
        "cursor": {
          "ref": "e22ecd95-44f7-4921-9a19-514e9ae069c1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "243979f7-328d-4deb-b12f-56e70db4271d"
        },
        "item": {
          "id": "4d15d405-f093-4d61-9ed6-0ceb10833f4a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3d2d0ef6-9eca-40d6-b4ef-eb197bb3e498",
          "status": "Not Found",
          "code": 404,
          "responseTime": 249,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128da71c-c55b-444d-9e1e-9b8527cda002",
        "cursor": {
          "ref": "e7c7a527-8986-42bc-a648-9d50a871afb3",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e68a2870-acff-4804-bd50-765ef5a0e701"
        },
        "item": {
          "id": "128da71c-c55b-444d-9e1e-9b8527cda002",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5026ed5a-5dc3-401a-b04f-1a2243ef6c90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a693da6d-d771-422f-b2b9-af1e52f0c231",
        "cursor": {
          "ref": "2ad00b62-4c3e-4b36-ad13-2def49851314",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ee3e92e4-e771-46fc-9eec-71791ddecaf5"
        },
        "item": {
          "id": "a693da6d-d771-422f-b2b9-af1e52f0c231",
          "name": "identifiers"
        },
        "response": {
          "id": "6988f8d9-8798-43bc-95dc-310a21f84b8c",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3ad388-e778-402d-9dbf-c03c1dfe622d",
        "cursor": {
          "ref": "3f975da2-c473-4524-8fca-623f9e176f9f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d42e8963-77d5-46e1-8943-f8752eb76c23"
        },
        "item": {
          "id": "fd3ad388-e778-402d-9dbf-c03c1dfe622d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50f01bb7-a221-4d6a-bf63-b0ad89182c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f5f27-0017-425b-a6ee-ebd01efda466",
        "cursor": {
          "ref": "bf6e2d5f-e794-40e0-aa31-c5a676d54f2e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c6276f4f-f1f1-4764-addc-ddadffbeb94c"
        },
        "item": {
          "id": "e60f5f27-0017-425b-a6ee-ebd01efda466",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b550d5ba-1a7b-4f46-a34e-f50928e0663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b9a0c-bb08-47c7-b315-d72eae3bb08a",
        "cursor": {
          "ref": "ac765e88-84e6-4aac-9193-0415b5d39f99",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3640e4f7-8155-4fd9-96ef-ff98bbc2f81a"
        },
        "item": {
          "id": "6e4b9a0c-bb08-47c7-b315-d72eae3bb08a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "73cf774f-05e1-46d8-9fd4-d2fa9d616f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffc35b8-7531-405b-8860-dd82b709d402",
        "cursor": {
          "ref": "d3d68997-a689-43dc-9fde-7cc47a3c77fa",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "aa6a1e2f-67b1-4c34-9e1f-f39b28710bfb"
        },
        "item": {
          "id": "5ffc35b8-7531-405b-8860-dd82b709d402",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "94c81512-5ce4-4fb7-a8c0-01c730c7e18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02648cb9-a89b-4995-a5c6-f01a7699a16b",
        "cursor": {
          "ref": "a7f2f3cc-06d4-47be-9c50-71621e9a5b6d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9af0c177-d1fc-4ea2-ac98-4517863cbb8f"
        },
        "item": {
          "id": "02648cb9-a89b-4995-a5c6-f01a7699a16b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "62f29376-4a90-475c-804c-28626a2f2a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ba3d8f-8edb-446c-a1e1-a4bfc023c3a9",
        "cursor": {
          "ref": "25d1cbf8-ee05-46ee-a783-bad3b9555371",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e09effff-f295-406d-b72d-689fee6773f1"
        },
        "item": {
          "id": "e7ba3d8f-8edb-446c-a1e1-a4bfc023c3a9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d134ca8b-c316-4c7e-b025-4d8bf3a9eb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c2cdcb-f3a3-4c9d-864d-63d5adc76e98",
        "cursor": {
          "ref": "8ab99fb9-35a9-45b9-99bd-2f0da66c9f9f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e137108a-ed69-4f6c-8079-485e91072ab2"
        },
        "item": {
          "id": "81c2cdcb-f3a3-4c9d-864d-63d5adc76e98",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8f4ffddc-691d-416e-830f-3841bf5db9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba52a54-7263-41e1-a947-b8639a17cdf6",
        "cursor": {
          "ref": "47c5d245-27d9-4f72-a5e6-3dc7bca71c6a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3bae3066-baf9-4974-b5e1-25a9fac52edc"
        },
        "item": {
          "id": "2ba52a54-7263-41e1-a947-b8639a17cdf6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "95c5b3d1-493a-44c3-baf6-45bb52d2ccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa0498a-c7e6-48d9-87b2-591d97eb8f41",
        "cursor": {
          "ref": "ab29a2ba-7fab-40ef-a432-fd37918ce7c7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "16435487-c555-47a8-b3c8-b0b35f14f9eb"
        },
        "item": {
          "id": "efa0498a-c7e6-48d9-87b2-591d97eb8f41",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "92d50e66-7e1b-411d-b858-913892ab52e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b2a374-c9ad-4d20-a09b-13bbe87e9823",
        "cursor": {
          "ref": "c5b475bf-36f1-4d02-b5b5-0bd98045b452",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "54efd99d-2a79-4d26-bd23-ee47c6c1567c"
        },
        "item": {
          "id": "55b2a374-c9ad-4d20-a09b-13bbe87e9823",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "88ac15c8-c2ea-45dd-9441-ff78414b5e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822eb719-8045-41a5-926e-edb2506ecde4",
        "cursor": {
          "ref": "cc754bbd-a364-4ec8-aa83-db741359712d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c060d450-de1e-4579-a97e-c0e184d8911f"
        },
        "item": {
          "id": "822eb719-8045-41a5-926e-edb2506ecde4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3923145f-e9d5-4e3a-b95c-c94f01efe931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278520d5-5904-4693-b509-782489f729de",
        "cursor": {
          "ref": "61634db2-a710-4236-9fd9-ab2ed348b8d5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7595c73c-69ac-48fe-99c7-00426d2d1d81"
        },
        "item": {
          "id": "278520d5-5904-4693-b509-782489f729de",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "013aa1e2-d813-4105-9da3-b8d6d5291248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135b70bc-8cf2-48db-9003-5a016899801c",
        "cursor": {
          "ref": "c3e754d9-123d-452a-a0e2-94c2eacc959f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ade122e6-8412-4e57-847a-bf09fc34b877"
        },
        "item": {
          "id": "135b70bc-8cf2-48db-9003-5a016899801c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0caff080-cb9e-4b5d-88a0-ad61ff7cab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3768694-39c5-47ce-a036-9ee542f3cf48",
        "cursor": {
          "ref": "57beec89-b95a-446f-b75e-91ac673f9482",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "adf20303-f348-4766-8bbc-424b294a0dd1"
        },
        "item": {
          "id": "c3768694-39c5-47ce-a036-9ee542f3cf48",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d6d5e0d9-4fcc-421a-9bd7-056375266e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4f075c-9f4b-4b72-a27e-5ce124dd06be",
        "cursor": {
          "ref": "d7aa7010-7c62-4d3c-aa24-0daa6b79427c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "666a1cca-73d8-4382-a724-02ea33786e66"
        },
        "item": {
          "id": "fe4f075c-9f4b-4b72-a27e-5ce124dd06be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "68ed0153-6dd1-42b1-b854-f81ae1e552ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31333d5-20d1-4190-9617-09448dc155f7",
        "cursor": {
          "ref": "60358aa2-636d-4c06-acfe-0e6a3503958b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d7c4ed8d-eea9-484b-87e1-a609e7a8278a"
        },
        "item": {
          "id": "f31333d5-20d1-4190-9617-09448dc155f7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f6a63d8-af9e-41fa-b2c6-b5770c088b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1a3233-375c-48a4-90ae-2f163d449308",
        "cursor": {
          "ref": "90a10ed4-ee24-42f5-9407-8834f493c696",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e01114d5-94cd-41b7-b883-bfdfe00e115f"
        },
        "item": {
          "id": "1e1a3233-375c-48a4-90ae-2f163d449308",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "275cc800-8d84-4c90-99e6-8ea898717d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f69a27-1965-458a-8de8-f32123789a15",
        "cursor": {
          "ref": "4756bd9b-8487-4888-9865-9ea5d0a46478",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fab456d5-43a3-4027-b94c-9accb283d804"
        },
        "item": {
          "id": "05f69a27-1965-458a-8de8-f32123789a15",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "03b9a80d-21b5-437e-8996-63bf69570d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d5afab-0916-4b23-bfdc-a560986a4f13",
        "cursor": {
          "ref": "6a5356a3-c1de-4142-858f-aedbfcd30bde",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dd6b48e7-5f9b-4a6b-a6cb-f3f74bca207b"
        },
        "item": {
          "id": "79d5afab-0916-4b23-bfdc-a560986a4f13",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8671fd00-7568-4314-bb02-a91bb678ae1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46411bc-1f31-4102-a1fb-36969d47df18",
        "cursor": {
          "ref": "41b069c4-b208-4f3b-9917-11f10f43fd94",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "24f421f5-6484-49bd-b404-09f5519514f5"
        },
        "item": {
          "id": "f46411bc-1f31-4102-a1fb-36969d47df18",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fa844ed6-657b-41e4-9da7-9df08f2868cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7aaa86-d071-4c24-bfa4-92df6a65e8df",
        "cursor": {
          "ref": "3cca6574-eedf-495e-b552-7e8687bf1cd4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7e05f948-d696-428e-8654-9605ae73e3e0"
        },
        "item": {
          "id": "ef7aaa86-d071-4c24-bfa4-92df6a65e8df",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e9480e6f-c6c7-4a09-b766-24c9d58be4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72010e8a-53b4-48da-ab81-102d814391fa",
        "cursor": {
          "ref": "c2a8f359-e519-45b1-9347-82f4a00ef50d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e3041bc8-283f-4676-86ce-e6cfff9fc401"
        },
        "item": {
          "id": "72010e8a-53b4-48da-ab81-102d814391fa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fb579e97-b9a1-426b-9513-0c5ed0f736d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e68d27-a1fd-4733-8d2e-ca01f0b691e6",
        "cursor": {
          "ref": "af0306b0-dbe7-4bbb-9730-b4e8035ac68d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "08866f9c-ff6a-4485-ac23-fb3ae1e2d2dc"
        },
        "item": {
          "id": "39e68d27-a1fd-4733-8d2e-ca01f0b691e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a4306950-7bab-4abe-ab87-adc5e565ab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6b9411-e282-4fb7-8cc4-b7465407ae42",
        "cursor": {
          "ref": "78ac9530-4986-431c-a55e-586421d05341",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ce12607f-bf1a-4522-bb2f-f48c68bd0ffb"
        },
        "item": {
          "id": "4b6b9411-e282-4fb7-8cc4-b7465407ae42",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "92c10894-58bc-4fc8-9b16-54872d573272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7071926d-403d-45cc-b917-8420bb624e0f",
        "cursor": {
          "ref": "baa010d4-eb6d-4c25-a2a1-6809918fb1cd",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3c8b9781-db74-4e0e-9376-fb00f80bd5b4"
        },
        "item": {
          "id": "7071926d-403d-45cc-b917-8420bb624e0f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c3010bb2-68df-42a1-ba76-d424fa9d06f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112f4991-f80c-40d9-a7c9-36b701983f44",
        "cursor": {
          "ref": "42d000de-227b-48d5-8f9b-a4401cbd7e22",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4d4ec9f1-9019-4a48-8a79-0a283fb6bdcf"
        },
        "item": {
          "id": "112f4991-f80c-40d9-a7c9-36b701983f44",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "16cc8d5c-efa2-4903-8316-0e405579c363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d5c226-f259-4790-a2f8-f7e615e09cb2",
        "cursor": {
          "ref": "6d99025b-e217-4fd1-bb02-5da7b8b157e0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a36013a9-5039-4aff-be4a-7844168e6adb"
        },
        "item": {
          "id": "17d5c226-f259-4790-a2f8-f7e615e09cb2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "040c55ac-07a6-40ff-915b-b3f314688a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e790ab6-a246-48c9-b7ad-dcf3b43c6164",
        "cursor": {
          "ref": "a5467124-a9e5-41a2-8d78-9b9af90ca67f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "65bc8a0e-7502-4758-abec-40e01b36a9b4"
        },
        "item": {
          "id": "5e790ab6-a246-48c9-b7ad-dcf3b43c6164",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9cfe21a7-e1f8-4b47-84df-13c7fce20cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8e7a55-b6db-4dfe-94cc-314113d2495f",
        "cursor": {
          "ref": "825eb2e4-2a17-43ed-a1f5-86e62983e4cf",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c14f5172-0eef-4ba6-b56d-078a4872af06"
        },
        "item": {
          "id": "2d8e7a55-b6db-4dfe-94cc-314113d2495f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1e0dd99a-3046-42d5-866c-0549b98d271b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed9d575-3750-48e9-8a53-10fac578a2ee",
        "cursor": {
          "ref": "84ab1eba-d7a6-4957-8202-1bf7eeddd04a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0df8eaaf-ce5f-4c3d-b18b-ac02a2ffe9be"
        },
        "item": {
          "id": "2ed9d575-3750-48e9-8a53-10fac578a2ee",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9b771496-54b3-48ac-94d7-d0979b343237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b561ce33-6470-400c-be27-691a45f57b6f",
        "cursor": {
          "ref": "d4b586e9-def8-47b6-a677-58dc1d9d9c27",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7c3cb0bb-db3a-4983-afb1-a0b41ff125e5"
        },
        "item": {
          "id": "b561ce33-6470-400c-be27-691a45f57b6f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7fd71bf2-e380-455d-b027-29c383265f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c150b4f-e618-4d34-b5c6-9eb47faba2b2",
        "cursor": {
          "ref": "b8111fdd-ae33-40b7-88de-83d8f218fd78",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "edb070d3-7511-488d-8d03-d39e107488b9"
        },
        "item": {
          "id": "2c150b4f-e618-4d34-b5c6-9eb47faba2b2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "def8b2ee-e927-455b-bc79-53ee41020a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f3109f-9868-4805-8bc5-4df612ace9ae",
        "cursor": {
          "ref": "ed18825e-3f65-4f27-95f7-409ae9b2b25e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4243d236-83dc-430d-bbb7-102615e1b987"
        },
        "item": {
          "id": "15f3109f-9868-4805-8bc5-4df612ace9ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f4d06028-1fa1-4174-af4c-5818cd48d8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe0c3a9-7c49-41c4-8337-b13510763ccf",
        "cursor": {
          "ref": "a470ea95-69e5-4f6c-b082-c7e762f2153d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "656f59b2-1617-451b-b32c-4b3cfcf274a2"
        },
        "item": {
          "id": "0fe0c3a9-7c49-41c4-8337-b13510763ccf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e2814773-ca85-44d1-b8cd-3ab3134bc04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19821e65-82f3-4f6f-96e1-21f43cb66934",
        "cursor": {
          "ref": "b08a50c6-d5d5-4168-9d00-d45cc0e89e9e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e0f3220f-1648-479f-a4cd-d6d2a010c182"
        },
        "item": {
          "id": "19821e65-82f3-4f6f-96e1-21f43cb66934",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "54db0bad-0de3-4d44-a918-2187a73ac1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f979b1e-67b1-4db0-8199-17ce0ed57dd3",
        "cursor": {
          "ref": "bd8422ac-9dd3-4109-9c2c-344554951558",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "79eee20c-26ce-4528-8bd9-88a058f6d95a"
        },
        "item": {
          "id": "4f979b1e-67b1-4db0-8199-17ce0ed57dd3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "55f643be-55b5-4ac1-ad4e-17d4912f5338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9249b2-6a3c-4ca8-9a0a-1ae5df2812b5",
        "cursor": {
          "ref": "6aae6d32-ba28-4ad3-9f2a-7a373e241bbd",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "74a156fc-9454-48e9-93a6-a06bbcfbb2cb"
        },
        "item": {
          "id": "0a9249b2-6a3c-4ca8-9a0a-1ae5df2812b5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b5cde380-80ce-4ef9-9c3a-9e7ef2c125c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c059f3c1-d8bf-4206-80c4-9ee0a5844440",
        "cursor": {
          "ref": "3a603eee-30cd-4c1c-8bcc-4b95efd48822",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0dbe1196-bfbc-40ab-98cd-b51fb8b10b8c"
        },
        "item": {
          "id": "c059f3c1-d8bf-4206-80c4-9ee0a5844440",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5e30027b-ae42-435f-bf1f-3bba489a99fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9392408-db0e-41ab-9dcd-65cfd73b280b",
        "cursor": {
          "ref": "c38d654d-16c1-40f1-925d-4ccae7006cd0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5abc5c00-d629-4d69-8a26-ea4cd2f20092"
        },
        "item": {
          "id": "a9392408-db0e-41ab-9dcd-65cfd73b280b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1ab64a02-b61e-434a-8fb9-5f598031baeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962d4fc5-a7ae-4d52-8a87-ee1161f99468",
        "cursor": {
          "ref": "d7a6b571-a487-4ab6-b6fb-40f06ed8fff8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d6063272-a8e1-42d5-8bf4-9c885c6e8658"
        },
        "item": {
          "id": "962d4fc5-a7ae-4d52-8a87-ee1161f99468",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3fc9fbc1-47f3-4a34-a173-0359ab347aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63912382-75f3-4aee-903b-832e0e3e63aa",
        "cursor": {
          "ref": "9ef7bc9f-fbe9-4f4a-8f1d-8773ebddf050",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f2df8af-97d9-44fa-b06b-69d64a182c87"
        },
        "item": {
          "id": "63912382-75f3-4aee-903b-832e0e3e63aa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ca972f1e-967e-4a3a-8007-9713088fd1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdf2d94-706c-46bf-a124-4a56bc2d9a31",
        "cursor": {
          "ref": "b1617137-1e23-44b7-b476-1110702007b0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ada964e0-de2a-45fc-9ab6-9f71aee40bca"
        },
        "item": {
          "id": "2fdf2d94-706c-46bf-a124-4a56bc2d9a31",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3086019a-0520-4c7f-8bc3-915a1237cad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fb2010-9e1d-4ccc-a317-d6ca4795db53",
        "cursor": {
          "ref": "b513f493-9026-4c89-8874-688958f28722",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "16b14130-18a3-4286-a8d2-d5c83fe96efa"
        },
        "item": {
          "id": "39fb2010-9e1d-4ccc-a317-d6ca4795db53",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6d59ea64-8262-41b4-bd47-3fe86fb7814e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45ddc5a-f919-4490-90b7-12251a8b8e13",
        "cursor": {
          "ref": "8a1329d0-2122-4044-aa2e-c566d7384bdd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ea77e20e-8044-49fb-ab22-b8b1a4e75e83"
        },
        "item": {
          "id": "d45ddc5a-f919-4490-90b7-12251a8b8e13",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "50cbf8d4-f48e-416b-ab89-80e74f86c744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d00b823-ebab-485f-8322-43e980a39325",
        "cursor": {
          "ref": "9008a841-9c8a-4bdf-be8b-f2481c720558",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6d5ba85f-08c3-4ab4-ac82-ddaae6b9edd1"
        },
        "item": {
          "id": "8d00b823-ebab-485f-8322-43e980a39325",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9fe2ff97-32eb-4464-be16-1a20d8eb6a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d062fe08-3b52-452e-b0ba-ebf0e2da7f59",
        "cursor": {
          "ref": "045b9fe4-ea8a-489b-9bbe-31256c5fee7e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "98192ba7-c6c0-4599-98f0-92823b612719"
        },
        "item": {
          "id": "d062fe08-3b52-452e-b0ba-ebf0e2da7f59",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "28f051d0-1c92-4d93-b598-ca91132f01fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650a0dd5-112f-4c2f-874b-042ee823ff70",
        "cursor": {
          "ref": "06a5aa98-c0d4-43d4-ac6b-d4906f32f3c1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "70b3ff81-0dcd-4cf6-9e95-1380f8b0947b"
        },
        "item": {
          "id": "650a0dd5-112f-4c2f-874b-042ee823ff70",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d1852191-3bb4-462e-a7fb-75b75e532ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e64117c-4bf6-4106-90ee-caee2e06f004",
        "cursor": {
          "ref": "7ce2dc23-955f-45fb-9b7b-24279c569b12",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "38cba197-6b05-4fb7-b92e-6b85b5586783"
        },
        "item": {
          "id": "6e64117c-4bf6-4106-90ee-caee2e06f004",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bbbfeddb-7400-40ef-8922-8bece90d00ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c3bc22-f970-42a9-a194-a4b28e09b0c8",
        "cursor": {
          "ref": "35965f9a-6125-4989-93a6-44d66b897c88",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eff28e33-cd54-4a01-aff2-983249e54545"
        },
        "item": {
          "id": "93c3bc22-f970-42a9-a194-a4b28e09b0c8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "285fd204-6e7d-4856-8417-9f1c881fd240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb47af24-18f6-4099-9a68-3bb138069db0",
        "cursor": {
          "ref": "8a991725-42f1-43b1-adc9-91ffcb95d51b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "505a71c3-31db-4e89-8b60-9618f5eec536"
        },
        "item": {
          "id": "fb47af24-18f6-4099-9a68-3bb138069db0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8f4805ca-92bc-4467-8477-9226cfda41b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051823b8-ef4b-471a-89d0-f6f500cdf565",
        "cursor": {
          "ref": "16272212-f37f-45a8-bdcd-5fc14680bb31",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a56cbace-2197-47d7-9c8c-730790017b1f"
        },
        "item": {
          "id": "051823b8-ef4b-471a-89d0-f6f500cdf565",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8d076a91-a5de-44ac-a63d-8e82a6863ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b067305a-f502-41ca-932a-4f12bae89657",
        "cursor": {
          "ref": "211e21a5-c855-4e27-b020-411f7b171d43",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2b88e0f7-591c-46da-af5e-e19ca93813c2"
        },
        "item": {
          "id": "b067305a-f502-41ca-932a-4f12bae89657",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fdca3d1d-6d7f-427c-98f9-38393a8dd5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d69ee47-492e-4f8d-b949-5c78fd365caa",
        "cursor": {
          "ref": "7176613a-fce7-4716-bda6-c4f86cf79dc1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8aee1ef7-ae00-4bb1-a2d9-5b24829c8bd2"
        },
        "item": {
          "id": "1d69ee47-492e-4f8d-b949-5c78fd365caa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5d41a63d-0f43-4707-9503-1a0fb1cfa40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f52681f-c5fa-4010-a88a-76262c54c38f",
        "cursor": {
          "ref": "8a69056c-73bc-490d-b9b8-73878a0ab86b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fb6d6d22-2677-4616-a204-fddb682b10d3"
        },
        "item": {
          "id": "1f52681f-c5fa-4010-a88a-76262c54c38f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c89759c7-8d56-4751-a3bb-9bd444cbc2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65902f5-7680-4fd3-8429-66651666fff7",
        "cursor": {
          "ref": "11d92c5d-619e-486b-a0b0-a213d8f195bb",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2da0e0a4-f518-48dc-a555-8693c92f475b"
        },
        "item": {
          "id": "f65902f5-7680-4fd3-8429-66651666fff7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a8bcc99b-a3dd-48a6-b900-063a65e5778e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a1203b-4e7e-4a8b-a46a-8bc8463e34e9",
        "cursor": {
          "ref": "3110cbe2-60fb-494d-901d-25a79176c815",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1216eb3b-88f5-44df-835b-4cb3223ade7e"
        },
        "item": {
          "id": "78a1203b-4e7e-4a8b-a46a-8bc8463e34e9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4f69bb36-b3b2-4795-b0a8-58d8699659f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6948ec94-7bbe-4f95-9419-ec7d8a7afc0f",
        "cursor": {
          "ref": "5fe964eb-05d9-4206-957b-3f894f7d7587",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f5eda8ab-5989-4e9a-8e2f-c95ad0a7f057"
        },
        "item": {
          "id": "6948ec94-7bbe-4f95-9419-ec7d8a7afc0f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1634e4f3-c291-4abc-a8af-a1a6090a5288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c4587d-0eac-4306-a29e-005bd5e4ce4b",
        "cursor": {
          "ref": "a3c2b2ce-2e60-4106-b4b0-63c9cebf01e9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1805965b-4c38-418e-bda5-43d29d2f69ea"
        },
        "item": {
          "id": "39c4587d-0eac-4306-a29e-005bd5e4ce4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3a5c22e2-5671-4f12-ba6d-a8780ea137b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca2eeeb-2362-409a-acbc-b526530ca929",
        "cursor": {
          "ref": "896c6c20-d503-4e38-876d-c3c5396fb4fd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "63f0f284-ed1a-4566-9328-d0056616e663"
        },
        "item": {
          "id": "bca2eeeb-2362-409a-acbc-b526530ca929",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "79c900ff-cd2c-4b6f-bda3-343a37a9f2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5f6636-423e-48ef-badf-a055d4837e5b",
        "cursor": {
          "ref": "a4eef879-a732-4549-b2ac-c2ef589820d2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d80f576f-5ce8-491a-8397-81e8be85fa51"
        },
        "item": {
          "id": "0f5f6636-423e-48ef-badf-a055d4837e5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e04be71e-1659-4a47-bc17-b29a4372c3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c316e9-cbb5-4b04-a6e0-7efd034da8b6",
        "cursor": {
          "ref": "f0eb7341-e892-4500-97e1-9ae715ef191d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0347e0e5-746b-4806-a1c1-1e620546d095"
        },
        "item": {
          "id": "c7c316e9-cbb5-4b04-a6e0-7efd034da8b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8c69566a-e1cd-49b6-9abc-ada3b9d4ae29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78c55bd-22a1-40d9-8c01-f167f671dd16",
        "cursor": {
          "ref": "ca8b7985-20ab-41b7-ac99-0d1fbf60d6a9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4bc1b5b8-a906-4078-859b-5dab540d1442"
        },
        "item": {
          "id": "d78c55bd-22a1-40d9-8c01-f167f671dd16",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2a1b017-9250-44ef-8ec6-b33a8d8dbb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bd46b0-7b09-4d1e-9f5f-bc311b17712f",
        "cursor": {
          "ref": "ef664f2b-6efa-4a78-89b4-2e503f5243c2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "38a805b1-82bc-45e5-bf19-f9d9b4796c22"
        },
        "item": {
          "id": "06bd46b0-7b09-4d1e-9f5f-bc311b17712f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "32cc786e-8925-4681-8f92-d95c52670ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7640f199-1d27-487e-8504-0c579438b300",
        "cursor": {
          "ref": "0a16d7f7-27ed-4721-9ec3-cbdf81539ad5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4267da0a-f269-48ec-976d-e119926e8a62"
        },
        "item": {
          "id": "7640f199-1d27-487e-8504-0c579438b300",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "14aa6773-78c3-437e-8b33-3ae1c19b55fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a90d2d-749b-4fb2-8d5e-683e0bb495fc",
        "cursor": {
          "ref": "1ec6711c-6526-43b1-ad3e-61c539078215",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2d9edeb5-20ad-46c8-b9d3-2a6d63bf308e"
        },
        "item": {
          "id": "78a90d2d-749b-4fb2-8d5e-683e0bb495fc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ed91592d-41ce-4546-be18-cdf74d327307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586dafc7-7792-4574-8b8c-327a7e0dd8d0",
        "cursor": {
          "ref": "63b20723-e4c5-4522-bada-72701a22bc98",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cd6a82c2-4aa8-48e5-ad33-2fa6a9155fb0"
        },
        "item": {
          "id": "586dafc7-7792-4574-8b8c-327a7e0dd8d0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "194ae819-befb-48e6-976b-7cf33e4b4bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1597d353-238b-408b-a7e3-7c97127fe989",
        "cursor": {
          "ref": "aa20d16b-86be-49fb-80f5-1aa85393de1b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ecc737e8-6d03-4f39-8509-a1e83bd4f0f0"
        },
        "item": {
          "id": "1597d353-238b-408b-a7e3-7c97127fe989",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9493f5b6-6a71-43df-9d92-b7c9b8b6c5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a33a5e-61ca-4f65-b245-057175b8c5fb",
        "cursor": {
          "ref": "f8a2a241-f608-40ad-856b-e6d0e0bd2f36",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bb02a96d-3afe-4f77-88de-a46b2a9900f1"
        },
        "item": {
          "id": "10a33a5e-61ca-4f65-b245-057175b8c5fb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "33a0a359-d212-4ab3-bba8-03a445f28cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e5b246-07ed-4e65-ba76-0fbef7df4827",
        "cursor": {
          "ref": "945218ac-aa87-4c7f-8995-bbee855fbf44",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9784c23a-8059-4b7d-8ca5-3c71f158444a"
        },
        "item": {
          "id": "e3e5b246-07ed-4e65-ba76-0fbef7df4827",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f5350e9f-f2d2-440f-bb09-8b8d7a09a6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc46ea7-3a37-4d85-855c-79f5f200a88a",
        "cursor": {
          "ref": "fe8f1d2f-d956-4941-aa39-8b0587afc9f5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d89703d7-7507-44ca-9100-c23d8aefd96a"
        },
        "item": {
          "id": "8dc46ea7-3a37-4d85-855c-79f5f200a88a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e8de416-1234-4159-b8e0-7aa7b94da450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cb7591-4044-4205-ab62-e7f354c05f72",
        "cursor": {
          "ref": "7bba161b-5965-4972-88dc-811880778f6b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b002b3e4-f388-485d-897b-8704183c272f"
        },
        "item": {
          "id": "11cb7591-4044-4205-ab62-e7f354c05f72",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ee86ca09-0f0d-42c1-a7be-18fac2b23b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75c570c-8fa6-4f0e-83d5-ef4b5277e522",
        "cursor": {
          "ref": "70920661-1a5e-4fd3-957e-87039587c734",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "27ebc13b-a2bc-44c6-9884-3679d915729e"
        },
        "item": {
          "id": "c75c570c-8fa6-4f0e-83d5-ef4b5277e522",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6f3adfd4-0635-4354-8680-869a85e09394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6800a3-8079-49ca-85d2-a6c32143e309",
        "cursor": {
          "ref": "51f7f23b-e336-4a77-98e8-ec6c13db09ef",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2efabe71-dbb3-4441-bd42-6d080c88fbf8"
        },
        "item": {
          "id": "2f6800a3-8079-49ca-85d2-a6c32143e309",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e0aee845-b25e-44e1-b609-c2e189307d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557fdc93-1466-4955-906a-5564ac84dfba",
        "cursor": {
          "ref": "8481a3cf-8770-4328-945b-89e4dca523eb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2fb230e2-1029-4f0e-84a4-69c9a31dbe97"
        },
        "item": {
          "id": "557fdc93-1466-4955-906a-5564ac84dfba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14db54b8-cf20-48c1-987a-04ae71b678b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cc5f2f-d9ac-414e-a966-b9a6ad6971b6",
        "cursor": {
          "ref": "e462fc2b-533f-438a-adea-5ee198cfbfaf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1908172a-22b0-4d0a-b03a-c558b5e799a8"
        },
        "item": {
          "id": "18cc5f2f-d9ac-414e-a966-b9a6ad6971b6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0d92bdd9-b0dc-4d40-8c5a-079115aadd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0a12ae-fba1-4138-ad01-6cb79c2098e3",
        "cursor": {
          "ref": "29b958bd-66f4-455d-9e61-6ae11fc8fc9a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d0c9a599-82c1-4188-9ac6-c242f43c77c4"
        },
        "item": {
          "id": "4a0a12ae-fba1-4138-ad01-6cb79c2098e3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ed40f181-adde-4e01-b23f-595e9cbba4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c69ce4c-8a52-4af3-8f64-337e304db721",
        "cursor": {
          "ref": "0e2bf72d-b4e2-495d-aba7-e9acc7a7d657",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f3ba0fa9-9e13-4389-8206-2d34eea2a8f2"
        },
        "item": {
          "id": "3c69ce4c-8a52-4af3-8f64-337e304db721",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e06f996-d43e-4b11-9749-f61310a26fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2e7167-d570-4889-af12-72be7759ac58",
        "cursor": {
          "ref": "6f95cd9f-adff-49bd-a1b6-b54771739614",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b83bb32d-50a1-46bb-bd3f-0c720ec14e04"
        },
        "item": {
          "id": "2e2e7167-d570-4889-af12-72be7759ac58",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1da1ca69-fafe-40a9-865b-295bf38349f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a951e1c-86dc-40b4-8a9f-4c38d062c148",
        "cursor": {
          "ref": "7961e25c-2580-4aad-b600-de0817c7a122",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "82def626-a26f-437b-aa61-1896203539b3"
        },
        "item": {
          "id": "6a951e1c-86dc-40b4-8a9f-4c38d062c148",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "45291cf7-e330-4f95-938c-eea5505f616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b7e46d-238c-4e9a-b0e7-20b63e1ec202",
        "cursor": {
          "ref": "a38dd2b0-97fd-477e-84df-28b096be3f5d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b6a17cb4-4597-4d3e-8490-939ec847d4b3"
        },
        "item": {
          "id": "36b7e46d-238c-4e9a-b0e7-20b63e1ec202",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "022400ec-48ca-44cd-893d-43801cd5a581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39414e83-ce71-4a69-8700-955338b924c6",
        "cursor": {
          "ref": "500456e9-dad6-4b05-bdcd-e7a0fb229611",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4392434f-5187-49dc-b6b6-5219e423bb14"
        },
        "item": {
          "id": "39414e83-ce71-4a69-8700-955338b924c6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ef0e1e05-0b08-4cd4-b90c-8064403c625a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b39d0e9-350e-4b62-9907-2c916d4125b0",
        "cursor": {
          "ref": "974ff739-7640-4d4c-9b12-04f1b0f6fd25",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "32036892-7475-4192-9073-879da10a0407"
        },
        "item": {
          "id": "9b39d0e9-350e-4b62-9907-2c916d4125b0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d45f6807-daf3-4494-a8f7-1f8d559c03ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c87f2fd-70ee-4602-b495-42c0629520f3",
        "cursor": {
          "ref": "4c884e28-d7ca-46ff-88ea-315a9ab2e828",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d062089c-3d1e-4dd1-8b2a-8973501ba84b"
        },
        "item": {
          "id": "2c87f2fd-70ee-4602-b495-42c0629520f3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7bb6d37a-9d2d-466e-85ee-37153f028d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b83be7-92ea-4b30-a566-d970fd8a86a9",
        "cursor": {
          "ref": "d8a0012b-3bc6-4327-8cc5-3a7ffc587127",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2af7245d-0304-4fdc-8735-8f2fc45bfa6f"
        },
        "item": {
          "id": "53b83be7-92ea-4b30-a566-d970fd8a86a9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cef7598e-1cb6-42c5-9ddf-33a8a2bae83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e4dd5c-5528-4533-b2b4-3ce60fe4eb7c",
        "cursor": {
          "ref": "a4102ad6-a6f9-4a80-94df-bc4452804b48",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "caee6bc0-43f3-4416-93ae-a970c7ccf6a5"
        },
        "item": {
          "id": "51e4dd5c-5528-4533-b2b4-3ce60fe4eb7c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "42c3062b-ae6a-4694-8ba1-f110e9bc186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609f7354-92c7-4844-b174-c994a5dcf596",
        "cursor": {
          "ref": "39cf35bc-9636-481e-8fd9-4477fbffabf0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e3895f31-cf5e-46ec-a03c-c78e41328e3b"
        },
        "item": {
          "id": "609f7354-92c7-4844-b174-c994a5dcf596",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e60d7f85-66e5-4b57-a6d1-7ca773c67519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423d25de-26b1-41ac-9c9d-12da2b4dc9f0",
        "cursor": {
          "ref": "d5daa6f5-f04b-489c-908c-7b1e155b14b2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a719869f-15db-4678-9d29-51a1f54e2369"
        },
        "item": {
          "id": "423d25de-26b1-41ac-9c9d-12da2b4dc9f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9bb60d1a-a37b-42a0-a4f7-c1e770e60358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f286a21-4f31-4dbd-8b65-eafbc8fd40d1",
        "cursor": {
          "ref": "a403160d-d2e1-4887-b0e0-19d2147e1722",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b80bc4ed-dd06-4583-9def-b116033a449a"
        },
        "item": {
          "id": "7f286a21-4f31-4dbd-8b65-eafbc8fd40d1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5cb1df46-db05-4190-9388-2784dca520e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99316340-7055-4c55-9d80-08ac453e0a84",
        "cursor": {
          "ref": "6a3f9ecb-1ac0-4532-8b91-b62f4cb560fa",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f8bdeb88-ebfd-49fc-8883-7d22e2b8096a"
        },
        "item": {
          "id": "99316340-7055-4c55-9d80-08ac453e0a84",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "68a507c6-d943-4830-ba29-c18e79aa737c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91f371a-ef36-4b08-a5b7-919ecdc0213d",
        "cursor": {
          "ref": "54601c9a-c14e-436f-998f-f8a68e883df7",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "06cb734f-5eb3-48a0-9765-c70a5c5a858e"
        },
        "item": {
          "id": "e91f371a-ef36-4b08-a5b7-919ecdc0213d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ad23c75c-c1e6-442c-9990-735457d14989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e71ba-6b47-4e92-801b-086327772323",
        "cursor": {
          "ref": "41e201de-43a3-4677-aa63-6d2159e92414",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1be86d1d-2d3d-4328-9d60-bac071feabca"
        },
        "item": {
          "id": "ad2e71ba-6b47-4e92-801b-086327772323",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "19c5946b-6c93-4761-89a8-d3d1460b2237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39d6dd8-0a24-4286-990b-46fb11cbbce3",
        "cursor": {
          "ref": "6612453f-dc1f-432e-a752-7278c1b72af6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ebfc68f8-aef3-4c15-b50d-1ccd4ed3f582"
        },
        "item": {
          "id": "c39d6dd8-0a24-4286-990b-46fb11cbbce3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "45154596-878c-4f0d-89df-7b333a9e5c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe45a7ea-0662-4873-a200-2262201474ec",
        "cursor": {
          "ref": "2c9cfd2a-c4e3-45b5-8721-a3def3cabeda",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "883cb643-1eb6-4eb7-8938-bf191deb0d25"
        },
        "item": {
          "id": "fe45a7ea-0662-4873-a200-2262201474ec",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "adb09951-0e4e-40e9-a790-c943dba9b0f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1238e368-b141-44e5-aad9-6b1b49b0b054",
        "cursor": {
          "ref": "fe6d2469-e8a9-417c-8155-ff7b1dc4ab39",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6ce0af1e-fdc2-4e64-be2e-fa5b7a47b9f5"
        },
        "item": {
          "id": "1238e368-b141-44e5-aad9-6b1b49b0b054",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "96dc6e1f-dd78-4ce9-b825-f9a8a961fce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2a4a093e-8e17-4423-8bc7-2754c87e996c",
        "cursor": {
          "ref": "c387bcba-dafd-4eaa-9b1c-8c6a885814ab",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "83467b18-0af9-4666-9823-a73e700f85ab"
        },
        "item": {
          "id": "2a4a093e-8e17-4423-8bc7-2754c87e996c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d1e8b0b1-eaa1-47df-92c2-37d27687bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0a731a95-ddf4-4558-8522-c0b430f890ce",
        "cursor": {
          "ref": "3c89b8a8-8ac3-45d7-8a25-9cf27407358b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7731cb88-11ac-406b-8acd-f5eeb94b3ea3"
        },
        "item": {
          "id": "0a731a95-ddf4-4558-8522-c0b430f890ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3a39976a-aa34-4e22-86db-416b326d17de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "56572b3f-c85c-431d-b771-2fe8b266ba67",
        "cursor": {
          "ref": "4547a93f-9cc4-4d92-9235-bef8bddc8596",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d660c6da-baf2-4715-b923-250b5d937251"
        },
        "item": {
          "id": "56572b3f-c85c-431d-b771-2fe8b266ba67",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "436ac8cf-738f-46cd-9f4a-bedfd7da3ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4133580b-606c-48de-b9fc-735f01017e66",
        "cursor": {
          "ref": "24d6ec2a-a57c-400d-8f12-a5f7b337cf87",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "15ce65c6-6ba7-453d-84d7-5a81121ddd67"
        },
        "item": {
          "id": "4133580b-606c-48de-b9fc-735f01017e66",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "94e1d753-bc4b-4c8b-976b-a0f335b25b75",
          "status": "Created",
          "code": 201,
          "responseTime": 11408,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ab1079-8cca-4b07-9b95-3682d0ef24c8",
        "cursor": {
          "ref": "46a431dd-a7f7-4655-ba6a-38a7588b760e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "93954fc3-c903-4353-aa18-57e8371297e5"
        },
        "item": {
          "id": "f0ab1079-8cca-4b07-9b95-3682d0ef24c8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6bc80236-e77e-4ef9-b8b5-fbab3f802b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3ca5d102-200c-4576-afb3-c513aa1c9447",
        "cursor": {
          "ref": "a44b4c3d-94e8-4ab7-8028-36f5786e75cb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8976e736-2966-4bdb-88e5-9e3cc14c485f"
        },
        "item": {
          "id": "3ca5d102-200c-4576-afb3-c513aa1c9447",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "650cb07e-39a6-400b-9c9d-e6859bbb3379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b2287e1f-1bab-41a8-b30a-040eb657c7c0",
        "cursor": {
          "ref": "a872c648-6c35-4745-8231-4c8c8e7461ef",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "815c3ec4-4d5a-42ae-8a76-1007e075b99b"
        },
        "item": {
          "id": "b2287e1f-1bab-41a8-b30a-040eb657c7c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3faf35ff-9b40-48f6-a8c5-34be18b0a6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2421a55-e7e2-4181-82be-82aeee76adaa",
        "cursor": {
          "ref": "e500146f-4502-4e9a-a186-ee1690b1df01",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "19f172c2-41d7-4926-82b3-f1b2b2fc0153"
        },
        "item": {
          "id": "d2421a55-e7e2-4181-82be-82aeee76adaa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2cb59075-4a07-4bc8-b300-099ea5b9e599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9097ec82-dcfc-4bb9-8a94-e3eae4650c2b",
        "cursor": {
          "ref": "7c722f97-82ad-4289-8a84-53de3b5a0664",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8451d8e0-d7d0-4030-a8b6-bff2dc19a898"
        },
        "item": {
          "id": "9097ec82-dcfc-4bb9-8a94-e3eae4650c2b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "364bc192-b92c-43bb-8c0f-89da3771db28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddfbf85-d8a9-4502-bb13-3f88bf7dea09",
        "cursor": {
          "ref": "cf1a63c4-04ac-49c2-9b66-2e21d128d8e7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7f6dee7c-0b87-4f14-9d73-a3cf2dfb9ee0"
        },
        "item": {
          "id": "cddfbf85-d8a9-4502-bb13-3f88bf7dea09",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f238626-f76b-470e-94e3-e1798576a391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246a7f52-e0ce-403e-93ae-c2e8df660d4b",
        "cursor": {
          "ref": "a02da777-4f64-45e1-80ad-0d21d9e45b21",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ff27d25-9e4d-4b76-8755-a33491fcc863"
        },
        "item": {
          "id": "246a7f52-e0ce-403e-93ae-c2e8df660d4b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "11a4fb07-b8d0-43fc-ba29-af60491f1479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff9bd2c-921b-4953-be12-3ed64e292383",
        "cursor": {
          "ref": "d68a8f78-f463-4486-a47e-2a7be166cfe9",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "40683e0c-e6b5-4d90-bee7-18c47b56cab0"
        },
        "item": {
          "id": "eff9bd2c-921b-4953-be12-3ed64e292383",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2fd06877-993b-4f3e-a5a0-33bfb74eea3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684dd76-0a2b-458a-9fa2-a068fb2129b0",
        "cursor": {
          "ref": "c7075bda-85cb-49b9-9c53-428f1419d394",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2305d47d-e38e-4b12-8a7c-c37fabce46be"
        },
        "item": {
          "id": "e684dd76-0a2b-458a-9fa2-a068fb2129b0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e6bf2d6d-70fb-43b5-b25f-dbc97cc3477e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1462c76-8e50-4c90-84e2-68f4ec567705",
        "cursor": {
          "ref": "e561b702-a605-47b4-ab79-09e14fe5bcb3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "15a4946e-cac9-4e2f-9461-1ba958c43f06"
        },
        "item": {
          "id": "f1462c76-8e50-4c90-84e2-68f4ec567705",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5437c6a5-224c-4abf-8f08-2a32e370aa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d5a886-5da9-460e-bd32-6c79d87e8aaa",
        "cursor": {
          "ref": "c4e59f2e-6867-4672-bc92-8d7a2a49d002",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "31dfbe1e-678d-4e61-beb1-5401051c9676"
        },
        "item": {
          "id": "c2d5a886-5da9-460e-bd32-6c79d87e8aaa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "41b73893-4dd7-4e5f-bffa-1e1d82d37e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c40951-7425-40d9-be18-bc0120c0a759",
        "cursor": {
          "ref": "f0c892a9-9191-4e44-83d6-6872f3dd54e2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dbfc729e-63e5-4415-a811-a5cb8e75d483"
        },
        "item": {
          "id": "e6c40951-7425-40d9-be18-bc0120c0a759",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fad208f8-0b33-4bba-a9af-177b6f97c31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a5e638-da12-4c16-98c0-f1b84352a7d1",
        "cursor": {
          "ref": "73e5492e-bed0-4c96-bdf3-5b6df4330ced",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "815498d8-a908-418e-852a-1a50fcfdea30"
        },
        "item": {
          "id": "a6a5e638-da12-4c16-98c0-f1b84352a7d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cffb19aa-33c6-434f-b280-7280bc942299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28ba90d-f6cc-407d-965a-8582d68d4c88",
        "cursor": {
          "ref": "c3305747-9a90-4131-b98c-c78db8024083",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "699b1cc2-7371-4b62-9204-98f3d67ea129"
        },
        "item": {
          "id": "a28ba90d-f6cc-407d-965a-8582d68d4c88",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9e33439e-765b-4f5d-832a-fd7de6fe4e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d29292-8dff-4cbf-9811-f1cba94468cc",
        "cursor": {
          "ref": "dd3e2557-79d7-4fd4-9df2-809fdbf58ecf",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b74d0b10-eb6d-4e01-8fff-6ad1e1186c31"
        },
        "item": {
          "id": "11d29292-8dff-4cbf-9811-f1cba94468cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "92bb95dc-7dd7-4abe-bdfe-ce46ce37128b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1497f5ef-471f-43c6-9ecc-49c8bf9201cb",
        "cursor": {
          "ref": "3b2c9405-61a1-42ef-98e3-822e7d1a7801",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6780363c-d90a-4463-b5dd-cc5fec879088"
        },
        "item": {
          "id": "1497f5ef-471f-43c6-9ecc-49c8bf9201cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "646c4c5e-65ba-4699-896c-1ff822671f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a5dc57-d456-4ed2-ba75-5ef8b86bc211",
        "cursor": {
          "ref": "f0e820eb-a4ed-4c52-b9b2-ff13f5fb3770",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c723a71f-73a9-4a5e-96dc-27cd7a190bc7"
        },
        "item": {
          "id": "a2a5dc57-d456-4ed2-ba75-5ef8b86bc211",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4e7acfe6-691a-412a-ad85-7c03729e17b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f5b57b-508d-425d-b7a3-3108d654ae97",
        "cursor": {
          "ref": "fb7f3d1e-6248-4930-ab99-44ceb4b8623f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dbd7b491-46d8-4798-93ed-e37e4207f623"
        },
        "item": {
          "id": "52f5b57b-508d-425d-b7a3-3108d654ae97",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a5e05dee-9120-4586-9dbc-c9855f8d26d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e99dce-5f37-4527-8154-ee2102502124",
        "cursor": {
          "ref": "9399677e-03bb-45cb-a4dc-94365741e3c3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c7b24bf0-1dde-4192-b2c6-875292193002"
        },
        "item": {
          "id": "66e99dce-5f37-4527-8154-ee2102502124",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1e9b3cd7-3ff7-43e6-ad96-43687bc5aece",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8dc31a12-2f7d-4714-80b2-ecd8d764eea5",
        "cursor": {
          "ref": "7c6caac6-3b94-4750-9dc4-36ceb3cec9a3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "868edab2-b1d2-459a-8e0b-945cfb0a9fff"
        },
        "item": {
          "id": "8dc31a12-2f7d-4714-80b2-ecd8d764eea5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9dbf639d-c144-40cb-b505-316dd1fec67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67202ed-d00f-42c8-bf7e-b4a1b5af5d5a",
        "cursor": {
          "ref": "0b12ee99-723a-41c5-a3e2-778817976c6e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9e012fe4-aa9b-4893-8f32-f9a9ec707c36"
        },
        "item": {
          "id": "f67202ed-d00f-42c8-bf7e-b4a1b5af5d5a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dbd44bd8-19c0-4cc5-b988-ad761a5570e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c94195-4a1d-43f6-b447-59f8858c6ffd",
        "cursor": {
          "ref": "689b384e-aa04-4e2e-b96e-00d3a8538056",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "116d7959-ca3a-4c23-8daf-b6df57c739dd"
        },
        "item": {
          "id": "81c94195-4a1d-43f6-b447-59f8858c6ffd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "81a200ff-f880-407d-97f2-eab99e1e9d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdf0b2e-fcb6-4afc-8b3f-e5afd7520e14",
        "cursor": {
          "ref": "df844402-4ac1-493b-a8b4-be5d80a00bf5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0293a521-29ff-4604-91af-59f20777507f"
        },
        "item": {
          "id": "dfdf0b2e-fcb6-4afc-8b3f-e5afd7520e14",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bf42fca6-5613-4a52-9373-25426a1a6102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90c1aaa-5786-4280-bf0d-226ef686a03d",
        "cursor": {
          "ref": "cfbdce10-ff2a-4450-8d25-f76e94b6f434",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "74643111-baec-4058-8339-a5468e0c78fc"
        },
        "item": {
          "id": "c90c1aaa-5786-4280-bf0d-226ef686a03d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6ad359c5-ca7c-4de9-8083-0d3204e42c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77dc6bc-36d1-49ce-884d-bbcc23b883fa",
        "cursor": {
          "ref": "2deb7585-fe48-478d-9f18-27baf8751204",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9dae0561-f798-40ba-88ec-d8148b1bdfe4"
        },
        "item": {
          "id": "b77dc6bc-36d1-49ce-884d-bbcc23b883fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d388d8d3-1fce-440f-b684-75ecab6b528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dc0b9a-52aa-4e39-b68a-7ae96e1e254c",
        "cursor": {
          "ref": "3ba1891c-76d8-482a-94ce-c8a1b62dba3c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "33455ff4-f00c-44ad-8344-500b460eca67"
        },
        "item": {
          "id": "56dc0b9a-52aa-4e39-b68a-7ae96e1e254c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61f0bb86-d482-498f-b9b4-3cae8d0e2d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6855135d-c0c8-4828-ad5f-6d7536f5ff91",
        "cursor": {
          "ref": "b2dd890d-db05-4e63-9c71-87a997fc834d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "81434b9e-5509-466c-a8e2-05d4adaa3ae3"
        },
        "item": {
          "id": "6855135d-c0c8-4828-ad5f-6d7536f5ff91",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "079f4dc1-7096-4b85-90e2-c92c62708171",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 337,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "30164824-a3ac-49e2-bf50-4ad07ff6870d",
        "cursor": {
          "ref": "38d65ba1-d732-431c-8802-8beef5f017cf",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d0979e19-4126-4c53-8cc8-4882e8a21d73"
        },
        "item": {
          "id": "30164824-a3ac-49e2-bf50-4ad07ff6870d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "afa8fe4b-c99d-493c-89bc-2ad63bda0c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a77f04-cc24-4d68-aa74-a4cf83d3b34d",
        "cursor": {
          "ref": "a3c9c9ee-d620-46bf-8b0b-f220ad44be7d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "69d2b684-a335-4952-bbc6-048e1aa1494e"
        },
        "item": {
          "id": "e7a77f04-cc24-4d68-aa74-a4cf83d3b34d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e24e1df3-6f3b-4061-926e-0d5811b10c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a02cc0-2854-4021-a0e5-0e150b3a1c87",
        "cursor": {
          "ref": "877a2cc9-d9be-41bc-b62d-74a0df6e1645",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9e8d3176-41bf-486f-942f-c55ed711424f"
        },
        "item": {
          "id": "c8a02cc0-2854-4021-a0e5-0e150b3a1c87",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5c08d48c-4165-4bfa-a400-7cfa32e83f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c88b6ae-80a3-43b0-98e4-0d6d2467528c",
        "cursor": {
          "ref": "9776b787-0027-4836-b5b0-e69385e3427d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6f056931-cf0b-458a-86ee-c47260767b7a"
        },
        "item": {
          "id": "4c88b6ae-80a3-43b0-98e4-0d6d2467528c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "644b3db1-2442-4e49-ae2d-5d8cc27cacde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcdb189-7e2d-4455-92c3-11aa91d44928",
        "cursor": {
          "ref": "f24ea415-c266-446e-8d77-afbd06fe2ba0",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dd59cd2c-7746-491d-adac-ee0f2ae113c5"
        },
        "item": {
          "id": "7bcdb189-7e2d-4455-92c3-11aa91d44928",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "995e384f-2691-4db1-86c4-fae82e65fbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ea3639-430f-478f-bcaf-851bac38f6ae",
        "cursor": {
          "ref": "52f6a4b3-16ba-4efb-a474-532340b8e3d0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c9049a03-1d1d-431f-864b-65c65f316c08"
        },
        "item": {
          "id": "28ea3639-430f-478f-bcaf-851bac38f6ae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c4a84a08-f91a-471e-9490-dacd9b4947b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26defe71-f2e6-4c3e-b941-8d2065294c73",
        "cursor": {
          "ref": "3b64f7fd-45dd-4484-aa05-31152464d498",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9afce5e0-0005-4c9f-84a0-42df87bed9d1"
        },
        "item": {
          "id": "26defe71-f2e6-4c3e-b941-8d2065294c73",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a355f197-e539-4d28-a2fe-091f49e3d261",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "168ac7bb-af7f-4450-ab34-a773756ba879",
        "cursor": {
          "ref": "d23c56ae-55b5-4939-98d0-eb2eedcf89fb",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3448db95-bd6a-4083-b4a3-9b265340272c"
        },
        "item": {
          "id": "168ac7bb-af7f-4450-ab34-a773756ba879",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "75229a24-4cb1-4468-8aad-aac62be1298a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "aaa59c79-e5e2-4c9b-9644-c9a6082e665c",
        "cursor": {
          "ref": "33672ddc-388e-4eb5-a2d9-394a16d86fe5",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6d69690c-42f6-486b-894f-83af8fccb93b"
        },
        "item": {
          "id": "aaa59c79-e5e2-4c9b-9644-c9a6082e665c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "df4d4960-c22d-47f2-a618-77ee2916ea36",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5f01d319-9fc7-438e-a672-b7e8673b15e1",
        "cursor": {
          "ref": "504d1138-4e58-4459-a20d-cabf4df4e9fe",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "565daef8-3243-4268-b706-d9628663bed1"
        },
        "item": {
          "id": "5f01d319-9fc7-438e-a672-b7e8673b15e1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5a1202f8-ffc8-479f-bc33-6ca19f65ea28",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "42f84674-235c-4b48-a4b6-71c7aa9b1b26",
        "cursor": {
          "ref": "098f58dc-aad8-4589-a83c-8f54afc1b070",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b9c9838b-b34e-4ac4-a85a-bce8c4d5de75"
        },
        "item": {
          "id": "42f84674-235c-4b48-a4b6-71c7aa9b1b26",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0ce81e39-bb6b-4512-a4e4-9380c866191b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ae692ca0-f034-4e4b-b951-a70426e8d6ff",
        "cursor": {
          "ref": "195c57cb-2b19-4adc-a4ae-ec43818eddb5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "21a444d6-9d1b-47b6-a251-9bb4e58f8523"
        },
        "item": {
          "id": "ae692ca0-f034-4e4b-b951-a70426e8d6ff",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e9c9a7a8-a11b-4e5d-95a1-8d19a2951811",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "b004db50-b5c5-4cf9-9e57-a8b6041bfa98",
        "cursor": {
          "ref": "7d7a0e54-fa2b-4766-9e5c-7f67f6ba4784",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0fc8bd29-24aa-4e2f-8f9d-bb41f3e6da90"
        },
        "item": {
          "id": "b004db50-b5c5-4cf9-9e57-a8b6041bfa98",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db332f77-e04f-403f-bd15-53cac1d5c89e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a17418-881f-45ba-ac7d-76c399928c7a",
        "cursor": {
          "ref": "d6a15dff-04f7-4628-adab-af4d034babee",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eb698196-4ce1-4136-8329-acb2d7a124f1"
        },
        "item": {
          "id": "05a17418-881f-45ba-ac7d-76c399928c7a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7d73367-255a-4c85-a37c-e41dca090e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2403edc9-9b67-476a-8e8d-4a2b66fe6522",
        "cursor": {
          "ref": "38d0dfb4-4dc8-401d-87ec-ccd68107692f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f7753aff-3cd6-4166-8659-767ce1d9b1af"
        },
        "item": {
          "id": "2403edc9-9b67-476a-8e8d-4a2b66fe6522",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "af787d7d-1682-4543-9b96-6bc29e7fa0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20cd1f9-cacd-47c6-93d2-43ef34225313",
        "cursor": {
          "ref": "3c940035-2a0e-44ba-a5c0-db43db3e5682",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "401f2122-4d49-4ec5-b528-5632fc57917c"
        },
        "item": {
          "id": "c20cd1f9-cacd-47c6-93d2-43ef34225313",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c38e5234-8202-4073-bf71-44626d070c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f559ee-dfbb-4ad1-b1ee-517c034bb59b",
        "cursor": {
          "ref": "327cc3e9-e808-4f02-87bc-c1b38d30074e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3959245b-5f0f-4087-8522-69db9e4c7644"
        },
        "item": {
          "id": "75f559ee-dfbb-4ad1-b1ee-517c034bb59b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "338fa89d-d577-4223-9063-36a3399075db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b696a508-de03-450c-9ee7-dfca19d54563",
        "cursor": {
          "ref": "5823ae5c-010c-470c-950f-fc3bf52dc03f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c228d407-7331-499f-8405-25c608b23a9f"
        },
        "item": {
          "id": "b696a508-de03-450c-9ee7-dfca19d54563",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "079473a0-ea6b-4e3c-aa40-437453c5ad11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89849b05-d278-48bb-86d2-05e1b0443a2e",
        "cursor": {
          "ref": "901a9974-e7d3-4792-8780-5c356d51edf7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "da70b490-b5fb-4700-af15-d7d4f0594e37"
        },
        "item": {
          "id": "89849b05-d278-48bb-86d2-05e1b0443a2e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fb4c4372-68f4-4c90-be08-0fd329fccf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb98180-9387-405a-9768-99161fe23163",
        "cursor": {
          "ref": "57e33093-db9c-48a9-829e-eb01c687a98a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ee8c82e8-07eb-4b0a-97cc-a14c26aedf49"
        },
        "item": {
          "id": "9eb98180-9387-405a-9768-99161fe23163",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "34fff4b7-2bd3-4c56-90ad-3cfccbaa51b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c28a1c0-3de2-4ed7-ab27-ce4bc1e9c475",
        "cursor": {
          "ref": "08bbd249-3ad9-47c9-b100-9be375978407",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "45983b71-dc7e-477d-8dd0-62a5cdadc3dc"
        },
        "item": {
          "id": "5c28a1c0-3de2-4ed7-ab27-ce4bc1e9c475",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "969d49fb-09a8-43fd-8414-ac98ae1e1156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329ff9cf-8096-4413-be65-d12361ad1908",
        "cursor": {
          "ref": "45a80e9f-4865-46de-8a27-f2f267eb1580",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f0561136-5039-40b5-86a3-7adcbed5b990"
        },
        "item": {
          "id": "329ff9cf-8096-4413-be65-d12361ad1908",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f552d21-2f84-4e41-915b-02b0789dccc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6743f1-82cc-4e1a-8597-f8b61c077167",
        "cursor": {
          "ref": "2e09a70a-cba2-4440-8d89-f7129c7d124e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "273d0028-8657-4b90-bd60-23a3acdd2235"
        },
        "item": {
          "id": "3d6743f1-82cc-4e1a-8597-f8b61c077167",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f7206159-2695-46ad-8430-38281e94bc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a26e77-b890-40a5-ad86-bccbf1f25b30",
        "cursor": {
          "ref": "5ed42753-72b3-40a2-9804-bfabb4d285d2",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6302ca85-43c0-4098-aab7-943a03672d94"
        },
        "item": {
          "id": "e9a26e77-b890-40a5-ad86-bccbf1f25b30",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "046cd2eb-effe-41a3-8eaf-234a623303be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff044dfc-f482-49df-8048-618e17e0651b",
        "cursor": {
          "ref": "4804b48c-216a-4a76-8850-dfc22879ae29",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "613078b8-dc19-483a-87c2-f6b5d632f349"
        },
        "item": {
          "id": "ff044dfc-f482-49df-8048-618e17e0651b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "38dfd739-418b-47f9-a370-8e3b06f39240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023c437d-cffd-4b69-9a8b-e153b612982d",
        "cursor": {
          "ref": "740f30a2-5e63-482e-8b67-6d1460e48c85",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8565319e-cc69-418b-a0fd-82c616392656"
        },
        "item": {
          "id": "023c437d-cffd-4b69-9a8b-e153b612982d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ba8c9783-b2a2-44b3-b5dc-2902bce87043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb37182d-c9ff-44ac-b77e-1aa3c0431567",
        "cursor": {
          "ref": "a1513240-2f81-4109-9db3-1df224875df3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cdf9055d-4e64-4786-8722-bafae8c2ff3a"
        },
        "item": {
          "id": "cb37182d-c9ff-44ac-b77e-1aa3c0431567",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a46e43b7-ea87-4b66-a28a-4803d3f3485c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7347224f-a39b-4345-a3aa-0772dfe71504",
        "cursor": {
          "ref": "70c348ef-4426-4598-aa16-acdd9781b001",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1e41af00-32f3-436f-911b-475e9d072653"
        },
        "item": {
          "id": "7347224f-a39b-4345-a3aa-0772dfe71504",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f8f745fa-3d50-455a-8995-c3f04b6a0a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a747d687-9c17-43b0-9350-fce9f92841e3",
        "cursor": {
          "ref": "a8962241-aaca-4654-9e3b-bcb9025fc6da",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fa14a17d-fb50-4821-a2b8-388998ad936b"
        },
        "item": {
          "id": "a747d687-9c17-43b0-9350-fce9f92841e3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d3595b26-178e-4e3b-8c74-b0383cfdb7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918acd9e-b22a-4ddb-ad3e-3c4c04248f09",
        "cursor": {
          "ref": "fab344bf-dfa7-4427-8212-21ce4f490be1",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ff5b1b35-00da-485b-8240-490cd3c9b400"
        },
        "item": {
          "id": "918acd9e-b22a-4ddb-ad3e-3c4c04248f09",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3d510c42-3866-479f-8081-532601c24472",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "43378dbc-295b-4220-a0bd-d0867d22c7ed",
        "cursor": {
          "ref": "96b8ee05-59e7-47b2-b0ce-dd7ca949530e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "be69481a-39c4-47ae-8632-73022ae50fa2"
        },
        "item": {
          "id": "43378dbc-295b-4220-a0bd-d0867d22c7ed",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4876de94-9d97-46ea-a456-9c5ce8d1f1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b77c5-5035-4237-8d70-9708e4247756",
        "cursor": {
          "ref": "1f1cf2ff-c6f6-4c93-a9b6-8d8c218b613c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d743de0c-4473-465c-bec5-1943db03776a"
        },
        "item": {
          "id": "284b77c5-5035-4237-8d70-9708e4247756",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "77b7cfe4-ffee-4a11-9e13-79fb8b1c6038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a6c9bb-75dd-471b-966c-ac84b33aee52",
        "cursor": {
          "ref": "7655882a-477d-4a5a-8a52-64cca6ae9595",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "99ed782a-3a25-4e07-a826-2db79c15b6bd"
        },
        "item": {
          "id": "c9a6c9bb-75dd-471b-966c-ac84b33aee52",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "df98c98b-4f7d-4d32-957e-278e23eec959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba983eb9-6eb4-44ee-b1a9-990c62f52910",
        "cursor": {
          "ref": "47ecbaa2-53f8-46a5-bcb8-9685c4baac18",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d471a83a-945b-452d-8288-e3a5a8ed09d7"
        },
        "item": {
          "id": "ba983eb9-6eb4-44ee-b1a9-990c62f52910",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3be3ec71-4a6a-474b-bd90-56816e7a9d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a70d21-8e56-47ab-83c5-6898346a9d61",
        "cursor": {
          "ref": "7052c30d-5770-4f3c-9bbc-611ffe2e5885",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "56171104-3952-4639-9a9b-f14ca9d7d561"
        },
        "item": {
          "id": "d9a70d21-8e56-47ab-83c5-6898346a9d61",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "90d6254b-e486-43dc-a97a-c30b8e698053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f3cea3-b627-476a-8711-697985c1345a",
        "cursor": {
          "ref": "11cc6a3d-bc0f-4e66-9edf-63abb5faaf3c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1b2729d6-98fe-4ff7-aa93-0ca723b4abb6"
        },
        "item": {
          "id": "f1f3cea3-b627-476a-8711-697985c1345a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8629a3cb-5fdb-4b49-b257-364427b9e880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5040de51-c387-40fd-a788-a6cc7289773e",
        "cursor": {
          "ref": "353fd7a0-8399-4caa-9507-39236ffcb589",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "05101228-e349-4f1a-b9cc-8c105c00645f"
        },
        "item": {
          "id": "5040de51-c387-40fd-a788-a6cc7289773e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "903aeb5f-f8b6-4d0d-ab74-1832b1b40624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3f8e5c-1296-4e49-be14-0c857789e41e",
        "cursor": {
          "ref": "0c568ba5-2c9e-47ad-9dd2-ecb502b8365b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "50eeece0-09ee-4f26-a0e9-5ba52d6090cf"
        },
        "item": {
          "id": "5f3f8e5c-1296-4e49-be14-0c857789e41e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "96aa2f94-217e-40a4-99dc-a12e6bb156d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae2e8ac-e4b5-400e-945f-a044171c7501",
        "cursor": {
          "ref": "9a9021ca-fe9e-4353-b98c-02d066f7b0f8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "db1476a7-b20b-4984-9317-7f41d4f7a884"
        },
        "item": {
          "id": "dae2e8ac-e4b5-400e-945f-a044171c7501",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b367069a-5153-4239-b13c-d6eb00120145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a602a3b-9103-45a5-a441-20358469397d",
        "cursor": {
          "ref": "be41e9ab-22dd-4889-979a-d694a71f03be",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "99d5e419-97aa-45e6-9e7f-66f286c53526"
        },
        "item": {
          "id": "0a602a3b-9103-45a5-a441-20358469397d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7ad3411c-0122-4bd1-adf4-cdf6cc2037c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2a303d-6a4e-4b4e-8575-d8203a06b686",
        "cursor": {
          "ref": "93069c97-e62f-44a8-a306-aad6c1e2eb61",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7e4054a6-5e0f-4a60-8318-460b5c54db2a"
        },
        "item": {
          "id": "be2a303d-6a4e-4b4e-8575-d8203a06b686",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0c2482b1-49d7-4c68-929c-ff0183ce6b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707e5e78-5abe-476e-b97a-ae6eb7151d59",
        "cursor": {
          "ref": "ce3b845e-d686-4941-9f11-240886dd61df",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "eda4d983-4fab-47e0-969d-40eea85d34df"
        },
        "item": {
          "id": "707e5e78-5abe-476e-b97a-ae6eb7151d59",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fcafac63-67f2-4816-8353-d6a70165d294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b94975-c6af-4378-8200-08371239861a",
        "cursor": {
          "ref": "e8619326-dd5a-4d53-abc6-dd8624cb63f9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1c814f67-19f5-4c70-92be-2bdfe403121e"
        },
        "item": {
          "id": "f6b94975-c6af-4378-8200-08371239861a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5829598c-bc1c-45e2-9935-864fc45cd213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec8751b-e7b0-41f0-970c-747ea82c20a6",
        "cursor": {
          "ref": "c9fadf86-dcb3-4120-9fe6-7af44ff5e94d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "665bbf63-d8cc-4561-8b21-a6c05e8ce4dc"
        },
        "item": {
          "id": "dec8751b-e7b0-41f0-970c-747ea82c20a6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6f46fd5c-cf67-41cf-b3e6-bba6b829a2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62cf592-a92a-49ea-810f-f82b0521a2e0",
        "cursor": {
          "ref": "d3268219-8d77-46aa-8f7c-1e11a5c9bb2e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "62befdec-59ed-49c6-90fa-647c17614025"
        },
        "item": {
          "id": "b62cf592-a92a-49ea-810f-f82b0521a2e0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8f0d23bb-58cc-4c5b-ba8a-27faca30896e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2585a9f6-1f5e-448f-a33a-321d0e9be6d4",
        "cursor": {
          "ref": "d47503b4-def3-4214-8fdf-45722035e963",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d16042be-ef39-47fa-b989-5e28153852af"
        },
        "item": {
          "id": "2585a9f6-1f5e-448f-a33a-321d0e9be6d4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a5df3d53-76ce-4785-844e-5e41015325a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ecf6af-9b61-4b50-bbee-039341ae8a63",
        "cursor": {
          "ref": "35c527dd-91a2-4841-b9d8-9c03649340fd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "52772c4b-dece-448c-a8f1-3cdaf5b31223"
        },
        "item": {
          "id": "62ecf6af-9b61-4b50-bbee-039341ae8a63",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e45a5bd8-8d73-4c2c-9ce2-1f825c578e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30187264-60da-4d63-ad66-f25df669495e",
        "cursor": {
          "ref": "54e008e2-2dc4-4fd7-a763-4201dfe67f4e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "53b6b205-23a0-4b8b-ab80-2d488965fca0"
        },
        "item": {
          "id": "30187264-60da-4d63-ad66-f25df669495e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8b28fd7a-bf24-40f0-8cd2-bd48ab146dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c039a8-bb78-4e33-b47b-67fa3a30fd15",
        "cursor": {
          "ref": "3bfe19b7-3e8d-49a6-b130-29dfe955268d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6f3a1cbe-c4f0-43e2-90b1-1d702e3f419f"
        },
        "item": {
          "id": "e8c039a8-bb78-4e33-b47b-67fa3a30fd15",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d9819a8b-ed49-48fb-bade-c47bce2c699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2205b76a-3be1-4770-adbb-c929a7c032b1",
        "cursor": {
          "ref": "d3af3d43-718b-4141-8cbd-d20626ea06b0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5a800115-05bf-4335-8b99-29905e8a68ca"
        },
        "item": {
          "id": "2205b76a-3be1-4770-adbb-c929a7c032b1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e18ef373-c23e-4f8f-87ec-7b73730cb219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13dfa32-f43c-4eb5-bdbb-3f047d1a96ed",
        "cursor": {
          "ref": "99961371-03dc-4507-975a-8a389106d5c7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9faebff4-f67d-4449-a2b4-92409e65ee5e"
        },
        "item": {
          "id": "e13dfa32-f43c-4eb5-bdbb-3f047d1a96ed",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "90f3aab4-3866-419e-af55-d8b7452bf43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932a201f-4c06-40ac-bee7-089c7837e844",
        "cursor": {
          "ref": "06f25343-c142-4a55-bd30-3e1b4e0503eb",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e46a8cb9-d55c-4bc7-a09a-53be3d356bdb"
        },
        "item": {
          "id": "932a201f-4c06-40ac-bee7-089c7837e844",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "facc5821-0d8b-4536-9c55-b3a964dc2453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e967efe5-98c7-48d5-9427-abe94b7811f7",
        "cursor": {
          "ref": "71bd3820-e032-443b-99ee-1ac238d2db4c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ffe8737a-6a76-463f-bc05-3cccd2b5582a"
        },
        "item": {
          "id": "e967efe5-98c7-48d5-9427-abe94b7811f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "712522a6-0301-45c9-bac0-1fdf75808d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0a47cf-c53a-4dd1-9d67-122aaa1868d1",
        "cursor": {
          "ref": "07bbfa0a-204c-4b66-bd2a-8f46acef52d6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e701892e-dcdd-48f1-b2c9-1457cf1c7c7f"
        },
        "item": {
          "id": "da0a47cf-c53a-4dd1-9d67-122aaa1868d1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d2d7f90a-a3a6-4c38-ac92-1cbab6db194b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28022d5f-9c31-41ad-87cd-30479efe80a5",
        "cursor": {
          "ref": "c110d5c1-1d04-4930-9898-bfa97690678b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "58c664ff-15c5-48a1-9fbd-05c66f436e93"
        },
        "item": {
          "id": "28022d5f-9c31-41ad-87cd-30479efe80a5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "20c64375-a4d0-4200-90d7-d63b004ff3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38c14c7-98a6-46a0-8a1a-bd56d910808c",
        "cursor": {
          "ref": "f4dbe88c-4b85-493c-881a-9b9724269698",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e35bc13b-c28d-4fde-9464-81c506116e24"
        },
        "item": {
          "id": "f38c14c7-98a6-46a0-8a1a-bd56d910808c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "86b29fab-bc65-4850-af53-683e13fdf2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f610cd-b8f5-4c04-9ccc-6c4f59d5b99f",
        "cursor": {
          "ref": "f5da00f3-fe4b-42e7-b4ea-c8a22e99d195",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f093b9f4-6e32-4c5e-9e80-277a54e1c19e"
        },
        "item": {
          "id": "f6f610cd-b8f5-4c04-9ccc-6c4f59d5b99f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "43b91a19-80c4-40c2-9f72-5c21984d47f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04566c3f-cfe8-4d1b-83e9-b68e536e23fc",
        "cursor": {
          "ref": "7a6fa831-07ee-4e76-a45d-5266946f00eb",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b231b314-cf4a-4227-b679-6a43c831bc77"
        },
        "item": {
          "id": "04566c3f-cfe8-4d1b-83e9-b68e536e23fc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "45163459-e3d4-4c47-8d3b-35baa979dd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6925556-fb8b-4c4e-ba4f-4acde219c85a",
        "cursor": {
          "ref": "882ca196-241c-4554-9e4b-f77911fae6d6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b119d457-2a7d-4643-b7fb-45324b86126f"
        },
        "item": {
          "id": "b6925556-fb8b-4c4e-ba4f-4acde219c85a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0e2baf4c-f6dc-4610-8430-ae5ad8d378af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43919216-64b9-4df0-ab91-52a029926c71",
        "cursor": {
          "ref": "3828da07-35cf-4258-b7d2-802226959a0e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "26ddecdb-073e-4855-a469-4d742830a514"
        },
        "item": {
          "id": "43919216-64b9-4df0-ab91-52a029926c71",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b5241e4f-9705-47b0-bb99-4a1a47230665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7371bcef-ccfe-4b36-954a-6c2cc25c9abc",
        "cursor": {
          "ref": "e4ef20d6-14da-4ed6-930e-8638d41e4cea",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3a5c7927-6247-4bec-a2a9-36b8403182a1"
        },
        "item": {
          "id": "7371bcef-ccfe-4b36-954a-6c2cc25c9abc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8f2cc640-e60f-4e1f-a711-2814b10f9f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9196f439-cf65-48c8-9156-7b820ccfef7d",
        "cursor": {
          "ref": "2e4f6843-325e-42f9-961f-efcc2ad7c945",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dbbf3f2d-e83a-44dc-b039-0f59008c4a06"
        },
        "item": {
          "id": "9196f439-cf65-48c8-9156-7b820ccfef7d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "024e4cbb-fb34-4578-a1f2-83def602b06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9b382d-3bd5-48d2-ba08-c76b94828f19",
        "cursor": {
          "ref": "b2ad0419-8cbc-41d0-aefc-da0ca3ad05b3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3ed875b6-0866-47a3-878d-6effece309e3"
        },
        "item": {
          "id": "6e9b382d-3bd5-48d2-ba08-c76b94828f19",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4e00020f-7daf-402e-becf-55b7ec49c0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdc760b-02f5-4013-928d-5fac3a1f7463",
        "cursor": {
          "ref": "0f8d3514-ca9a-4a4e-919c-ec910b19ae89",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "956fd63c-3917-4a8b-bb1c-e673b5a8013b"
        },
        "item": {
          "id": "8cdc760b-02f5-4013-928d-5fac3a1f7463",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dfd37807-a14b-41ae-88a3-1cd98d15a43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45f6afb-c5e0-4f1a-98e5-01374a60b04d",
        "cursor": {
          "ref": "bccec4b4-2f47-4cba-be2a-dee4ec179e0d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c8813061-93bf-4129-95d0-624461072d4b"
        },
        "item": {
          "id": "e45f6afb-c5e0-4f1a-98e5-01374a60b04d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "92014c86-21f6-4c93-92e1-c7c4a1c055ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31559cba-1952-4ed1-b4a8-a87ca3ff4dd9",
        "cursor": {
          "ref": "a18cd4bd-146e-41e6-9ce0-4bbd15bfb942",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "45b67f9a-bfa9-4f59-a19e-4f0ca4e1e3d5"
        },
        "item": {
          "id": "31559cba-1952-4ed1-b4a8-a87ca3ff4dd9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8b9df579-188a-4f75-8e0a-fd1fc1651c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2da0e-5638-4fa2-810d-7561ec369ee7",
        "cursor": {
          "ref": "66318ce5-4a12-4b5a-9f92-c7d70fb48aa1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "537f2951-d2c8-4b31-af5a-4d51ab2ceacc"
        },
        "item": {
          "id": "68b2da0e-5638-4fa2-810d-7561ec369ee7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d7a23956-0c7b-4d7b-b81d-d46eef5a96bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ca4300-08cc-4693-a884-641f84d8e5c3",
        "cursor": {
          "ref": "d8d8ed7e-443f-438f-a92a-e12d764eedf3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d3bed93f-5174-4301-9090-dc0babf4d64f"
        },
        "item": {
          "id": "61ca4300-08cc-4693-a884-641f84d8e5c3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "961deb19-abeb-4fa0-b051-0d6283b49bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452ffea6-a336-48c1-8885-4113533bb359",
        "cursor": {
          "ref": "209cae6d-b4b8-4981-bcfe-728602fe48a9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a619d756-31b9-4f3b-bc2d-736c5c911bf3"
        },
        "item": {
          "id": "452ffea6-a336-48c1-8885-4113533bb359",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "660eb96b-c20d-4528-a554-158938065133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67fa740-52f5-4a14-b0e6-89d8d77d9674",
        "cursor": {
          "ref": "6cffdf6a-76bc-485a-a213-c1dd09b52992",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d26130c8-a905-44e6-9c65-696b78fa12e5"
        },
        "item": {
          "id": "d67fa740-52f5-4a14-b0e6-89d8d77d9674",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4ae61d76-5d4d-45db-bcc4-9ce03c99ba0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d70e98-eeb1-4c29-a5bd-5231ec2139c0",
        "cursor": {
          "ref": "88d1d76b-ae9b-41fb-a4e7-2f3fd5980af4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c43dbbca-bc71-4e21-9783-a563b3ff1bab"
        },
        "item": {
          "id": "97d70e98-eeb1-4c29-a5bd-5231ec2139c0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b3733de0-0b64-44d9-bfb8-9b9e494f0272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a80edf-228e-467f-8d6c-86761fc47bc2",
        "cursor": {
          "ref": "536f1efc-39cd-4fb8-950c-adff700f8925",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "60bdfd34-af97-456c-8b96-dd9583cecd19"
        },
        "item": {
          "id": "18a80edf-228e-467f-8d6c-86761fc47bc2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c01f779e-2b15-437c-b08d-5aea6145883d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b2f2b1-36cc-495c-8d0b-e7fc0f45e080",
        "cursor": {
          "ref": "8f49c4bd-5e9e-4aa4-a33b-3dfba78c7dd7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "91312e4b-0bc6-441d-8cc6-3fcc9f25f361"
        },
        "item": {
          "id": "33b2f2b1-36cc-495c-8d0b-e7fc0f45e080",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ebb1c487-eed8-401a-afde-661ca2658de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b63dfe-f103-48e3-ae51-f799cdfd239e",
        "cursor": {
          "ref": "1fa20504-7820-4941-995a-e89919b09d85",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fa6b6f52-fd2c-4b45-8d50-1b9e35608cd0"
        },
        "item": {
          "id": "b8b63dfe-f103-48e3-ae51-f799cdfd239e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9ce31b8d-416a-44d6-b05a-4dcebef8f083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d853a5cf-f4e6-4c2c-b2a8-ea26ba217c8a",
        "cursor": {
          "ref": "a1b1060d-6414-4c58-8e43-5badb4853401",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dfb52fb8-5a54-4118-b975-1974ec4dd778"
        },
        "item": {
          "id": "d853a5cf-f4e6-4c2c-b2a8-ea26ba217c8a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "015bc778-148b-411c-b2c5-51c2da90dc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05030c07-3c73-4337-9287-cec279461086",
        "cursor": {
          "ref": "aa0948e3-814a-466c-9078-55e16d8017d4",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aa32f241-e334-4a96-b754-5f5c2eea77f5"
        },
        "item": {
          "id": "05030c07-3c73-4337-9287-cec279461086",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f03b2010-91f7-4a3f-9847-16a63353ddb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2d468e-5caa-4da5-b47c-6ece0ca32b24",
        "cursor": {
          "ref": "aeea3318-815c-4346-bf0f-6bf52ccb5cbf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f4bc65c0-4eb9-468b-9a83-567618f3c7a9"
        },
        "item": {
          "id": "4e2d468e-5caa-4da5-b47c-6ece0ca32b24",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d6e5dec5-4d5f-4592-b99e-47fa509e3f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148578d-b818-4fa5-822d-a269e5184cec",
        "cursor": {
          "ref": "5af7cb75-2e62-4bd4-b90f-d28ff5c48d3c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "20bd768b-6da5-4ab8-841a-2f77bc1d0fb6"
        },
        "item": {
          "id": "f148578d-b818-4fa5-822d-a269e5184cec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f691863b-d778-41c4-b237-8664cd9323e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c43dd-8bd3-4dec-a5dd-7cb92c7a64a2",
        "cursor": {
          "ref": "b58fa80e-72ae-4ab9-b52e-af1e2a575fb1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9dcc7a32-beae-45aa-87af-6e7e7ba7ba2d"
        },
        "item": {
          "id": "9c0c43dd-8bd3-4dec-a5dd-7cb92c7a64a2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "50f8f912-63d1-46ad-bead-5f88021cf5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5af49cd-4843-44f3-926a-79ecdaeacfa4",
        "cursor": {
          "ref": "8b3e1e8b-092b-4726-8974-76a7ac1aa84a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "26a7120e-dcde-4913-beae-f2a1e93d6d2f"
        },
        "item": {
          "id": "d5af49cd-4843-44f3-926a-79ecdaeacfa4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "61220591-649d-4f2a-8790-e42b7013224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ae7030-1a4c-4cbc-9475-a7425459b216",
        "cursor": {
          "ref": "cb341460-2615-4607-9aa5-b013b42b1d49",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b0fab5f5-b612-4a18-96f3-32f0b243313f"
        },
        "item": {
          "id": "88ae7030-1a4c-4cbc-9475-a7425459b216",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cb354343-db65-4e20-bec0-b605eebb0a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472b9248-a888-4e98-85c8-38fbf6913476",
        "cursor": {
          "ref": "e7317d21-c725-41e7-bf89-6e2a2dfd3567",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0a53b066-3f59-4c29-a4f2-897e32306fc6"
        },
        "item": {
          "id": "472b9248-a888-4e98-85c8-38fbf6913476",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eb921397-355c-4bc9-b62a-21fefcad1f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ba9f7-91fb-4ea2-b210-3d2c5312d1a3",
        "cursor": {
          "ref": "570c8a4e-2a82-4f1b-82df-cd487b3c13b1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2d8415c5-1fec-4c10-9464-159d22f987d9"
        },
        "item": {
          "id": "fb9ba9f7-91fb-4ea2-b210-3d2c5312d1a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4bebc388-41ac-4bb0-878e-584fd491b84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a578be9-495a-444a-995f-bd3de5b9632d",
        "cursor": {
          "ref": "75af8bba-ed6f-4479-b8ba-ffec3710478f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "360859c2-3144-4ef6-aacd-a3489b202392"
        },
        "item": {
          "id": "0a578be9-495a-444a-995f-bd3de5b9632d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c36b6381-4c67-4129-9308-7916d9977586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b29ffc-a4f9-4f13-9788-f75a402d8b59",
        "cursor": {
          "ref": "5f9d7e74-5d2f-4816-9f09-0370678cc19e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0f6bf2df-6301-4320-838f-6c3959b2af38"
        },
        "item": {
          "id": "27b29ffc-a4f9-4f13-9788-f75a402d8b59",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "062e4ae6-acaa-448e-93a5-7aa473ca7e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52278d3c-f395-4d6c-bc02-7a952c68ffa5",
        "cursor": {
          "ref": "b786377b-bfe9-4f91-9de4-bdd8aa90deff",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7263880b-22f3-4f27-8c87-ae0caae5ec3d"
        },
        "item": {
          "id": "52278d3c-f395-4d6c-bc02-7a952c68ffa5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "318af6fd-c40e-410b-880d-950183be7402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebc226a-dbdc-4626-bdc5-d92f5e539eb6",
        "cursor": {
          "ref": "67ed60af-f277-411d-88d7-e0d3f1e22f30",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b18854de-98d3-4c89-b769-902529c363ee"
        },
        "item": {
          "id": "8ebc226a-dbdc-4626-bdc5-d92f5e539eb6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "03134c8c-e56c-4be2-bdcd-30b7c25ef842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9da345-b9f4-467b-99f1-ed04554cde5f",
        "cursor": {
          "ref": "cba45e63-eb61-4f07-8084-1de5e71e21f7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4f698b32-181e-4f2e-8265-67d9ed4d7011"
        },
        "item": {
          "id": "5c9da345-b9f4-467b-99f1-ed04554cde5f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "701de459-1d92-47b0-b4ea-782da881a684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a4e951-17f1-4524-a42f-26ff438a99f1",
        "cursor": {
          "ref": "39401a53-25f5-4ac5-8833-1f36e262e8c9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "346f0205-8272-4838-853a-3b78f26d0d9f"
        },
        "item": {
          "id": "13a4e951-17f1-4524-a42f-26ff438a99f1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e362b52-ccc4-4ed4-a809-9af4eeeb92bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0621e9-c679-4b25-b4ce-92a100263142",
        "cursor": {
          "ref": "47c2c331-9fd4-459a-bce6-fb6dd910e240",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b01dd0cc-3eb2-481b-92b5-58678757be0f"
        },
        "item": {
          "id": "fd0621e9-c679-4b25-b4ce-92a100263142",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0c4f0467-bdf0-4226-aa0e-1a4a93c24099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3ae6ea-a311-4199-9c71-6c74d71fea31",
        "cursor": {
          "ref": "65eafbb1-a187-4096-92fe-c475a91391fe",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "abd6e034-e9b5-4302-bb41-6acd28893d35"
        },
        "item": {
          "id": "de3ae6ea-a311-4199-9c71-6c74d71fea31",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9b242d4d-86f4-4122-a214-8ecd397a080f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc3fc1d-64e3-423e-a2d5-db6a3f3f470f",
        "cursor": {
          "ref": "11857b61-a5dd-4815-9b05-c1c4d46f9964",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8e1ecb39-0983-4fb1-97fe-109534b54802"
        },
        "item": {
          "id": "6fc3fc1d-64e3-423e-a2d5-db6a3f3f470f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "55242ff2-617a-4a08-bcab-ff7928d1eacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fcef51-e80d-4e0b-be09-7e5cd05805d8",
        "cursor": {
          "ref": "90ba6558-f2b5-409e-a8ae-0d5490a014ee",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e0146325-feec-45d2-9eae-80c5abba4970"
        },
        "item": {
          "id": "a1fcef51-e80d-4e0b-be09-7e5cd05805d8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0644c81d-adab-4ed0-9369-65e6c19c756d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d81eeb2-9edc-4c1b-9554-0f1550165823",
        "cursor": {
          "ref": "d0181c61-fc4a-4505-ba13-6dc802a3cb59",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9006acd6-1468-4055-993f-e95eff9e62fa"
        },
        "item": {
          "id": "7d81eeb2-9edc-4c1b-9554-0f1550165823",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7a9d5a78-dac2-49f3-bc12-d5a617c6b7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fac07a-3a9e-49d6-b1fd-4ebc73d01b24",
        "cursor": {
          "ref": "e2c1ce01-d7b1-4f46-8767-90b6af6be011",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "94ab0c48-fd6d-4409-938e-677230957a5a"
        },
        "item": {
          "id": "90fac07a-3a9e-49d6-b1fd-4ebc73d01b24",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fd6b6982-7834-42e8-8ce6-b0de657a2795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e66ca-072a-41ef-8037-375c1d7824a0",
        "cursor": {
          "ref": "0ec2a6ad-0c0a-4791-ae26-4efc6aab073a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "49876711-fa7e-4192-b424-1300204cc002"
        },
        "item": {
          "id": "0c8e66ca-072a-41ef-8037-375c1d7824a0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "40123374-8fa8-45a4-98b4-947ad37965f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2b70e8-8e79-41fb-ad3a-b527be00f528",
        "cursor": {
          "ref": "23b26c34-14d9-4964-9478-848e592b391d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3d67efc1-2a01-4aae-bfc5-c37f77bc8afb"
        },
        "item": {
          "id": "8d2b70e8-8e79-41fb-ad3a-b527be00f528",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2ef3b208-c717-4b52-8b89-3b4c279f834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c20d453-8a1a-4adf-b9e8-565f489698dc",
        "cursor": {
          "ref": "90ac21b1-b337-4235-9cd9-504a8f0066c7",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ddcc9ba8-0520-404e-bd66-fa43fd7a50e5"
        },
        "item": {
          "id": "3c20d453-8a1a-4adf-b9e8-565f489698dc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1d49ce7f-565f-48a5-b7ec-1367d5d955c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ac5cc1-c1fd-417f-8336-569b1f7927a5",
        "cursor": {
          "ref": "87afd16e-fefa-41f3-8acc-d2212a454ac8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "516390c7-9172-497c-9c7d-ea193109e8ce"
        },
        "item": {
          "id": "d7ac5cc1-c1fd-417f-8336-569b1f7927a5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8c45d328-1077-4e83-b38a-7f6a1fb322aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f687f8ed-510c-4a73-9098-1c9b5a314641",
        "cursor": {
          "ref": "25444a18-1ac0-449d-bcac-563a767f0544",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cf820f4f-df6d-48ca-af47-34c03d691c99"
        },
        "item": {
          "id": "f687f8ed-510c-4a73-9098-1c9b5a314641",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "aaa63542-a813-4d26-a0ef-52fcec5bccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad16d9a3-d670-4327-942e-20601546f521",
        "cursor": {
          "ref": "6f6a7576-4dd5-4fde-9682-df487cebbda0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1e31ddf2-c5ff-4c89-9911-3dd7f555976d"
        },
        "item": {
          "id": "ad16d9a3-d670-4327-942e-20601546f521",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "77021289-e53e-4a07-9a32-d8250e56335e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673196a9-7f64-44d2-ac8f-f6c69c554a9a",
        "cursor": {
          "ref": "4abc6b15-485c-463d-8574-1d86504ce3c9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "39279b01-9af6-490e-9d6c-4be81ee55e7b"
        },
        "item": {
          "id": "673196a9-7f64-44d2-ac8f-f6c69c554a9a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4172f209-ec58-43a9-90ac-4f7685b2ab72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69be41e7-0e30-4e7f-a8f4-46b83d9ebbae",
        "cursor": {
          "ref": "d2a60e1d-b39b-4499-872a-ade7ee51ab6f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "110b49f7-4bc3-4189-8032-3b8fbedc9834"
        },
        "item": {
          "id": "69be41e7-0e30-4e7f-a8f4-46b83d9ebbae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "60583a74-9e72-41a7-899e-34b150928ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11065524-b17a-4bf5-8d5f-e333fa94d4a7",
        "cursor": {
          "ref": "f87b5a85-7ca1-41c5-8351-00628f1d0fc6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6ea8307a-3855-4502-bdd5-c152b10ee971"
        },
        "item": {
          "id": "11065524-b17a-4bf5-8d5f-e333fa94d4a7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "01b5a07d-f553-470b-8cd6-34c407f539bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232748fb-a445-4ab2-a663-2b8ab4f94420",
        "cursor": {
          "ref": "4ae5b6d4-a072-4184-9769-24433421f6ff",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2bb1ac0e-c740-43ee-9db1-b06102c4b832"
        },
        "item": {
          "id": "232748fb-a445-4ab2-a663-2b8ab4f94420",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d611107c-e0d4-4f65-94fa-1ff1708832aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2d69b7-18ff-49af-95f2-4f5b5fa529fd",
        "cursor": {
          "ref": "554a205e-5773-431b-9306-96b535e5f5ee",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9c933fac-c0ae-420f-bc1a-45da93c1d9db"
        },
        "item": {
          "id": "1c2d69b7-18ff-49af-95f2-4f5b5fa529fd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "62cba208-6c31-4014-ae20-4259a7ceab1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094754cd-95fa-4983-9d3c-f83d53cae082",
        "cursor": {
          "ref": "8a773a7f-7016-46ae-9e35-151e311eb90e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a671027c-497e-4ee3-907f-a714edaf63c2"
        },
        "item": {
          "id": "094754cd-95fa-4983-9d3c-f83d53cae082",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "167d7158-c5fd-4123-b422-e937db44117a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d4a8d3-ff22-4232-9352-dbee17177712",
        "cursor": {
          "ref": "d7789646-df33-4827-ad25-2f6d0eab2320",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4ec9cbda-3b8e-4754-ac64-fd7fcb036ab2"
        },
        "item": {
          "id": "81d4a8d3-ff22-4232-9352-dbee17177712",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d6747b67-fb46-414b-a0de-ad631ee79ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c450ac-e6fa-4f5d-aefc-5f420c6b2b79",
        "cursor": {
          "ref": "c22bde6a-85e6-4277-bc38-71250fbc43bf",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "43860858-a5e3-4436-94d3-15725fec7f41"
        },
        "item": {
          "id": "19c450ac-e6fa-4f5d-aefc-5f420c6b2b79",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fba228a0-a81e-413e-b617-0e8bd7259e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1938a4f-4159-4a33-aef0-7d3553d73f3c",
        "cursor": {
          "ref": "51ead292-92c8-4ede-82e8-bd588c68ed5e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "61fd8800-33a9-464a-b48c-44aff445f055"
        },
        "item": {
          "id": "b1938a4f-4159-4a33-aef0-7d3553d73f3c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2b61630a-6116-4a94-9b9f-18c80a230507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc286a96-2c24-4265-9d92-6629668b95cc",
        "cursor": {
          "ref": "40b705d1-d0b3-4001-9a37-12f56c5dbda4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ecadfdf1-5d5c-4bf2-b1ea-93443711c6b6"
        },
        "item": {
          "id": "fc286a96-2c24-4265-9d92-6629668b95cc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "00f0f8b1-b665-4369-b955-b3a4bcaf0c40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa73fbb7-9f23-419d-a1ac-b5f64064ddd4",
        "cursor": {
          "ref": "e44774ee-871c-49c1-a173-6f322a2b4078",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2b436dfa-eb11-47ac-9e9b-0baadd37c275"
        },
        "item": {
          "id": "fa73fbb7-9f23-419d-a1ac-b5f64064ddd4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "17393ab4-bcac-4243-bb23-35bbf3b8b63b",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29a7ccb-fa1e-4cee-bbac-ffb51e18355c",
        "cursor": {
          "ref": "516b2f72-d1d4-439e-8bc0-1955aa3e7a79",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f8a5f116-4c98-4284-894d-b5eb375147ec"
        },
        "item": {
          "id": "f29a7ccb-fa1e-4cee-bbac-ffb51e18355c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0d12969b-e95b-43b0-abb0-dc80501e6d42",
          "status": "OK",
          "code": 200,
          "responseTime": 3818,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbe54bf-4e05-4b3b-a0dc-14eb8715f4da",
        "cursor": {
          "ref": "4ed45e95-115e-4b4c-99e9-f949ea778df5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "765386d3-2f5d-4fb8-9add-6ec09bde1785"
        },
        "item": {
          "id": "dcbe54bf-4e05-4b3b-a0dc-14eb8715f4da",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f41b0a68-e3b7-4fa4-9184-4cebdf8399d5",
          "status": "OK",
          "code": 200,
          "responseTime": 5212,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7018d1-7fba-49cd-9b00-b74e86088557",
        "cursor": {
          "ref": "70d72372-752d-49d5-bb63-f77fd8e0bb52",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b3a28ecf-01a1-4000-985e-c2e8eb8fbda0"
        },
        "item": {
          "id": "5c7018d1-7fba-49cd-9b00-b74e86088557",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b502eb66-47ee-4997-980b-cb0f51c72280",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7018d1-7fba-49cd-9b00-b74e86088557",
        "cursor": {
          "ref": "70d72372-752d-49d5-bb63-f77fd8e0bb52",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b3a28ecf-01a1-4000-985e-c2e8eb8fbda0"
        },
        "item": {
          "id": "5c7018d1-7fba-49cd-9b00-b74e86088557",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b502eb66-47ee-4997-980b-cb0f51c72280",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22d9b7d-d038-49bb-a8d6-dc8d072f05c3",
        "cursor": {
          "ref": "c7a12b22-4cd4-4321-b505-b58e791f9607",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ef5b052b-7e6c-4670-9c28-b3047a84e45e"
        },
        "item": {
          "id": "a22d9b7d-d038-49bb-a8d6-dc8d072f05c3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "de96ba84-b94e-408d-9f51-8e2c19debce4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad3ae9-6e83-405e-b2dd-a7c63a7ecf29",
        "cursor": {
          "ref": "dd9c0546-3fd2-4902-801a-d847df78c04a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00fff297-7619-4ba4-bc83-565a5e7118e3"
        },
        "item": {
          "id": "00ad3ae9-6e83-405e-b2dd-a7c63a7ecf29",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "900b9b57-e4ba-4ac4-a41b-2ce8cb213641",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}