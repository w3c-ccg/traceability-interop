{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "956bec31-629a-44ff-9b2d-12242d0f77c4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "07d88d5e-f8af-41b2-bbfd-25c7d3892c7c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8bb8a23b-053e-4171-afa2-df56511599a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42defeee-be01-437e-bf47-c750558c4c42"
                }
              }
            ]
          },
          {
            "id": "ab11a9a3-072d-4b67-94eb-a0f14c0e31d1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b33acda6-6cfc-44d8-86ca-1ccd1cad7da2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3e3d177f-9a11-4bbb-85b8-7ac07eda80dc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0e375ed7-cd9d-4dfc-91ca-1e015b4118cb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0efe13d5-e6ef-43c4-a916-e904af206143",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d47776e3-feeb-4181-8f4d-fcd628cc0433",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72016b13-9f57-47f7-b353-be8dfb6ad11b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87ec8f37-fdb8-497c-8040-80ba1c1cd484"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1a44f3b-43e2-41f6-b860-53f268e0d902",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "131d07a7-7485-45b5-bcb1-6a42e4e8caef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58ff1856-ca2b-4a2a-9ab3-9bb7353bf9ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "596d7d2e-ebd1-4b17-adcf-ac7ef8482072"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afc58d44-f2cc-42c9-96e3-35425256f817",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ac3c03d9-74a6-4f94-98be-22d00aaaf2bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f8cb506-2b41-412e-8940-92a7f4148e31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3b3eb63-1e7b-4094-b540-3b4bef5568f1"
            }
          }
        ]
      },
      {
        "id": "ce6607a0-b010-4359-b08d-f88bcad68879",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d0b641d7-a7cd-4035-a1b9-913fd9927225",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8abbb34-0079-416a-b9d2-504a959f1a14",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "adb8513c-6372-4293-8df4-e5610b0f3ec2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0a2ade-8a6a-4efd-8120-514ed47562d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eccca6fd-6835-40bf-8339-e412e1d44718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaae287-df16-47cc-ab1b-95afccc449ff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18023bcc-39c1-4149-a2d7-72bdc5fef8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9322b179-7ce9-4545-8bed-9e8b7bc1c5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b7e747-75cf-4ec9-a3c6-c2c0bd3a76d4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b511fa68-e360-472b-8fbf-5c6fa402a049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e83ca92d-213f-4fe5-a1cf-18b9da90dfe7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50f25696-6db7-4c00-b25a-b3cfd13b7077",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cef25c8c-f30a-4905-a3a3-6f9198100b10",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ffa87d-ae3d-4ce9-a3d7-254275fa0bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "237f4376-8e05-4248-9655-9b87812aea31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354eed97-387e-4f83-9b4d-9eaa9eeebffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4063fd3a-8d44-4f57-8cd9-f35e9b26094c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "009e8f54-1e8e-4446-98e5-8fc6bf8302c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6dda5b3c-3834-4ad9-89e6-165d497f0600",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "923c388a-8c09-4b82-ae30-c199de3b35b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bb0a6cf1-0009-4e18-ac06-87af095300da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de76ca12-803b-4550-84c8-a15a8aad26ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c082c711-a606-44eb-ba65-2dd6d1c6cc72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "127920b2-0f38-40f9-a42f-403fb77d26f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1eb2759-dc3c-43a2-b922-79f1f7aeefa0"
            }
          }
        ]
      },
      {
        "id": "9bbb8e3f-3306-46be-b236-daaf7c518723",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4e213eaf-d964-464d-b65e-09ad760ed937",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b1e51b1-a4d6-4c86-9a88-2f476a99ef6c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad77a839-b628-4a38-83bb-a3baaf96f910",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a098d4-d482-4724-ba3e-c6374a91780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37cc38d-6d89-4b61-8d65-9b9496aefea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f670167-8157-43ff-b710-20a40e1f4d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35eb365f-fb73-428a-bbb6-f8e5ea209c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8707bd-0fec-432b-9203-cf0cae6ffb1f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96d2646-c135-4e2a-bd37-e67fecfaf13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f468351-b532-42f5-8949-a61000313d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c06054-5c19-4e90-8bbe-b89ab49a5015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6660cb1a-b242-4d4e-b6bb-36ba27208892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ebbc9d-13a4-4302-a966-f14da508c4bc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa755d7-b7ea-4bae-b546-79c94f98019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8866ba5-e9f7-40da-a830-002399691653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da191e12-07bf-48ef-a93f-509fa58f1678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70c0f8f8-e03f-469d-9854-6d0aa51b7942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2142d8ef-7c31-4d70-9f52-936a389c8b35",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec08156-aac9-47d4-8e96-55ccf522f811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee082a0-7225-4898-9c96-5607642ad042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7ff263-3daa-45e8-88e5-0c4d5d46d756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73e70d6b-f516-4e1e-8860-81db7d2bda61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6d583-c8c5-4656-be70-2caad8d11ee1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69288bbc-2f53-47a3-8f19-e2cdef771367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22df063c-1b22-4fd1-9b18-f77cf884da04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb95411-2328-4839-871c-7b47b8ea60c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a137809-27af-4cd6-b823-5c905d436ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff10c661-c6e2-4b02-b06a-a935db815e3a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdef96bd-260e-44c5-b68f-d4510510a0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77081117-b03d-4684-9bc0-8838a99ecc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde3e394-6a4f-436c-ae2c-6ec5762afbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ef1069-fc7d-44c6-99ed-1b0cdea425e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea45201-ec35-4b3e-aa6f-5c8f24abcea2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3be231c-bdf1-4eee-9496-120d83f4589c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cda59d-9793-41a9-a7a9-b83a15527d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a65d18-65af-4ddf-9173-ec3f770f918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73db9275-5967-49f0-b2e4-c8bf5cbcbc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0630f7bf-497a-47a3-b666-352380ad2ed8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc89fd3-f675-4dfa-b93c-57d05372952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c483a49-9b59-49e8-a79c-4e1a9d3d27d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac015dd-f028-443f-9051-f18603cc60cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f445ad3d-58a0-4b74-8202-dde4f3facc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238382f5-9454-4842-96ab-a8cf878e688f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6142d5a-f787-44c1-883f-3b66a10764a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad1c37e-93d9-42cd-838e-766550628b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7256730e-765e-4b56-9288-431a8698a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd23ad2-b2c8-4a91-bcfd-a9c77c356ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35ac340-6ecf-458e-ad6c-4d7861b32fad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e583fcae-6704-4954-b3e8-6a8785cb2806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7180c0e2-22ab-4788-84a5-39b59a3a4687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d876da3e-4f08-46bf-898c-710441d4acf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22e5f3ca-b324-4560-b7e6-be6d79abb8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7b3969-8dd1-4808-9118-f2c7cee694cc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab83ea8c-df5a-4301-8c83-68e145152f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05ef4c4-da41-45c3-91e6-6bd44894e355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8016f3-a676-4ed2-b79f-152286039b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ed01751-2b7a-406e-974e-8f7c1ee0f055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13440ef-4000-485b-b0b7-2f25b85f592c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbf3a34-e213-484f-a4e6-d3661f95951d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db58e8f-cc2f-4764-9a61-ba5ae7c1b965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686cf41d-8d7b-4d64-a142-7fe331b744bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f991d82-3edd-4a6c-b891-5b3bd492a976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abcd63a-f050-486d-b4c1-6207deb37dae",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90adcfc-f9b8-4b29-8a7f-a7233026daff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a49373-e48f-4992-9d22-20a2da69f199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ef94db-74fb-4acb-87a4-fee189b823b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccc33804-9f5c-4587-9b94-d415ea27cedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838d2bc2-b0b3-4b08-ab86-bb230ec7c90f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3e017c-e731-42d6-948c-28319e2e9b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5191b556-b5f7-40b2-afa0-8ebd1cc60d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cebfbe2-835e-4519-9b52-89e4663acc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af2f120e-622c-49a0-8e61-df7dd098c30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31310482-aed2-49f4-b41a-a4218eab24be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f2c732-93ae-4a58-891b-692f701420b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c95bb8-ac02-4b51-9cf8-1593bef9e3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b22f4a-7611-4fa0-8bf3-2b8631645a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "587d0287-eea9-43c8-afd5-afbb1cca5f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9a4bde-49ae-4d73-9457-be62258cb5e7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613bd525-f7d8-410c-9061-f8dc815033d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b32148e-5cfc-4f44-99b4-3310511baff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7141565-d1e6-4397-91ec-11906c10744e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23aa60c6-0ad9-451d-9f95-fb6bddc69407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce981f4-90a2-4f44-969f-b812cf7041fd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c314beb6-f737-4535-8656-cf4fc6ab9939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f79005-2c73-43d0-aa29-35817666e056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc295d35-2919-4940-aaf7-7b41add6f1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "596a3bcd-d51d-4a4e-a9f3-adcd35d629da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1f6cba-6c30-46f8-a5ba-ea9bf6ab2825",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21db13a1-b5bb-4531-9369-b181c8cf57f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cab99ba-b025-4559-99dd-41ab4cfea807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c618ad09-c30d-43ef-b21f-ecc737c43ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "85c998f1-383d-4f41-95cc-a65b33ad21d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a6408d-8183-4942-b79a-77064c772745",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16485b7c-ac3d-45fe-b30f-6586d7453422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc7b734-aad3-4853-9cdd-a98c922334dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4ae50a-84bd-4555-a960-197c37ecba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68553bd-ddfc-4866-a51e-204785abd624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092ffe4c-ee4f-467a-9863-3d5b9cb376dd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4425dc25-1f8c-49a7-a5ff-71868b8f16ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd70a81-aa4a-4eb8-adc0-831e608b457e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfe1503-d2e4-4ca4-a04a-b74149bafa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef75e895-e1cd-4636-8297-dcf013a37ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7fa0cc-de5f-4aba-8da8-9846e4ba3136",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42ad497-2304-435b-bd0f-650c63d2d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e4f66a-09a2-4ece-90f6-e72b8b6f5b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c89194b-a024-403b-9227-c646e34b89f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30e304d-e158-41bf-9044-e9ef279b489f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0ababc-4e1b-4840-bbaa-9f0ad479dc0a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79e506d-3cc9-4500-b2da-465ab26d3918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10ee504-9758-4b98-900f-a9467b2cdefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c9c4f0-55a9-4f3b-b03b-323a9cf80170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8425f804-9084-4eec-9af0-a8bcc5bddcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a90dc9-09fe-4638-9cb9-3b021ff57a05",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677ec992-9f23-4fff-82b2-2bf48b769ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b74ddcb-6aae-4868-9b64-d4fd26b28ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239ada87-56e6-4f05-bc9c-c2cea0b30a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c053fcc-ba87-4b79-91a1-0b2b60582f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522ba287-65ba-49b3-9f04-134bb2d9e742",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8759f809-ca70-4780-8dab-ad7fadd67122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2c1313-0705-4198-832f-25c05128c295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ed63ff-aa8f-4971-ba41-b0e482d4ae8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4ecbe8-00af-4705-877f-048436b3713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0db3fce-5438-438f-9679-e35c97739867",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ede496-c97c-44cb-bea7-e818fd4ebd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cd6565-1c76-4fde-9a0f-c9616523d3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f96de5-8a08-4c91-8808-e23f7d9bda0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "537abc8e-5119-418e-b68d-eb584cefe8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f243573d-ad35-42d4-ae2c-4e70c4d5deb4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050c7be8-cddd-4f4c-abc7-7168efede3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516a3e8c-c53d-41e3-983c-e3f46f0392b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef318b-3d85-4a68-99a1-24dce78e4c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e9d24-ab6e-48e4-b71b-1b564d64fa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26c301a-282e-4e6a-86ec-12cb1c92728b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5091ec4-579d-4f3a-a6f6-a4e1f62585be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f81e9ca-339c-49fa-bff4-05f65bb0d493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a0024d-6f2c-479e-9554-f74eed1c7850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bf7c6d-9322-46ed-a31e-aa396074384d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbba8d89-8647-4b3e-ad0a-0bef79f3cbf4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e9ed15-81f4-4d29-9b74-04bf44219cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43901ff-ccb8-499c-9361-a18ea009b8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570abc28-98df-4953-a4eb-19d1795a4f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb44efb-aa86-477e-95b4-32ab169a0729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253b13dc-5786-487d-b6bc-df859dcaa99c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bc13c7-d12a-4422-96cd-cb43b357ab48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425afe8a-cdfa-4a21-88cb-21924bab90ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1bdccd-ff5c-4a23-a1ca-21e3736cbb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05921fe6-fef4-4d1b-b982-eb67e9eac3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e9bbf1-fa93-437e-abe9-76cbee69b668",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2420a9a9-84f1-45ca-84e6-d92f8d27733f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86c678b-f4f7-45d8-8cc7-00e827dab1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5908d4b-e91d-40ab-827b-19c6c54d2db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b3823e-da15-4e0c-adaa-1c5df7ee4e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df23f3b-7ae4-4c4b-b3c9-5c7eb03ae731",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343a615e-4820-4ab7-9b6f-5cd45a6d9ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dde9520-84de-4dc3-bc68-eef71a4d21d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feca096-9d6b-4c12-a152-9f7e84d15003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b90605-486a-47b6-8814-f812c72b05ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14baa01b-a0f2-4f4e-961c-cf312b8d4d95",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a5bc00-b0ed-4cb3-ae7c-8c9916543adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c98a40-df4d-47e8-a735-d7c64aaaef76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962b0402-ba10-4916-b568-f05bb5d09dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f08c54a5-ff28-4945-b9c2-f2d1e69aaa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25572b3-01a9-422a-b6c5-0f3b93c50e8b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa8c83-919c-4782-8623-de9ce5b3bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aed79dc-adbc-471e-8e98-2e7d2bcd2195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f0e8ce-3845-4144-9352-1c59b1b2cbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bb2298-a80d-4df5-8189-0a0b3311379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7aa7877-bfe4-48e9-a4d8-1815b6f92264",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bf93e3-1e10-4a1d-b781-8036e2147076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9171ccf-cb4b-4527-9b5f-7db90c713b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636ec819-9e81-443b-a2e4-9f70d93623e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8186a0-67cc-467f-aafd-ec3511918661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d20a54-3d11-4e13-925e-39641be8b6de",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12e6569-888b-4231-8e8f-2cb0b7f12377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0894db40-9efc-4778-a240-982120cb23ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1b8ff5-bd3c-4591-9b9a-a6b7e15ab484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "972b118d-311a-46cb-a20b-32f0011aa0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96355720-520e-4bbd-8750-83a36550359f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2298198b-acc6-4f96-b46f-d9ae08a8cc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f5ded8c-2b06-4c5f-989a-8cada185516a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb22acd6-827b-4901-a468-14f523d68ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfc8ec2-4ced-45de-a5de-69b9c7bddeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306812b8-8df9-4051-b7bb-de7d42afd3e3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50517469-dfe7-4c78-b12e-7517a70043d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649a9a51-0767-405f-8d8a-b9aca207338a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ce9fdf-7073-49fe-9602-9b1b391815a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93cc24c2-323e-4fdf-9a8b-2800a126b82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079cec27-19b1-4baa-aaf6-aa8373116538",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ceafa1-8fb2-4771-9a7c-ec6bf628f0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d22ea47-b21b-4b01-8c83-4353fc94a446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe03ff59-2cba-4bc8-b3f9-9cfd78f24570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24b50829-2fee-4800-9073-5821031f0e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002c8b77-a898-4cbb-8015-92c5d4844042",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916a3c8a-8017-4ed4-b953-f462726583e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35550075-7043-4830-94f4-d99e2c9abf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b276b7-c49c-4873-9ff8-1ba23f259472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2180cb21-4f1c-4ac6-a42c-bba6fc215e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26348493-4af8-4c10-bcad-2ddd3009884b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030989fe-3e8a-4396-9cba-1b709c7e7f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ba14d1-c359-4919-bea2-5780ab4ee916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c1a14c-6c23-4ec6-8e48-b19164c08863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83409d4-2008-42cf-a1c1-30dbe72193b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cf9ef0-cd40-4383-88bd-7f51b3a2795d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9c1d33-eeef-45b5-9072-ae2fbe7a2e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12c3eae-c173-48fd-9b5d-d06662a570b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf6e5a-1dd9-48db-a38d-832590ec2184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68801596-4dd4-408c-8fed-bf3df93dbb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa321920-3cfe-4ac6-b923-7fa796e793c2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f11995c-6f0a-4c33-91b3-d1de6f8bee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a8fa8d-76c1-47c0-8697-89d4f463668c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d991b590-37c3-4a61-8579-fa4e8402a82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "85ab23bc-749f-49f6-89fc-fb7cea45816a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f59dfe1-1743-48f2-9c96-ca61f6be3f9f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8570c981-0419-457a-84b4-8b18bf4b701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a2ff8a-4e77-470e-a487-e13bd7797236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76316d13-bc35-41e8-85fa-5d08101d9da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3e53be-43d5-4370-bacc-878876376f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe8c312-8469-4701-93a6-c7435095340b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3367b9c0-9051-45f7-9307-54a2d3c985db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc4ce1c-3ef1-41f9-965b-1be061e2fa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5a668e-0fe0-498b-ae3e-6bc0f81c8f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "45854273-2d0e-4921-babb-5c7377b7fcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb199048-fec2-4976-8001-f2cd359abdb6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57025290-ff15-4e97-a821-757e476dccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b07460d-ed3a-4cfb-ba56-6af595ef4618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7f7b3e-089c-42fd-9553-05c66a5f047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c46845-178d-4ee7-9ec2-7ef6cab163a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3911843-868a-42f9-ae55-b5b91de34451",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7a7954-30de-4b99-8336-a498bb9f715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b074299-8e80-4344-8ee3-ced251cb5030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31312c3-83ab-40b4-865a-d77e79e8abaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2488e852-892b-46ed-a2ae-b8de8ed0a660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6618fad-528a-4510-a6ae-2de1f3401cd7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e743c787-512b-4a2b-b2b0-db503caea8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fcc6af-2baa-4b38-bf63-33d3d9b96326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670f3a35-0e90-4e39-a0b9-902e53197d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a1c7a1-7bcf-49cd-8045-7076cdfa6b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d264978a-024a-47a7-86c9-905d6bcc1ee4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d6dc80-47e9-4511-aaa8-d1bf7eeb0bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0448c8-ada0-46f3-853b-13ce0ee039e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd00056-06ec-4485-8a42-b90b2e575847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "860b3479-4bb5-4f28-9108-8be918eed38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94da7ca7-8c8c-434d-b784-eb678e1091bc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578b0683-232d-4150-9fd2-a217fbb99388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f5953f-58c1-493c-8029-aea3bf361c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92fb6da-0ceb-4c3b-ae63-2fa61e6492b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9ec8d3-0700-4aad-a5eb-e9f6c2f28e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b32421-9516-4349-9584-e9f5d8f55d5b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc988b8-0f88-45c4-9659-eb6e1bba9bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ecfd51-6abd-4301-a698-2ca549d90fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91590a95-0097-4643-a344-687f98851897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bea085cc-9e4e-4c0c-9055-7ad0960a7a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b98a24-2007-4610-8c5b-43d82e32516b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc7ecf5-a24f-4575-857a-6973ae305fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7700e1-c15a-4595-a4cf-f907588555df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a873980-ce30-4249-8f74-0093c9dbe01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "49033f92-5eee-4866-85fe-0249e9f0ca69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9b3b09-2b68-4670-91f1-2fb3e407ee90",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9010de-3cf7-4736-9c55-8370afda7bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c259c72-fba2-42c2-8da7-c1af00cd5655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b881b205-a1e0-464d-a81a-a4113feb3967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0795676-99d6-44fb-b224-511378e0b2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade19bec-cd3a-4ef7-9182-bc3af437ea69",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5efbad6-c2bd-4efc-b025-f90ff7a84989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b483ded8-90cd-4157-9ef5-bbf97d4c0694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fc9cdc-ab94-455d-ad71-3f3bd4fa88d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28abfdb7-f188-4719-9325-89eff42f22fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7531bff6-d03b-4b2f-b136-37eb44756af1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd25f306-87a2-4365-b66b-d357d6dc9266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6272fa26-1575-4a6c-8445-f6373df133cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef7dbbe-9587-4b93-9559-ea34a9df15b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3e53b8-1aa4-4c52-a741-32832c03d06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac7f3d8-6468-4511-90c3-cd8feb0558ac",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787aee22-9ca2-411c-8b0a-00094cb13ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90cd831-1ed5-49f9-8c03-c074523faadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b456af42-77b7-495f-aa85-3ac6cb6f5ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25dd0e6c-9deb-4925-875f-7dfaaa32735f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204b4dd6-8846-49b8-8c43-45f08184fc76",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fef9668-b62c-4d8e-969a-46ea7d729737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96027574-de9c-4828-aa4a-d546b5750cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325e066-e8d8-4746-b8eb-f9980b29bc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "212c2753-9d95-40cd-ae91-e8c2e657c4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b5abf4-c133-43af-9072-c8890e450122",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a81374-7c30-48e9-b429-e668c4705c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f548fc-3949-4912-9a4e-674aaef3d639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c228451-abd7-457f-b9c7-5fca91a758b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62083e96-4517-47b9-83ae-33ce234a6c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec85bfa-3d93-4235-be29-d096a844fc16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0838813c-8dfc-4a70-b297-caca880f2acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499d9b6b-d9b4-4ce9-9964-03f8f27455cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15159a3d-8f99-4f5d-8957-86efd305d90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c6837b-e308-45d2-b4ca-a99906e787ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ebe647-2a3b-4361-b433-ef51e156f2c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457ccbce-f736-48ae-bd3d-ee6805a6c87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf96bdb-79a6-4216-8a6d-e69801f69b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb39a40-cd33-4ed0-98a7-83e70df25325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a796afc6-acab-4685-84fe-c4c3c7ee3c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e326a3-58bd-46df-a938-edc6cb1e9b37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5e4a31-de6e-4243-ac12-b863a2b6a78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02cc5e6-2d6c-44f9-94c3-1b1a7b02beea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e5bbeb-8c58-49cc-b2c9-dbc185ef423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b09f6adc-7a35-4a70-9b4c-3222254bd466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09ec9a5-03fb-4f4b-8207-290e43d1ba3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49022f45-3288-42a8-8a60-0f662ee3790d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35992bf6-eadc-41fa-a87e-be20f4dcee33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b0afbe-ba8b-42b5-937a-3e3d1853620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b88b82c-27ac-418f-8c57-f43a32e69ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeb37de-3acc-4152-a6a9-00f9ba3bad81",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9bd829-c68a-4cbd-964b-b082cb0b5fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd534737-52af-4b7c-9ff1-6a3abbcff311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d7a329-f551-4f19-9998-2ba2c68cfae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0927328-8cf0-4bd1-be4a-7639e8c5e549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdd5cd2-b3f3-4ef9-804e-ce99b23ba52c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bc676a-f34e-4b5c-a7d7-05921c4a2023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c95c72-d408-41dd-85ab-f4835ef25184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca118509-729d-43d0-b15f-3e97cd94e1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b421bf0-d1e9-41f4-a1bd-dd25c8b52cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a804e81-d4d8-4272-9092-36b821086b54",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fcf856-39ff-471b-b0e6-c06da2a27e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4381d49-a7f4-4762-939e-6e93e8e4499e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b12f24-635b-495a-b3b9-693253d60e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01341fda-b53f-46fb-813a-2f1c0d92f468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dd0e58-7213-4099-af51-52ac26cc1f43",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1770e7fb-773c-427f-860c-f03cab582918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc21265c-182c-46ae-9f50-5d91d48a808c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56dd50e-6bb9-48ea-938d-c0a0e17056e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "921d253c-06e7-4bd6-b4f4-3612df8f28eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd253bc-84da-4c66-a6b8-71a83b0784a9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0961e5a1-b75f-45c8-ab1e-ebc71e197b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d23163e-5a4b-499a-8a32-eb4412ff932e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947eb4c6-4357-4673-bad9-e0159f2e1729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27669c7e-b987-4ffb-ae87-82daa2982e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d918c3-58f4-4847-87ab-96c69aabce44",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6df228-bd4d-450a-9296-4a7a930cd8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c83e54c-5ad7-4d0f-a820-06474021a7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6872ab-b74a-400c-b03f-078fb4a78510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91fc9d9c-fd7e-46bb-967d-eff3d4605366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b125055e-3441-4f20-9bcf-d2746626ad5b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719314ca-b742-44ed-bd53-ed9801ddde3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b266572f-9b07-4ab9-bc45-3b6696e18ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c9b20b-98f2-42d9-af60-00548563c300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7fccaa-a212-4dba-819b-99350266f3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b78535-d8bf-4401-8a7f-25b6b09d1d14",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb6e365-9e68-46a3-8f66-0ba103abe070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822d5870-9978-43b6-9482-6ea7d6919dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac342e-49e3-45de-9857-b672d1bc487b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb738339-e8cb-4638-8ff8-bcd87af0b459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abcf6d7-b874-4da7-9eb3-8eaf809cae90",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f6963a-fdd1-4bc2-8f72-a40e72c1b3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf37f85-9cea-4c42-91b6-b46bf06e52b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7470ff-eebf-49f3-9dd3-d705712743c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c9bc82-b276-4016-bf29-b490f4234364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cccfb0-0678-47a5-a903-6b431818c64b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3bf038-a566-40c5-9172-843a1260813e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087a05c0-11e6-45fa-b4b1-819538fb9206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aec8954-16ae-4766-921c-92483f7099ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce6ed45-ff2b-4e85-b534-bdafd021d0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839ac02f-1f5c-4371-b9ee-a4e6ab972131",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cbfadc-c320-41ab-865c-f96b084cbe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7150ba-895b-4aa8-989f-c6749019d576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5083840-e755-41f1-a53f-5129939482a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da98c90c-69c3-4a87-8cfd-5b8971111463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5256d3-30bc-4403-8947-b5323b06630b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a12f00-e207-49e0-b804-436d2de3763d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ae21e0-7b7a-40af-a36b-e18d509fbbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8925f2e-241c-4691-a979-3455ca4c618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb49e580-b9a8-4e44-8e14-67e98fcbd190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a335ef7-49b2-401b-ba23-6638893051b8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c24817-bdd1-45dd-a0b5-ebb9a888f64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5821f93-61d3-43c2-a951-15385f3574b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00ad56e-80c1-41fd-91ca-d74ed943640b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4fb879-4444-4ff7-bafb-2d559a1436c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e050947e-1b2c-4c26-966f-21f181d01773",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291334bb-2471-4d54-b936-31cd4f2e0b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cf13c2-4850-44ba-83b6-66f15c864894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4bd69a-26b4-4105-bc31-af2369d7d060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d692d7b-7a37-44b1-b2d5-cc2c42149816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594495ae-66da-4aa1-85ae-9706b9c9d837",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079fd7ab-8dcb-4ffc-bebd-340b7ebe4449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbef9ab-30e0-40fc-a31d-bff70d2deea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a924512-8965-4942-90d8-f740068ff0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fb0480-d266-4e9c-847d-aaab62d8b615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bba42f-6c97-483c-aa19-79696018e956",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b496cc3a-497a-4f72-987b-40360626dd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81766a0f-1788-43e7-bc02-9dce2cb69b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4af20e3-a3f6-4fea-bdc9-52c0ea41e52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d47d23b7-ce2f-4ff7-8ff5-f6521618210b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80564b12-f3ac-41f7-8577-962cdec2ea5d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb879985-f783-44c0-8981-af94a1d9d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957e7e61-9f18-450d-99b4-5fb03194c70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09d96c5-bacc-4261-800d-0b8183b813f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a7419e-219c-44e4-9198-50b7aefcad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3e0968-72b0-4c03-8885-071a951cddac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45f9f8a-67e2-450b-a180-84d832c1ad08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9e5dcd-c97b-4cc2-81ad-64abb1a2a4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2c2d38-80d0-420e-a929-66cca7577345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9bfd09-f577-4004-94e8-4d246586bfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06514112-e9f2-47ca-a77a-bff7ed27e190",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04006092-8030-470d-9082-0bff5274c320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac455499-6320-43f5-ad8b-f59386a46d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a69f71-e3a8-4a0e-a94e-8681fe9253e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f47afb16-d9f2-4e7d-8182-c1f72b261d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc769aa-5cc4-4d0b-8a7f-eac10adab14b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec24ded0-c3de-4fe4-a16c-71d77f8a153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab47a1a-53db-41ea-9e0a-b21abf9d9f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529c47c3-c7d3-4148-a19c-bf47f02a2c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18282d6d-c128-43a4-a976-79e663f1a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723af7bf-6905-4e44-8c37-1a496f352e5b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52126e08-6435-45a5-a243-081a3f6b21f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be8be20-6d08-4b5a-b9c4-1f5a15b3a8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ee5aa1-6c07-48af-82d4-e7617fa78906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96908d39-9df2-4896-b050-7e0426312332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3bde88-7e11-43ed-a13b-d988a3088de5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d85c077-f92e-4e90-9acd-6280f4f62b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6031c82-aef6-458c-b8ce-c3be58d7280d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f432d314-115b-471a-8f7a-dc5c3d62322a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "369814d6-3a18-4987-912f-faa6683e7d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308e4fab-be7a-4fc5-a3b6-14e9de5c91eb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ea4198-483b-4d41-b481-c80b540a5462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807eb8f7-cca0-4cc5-8136-8178af992a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de935a0c-f4dd-45a0-ac68-96a44e908266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19eb16d-af69-44b7-b646-1f4f51e79286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93771ee1-de9f-4541-ba70-ade2f32bdb89",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee365c34-3fed-419e-979d-9db0f5acfb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeeecc6-647e-4501-8645-7c967eccb5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11648c61-2f46-4ade-a560-8925042298ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c631cdaa-bdaa-4875-a91b-0bc092a842a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8188ffeb-8c47-4d45-b7ce-cb1c7ec71e6b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad7ce11-aee5-46dd-b9e7-ea2e039d7e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5110b4a7-9024-4fa4-b3da-7e5639e958d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04596a8-275d-49f0-89b0-9e443213d750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e833d836-59e7-42de-8186-1dddee4c4b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb08939-ef80-4cc0-9f2b-67d3a6a1618c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c00e033-9b21-4fa3-858c-860a0ed1a577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f34a52-1e25-47ad-869e-0116abdcfd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b427a167-041e-4f3f-a5ba-284539423819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d55ec1e1-5cf8-46e7-bf3f-616080498dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5154a0d3-6c55-488a-8365-c34711d317ab",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435b20e3-36ce-4e8b-8205-33276a05ab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dec2c69-1ac8-4f7d-8916-9294b416c8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1b0b83-9279-4b73-84e0-7233eb1adf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "88e99914-bff7-4846-991d-fd348eb555e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba878e30-9141-43e3-8eaf-92895adbd723",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525667fc-fb64-4340-81e7-5ba3907d5a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6580c64-d296-4b65-9c3c-a1ed24639f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a2630b-938b-444f-8230-40dd9001c4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f23f830b-0b68-4e40-91b9-bbbd21e4cb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6392a34-aa69-421f-b3fb-db91f0cdd24b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26deb488-55ed-4d92-894c-547bbc43ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1384bb18-24b9-4fff-bc0a-b675502e0e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d2ed5b-2093-4112-b88d-98b21f177d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db8fce1-9ec0-4798-9009-9d1a7cf9f33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561f2ef9-3770-4704-8562-d61fa8400870",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c8c298-a591-4b97-942f-dc1b55557e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bdbd84-0115-4e8c-9fd4-5ae523e7ddaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feae76f4-6545-4938-ad24-557a0f85c9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff2cdb8-c8f9-48bc-a22c-0ab0d4262b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cb6f1a-630f-49c7-a5ad-454e7530ff0e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a07e23f-93f8-4fef-9697-737e9ceab15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f4ec6aff-9705-4b0f-afd8-96418a19b846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bda186-530d-4456-8f66-dfc6b8a22181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b5ca31-b0af-4b5a-8044-2f535c68064a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6199236f-6427-4317-b3b1-6ad6b0cda42e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2ed23aa-9ce2-47f4-9894-11e94fecc57e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ce629a-a674-4e24-a0cc-3ceaae47010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4742c55d-a761-42ed-a810-e72c039a4ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84688b00-8171-4bda-9f87-b7f0dc174523",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ad6c9bc-f211-4e4c-b4d2-586d4c56c77d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "084e0e23-0737-41b7-8ced-cf39c1844eaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf0e94a-b4bb-48a4-8c58-28a77e267df2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51ed7ec2-914e-49fa-909e-038ab9df17e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c60b79a1-d18d-484a-8327-015710f5e23d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2796e54b-babd-4117-954e-f3c70abcaefb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a7b6eea-ade9-48e1-a4b2-e7a418c58863"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4166af8d-18b7-484c-a38e-3b88f5815940",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ff955b4-1b1a-4e1c-8608-eb5f5f83c542"
                }
              }
            ]
          },
          {
            "id": "76cbde3f-206c-4672-bc3a-1da50f60352b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "940a6b42-a318-4528-8648-3c89997e14f8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0b46c85c-70ff-4316-90b2-6b3b3c90a96d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a42ab88-73b0-418b-b12c-6934b93b43ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f890a89b-2f32-4ad6-a829-538f90156ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb78bbdb-5360-465e-9101-723a5ddba227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1690cefd-1f73-4443-bed5-a68cb997dab5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2676e17d-74f4-4822-bb40-cf8e8380cc3c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a8155d9-d37e-4391-8d2f-8bbe49544bfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b359a2d-3c78-40be-aa8f-24145527b505"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f006e999-ae67-4358-8e4b-4289c7899092",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8c16e09-9b8b-4215-88b3-fea6181b9c26"
                    }
                  }
                ]
              },
              {
                "id": "87c69bf8-f72a-4090-b007-899a366d0203",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "485a74b7-ed17-4219-9665-b1482ebfe8de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e44fb5a7-2617-4555-9e5f-dfa2bdc3a6d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "248739dd-91f5-431d-b21f-734da4f39f77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d9b4c8b-cb1d-41a1-891a-cbb7dc209b39"
                    }
                  }
                ]
              },
              {
                "id": "4509f304-8c04-41d8-ac26-f4cca70acb62",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1190c712-39ac-4231-a5cd-c13a5e9de2c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79f113c8-c5f5-47bf-bfb2-9e0395fec270"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "412753b2-987e-4481-aab5-c7ca9ef9c730",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0ae4f42-e096-4583-a9b9-565f4b28ca53"
                    }
                  }
                ]
              },
              {
                "id": "af7df602-3a13-4936-9fcb-e73399002612",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e217c0d6-0e82-471c-9976-d6e689709680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdf3d3d9-33e2-4c81-95a3-8598de651f77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd1ed699-d865-4e5d-a679-276fd7727d0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "91ca0944-75a6-4721-bbdd-0c1f40362319"
                    }
                  }
                ]
              },
              {
                "id": "2e415a04-1757-4bf3-b855-d346836c3cdc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "084f64c7-63cb-42bf-9c7a-c7b736296307",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "229129b2-1f10-49cd-abbe-7eee1f1be8ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0e596d8-4fba-41f0-9dd4-733192e20990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "70508a01-8ce5-43d0-b48f-112f55a02512"
                    }
                  }
                ]
              },
              {
                "id": "ff1ca8a6-d4a7-48d5-8ceb-d0fe41df21bf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "479519a2-a371-49d1-8a59-a7b4ce9a9f21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "826101ea-9267-4949-bd58-69e8fde8cd44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8b27edb-28c9-403e-be6e-0c4abeab0da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53dd96db-98c8-4ec7-b537-607bbc44d3a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0514051-33e1-4887-81cd-c7e857584e36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71ebf70f-55a1-47ce-9c5e-5820b810ea1f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1856079e-a329-42f1-bf1c-d97dd97d2254",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05fc6037-747a-4ac1-957a-fcbeff637e51"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3280de5a-2da4-4ec5-8815-fddaf8336859",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b3634d59-d2db-4d2e-a0b9-b0a60cca5383"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e54ec25-cc3d-44ad-942e-ea82a87ac6ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24bbd105-2378-4a5c-8b40-347d9bc058e4"
            }
          }
        ]
      },
      {
        "id": "f1a57497-c142-4c06-8251-950105d800cb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b076a1a8-e877-4a91-96de-10f7919fbf2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b94af2c2-ce19-4590-9f96-bf86cc024c23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9657ea3-abbd-4a44-a27a-f07fe4ec202e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eace2e-0cd0-40df-9213-4b0f426d1330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f760029d-bb0a-4738-a962-9fb2a878eccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d902349-60bd-473f-91da-39af37a8e8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65122ac-4cdd-49ea-8306-4e9359c1173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61b913f-71f7-4e91-9e30-298a120ce317",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ca8d2-f181-4db5-9fca-b3bc4324b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0d113f-ed11-4201-bb1c-62f15bca32cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1599348e-06dd-4c98-ab4d-25af7c068c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbbeef0-89da-438d-8774-268bb5530cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db929f78-ae33-4275-971e-0e0f2521e8bc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f53937b-4117-4173-b3c2-a6ecf6e2c519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020a726e-442b-44dd-b310-c1f45eb224d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479a8c06-f0d3-45dc-b60d-c91166d9ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0d76d4-1762-4a06-8204-f650a853d2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d61e6a-5cb6-4412-a0fa-09cc504edfc3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353854eb-b75e-4b11-8bc8-77f369829511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6be418-9914-4a5f-818d-3f3720e8c6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afea690-c501-482d-9908-7d27b7390e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b8d666-1b3e-424f-9586-054c65dbb627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34354f67-f6d3-45a6-80c8-b1e75a8de870",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af53108-2677-4f70-906f-d4ed8955b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7639cc8-c140-4ed4-b9d1-d4d87ba503d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa07970-3d18-4d5b-a42d-8b756e50324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f8a4c8-c94e-4759-9cc1-07e58153249b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7959f26f-f94b-4c6a-9d53-065e3a62347b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a34260a-84e6-45b4-882c-5aa44649acda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63946da-6287-41ee-bfec-c4f871766620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27954a2-ae1f-45bb-affe-97b4dade428f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "107d5fe2-7705-4697-acac-46774af39ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec16387d-93a1-46c1-b56f-6aa97945c945",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5d2efc-0199-4a38-a8cd-1c56e3367cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9155fb2-5155-4158-b340-b94b64a00242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d066aa-7d39-4613-8a33-0e743c6378eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c060db-f707-43a2-a0b2-24e48d3eee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e3feb8-cd2a-4967-b55e-71110e758bac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec4d693-3dda-42c7-8fb8-fcb06b03de64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d50cdb-9413-49f0-ae66-d6016afaa98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242d1327-727d-4437-8d2a-e867f9254784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8df054-44fc-439c-b752-b9b4c4ebcdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856d927b-c1f8-4754-bea9-4694ec3273aa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06232a64-9f83-439f-a6b8-e622d4c8d0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d806b0-51c2-483b-9338-15bea9ab7de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f49da38-ad0c-4d8c-8a5a-2136113e59d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b871d8-84d7-400b-b556-53fddb710492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e86cd3c-c6b5-419d-a4c7-222fdd07e1ee",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51229f2-9367-4d07-a9be-9a2173257d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5adae38-7bad-4abc-b29a-0b5fc833f8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324fef75-ecff-41e1-9f27-247b11d6587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f0c63d-b4d1-454e-8ca4-fd0a47f6005e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c667d58e-0fcb-4e42-a236-02eebce4c04f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a861a4-7d41-49c9-9ffc-38149f5f3296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18ca93a-f433-4aed-b05f-dc95a57c02b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4e1cb7-9bf7-4193-9ee8-6645d282368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7f61a516-41dc-486b-9531-db3041a0f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf877ee4-7434-4114-9ca0-ec134fa28d67",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891fb066-cc58-47b5-861a-d3364c3342b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244027cc-d851-4032-aaf7-3039f9264ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730c0f1a-24be-4e37-9780-130fbacd0bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "994e6b45-0b44-434f-a06d-70c1f1b6cea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1925a226-2136-4d0a-b6f3-691d99251c13",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fbfaa2-64af-43c6-a2dc-feb2d475af5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813cf15e-7d03-4a61-b05f-339155fa8e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81219f7b-a660-47bf-bf89-45fde488f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "101a2a6d-5e88-4a41-9143-a6b8ca0082d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26eb080-fb5d-4108-bffb-a67941ea4156",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcde4e91-2e89-4ef4-9cfe-ad055b8d7b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f7ea25-877f-480e-a05a-673aaa0c1a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647406c7-f919-4854-8005-f0295029a97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a83d6a-204b-4a35-968c-6e1e9bf4956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f2aa35-33e1-4116-81c8-861fb6dc5237",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3307388-c354-44f7-93cd-fbd652cd52ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56a3ce6-7a98-46e4-8830-2b623cd04041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b5199a-f913-4ff7-a39b-ffaae3c1b352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa24e19-a39f-4320-ae41-e33e71f3bc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83819d5f-8de5-467c-a08b-1eca9db7bcd7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e95f6d4-eabe-4daa-b1d3-f08fd189b384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee3e123-1bfc-4ee1-9722-99ef0eb36649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2f5d6-68a2-4dcc-97f3-505c0b219332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6e0633-93fd-4331-b892-57aa934ce714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c60328c-9023-460d-a669-fc5e64bf3a39",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d2ea29-3f9e-49b0-a869-8b2387b1cac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b655f75-fd6c-4580-a35c-7a1ac33aed5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d11210-fa92-4a6d-a0d7-ab61cf69ac7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b8f97a-c091-4a50-8145-48a0074c2002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f167c911-6f4d-4e06-aba2-2149243c5b78",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fdcc84-8cba-41b8-a796-0825e1157780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c4322d-c5bf-466f-b78c-2a0e9afa47e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea296e3-d4ed-46b3-9234-3cd881dd3884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a9fdae-0a1b-4294-819b-c8ec1f771608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848fc692-4849-4211-acf9-c0398ea3212f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a41fb10-31ad-4786-a62a-b82449023d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a129e1e-7ed0-464e-ae91-4164c0d51968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b2e6d5-1010-463f-8217-6a01fbcd7d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "764ed06c-bfd2-48cc-a87c-c8cbfb987e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df7a640-50ae-4fb5-911e-f7bb18f9817a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4463c7-e551-46c0-94f2-be92e3f2f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebffd4d-0194-4401-95f3-5941a99abff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9ac4d7-2529-4c66-a2d6-64f99fa590ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8881acb-99f1-46a9-88ee-392c2bf2c468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fadf690-a2c8-49c8-8304-5c6c0246f689",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4af2624-aaf6-4f25-bb5b-bfaa66c7e8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed686d2-4615-43a9-83b6-09cd759cfe67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829814fb-bf25-4306-aabd-988aa1385947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e312e93e-f6bc-4f62-9cb5-9fa3147735db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27abd4ad-86fd-44f6-a6d1-e35673ff9aa8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d27613-2a75-4478-84ee-cf634883bd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952964f9-88fa-4d2d-9743-fe718c9a4ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9809f417-3221-48f2-8175-cf6fb6a3cc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "198922d9-7a8f-4e34-9d1a-c5a4fe0f7c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9264df-57f5-422c-a351-df98ce69f621",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d0d8ea-7700-45a5-94a3-8a5a4fa59000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d161b7-74a8-4e53-93e9-706ed99bdef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0622000-e312-4090-b522-deb1a7360bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fabce6dd-8071-4ea1-8e3b-459f0d9fd98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef701efd-60d0-4f8e-ad2f-850b258a95c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f4965f-b7a8-4499-9899-6731cd967584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ebb941-eebd-49b7-b673-8a6498088f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa99afd-8399-4f58-a4cf-f8fb01fc8ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e021b7-8323-4277-a06a-010471305af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7871f8a-99bd-4454-a0ab-aabbe6161900",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb75a5f-c4da-4822-b61d-e7cb7836bdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af32f856-4f11-4707-8fd0-f51b55220ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f796b7-7e5f-420e-a6f9-2d1e629d29cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd2ecd4-4909-4daa-bede-629a76d4d6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e002a796-3ffe-4f7f-8110-d462a76414d6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c75756-84a7-461f-9335-4e0ca43cdde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c957fac6-efc1-4f83-9afc-82f32236ffd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c34bb5-8126-4e0e-aba5-383005cb1518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db3b075e-a7b0-4797-95ff-888f1d88d03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e20f87d-f7db-4abc-8de6-41acbe33eae3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fa31fc-e61f-4437-9b98-8df25767239d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8377d1-a70a-423e-bf01-fc07ad8cfb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c4d1cd-5190-42a7-bb8a-884d571930cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75ae317-a009-4278-b4c5-be43fa8a913f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744bbc35-4ad4-4ca8-b89b-c50b4ae8073c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97631f27-803d-401f-883a-86c61a8ac0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5749d810-cdec-4365-b120-e4ca3398fe3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43950b1-d8e3-43b2-b165-31690cd8d856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7576582f-df86-4616-b9be-80b1ea50196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15119053-e31d-4590-8188-70cba04dadf8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69570d3-4a80-4fc7-a516-3e008498dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e10076-d8bf-439d-8644-5a6fe1bf817a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7526102f-59b3-4ac9-8e85-24563078ac36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77971073-3053-4532-bfbf-27518b8201af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f581080-3251-4807-87f5-c40686f86a64",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3065a541-bc81-4d4d-830a-775fe7c7e56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645129da-2c95-45e7-925d-28cf4c34564e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db099a24-f591-447c-96ba-03cf3482f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc4a5ef-6e10-41ea-9de7-8deb36405861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b07410-dce1-47e6-883e-0fba32955912",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3d34de-9a66-4e71-9109-0ba94c9d1060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d4b983-acc0-47ee-a05c-7c5ea0e76171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d122741f-4b82-47f2-80df-d8e52a7912b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72ff321-c405-4966-8256-f36604ac52af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dce395-d28f-4ad1-8503-cc42347a6439",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399eb709-a1d8-4d0d-a5a6-0087abec90e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fec9b7-76d4-4fbf-9a96-a2909cc9a04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528bf1a2-eb56-4214-80ed-0652f928bb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bc2d46-39e4-45d9-9fa2-51a9ea24f7a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1baf6ae4-cf1c-49cf-a406-1f4267873dec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8664eea-4941-4dc7-8cad-99e358aad851",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9112d7-4e0e-46e8-a6cf-0ce60b0ac83a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0e6ea5-6665-4876-9dc1-a38a5422b25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2fa9ad-c6a4-40bc-8828-78f8dc9e86ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15eb4609-c2b5-4c40-b3b8-7ad0599e4796"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e224bdae-22b8-4982-a5b3-c834babfb11f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09e790a4-fdee-4a4c-a579-c751390e2b7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df04990d-ccb4-4669-8c7f-bfab99b394e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c65920d-6cec-4055-8a15-9d08646df8be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15ef7f6d-e72d-4b11-9027-70787aa2c556",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42fe8e11-7f38-4a8a-a8ca-30be27b9ea04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a4c7aaf-1f6e-45ba-878c-c696df923193",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "480bcb15-a2ed-4bd0-9fcd-0b1252221e3c"
            }
          }
        ]
      },
      {
        "id": "2d37e3b4-31de-409e-872f-7f9ed747d959",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "031db042-028d-41cc-bd18-1015aa22ddc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d7b7e8d-eba3-4d75-90da-02b34a08af8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac51c766-9cbf-45bf-83ce-8843c44384b7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25729d79-88be-4c5b-b1a8-9662018bf843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eabc5de-ba83-4663-872f-4e9000f34fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83542976-dacb-4a62-935e-f655327e6fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "892f019b-5b4e-45b6-bb89-15bd5bcb704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048fd6ad-b95b-4e9f-9675-bf1b1ba1ee83",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d85fe44-a6fc-4c9d-9a98-674b91739bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de84e01-7790-40cf-ac98-adea3349f96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfc2f28-8cdb-4013-9ab4-c8ebfb5d8df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a415c7b1-928a-4118-b6b9-0166674d7087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e917e509-02de-4eac-855f-ff93554e23f5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c709535d-55ba-4e83-9863-7d85b0e61ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ab2fc2-336e-4cda-8e8c-98d7566def63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec6d591-1a1a-4ab1-ad90-fd75129970fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95d71011-f088-4cbb-8891-da6733781648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461e65fc-a07f-4bd8-85ee-256f692b1e7c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f54489c-7d52-405a-9c1f-59c9abbca21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d22f50-ce2b-49e4-84a5-fc661531e5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10676607-a064-47eb-bed5-0faf7a320090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86063fd6-fd6c-4e9f-ae6c-28ece914facf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157e29f0-1934-434a-bc01-20e337e45304",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea7a1c9-fac6-449a-9780-50f15b7f9a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5f454f-634f-4778-9fb0-751044e26a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d374f6-7f52-424b-ac9c-53fdc669ba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faeb57a7-26e1-486f-9195-be61268e6c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4187ec42-dfdf-4ced-926e-34d25e0ab829",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a6deba-c293-404a-8eaa-ca9a2dd71f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bde5739-0c55-4cf8-8f9d-99354a9a08b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b62b365-0851-4cbf-9729-6c9bfc59b9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3eee90-5dc2-44fc-ba14-bdd7aab47dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dddbc8-2656-4b73-9d3e-8a854710babf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fe63fe-914c-4fd3-91e9-563b6f9250c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d583411c-a380-4c67-9013-0ffc339c2de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f6eae7-7ecd-4145-bf91-a456f5b9f2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f64a291-54e4-4600-95fe-8b2f4f546c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed16fe7-31c6-4997-8461-5aa29830e2cf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf20188f-97d0-4092-b979-2e38c461f4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3ec802-f180-4919-b5e2-458b51ab557c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0c2b01-51bb-42f2-aa3f-a962edc6dbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "547518b8-df5f-478a-afd7-27276d049bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a5419b-aa74-4ca3-a212-d73cf8a4afda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eec14c0-eeec-4b7b-a189-5ce1ccb32a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a7fd5b-3282-411e-a784-60c6acf553a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7deeaf-fcd2-4109-bdd3-2fc75666d896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bf091b-e9e8-4789-8137-319557ac9c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08dc483-1e55-4b44-9ffd-1a8df6f8f0bd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b209a601-544a-47a7-ac47-4abed3fba5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513e1336-ce50-48ba-8b95-68dd710867ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3b0d65-09c0-4ca5-901c-c7e35e96e88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eeb7ec-dfc3-450e-a090-459de8ac7f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82a3e6f-f845-48df-868d-75b243e85f8b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c34774-082c-479c-adb1-de09d6cb6ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b772ffb-cee0-4e99-aff3-9d40c4f0440c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f89fc97-e0a6-439c-8bb9-0307f699ddf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "74afa7c9-ad25-4800-b0fb-dc382ca1e676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df5bb95-9fa9-45e0-a78b-5f26c58f232a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6e8e67-491f-432a-a1cf-307ef724636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dc5e6b-f898-4d9a-ab98-c69af2233c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3401ed3-a28d-4e31-b4ca-136032402747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2473404-a7fe-47c6-a5d4-97c32c7015bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c371238d-2478-4ae4-8ebd-07f946d93c5f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b86ba2d-8fe8-42c0-ba62-fb57a74c3e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857c4962-163f-4d72-92d3-f37ab9795980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97229405-2c5d-407b-b1cf-ae66253f6852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b90561-e2b8-4313-a6f3-142d6999a4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4166269-62a5-46c6-b788-13d6d3e6e668",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a002c5-272e-4be5-95c3-9bf008050640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1937021d-01fb-486f-8169-e2cca6e03984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2f5212-74a3-4772-aead-43fdbcd29154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ea499a-7544-4a68-8dab-9540bc012549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cead3c-5918-4032-8b10-4c78ae93ce29",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ce6e7c-64da-4ada-9deb-9db2adfd44b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21111e8a-e0e6-4a0d-95a6-93e5cf25c5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e8f79a-d369-40fe-a54f-8a22953194f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "04dca7c0-4e7a-48fe-b75a-1c36d52a07d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926aed8f-522b-413b-9eb9-f2ae6aadf52e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f32d6fc-774b-421d-ab6b-41c9a812281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c62bfaa-2cc8-4cfe-a308-5d2c9b2ba07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595c12b8-a644-4bc5-ba78-f0098dae705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf35027-f3f7-4d2b-94f7-a993a74b9a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ded36e0-fd67-4547-8554-8ffc0aee321f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80e7ff0-2767-42e6-9eb4-8aab03c387c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2c063e-ba43-4174-9678-18a202696669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30e59c4-c09a-4f25-882d-be653c46a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e801087-8dd8-4c9b-a778-cd0340b51fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98aade6-8251-4cb0-aa74-45f3b45681eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beff1866-c580-4406-a6a7-4a642efcbfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a2f52f-58c5-476e-8c2a-52890b3009a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c937e0ff-acfc-4abb-958b-ba6a64860c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b0ba5f-d89b-4283-b83d-74aac8a3d673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8fbf9f-421d-4d23-bb3a-8f4dd7a26a98",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31a86a1-e9a1-4540-aeeb-3e6197939fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e383633-c24b-41a6-a462-9a796a79b5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1072a80-b73d-4f7a-a833-f015d1ceba53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cf4dd4-cbe5-4d67-bb5e-1b44c88a4b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03348cd-538b-4770-8642-0f7bd81bd95e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81649e06-6298-4393-83ce-907112c3ff07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6403e7e3-0177-4a5c-ad18-6f0a5baa873e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8dc298-a802-4277-b7c6-da7f7e0f904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a42223a-df06-411a-bfb2-e6b7f2b91d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d127abea-67ff-4632-ba84-b3b030e41191",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f111b2-a10d-492f-b54c-6b02e7f5eb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cd35f4-c2e1-4bf4-a0cb-dbed0ad2e143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ac1f9-0087-4126-b393-6ba3c85646d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0204f2-cbd6-4648-8176-fdd7133c87ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdbb3df-05da-4ce4-aad1-cf21ad4cd01c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1562c12-bb78-4d4b-a8e1-5a780a6b25a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ac09af-009b-4aa6-aae0-65ff6ffb2c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293ece5f-528a-4e50-b3a4-2180a9dbadd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae200f8-d47e-4d63-b55d-e3bcd562e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b14a67d-d933-47d2-a0f6-3f2ef47d735d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeed301-c54c-431f-881d-e8cefa818643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4f02e5-7538-41af-b3a6-c13177d59b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8120ff1-62d6-4095-aa16-69fb94f8b0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded2ef61-bd5a-4fcd-adc7-e16489943082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ccb489-c6be-4204-899c-cc637dacba01",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4592ab-f42a-4622-a646-af66e4f759c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af312e24-66a9-4111-be75-4dd583189204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6ea5a5-9096-4bfb-9c24-b486efc9d9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "939a6dc3-46c1-488b-ac44-7db466430306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afa9fa1-4713-409a-ac08-4974794b7872",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad2898f-bd8d-4a32-9d96-12f6beda0686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c22f62-9a25-4cfd-8112-72b7e3bb622c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2a17af-7a8a-4165-8a35-17289adac1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f69c28e-c008-44b9-a764-47ada8d3afbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ecfa76-3897-466f-bef0-abb3e5b02cb7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f94392-d248-498f-915b-60a48c111fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce5841f-6953-4a07-9d3c-50c08e5e2cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525345f3-ab24-4035-9f29-32602286df93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "688c4de6-dcd0-4b49-a04e-2a02802af507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bcd496-f08e-4d1f-a240-128f3eafbf8c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ae0534-d230-496d-bbf8-6abd89beda9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8766f9-7ec3-4481-ad7c-a05698d63904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e22a82-cd68-45da-adbf-d18578c5413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a0368c-f037-4b52-b118-3c5354e93d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc510c7-dcfb-4cac-ad8d-a3ad5c8d0af9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab54d91-c2f9-4837-a632-db1e08bb047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f957efc6-1685-4723-b637-da9a18a029df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8133566c-9f7c-4ece-b1da-c31f94685925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a7ec30-bb00-495a-9032-0d3ca62a91cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa7c098-4bdd-4bf2-8249-29a4fb646a70",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5862eaa-bf50-466c-a2da-f1a08625bb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605ae96b-eb5a-4a67-800d-8dcc04ed213c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8f9c65-05bd-4294-a808-3ffbb7da8487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b954a089-1ab0-4041-9b93-f090efdbe33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7045f72e-0b3c-4789-9189-646145fb3722",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3986befe-5ccd-4167-b5f2-4e8912c22d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2e9c0d-ce16-4433-9045-f3bde418cc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7188e7a6-9629-4736-b979-fd81b97aa9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f15f2f5-1d3e-4cf4-9b67-4d1ef058b0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec073c08-206f-4d70-a98d-532f1a7204be",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef160497-bfa7-4774-b4dd-9c6b78cbcb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0550ce2a-529a-4b16-a77b-240d5794ef48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528610e9-d6e8-402e-b1f7-543b44433838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb13e54d-b91a-4d47-bedf-01ee8ff9c9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ab6c30-70e2-45b1-bdf0-743859d21cf4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8191828f-54f0-425a-afc5-59b3eb1e7592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948d160b-5749-46ad-ae90-8ad227982774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca87936-783a-45df-90cc-46a0da91c603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "980b98fd-f9d8-42cb-b493-eeada2bd4f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b23aeff-af03-4a52-8754-b8516a638ea1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053811d2-2086-44f3-8083-91b5404c9668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc908ab7-3f3d-4e0c-bf74-9fb0b9dcee6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786a44e6-4c58-4dcc-b927-80c71ca310a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8c7906-385f-428b-8a1b-3e7c4349babf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599a45d3-8f2f-436e-a8c3-b4502524f599",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126ac7fb-a45e-4809-a6f6-2f263e766228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b41b50-f0b2-4ddc-91b6-1a62075804b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3318679b-bf6a-4683-9033-2817e0fc8f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e72690-8e9c-4852-9df8-26c165f759ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676d4ca5-ba85-4de1-be0a-9997cfd1dab0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32720414-b85b-4c84-80f7-7f40615de764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f836da15-b271-4e14-81ec-79ae8fb0a016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57524f7d-8cbb-4058-acf0-98ed3ee3da9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e244c181-302f-4af3-96f4-3bd8b89a5dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca59bd-a227-43ea-b70f-febb1d509225",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa220e0a-ce41-4498-adbe-3de3cd3e039f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459e393d-c938-44be-b115-e29ff1c38abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8582c84c-d00b-45d7-a591-d7eedbd4f0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05092e8d-443a-4045-b9cb-38dd684905a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b5d4d3-e588-40c7-8dca-fe685253a521",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0441c4d6-e645-46ec-8dbc-278c17164c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fbafd3-f238-446d-b24a-a5b794245919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13149c9-6394-4378-9211-5a9b232b3c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81a0d88-85bd-4f72-be22-74ae5dd7d95d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab979cfe-e0b1-4933-b982-5e0b3458b07a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac2b1c9b-f589-49d2-ba9b-6e259a188824",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa82cfb-ed9e-447f-9137-0c2d06b27da6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e936c43e-8513-445f-8e9d-80e6186e8993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c945972d-1e5c-46e8-ae19-d9bfd13610d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5612f66-16f4-4b83-9fd7-56424253b9a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63c3bc90-2cd4-4a19-80dc-694fde3a6909",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d2456d4-f911-4847-b1dc-c2e9e0e7bd69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "304bcdb4-1c06-43ae-958f-34d8086778e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb066823-6625-43bc-8958-25fc8fb8bf64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dd250d2-fdae-4deb-8a8b-ab5c9d052287",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a035744c-2958-44ba-a0f9-dc82f5eba842"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cc8b3e1-dadb-4cf8-977a-e4e319b52a0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7b9b5d6-c575-44c5-8ddb-9b2cd685af2e"
            }
          }
        ]
      },
      {
        "id": "b25ff2aa-6b31-4805-86a9-c52f1eac0611",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6c69f416-3ab6-4e35-bbe2-cd952aa64278",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2856cead-94d5-4f88-b226-246345c7f541",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a2d83d9c-1aea-4a11-90f0-217eccbeb824",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fa119b-452a-4cb2-847e-209aede6d66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7058b365-2256-42c0-b4ad-7b75405f00ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1da97f-747d-4d73-aadf-bd71618b3975",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3781581b-969d-4a4a-bc5f-18b9ac41880f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad12ee7-0ee2-4eff-a91e-83d867c42f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8c2b80-7353-4441-aecc-81eb8f815ab4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c72671-cc44-4a86-8d96-d22b176154e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519b9353-65c1-48d2-92c1-7d74cdf33f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fb6874-d9df-4590-9338-545f9adce70a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a97a29d-100f-44cc-ba26-51146ca671c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598b590b-3e9e-4b8f-b6ed-5d93e23d140a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9b0a5-ac9f-4794-9cae-8e1e6d250fb9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c346cce-3e87-4e96-82d4-f1df2492c268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce2cd87-9cd4-4cb3-ac77-c8c61e6029c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2d3088-eff3-4a75-82a0-606bb7590206",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3f933d-c9f3-4d6d-bf45-dbae63e26e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800b0fe7-dc71-48f1-89f2-3d83d2557173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da460cc7-e6e8-43ba-b72b-0a51eefe87bd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a391320b-8853-4cc6-a6fb-7ad5e0ca227d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b4c5da-daee-4288-aaad-0ea0d24065ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a968f8-d6b1-4587-86d9-45693541dcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2eaf910-b683-4105-8318-b46b9efd167a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209e3c36-f832-4f55-8935-d7cd07f4ca85",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83f3191-4f2d-41a8-8233-1a8d127966d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27242aa0-8eae-4750-860b-d0c8d2e1907d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c59153-90f2-489a-85d4-3f77b2987d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b343653d-8cc1-4a85-8739-1b6e07798e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f670aad-f3b0-458c-ac09-f6fcd894fdba",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fa05bb-8060-4c7b-96f9-3584a50646cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd9342d-484a-47ba-a631-2ac6b41a3359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e039f9dd-2904-4152-a8e5-53cf128b7442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8529e21-2463-4f32-b17e-146ee072c652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca15a99-ab7b-41dd-ab44-f5df46b1c3bc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2722ccfa-ddb5-4ccc-a1df-fa26e897bdfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d04283f-8137-4d0c-830e-2963b0d349cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f981203f-1c60-4b7e-8133-f12ac4420783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011bd18e-a765-425b-a300-2b2fa43ba3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27e4797-876e-49d7-a291-d3f38446c167",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e67928-6161-46a0-b291-8e666ddf55c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13e2a62-a177-40b6-b498-ed182498ffaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d0e71e-588d-42e6-99cc-b590ab549796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae34634-8693-4a40-a79c-d51c869305b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e078f2cc-4daf-45a0-9378-b774288a4e47",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ec056-ac53-4a53-8967-595a5d7e95fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83d0a48-48c3-4e91-b91f-b91af59814d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e1e350-c03c-402d-b9ce-8942a036cb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4837305e-5f57-469c-92e7-c88a0b84c381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cf2c29-71ea-409a-9d54-d3305c413461",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e7b4a2-9d48-480a-8d18-82cde6ab8d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653577a1-1654-4ac4-a70b-66ca135d1df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ae3bb2-c234-4b61-af61-04c96177b547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2add68b4-7426-4f60-aa28-d9289c03a8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26754e9-49e5-468c-9a76-2b56f05b5e14",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da04605-bc8d-45bd-bc15-edb2b4294968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4257bfb1-7035-45fc-8827-83ec01ce614a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a32d3b-8521-41a2-b235-d9cbb12a0143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2ff314-7660-4cda-90df-f10972ba94a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de79e0a-2384-41d6-9bfd-bcdae134b1f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cab808-1d06-4ec5-8ce5-09370630f4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adcfcbd6-9091-4b28-9da5-b65bd5550f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50539122-bd83-4cbe-b934-5d788798362a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb4b6c0-bf37-4911-98cc-94894729b8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a12f588-035a-4730-96f9-91c752ef156e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9533af27-e547-4cb0-861b-1d8cfe01d720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e04f3fe-4db8-46fb-ad81-0861e7f7f76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65396e6e-e979-4439-9e5d-2f7fc82bb9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601328a8-b170-4c5c-9c47-0a98238320bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed306ba6-57fa-4a0b-bbe8-79c92ffeccfa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ab6d36-3771-4cd2-8d55-1bdf89ced9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de3041c-880e-487a-8ace-c6f0c31827e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdb7884-bc1d-4c11-a6ca-5d2b81135025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1986351d-a6b1-4dd7-af75-9e9810b34091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9803ee29-d677-494a-b7f5-8a5fdf51d103",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c0cdb9-dcfd-4f08-a1fe-c6be8011db82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f953096-1637-4fb0-acf8-20fb9a74293c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f48071-4dbd-45d6-8f35-416e129434b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f63d181-077b-4183-966a-af3b799da90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42352554-0742-462e-bb6a-7dcc92f750ed",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d41cf8d-4962-4384-83fb-51e921a14bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059188e2-49b7-4428-aa70-838488387998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6410b59-2715-424d-87f0-04537203d11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dc0636-ae48-42ab-9237-76dde74e6ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5242cfa1-75e6-453e-bd26-e4c9a8268eb9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fcfdf4-c239-4166-94b2-dcaed0948f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61ff6a8-7d0f-4541-9065-aa0d19b1a904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87d17cb-cc65-4da4-9005-b44b7a346c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d19291-376f-4dd0-ad7d-6d8e29f81ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d369ebfb-0373-41ed-a48b-dc63eed27d42",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482f1d16-393c-41e0-8b51-8e07d7e0fc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496e884a-0e51-4d3a-ad96-51848f8a0d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce424582-887f-400d-b671-28c4c7173fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02d6d36-a16b-4d13-8366-bdb0cd837785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82b93ad-086e-498e-ae80-812fbe7fe5c3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5844dd-53bb-46c3-8779-09dcc952d256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a00adf5-2171-47f4-9d88-0437b5bf3106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37f23d9-6013-4a5f-885e-2fe0f905c5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c909abaa-0216-4c71-b5d0-e07e059fd306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84af9dcc-1343-4cba-9e4f-90269e9a1f32",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b602f0-4057-4a30-9601-3ee9530764f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7996b18-ffad-45d2-9347-0ae3a14796a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba54de22-331b-429d-bae7-e54cca009158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bed105-9c5f-40bc-903b-d75e8b497c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36665bcb-3659-4d7e-8798-65c7ee0bfd4b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9e77e2-e97b-44f7-8197-b29fc63407a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44af1ed4-2855-4a25-8d57-b486f8eaee2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44231ccc-e878-4c25-96d5-8d91b266a178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7855ba-37d7-469f-8aac-37b225d61a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01ea81f-39a8-45f8-bb44-5d711091d8a9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64adda6a-be40-46fd-8c1b-66d7dba5e56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e4e1f1-53a7-48fb-8d39-43714f18affb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16322af-f033-4569-8788-242769bbea60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6803bbf-e8f4-4b01-b9d7-8f62e1bd500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b677eb1-ff81-4ec3-bfb3-67d656c2cfac",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1771a20f-4039-4bcf-951e-7944b3dc937d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17c6d637-2bee-4650-9e8b-e6162609811b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3f8223-b0e2-4139-838b-9b3e4f0c48e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f928e1c-a507-4ec4-9f6b-873798c26a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875015f5-e2aa-4c4d-8d74-3a682cc83247",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938ec1d4-3b0d-4287-aa34-ccb9252de606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044887b4-f721-4a6a-847f-451f59527896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2d5322-5be7-4264-b9ab-1cdf4673bc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915338d3-4fd9-4407-a377-0e462f8f279d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0583438-4e78-435d-bd48-1fcb500f2c33",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7520d8f3-eaeb-41c2-8902-a331bc917b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86db400f-c4ca-42eb-806f-8a812efc0ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7984d4cf-cd4b-4c42-95c6-4cde35f06878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979391ad-4731-46fb-b03c-8ddee02149c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22659d9-1d4b-4795-b5d2-15c14dbd5ccf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9867f0-f5e7-43dd-abd1-d3619730a96c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f271b73-c351-45af-88ef-9bce7ac45c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4618d0c-88d7-484c-ba95-3b3bcd382d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fedc18-9dd9-478b-b508-6f7eb7ebca93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1610ec-daed-412b-ba1b-3904acb50dfe",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0be00c-f977-4f06-8994-cb1c2159047a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d8795f1-434e-443f-9ca1-c8736867ec1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f96cdc-d50a-4c9b-ac03-dea1009914ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90e3cb7-bcb9-43fb-bff4-51c694516f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1481bc25-025d-4674-8f16-dfaec2a116e0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab73837-0b48-42e3-a8fb-94e5b737cf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d0c182-172a-479a-a569-17c10f81d971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4110ab-3033-4178-a554-814e0b1bb160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1a1f55-fe90-437d-bb72-7c834ab20892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9306e24e-ac40-4e37-ae2f-58ffd8cfaeba",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfeab1b-c235-4e3c-8d5b-47c66030c2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51761653-730d-49ea-a5f4-02ae6bb9b958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12879c9-93b8-4c89-a932-19688c579846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711e5a89-9f3a-4cfe-b94b-3b1598ee7323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eada34-dc9d-4c87-a7a9-a6fe6f430cfa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f956be57-cebf-4b8a-a516-74c22a94da4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f3bae48-3d3f-4d0c-a264-8b87d9e4c9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c683fb5a-0a51-466c-a2a0-3f7f59c4d092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e845e61a-b3e5-4af2-9fec-9992de5fcc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5fbf55-ca36-41ef-a3b6-1fc9177d5969",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d0f460-977d-459e-a316-f4742f5dd8e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71927dc9-20c5-4058-903f-d378fca89a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de756df-685a-4778-9484-b4b84eb4315c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d79ffc-708c-42d6-b54e-d845e90da85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fadaf7-d73c-4cb4-9fc9-c9562b5bbe32",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb5842d-e225-498a-bb8d-41a45cff2359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a67558-c922-4d47-a447-46e9a0c4b658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0a5ccd-9641-4e69-86f2-93f79ae7e40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21db8b41-edaa-4b8e-8127-cc3ca8435cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5e25be-3051-4d12-a5ae-98ba1c634bf8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd77a26b-d307-4875-bde5-2708361b36a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dff86f-ff86-440b-9c78-0f0ff285d478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6a09f8-bde3-485e-bd10-dbbd0c21e540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d375f8e-3718-4d15-a78a-43242aa010a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553ec056-d708-40a7-83f2-ed9e6b6c81d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6eddb5-bd7b-468a-be73-4353638025d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d17936a-5a9d-425f-b38f-571ff5e927b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b78aa5b-231a-41e9-968a-0673660418ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5e829a-d1e3-4546-95f8-d60197aa3610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7995383-0132-489b-bc93-9f5aafac9519",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a0d7b3-a90a-4530-bbdb-1db0e9276e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1547a60-c039-4020-9ae3-d624e9f5f2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad56bb1-cf2e-4985-9190-4dae961cad72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76744f80-7b09-4fcd-be1f-e526da0ea72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c83c25-79fd-4ae7-975e-df388b84a3b6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fd73a8-3726-4e91-8c62-540bb86236ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1037fa-2ae0-4713-a7e8-6a1b352718c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba35b29b-7164-4258-b153-879ea4e88b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89575e96-2383-4b50-9c3a-47f9f9f43782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d220c22-350d-4d64-9252-32f23cdf3d05",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a023d98-7aec-41d4-8935-fee85ac391b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6b340a-316b-450e-9535-d56a5f5e65df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d6ac65-3617-4ea2-ac64-691f2ca665b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9638711b-c64b-4c82-96cb-d3a17b5af130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e22673-230f-46e4-8375-6cf9ab9fe7ac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c603a63e-6a12-4222-b409-faf3098a9e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da019a69-f396-4c40-bf8a-560607779f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8099dece-b103-490c-bda1-838a4e37954d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03167fe2-d1c5-427e-9ce3-0d4d58e56ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a37ffa5-8207-4e6a-82e7-7b7a36f85088",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24744e46-84cb-4c47-b584-cd1d68c6f951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c4dd86-6af0-4423-a26a-cbcf30c51b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f260f86e-d16b-4c2c-9a44-c4f47bcda293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d106e2d-d7c0-42c7-ac84-06f98fee63c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a64bd4-4380-4563-81f5-147be0d36605",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9240c18f-37de-4c80-a8a5-950f655d270d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc18ad0b-c705-44a9-9f38-a0191e0774d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c770762-3b07-4e77-bfe4-22f8f1d29e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bcd6e3-983b-4b72-9cec-0fe08c0b00c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829c24e2-6e93-468e-9ac4-cdf081df68d7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311dc11d-ad26-4e73-98ce-8675961277a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce37483-e8b0-4ea7-9e46-31414b903881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a61e90-a961-4cbe-8676-5c71f6399113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23f88ca-02f5-49eb-a98d-580bf386a60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13335a7c-af6c-4f4a-8689-71533714a807",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55264ab-de8b-4a48-ad88-c01bafb5c177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8705101e-4c3e-481b-82a2-2544ad631098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d8e310-f39b-4a63-958e-1e81daff4806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dfa4d3-d65e-4740-a3d2-d9c1a7bc5ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0a7290-6d4d-480d-856e-c697bfc91042",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83679976-a304-4293-9e2c-3f470a85b81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c993a45e-512e-4d5f-a701-27447738ee53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83ba52b-1b7f-421c-b608-ee78b640b453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1f0f6f-15aa-42fd-8ccf-6655ad3e5035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f08a821-9217-4894-a790-7f15359b938e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ab130e-caaa-4f11-8ced-7983a1e436eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d23c2a-d478-4141-a914-a87b072ea2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf2d9f4-d75b-4c45-a5d9-a4a627393ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db20ee6-9e70-41d2-8e52-7cd1b2c2b17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b32a27-b2a3-497c-9628-00d5a4513ce2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c302ce62-45cf-470b-9ff4-a6505bc4294d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85fb30f-70da-459e-9041-307f82d413bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e51b20-6bdc-4931-88fa-d594ab018691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b3c70c-c472-49bf-ba40-74ccf8ca4cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95134f40-7598-40ce-a804-3759b86496d8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2618fc8b-8ee9-4f39-ba89-20b814c412cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0d43c4-b110-46cb-9d9c-ccd9be2c4a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebff406-a398-4fae-af51-322f4d7487ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d02cb8-3fcb-4b6d-9465-b402d2494633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385fbe4a-f2b4-41eb-ab2b-1f068f5bf60b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b178c21-13d3-4b2f-bda0-3662e76e1de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d866ff-f044-4b26-bc55-f72d80b7de8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01820ec1-b1a2-47bf-8797-7a13ce383430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5067126c-ca30-4df7-b686-ab8083424948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f6c5ba-d189-4fb1-9c01-7f7352e188d6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66db59ef-835e-4ba3-97b7-047f3aeb1cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b01fe6d-f365-4aac-a7e3-0045e6ad65bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ff7545-35c0-408f-9198-5aa0afd54651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6866d9-cfdc-4f1a-a736-58f45657ba4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6724e8-1a5d-4450-ab13-c9fa45bb564a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60bc40e-d184-4c40-aa51-4b096b200a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9aea42e-33b8-4e87-98ba-f6064c525b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3756e-41e9-458a-b7b8-d5e65eb97f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732b6b13-0c0f-4634-87dd-6fc8d56ae740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0386f6e2-9696-471f-8b2d-e322f22c7252",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8296eccf-c6f4-47a5-8ab7-a56cd2b612a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d679f9b4-442f-4790-944d-a46906e36e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9f5347-0624-4f4e-b2cc-7cbaa76ae760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c732d827-bb58-4630-bc1e-9c95484d4c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798a1a55-3951-41ee-aae3-b7773e4a0760",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafad4b9-6bbd-4f26-9a69-45034fb4890b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f3064d-c224-4b6d-be84-2edb657f59f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb22107-c7e1-4501-a096-2fcee95808d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cb5327-34cb-47fc-af40-b8e8a8b8de14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab8cb56-5997-413b-a124-ed64257b715d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9656ae0-71d3-413d-bff3-ee34f46a3066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b9c29c-4f58-42e2-bf34-078b02cf3654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7615206b-d0a1-44ac-a018-a83c8f0f7192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ca290f-d4ea-4206-a9e5-378f4e69bcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee92442f-d9ed-4468-96d4-e00cfb466e8e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a60aba4-7b6e-459f-bec4-9d43a502df24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfe83c1-6190-4f7e-a9ac-d5461ce20e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b479c04b-19d6-4a91-b88b-f3cec4bac752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2dd2e2-9075-47af-8102-197ea2859644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031876be-21a2-4c90-82e9-8b91fbdbfd43",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f4e497-9b68-4e6f-83e1-9d92e8c2c1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4fb88b-7e8a-4fbb-8a7c-18ce0f1e7c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f390bb7-74c4-42e7-85ef-77fc224f2b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca23d05-3c1c-4a3c-9969-be5636bae7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfddd79c-02f8-4f8b-a266-256b10887733",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a80ca48-7cbb-4075-ae83-b08c03b0daec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10deda1-0ad4-44ca-b1df-c0e4ebd27e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad83b650-d9a9-444c-8e38-556863c08910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94507ef-0ab5-488f-ad90-221e24ac28ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d20026-d9f1-418e-b381-02e92dbdea8e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fe1a5a-ec1c-449f-b540-89d629ec0876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836ecd6a-17d9-40f5-8894-f533e5ce674c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01ea01b-45b7-4e18-9b6b-85ac1652f0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb53d32-7921-43ef-8ac0-2aaf0fdd8dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe1232f-a4e2-4607-aad4-c691ae64a6e3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b046468e-f8e3-4c1c-a5f6-d8b994e3c2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8623bcdc-7e8e-46fa-8a5b-430bfa9f7359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977dd892-de34-4fb7-8cd1-6c96eda968ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbc9b13-6a59-4995-9f0d-de08a6b8e381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468af380-dcf7-44e2-9642-93e408a9b695",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bace1c-96b8-478d-a884-13748b7ce478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8dc6c2-6c5d-439f-8b92-27e4cd1eda81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da873ec-b2a7-4e9a-8e52-b199a657327a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f68495-6b3d-494d-b725-4659f1120049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f308c4e-ba89-42bf-a7da-a39ae7ab1d29",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75394bd-5e84-4be8-ab6c-fcdc79e71328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3875d820-44ed-4a86-9744-ed6dd1264daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e374f156-dbbf-4bd5-af92-16c74354984f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2144754d-1873-4ca7-8758-b21f83eed799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5d74d7-ca9f-45db-b7d4-e0ac78f79fe9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961586bd-a41f-4549-8ceb-12f8bc79c563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca315759-00ac-4433-afdd-3476eef60de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db22cbcb-63fa-4ed0-94e4-58c035a8e837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029b9f4f-1c09-488e-9b23-fbce118ebf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e8f55-cf35-4520-a48b-06814fc0e984",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e60fbb4-c5ca-416f-a981-7a575ef98b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e5b82c1-9d9b-4b12-ae2f-c516403790cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fc1de0-f725-4cb5-bd18-b66985646789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd142d5a-d492-4a7c-92dd-a126545ddce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1ef1da-0073-4346-8046-6c64fa38d2d0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f285f5-a2d7-4728-b81c-1291b7a265c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edcdafe6-ed14-4a53-a0e1-58809e052c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53723ba1-22dd-49ed-b580-13b21c98a7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e3484e-6158-491b-b677-7944d4124bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fac91f-f6f3-4cf6-924b-270982d13859",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1403d8c7-bb10-4e4f-b5c1-360bee337c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c226592e-276f-43fb-9152-3a582de79372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ca9389-90ee-4d08-8216-2de3d58a4fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17b07df-7c41-4c20-9ff4-c4a530f72d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb99f62c-050e-4495-8bbd-9a5966701975",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c711283f-65fb-4c1e-8e2d-b8e190a522cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdeed4e1-520e-45b3-ad41-cf21d0557981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dde8bf-c255-4b9e-a6a4-913bbf4c6523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249ecdee-b3f6-47ab-9ac1-8fa4628a5c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e427845-c247-45bc-b2e2-446fdd4900ee",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9976ecf9-2fff-421d-8bfd-d10ab38b78ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27401559-2488-40f1-a2b8-738bf42250b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1e30c2-1812-4941-8191-944684c2b066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efb88b3-3886-49a1-a694-241b81d7545c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846d1414-f440-4a6b-b626-81c975770d76",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b363f7b-4762-4b5d-b593-61038a3580b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "857caace-63d9-41d5-9c16-2afdc849d334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2377a2-7fdf-4727-b065-8151b739d7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a764f2-14a2-454c-a4f3-e8ba952464be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8df80d-0f70-4d68-9b0b-8bb166e6fbb6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca9a614-13b6-49ed-8699-6fad67c5a7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d8e4ed-7982-4bb9-ae41-277b332d3f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f2da1-9bc0-4519-af1a-e66662940478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe49478-f0f2-477a-afa5-b5da1549000f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba282f0-c75e-4d00-9218-28d70e0e9cfd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764934a3-4fb7-4327-ab82-ac9e1ce20433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209d0772-69fd-45c1-b06e-ced02981c26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455a8f0e-bb21-4778-ae28-e184ed676787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42affa0e-dae6-42b1-9bbc-e8178fff980e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d444e9-d2d9-49c9-92f7-92ccd5da6176",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6f7fb9-7cd9-471a-a268-e972edaff872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7bf5c0-de1e-4158-a48f-93464db58a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6640ef4-165d-433d-82d7-1e9ecebac322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11ae7b0-007f-4b7e-b2ee-c7e18d7a909a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb081fc1-322c-41f4-8f95-f4a6d64aba9c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4814b5a1-79e9-4287-b57e-a2b480256027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b34dd68-79a3-43a0-947d-0b33dc55f015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35af37c2-466a-4782-9fba-af7dc1994228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31339747-4a3f-4448-a898-c76d86be30de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082db29d-0b2f-406c-840b-8e5a91a2cd34",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d605da-a5da-4a88-b192-6679aca2325a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f857aac2-aaba-4c75-b83d-a2d83fca3fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceec8887-7e27-447e-a5ab-3b44845e6dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bd16e5-38a1-4aa5-8632-d3f209c687ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7456dd3-329c-45f4-aafe-d04c17c46718",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1b7d1a-c96b-41a4-9044-b70e2e73194e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f97c6f5-02bf-458e-94a1-521e846fa657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d17854-006d-4c5c-956e-96d07cac638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9eae63-83a9-42f8-a44f-b2f3f0c63b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa4bf5d-b6fa-4eca-b519-c0b053452885",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f697d859-8747-4c35-890b-496f38dff5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5175a1-4297-4afb-a2ee-d9adfbcc175e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff84caae-aefa-437c-b393-6b0ac941dc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e0a64b-ab69-4492-be98-63e7c44ebb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247bf73d-f897-4ff7-8e2c-e9648f231831",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2397f555-28b4-4ccb-93aa-a5fb19f979a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8c52c9-528c-4fe4-b1eb-639060a28962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3b93f3-ca31-438c-b7e5-ab5e7b7d2599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7ce212-dd97-4e94-b128-8b9031e1dac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdce819b-baaf-4752-9d1e-bd225d93a2f7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed1c907-6b99-4f0a-b285-b7dd292a9334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337e0db0-ef13-424e-bf2b-e6a969453bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe49faf7-b788-4e79-ae03-32d4d9ca3aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88849554-0db2-48f2-acba-678cacb4cc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394df7a9-cf79-4bba-bb83-21261029f653",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb3805b-7e2c-4c35-aa6e-c1c3a4a9faf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25cca982-3f74-49c4-9970-81a20192025f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43fe572-2510-44f0-91c3-9a16b0353cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49d62c1-521e-43b8-9fd1-280a9e4f0102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33488c5d-ad76-4dd2-9cc2-d97b8429702f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2640af1a-c384-4a43-a126-b82db52276c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ee6fa0-cee4-4937-a18d-cac4745e45bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1300b546-216a-4905-ac91-14ee634c33ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e831f3-0d3d-4071-95d2-54c8aad077f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74363dc7-e861-4a4a-af7d-6c0448afc949",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2facebb-da94-487f-a6f9-5b3ac0e36459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae941c2-5b89-44ae-9513-d11b533e0e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336c6ebb-d0ee-4b1e-bd55-d5c2bad5f4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f983c9-7666-4ef5-8f20-01c8e389d04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81f84f4-7a92-4556-8a53-79e1bac8c6c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081bdf64-b331-4c7c-92ed-d5fe62834688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566d1855-c0ea-445a-b310-99c5981e6256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fd6219-8dd9-49ab-bc50-1388bc0d0945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a27a99a-b15b-488d-95df-b3526c9d0d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d86daf-4c11-48c6-a98e-dff22964582c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4b90eb-2fff-4472-8fe2-bed8c6556aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f1f577-428f-4648-9c49-89bb3c95854a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3febd534-f1fb-42a1-8816-0bb522cec88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eadaac1-1c49-4dd9-92c3-b060e046f532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7f5a7c-9d12-445c-b37e-95465a59ae36",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a9e4ca-450b-412c-a738-4c043356eb3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ceacae-a2c2-4011-9d75-cb3bfa1028cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff519636-761d-45b2-acaf-c2cd0be844fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627afbbb-cfa5-4b60-aad6-c9333dac4437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8177afcb-bd00-4135-a0c9-b63901798612",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983a6ded-cd29-4989-a41f-bad9757131f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7420587-c0cd-44f3-b318-47e0daa97a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa9c728-62c5-4e29-b7b0-39d758f2e640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7233d70e-3e2b-4af8-998a-f7f1351f0775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c860e85d-9a48-4256-a014-ccbcbb3a5477",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaa9603-60bf-47c1-ab86-0c0cd62bc7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e09f18f0-9228-45f3-aa07-4aa82929e328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f90340-7c5b-404d-9361-edbd0a98e18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1834eb3-c681-4b63-b45e-6d7f669a563b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f0a177-a36f-4d1c-acf5-14362f620573",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9e2696-7edb-4ddd-9bfb-07f7c18eb95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305bae2f-339d-4086-a4a5-9978fc7e35d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2477d412-1983-4f0a-bed6-638004a1392d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b713acd2-348c-4842-a2c4-3a9e558c5a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c62b43e-c160-4a7a-b767-03b96cadcabd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe90d743-9138-4b4c-8adf-1f5118159484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55ffd70-d36e-43ae-b547-a174d586c08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e2d329-b182-486b-92a8-dfc97fdc536a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5200ba2-e57c-49dc-b771-1a47dc07ee97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eda35a-9200-4060-a15f-1dc6f7155224",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e97079-3a99-4729-a76c-765961b56f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d7f226-bd06-4e81-ba54-4dd12b1a5af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe418405-b553-401c-9561-c9bc5881daf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38af0858-e58f-40c2-b6f3-fc7e5ecbac1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f8c526-df75-419d-8e38-254b22a554a8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d76439f-da74-4c18-bf81-281b2165499a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93da4c8b-15ef-4c11-b6f6-cdf61ce05b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519f1c10-60cf-4dee-a273-2f8d4abebc01",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e797243f-2784-488a-acf7-077e777c57c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5943fe2-a1c5-467e-8b4d-1a2e2c1f2e99",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241a3523-089c-4085-afa0-07ad9da3ae36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c881676-272a-45e6-a912-6ce7f71962b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c6f8f3-4a58-4215-910e-85acad38ceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f0941b-5bd0-46ae-80b6-529f15705927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff418fb-e508-4f59-84c1-bdf8dc53090d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4267375-5eeb-4e51-87a4-75f65a69da05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685fb1cb-efa0-437d-b821-61e988f6136f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1458ba1f-b8d9-4965-86b0-fee9816ee38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1558d456-36d3-4a45-bfa0-d20b4336440d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efbbd60-88f2-4878-9c63-2749aa6716d1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe3263-0095-4749-9803-4123dcbd9a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5ce248-f130-4f29-ae00-6b68db008f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d10bb2-c782-4dc7-bcff-68f64563b439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae9d806-b751-4fbf-b519-fcedf6f23e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd13317-c3b9-42e9-b3f0-47c98d76eb62",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cce628-eeeb-4a14-bbfb-47be7b126a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a484f024-7e5d-4450-a64a-983a38cdff7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffc1e8e-f628-4e37-983c-dc9695e39666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe70ff4-4fe5-4aab-a203-ecc0bcaa1bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9c88f7-2db5-48f0-aec0-5e13d3d92861",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66adee8-af04-4d55-b5a9-c088c0314f48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0cc3c83-7424-44fb-aefe-325ffbcddbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dee43d-c3c2-45ce-b33e-dc72fac49f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd247f76-46b7-47a2-9712-a3c038681aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4f5621-bb4f-47ba-8dd5-0cb22562db49",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0976f6-1927-4ccc-8da0-cb5ffb319f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa87bbb-2e26-4ef8-80a3-4a3af579a4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71ab714-b368-4f26-9a16-2021d505980d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a5d30b-5640-4993-833d-22538bfc70cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b161263b-079d-4a59-a83f-556a20173ec9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188b3c8e-8230-4d7c-a969-dc3e9ae549c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac763b77-3f9f-49a1-bba3-af8c139639f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761f6002-2bc6-43bd-ac04-0991671fc106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5c44b9-5277-4027-b790-088961de7390"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b1bf341-e323-4639-97bb-8fa236d8ed24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dfc78d9-fa0f-4690-814d-72ef0d4f0530"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c45d9b-157b-4053-81a8-5f40546b9f46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d662847-c91c-4328-a9ac-5ff7a0adfe3b"
                    }
                  }
                ]
              },
              {
                "id": "dd49dd52-33d0-46f9-9fd5-39576ae5aa7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c0c532f-634e-4868-8564-af98c76dd865",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a1a830-5a9e-4b9d-b173-636cfdfdc577",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1abf3d7a-f9a7-4816-89b1-18e5a0b04f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d67a38-0eae-4f2f-b275-bcf567ae23ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b03fdcc-8456-4430-9e2d-564ecf67200e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9130325-4639-4171-96dd-7dbb93407710",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54fd3446-52a5-49f7-87e5-208109ba40d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed053f0e-c933-498f-a6aa-58a224bf56c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a72ed90e-4cb0-480c-a983-9188f4aca83c"
                    }
                  }
                ]
              },
              {
                "id": "357c9f75-142d-498b-aa7e-1dc4b16562a9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9d9b1357-33d8-435a-a813-3da8305f4d16",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfbe8c2-e82d-4c33-bfee-722d42bad1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7b1e6ee0-09c5-42be-93f4-dd96ae5033c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d8dc41-d8a6-41fd-ad6e-2c57cacd035b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fab1ab-b843-43fd-9a2a-4a575c540a1f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f0fdddb-b92d-4fbd-99b6-0d0d71bb9cca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3992d11a-e150-4329-aabb-ccac1a28eb49",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc243083-fefe-43bb-962f-e1db17d32cf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3b4bf9bc-feba-4d2b-9ea2-f44b0f3682ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "244d7c72-9fbe-4f4d-8090-ed77613205ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9951619a-63d7-4ce3-b116-e8a105e1966f"
                    }
                  }
                ]
              },
              {
                "id": "8415a40e-362e-4b57-b24a-864c15e600ab",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56b3787-50f4-43cb-ac2a-e4f1ef2aa5c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30290f49-fddd-4f32-81de-7334126ecd82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b2f2afa-c820-4ccd-a934-bd3d073ce36e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ad20f47-c1dd-4283-8389-dc9fca7d4312"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36c6d901-9b59-47d2-8993-c24964ba987d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3f2742c0-0354-4acf-969b-9f7d6b2f35b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ced900e8-6168-4d1e-a46f-5d0de2d68aa6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afe5c2b0-80eb-4931-aafe-c786ecd6d2c7"
            }
          }
        ]
      },
      {
        "id": "ca110545-ed3f-43e6-890a-573cf6e0149a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7a4198f4-4cb1-4740-be9d-e668239f8904",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26c35ecc-91f6-479d-b54c-0c7b7d1102c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "666fa4f0-e3f1-4891-922a-1e1b1506a9de",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c2483a-2c82-4dde-bd09-1ef2bb16afa0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2b73dbe-0ef0-446b-b347-3b16e8728f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8603ad80-5f1f-4b1d-8162-ee982c759972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5bccc44-90cc-4324-b332-45b94fdbd4c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63705889-34e0-4158-9e01-cc64dcb1588e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97b5c96a-6c14-4a51-9b61-123ebf32ce2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04360eb1-6abc-40a8-89ed-6d5927b09600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54d139a7-fa00-42e8-9324-e93316c3a374"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd079689-bf0f-4dd4-9df1-46828f67e4b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b94b1a97-5d34-4645-ad9e-329ca2bf7c2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd768944-44ff-44cc-97a3-f8a1bdb81e00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "524d7086-79f6-41f6-a1de-4d2227f15a39"
            }
          }
        ]
      },
      {
        "id": "f0402cca-fc12-458a-91bc-09d71bf84ff1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bad9a4d9-6d32-47a1-9067-1832ee70ef31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fbe58de-717c-43bb-b93d-5acfcbf8ee86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16b7f144-95ea-4da9-9ff7-07b238877219",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31938c91-3f10-428e-9ef2-1200b62829e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24d64390-fdd6-474e-94f3-5bca81064ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace102ab-2ce9-49ec-9b3e-acd8acf1503a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a2adf21-aeac-4275-b53d-c899d4047b0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "827a423d-6279-4081-b5f3-5a85bbf30382",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c459ac8-e076-46a9-b9a1-9e244b04e292"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2736a7a4-7c1d-427d-a12e-64a86c0c2043",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a67dbf37-0b31-4c9c-8024-740f833e242f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee164cd0-1462-4e4c-9395-8afb6f354d36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6ab0ff7-8eec-45a5-b1b4-912cd81f34e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d980720-621d-4674-96f7-24117d14b2a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb3ce4be-d805-4333-9352-abf7aa27c16e"
            }
          }
        ]
      },
      {
        "id": "2967ea68-0e7e-43f0-aa64-9466e8734623",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ffd0a7d0-8cd8-4c00-8ef7-7a37f3c52e76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ea63150-3122-451f-b468-ca813659e5a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebd115fb-735b-4e4d-bc7c-38874db97444",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82886cd-de0a-47cf-90ae-4e6eebaaa135",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77bcf260-7874-41e7-9a04-dacb1f83bc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1960f503-058d-4f6d-8b1a-bfb41fff7670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c876690-2e13-4cba-b2a6-e1c4260fc0af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8f96f76-9966-4058-b771-a2db2a855492",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0491d6f4-e934-4d1c-bb56-54d6a3efa3bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "524e68db-756f-4a70-b101-6a4e39b0c6dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fb4c41f-eaa4-424d-acd9-817f4c46180b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "483e8960-d582-4f56-afc8-3b60b6d94f54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e928d5e7-af53-4d44-b55b-0971fb983e5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b72c36a8-8554-464b-94ae-82235a497898",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a613ccb0-1374-47da-b4f0-f38a92c9dfa6"
            }
          }
        ]
      },
      {
        "id": "5903f815-f756-4037-bd84-344077b420df",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f98d631d-8dd0-4736-a466-f21d1a6f279a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5655c26a-3b9e-4002-b11a-46caafabf163",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b4fba93c-e0b0-49a6-86f9-a19f39cd2ab9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "626489e3-f4cc-4684-ab90-19608dffafb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f855188-78e4-4f44-bacd-21274501f376",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 76.10877192982454,
      "responseMin": 12,
      "responseMax": 4755,
      "responseSd": 375.4966284711871,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698539759009,
      "completed": 1698539792361
    },
    "executions": [
      {
        "id": "07d88d5e-f8af-41b2-bbfd-25c7d3892c7c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "152a6571-d37b-45cc-bf97-3486b1a1f08f",
          "httpRequestId": "e6c458c1-f223-4204-be3f-51a455502d34"
        },
        "item": {
          "id": "07d88d5e-f8af-41b2-bbfd-25c7d3892c7c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b52eb4c2-24a8-463c-8c92-b9463a78816f",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 0
        }
      },
      {
        "id": "ab11a9a3-072d-4b67-94eb-a0f14c0e31d1",
        "cursor": {
          "ref": "1507c126-ce4e-46b6-842c-ef295de0ff5f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "85eeafd8-2230-4d68-9645-080b68cef5b0"
        },
        "item": {
          "id": "ab11a9a3-072d-4b67-94eb-a0f14c0e31d1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e8b81239-0b89-457b-a398-0b91b5138e3d",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "d47776e3-feeb-4181-8f4d-fcd628cc0433",
        "cursor": {
          "ref": "52ef3a60-64bc-4025-886a-ccb0821c5d9b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9432785e-0e8e-412d-b939-6ad1a6b56b98"
        },
        "item": {
          "id": "d47776e3-feeb-4181-8f4d-fcd628cc0433",
          "name": "did_json"
        },
        "response": {
          "id": "4a76e5d4-27e4-4856-a2c2-7a8e82ed32f2",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb8513c-6372-4293-8df4-e5610b0f3ec2",
        "cursor": {
          "ref": "a20e7a4d-4bff-4ab1-b7b3-e00810f30c98",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bbb858a5-8881-4fd0-89c7-c7d98065b654"
        },
        "item": {
          "id": "adb8513c-6372-4293-8df4-e5610b0f3ec2",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7e3d9b3-7a72-417c-86f1-ea7391275353",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1341,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb8513c-6372-4293-8df4-e5610b0f3ec2",
        "cursor": {
          "ref": "a20e7a4d-4bff-4ab1-b7b3-e00810f30c98",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bbb858a5-8881-4fd0-89c7-c7d98065b654"
        },
        "item": {
          "id": "adb8513c-6372-4293-8df4-e5610b0f3ec2",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7e3d9b3-7a72-417c-86f1-ea7391275353",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1341,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaae287-df16-47cc-ab1b-95afccc449ff",
        "cursor": {
          "ref": "db949a28-007e-479f-87b3-f217e1dd34ae",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5f241eb5-45b6-408b-9958-f92305802bef"
        },
        "item": {
          "id": "fbaae287-df16-47cc-ab1b-95afccc449ff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "69f0adb9-fb69-4d25-bb7c-63ff89148408",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b7e747-75cf-4ec9-a3c6-c2c0bd3a76d4",
        "cursor": {
          "ref": "7570035e-23cf-4c04-9ed8-0193813ff46b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "73e7f6c1-ba0b-4522-b0df-6e878a0be106"
        },
        "item": {
          "id": "a7b7e747-75cf-4ec9-a3c6-c2c0bd3a76d4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d306a889-4e31-4d75-bd4d-85d3943f120c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef25c8c-f30a-4905-a3a3-6f9198100b10",
        "cursor": {
          "ref": "da826980-4ccd-410f-899f-4a00c3a72412",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "63ac37a6-058b-452f-9e80-8a2a6a611127"
        },
        "item": {
          "id": "cef25c8c-f30a-4905-a3a3-6f9198100b10",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "047f92ba-ad19-4d6d-8575-6c071ce199a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dda5b3c-3834-4ad9-89e6-165d497f0600",
        "cursor": {
          "ref": "f645d9bd-1472-4a52-a76f-becbac57b590",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "01b28659-bf72-4820-8fdf-6cddb59a8e82"
        },
        "item": {
          "id": "6dda5b3c-3834-4ad9-89e6-165d497f0600",
          "name": "identifiers"
        },
        "response": {
          "id": "35fbcbb7-45e7-4dbd-b842-94e861f973ab",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad77a839-b628-4a38-83bb-a3baaf96f910",
        "cursor": {
          "ref": "7f8f033e-6927-4ea0-94e5-661676c830b2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "500cff53-4c02-4999-a1e7-1242d894c292"
        },
        "item": {
          "id": "ad77a839-b628-4a38-83bb-a3baaf96f910",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9e1adab2-758d-467b-bdbe-38a921228e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8707bd-0fec-432b-9203-cf0cae6ffb1f",
        "cursor": {
          "ref": "ba698b92-4bb0-4893-ae58-faa5a70ed7c7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e3bdc9cb-3250-4824-93af-2d8706d87a0f"
        },
        "item": {
          "id": "6f8707bd-0fec-432b-9203-cf0cae6ffb1f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e626e3ec-925f-416a-8e9d-9af4b5d3823b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ebbc9d-13a4-4302-a966-f14da508c4bc",
        "cursor": {
          "ref": "242bafb2-8af9-40b7-b9df-04ec3d4867b2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "84c29e07-8d53-4c4b-bdd4-432ecb8bcc31"
        },
        "item": {
          "id": "d3ebbc9d-13a4-4302-a966-f14da508c4bc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e6ca1ff7-57d7-4c36-a600-9a7f8cd44b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2142d8ef-7c31-4d70-9f52-936a389c8b35",
        "cursor": {
          "ref": "888123c4-edf0-46cc-961f-3ecc06fbe10d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "95ec5318-a8ec-4c6e-aab9-ce6b7e7abf0d"
        },
        "item": {
          "id": "2142d8ef-7c31-4d70-9f52-936a389c8b35",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a01425b8-f2cc-441b-b5a2-0dfc8c1a36ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6d583-c8c5-4656-be70-2caad8d11ee1",
        "cursor": {
          "ref": "e5985224-bbac-415f-995b-89a1536c3a12",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e3353c5a-045e-4724-a9f8-2a0ee911e74a"
        },
        "item": {
          "id": "38a6d583-c8c5-4656-be70-2caad8d11ee1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8d87b53c-d7b1-407d-b121-721d5982e5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff10c661-c6e2-4b02-b06a-a935db815e3a",
        "cursor": {
          "ref": "cc31e0fa-df0d-48a7-8972-a63d02a4e671",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bd95de93-5614-48bb-9aaa-2386bca090a3"
        },
        "item": {
          "id": "ff10c661-c6e2-4b02-b06a-a935db815e3a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2d8564c5-d83f-47a8-921b-648a9371d9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea45201-ec35-4b3e-aa6f-5c8f24abcea2",
        "cursor": {
          "ref": "a9a2c669-7e84-4947-9611-1c8677d14e1c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fabe848e-6061-4cdf-bd15-ac0c2e8cad91"
        },
        "item": {
          "id": "fea45201-ec35-4b3e-aa6f-5c8f24abcea2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b3229790-51a6-49ab-b932-0a72018e0b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0630f7bf-497a-47a3-b666-352380ad2ed8",
        "cursor": {
          "ref": "7e4ce109-b583-4899-bdb7-95b92610b299",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d0c1745e-c890-46da-9ce5-79efc1a17316"
        },
        "item": {
          "id": "0630f7bf-497a-47a3-b666-352380ad2ed8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7ffb2a57-5cbb-45f8-b2d7-dabb7c4890b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238382f5-9454-4842-96ab-a8cf878e688f",
        "cursor": {
          "ref": "d51c3615-0ed8-4820-a88a-6e80dd314960",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "20d9709b-2a8e-4e85-9eda-5ba56d6cd990"
        },
        "item": {
          "id": "238382f5-9454-4842-96ab-a8cf878e688f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b64853a-507d-419c-a9a5-a698bc6544e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35ac340-6ecf-458e-ad6c-4d7861b32fad",
        "cursor": {
          "ref": "02ea429e-6a8b-4565-8f41-8b7a30dfe642",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cf3026fb-fb35-4f11-b100-6f0b1753b4fe"
        },
        "item": {
          "id": "c35ac340-6ecf-458e-ad6c-4d7861b32fad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "976a10e2-db4d-4b1c-b633-2e735500a570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7b3969-8dd1-4808-9118-f2c7cee694cc",
        "cursor": {
          "ref": "f8064f1a-ed18-4d22-8b48-da61ff25a906",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c5b04a26-98c8-4d3f-ad96-f811bd3ba421"
        },
        "item": {
          "id": "4e7b3969-8dd1-4808-9118-f2c7cee694cc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c05c8313-77f3-477f-828c-8e3921bd791c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13440ef-4000-485b-b0b7-2f25b85f592c",
        "cursor": {
          "ref": "329889b2-6bef-48b7-8dec-0d905ae26fa6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e09f0b6f-16d4-42b3-badd-940674081c9d"
        },
        "item": {
          "id": "d13440ef-4000-485b-b0b7-2f25b85f592c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08dbadb3-299d-4faf-ab41-793fb957ac6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abcd63a-f050-486d-b4c1-6207deb37dae",
        "cursor": {
          "ref": "a2c7e38f-6fd5-458d-bec6-49419ae66e6a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "79ff1040-6676-41f6-b0aa-eeeefda25302"
        },
        "item": {
          "id": "3abcd63a-f050-486d-b4c1-6207deb37dae",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dbd63f29-7a12-424c-a2b6-ad7ff52515a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838d2bc2-b0b3-4b08-ab86-bb230ec7c90f",
        "cursor": {
          "ref": "462b70ae-58bf-4f6c-82d5-13cc68b9dce2",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c01fc365-da29-45d9-b438-86d9dcc53442"
        },
        "item": {
          "id": "838d2bc2-b0b3-4b08-ab86-bb230ec7c90f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "647ffebe-5b8e-4807-ba9a-6e82e2b9e19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31310482-aed2-49f4-b41a-a4218eab24be",
        "cursor": {
          "ref": "03da55ce-50a3-4cb6-8332-cdba21be9f0e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2421a62e-506d-499d-97c5-f71fcb1887c7"
        },
        "item": {
          "id": "31310482-aed2-49f4-b41a-a4218eab24be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4ef4722e-e3d6-4521-a7e9-ca67fc57fe3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9a4bde-49ae-4d73-9457-be62258cb5e7",
        "cursor": {
          "ref": "f6325648-c366-4146-ae03-4ae86e95c597",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "583d014c-9cf9-420d-90f0-9b950214f004"
        },
        "item": {
          "id": "8d9a4bde-49ae-4d73-9457-be62258cb5e7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8e8a87d9-2e46-4110-ab2b-4f8b2b1538b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce981f4-90a2-4f44-969f-b812cf7041fd",
        "cursor": {
          "ref": "641880ff-9cad-48be-a2e7-bbefb9032677",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3a01470e-089b-49f0-b506-1c2a956805fe"
        },
        "item": {
          "id": "7ce981f4-90a2-4f44-969f-b812cf7041fd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ceae3e23-3d31-4440-8e5c-31394356a39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f6cba-6c30-46f8-a5ba-ea9bf6ab2825",
        "cursor": {
          "ref": "ee0e70e4-39cd-4277-a0c3-5176c9b7283b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "647bde35-c8dd-40b8-9e7b-f794d8c73e33"
        },
        "item": {
          "id": "ec1f6cba-6c30-46f8-a5ba-ea9bf6ab2825",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cb07b73c-23ee-4dda-8654-20f9d3d56f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a6408d-8183-4942-b79a-77064c772745",
        "cursor": {
          "ref": "de2e36dd-584f-4eef-82c2-713e75ecf200",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7ccc7b67-0f61-4583-ad3d-947edf246b9d"
        },
        "item": {
          "id": "25a6408d-8183-4942-b79a-77064c772745",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ce45fd45-827c-423a-91ab-ad9a66bfeed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092ffe4c-ee4f-467a-9863-3d5b9cb376dd",
        "cursor": {
          "ref": "321d1227-8a14-4f6d-a8e8-a3a2e4084148",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5a9637c7-6833-442f-bc09-7d63eabb6200"
        },
        "item": {
          "id": "092ffe4c-ee4f-467a-9863-3d5b9cb376dd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2fd2ecb8-4568-4871-8c29-01aa695415e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7fa0cc-de5f-4aba-8da8-9846e4ba3136",
        "cursor": {
          "ref": "824be383-0572-4e6f-8c8e-1482d7e42370",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1eee9f44-cb2f-4f7f-8020-d13d0ade38cc"
        },
        "item": {
          "id": "1a7fa0cc-de5f-4aba-8da8-9846e4ba3136",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9395384c-4bb3-4719-80de-5b101482f6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0ababc-4e1b-4840-bbaa-9f0ad479dc0a",
        "cursor": {
          "ref": "bdfc1cc4-9af2-4565-a0fd-70ca57715025",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5e102883-3fd9-4bc2-b5bf-741261e03708"
        },
        "item": {
          "id": "cd0ababc-4e1b-4840-bbaa-9f0ad479dc0a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "daab1d08-cac7-448e-9075-f4dbb4229370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a90dc9-09fe-4638-9cb9-3b021ff57a05",
        "cursor": {
          "ref": "b7de2590-c489-42b3-b775-fde4b6243809",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7f82c6c9-591a-402b-94c5-0bd9575afb4f"
        },
        "item": {
          "id": "80a90dc9-09fe-4638-9cb9-3b021ff57a05",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "339ca866-3750-4c16-8317-4e58adae2464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522ba287-65ba-49b3-9f04-134bb2d9e742",
        "cursor": {
          "ref": "b44d4e15-4538-40eb-8f56-a0a69ad58bbf",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4e2dbff3-1d28-4bba-b4e8-a6baceed029c"
        },
        "item": {
          "id": "522ba287-65ba-49b3-9f04-134bb2d9e742",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "09ccfd78-1cd7-4981-bf7f-a0bd0b616076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0db3fce-5438-438f-9679-e35c97739867",
        "cursor": {
          "ref": "6286043d-5aae-4739-9d61-fdfac5757fae",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6368746c-3d39-4355-a3ce-f11539fbda41"
        },
        "item": {
          "id": "d0db3fce-5438-438f-9679-e35c97739867",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "625a1b7d-3d8b-4270-91c1-b758f0cca0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f243573d-ad35-42d4-ae2c-4e70c4d5deb4",
        "cursor": {
          "ref": "1816dc21-c417-4bc5-b30d-249b70dd71a9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3a4fa2fa-a347-4609-a702-fdb9ada92fc8"
        },
        "item": {
          "id": "f243573d-ad35-42d4-ae2c-4e70c4d5deb4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "57c784d7-8590-4119-85d3-fa5d069396fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26c301a-282e-4e6a-86ec-12cb1c92728b",
        "cursor": {
          "ref": "d986543a-4780-43d9-8be0-e5d02ecae081",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d3d711b6-4da9-41cc-892b-2e498cf00c80"
        },
        "item": {
          "id": "e26c301a-282e-4e6a-86ec-12cb1c92728b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fa5564d0-e2ea-455a-9282-8bdf81ea1780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbba8d89-8647-4b3e-ad0a-0bef79f3cbf4",
        "cursor": {
          "ref": "0464a6cb-ad49-4a48-84a1-93e168ce2dc6",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8fa53258-c41d-431d-878f-3f7ac5ae03f3"
        },
        "item": {
          "id": "dbba8d89-8647-4b3e-ad0a-0bef79f3cbf4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fb7a0df3-84ba-4530-895c-41756c8bad06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253b13dc-5786-487d-b6bc-df859dcaa99c",
        "cursor": {
          "ref": "0f780703-0702-44d3-9536-ee53482f67fa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e382f123-88ae-49c0-aa47-a16faa40220d"
        },
        "item": {
          "id": "253b13dc-5786-487d-b6bc-df859dcaa99c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0022c289-43f8-496d-94d4-36f595e3419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e9bbf1-fa93-437e-abe9-76cbee69b668",
        "cursor": {
          "ref": "9edf85c7-d6d1-4fae-ac3e-497a45367428",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d09c14f4-24ce-4d1c-b8bd-0e3fff5319b9"
        },
        "item": {
          "id": "93e9bbf1-fa93-437e-abe9-76cbee69b668",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1ac148b9-b34b-4708-b35d-9bde524ddcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df23f3b-7ae4-4c4b-b3c9-5c7eb03ae731",
        "cursor": {
          "ref": "54e9423d-d88f-4ad4-81c9-97dd0095d4fc",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0a55b4c6-f2eb-46ee-a510-f8bcf56d0c50"
        },
        "item": {
          "id": "8df23f3b-7ae4-4c4b-b3c9-5c7eb03ae731",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2b803320-f3d9-4dd8-a240-f3c2f1c72587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14baa01b-a0f2-4f4e-961c-cf312b8d4d95",
        "cursor": {
          "ref": "e0699f61-d659-4090-8831-6d2e86e670ec",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fecb94b6-c303-48e8-b5f0-f9a161f1b722"
        },
        "item": {
          "id": "14baa01b-a0f2-4f4e-961c-cf312b8d4d95",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c0572542-6cdb-4668-a71a-b0b0b19a7804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25572b3-01a9-422a-b6c5-0f3b93c50e8b",
        "cursor": {
          "ref": "3a1c6e8c-9633-4a22-bf03-54712ca578c4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d8eed8e6-c1be-4536-b27a-1eb20d3ce425"
        },
        "item": {
          "id": "f25572b3-01a9-422a-b6c5-0f3b93c50e8b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9ad90a9a-cb54-4a87-bde3-b8b01473e004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aa7877-bfe4-48e9-a4d8-1815b6f92264",
        "cursor": {
          "ref": "31086481-fd27-4bcd-b8c7-516e38d7b2e9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "925a47f9-4bf6-4d56-8249-ea93ad7b3c33"
        },
        "item": {
          "id": "c7aa7877-bfe4-48e9-a4d8-1815b6f92264",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c7d4747b-be9f-444d-bac6-3606ae51fe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d20a54-3d11-4e13-925e-39641be8b6de",
        "cursor": {
          "ref": "260ccc72-8373-4e0f-9c3b-b68369b5dda8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3075e282-aa75-4853-ab64-d8c01f62e700"
        },
        "item": {
          "id": "86d20a54-3d11-4e13-925e-39641be8b6de",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c8f22718-a367-4116-8fc9-48c711bd38cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96355720-520e-4bbd-8750-83a36550359f",
        "cursor": {
          "ref": "8ef67860-88ba-4d5a-a218-e6202e7d20da",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d13ade51-8c2c-4b26-8cbc-abc675a9edd6"
        },
        "item": {
          "id": "96355720-520e-4bbd-8750-83a36550359f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb34e2f4-7aa0-4d4a-8217-1550685c1382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306812b8-8df9-4051-b7bb-de7d42afd3e3",
        "cursor": {
          "ref": "8bbbf5c6-8ed7-4a6b-937d-07fd65fe528b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6fda457f-ec81-4805-9a2a-83853cbd3110"
        },
        "item": {
          "id": "306812b8-8df9-4051-b7bb-de7d42afd3e3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9227eb80-a2ee-48ed-b6f7-b77941be7fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079cec27-19b1-4baa-aaf6-aa8373116538",
        "cursor": {
          "ref": "91e30f9e-4776-405c-a159-52527f894a47",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2af202c0-a93c-4eb8-86d2-4b1f8fc5af55"
        },
        "item": {
          "id": "079cec27-19b1-4baa-aaf6-aa8373116538",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a4df39e9-823b-4dbe-91eb-312e0f16e26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002c8b77-a898-4cbb-8015-92c5d4844042",
        "cursor": {
          "ref": "f115bab1-4506-47d5-beed-8bf2d565cf03",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9e02e051-ded7-4644-a832-0e240cf5ab9f"
        },
        "item": {
          "id": "002c8b77-a898-4cbb-8015-92c5d4844042",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "944ce328-fbfb-487c-bd7e-1b7959c269c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26348493-4af8-4c10-bcad-2ddd3009884b",
        "cursor": {
          "ref": "b17935d7-5857-460f-abff-26a6994c4925",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7bf6ed57-ddfa-4154-80bf-8829bcec11d3"
        },
        "item": {
          "id": "26348493-4af8-4c10-bcad-2ddd3009884b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "81e56eb4-fdb0-48c1-ab80-8f93170798ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cf9ef0-cd40-4383-88bd-7f51b3a2795d",
        "cursor": {
          "ref": "b0b99c64-c5b9-487d-ba00-22be2515d494",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c6b39a94-6b81-49d8-b707-e4ddf7cc1c6a"
        },
        "item": {
          "id": "95cf9ef0-cd40-4383-88bd-7f51b3a2795d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "321d2db6-4c39-412d-9434-3d2518bd0eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa321920-3cfe-4ac6-b923-7fa796e793c2",
        "cursor": {
          "ref": "b940ffcf-1e54-4005-903c-2a9a7c7fddc9",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "43d47176-4b5f-419b-9628-c9c6b2861698"
        },
        "item": {
          "id": "fa321920-3cfe-4ac6-b923-7fa796e793c2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8bf13af9-9020-4a3b-b859-66cf0b097233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f59dfe1-1743-48f2-9c96-ca61f6be3f9f",
        "cursor": {
          "ref": "727fdefc-476a-4157-9564-399d70f4761c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0545d393-6212-4fa8-b9d7-4f388597ee5b"
        },
        "item": {
          "id": "4f59dfe1-1743-48f2-9c96-ca61f6be3f9f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3983ebb4-c930-4f5d-9d34-d944320e4aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe8c312-8469-4701-93a6-c7435095340b",
        "cursor": {
          "ref": "86e71117-db10-4f02-830e-72bb76d2b915",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e63b988-f616-4a09-8b25-35eecb834ba3"
        },
        "item": {
          "id": "abe8c312-8469-4701-93a6-c7435095340b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "04b31c02-1e71-4df6-8cd2-be42916cedbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb199048-fec2-4976-8001-f2cd359abdb6",
        "cursor": {
          "ref": "a24bb60d-1538-45ee-aed6-02c7f0974575",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d9cc863-bd0b-484c-bb72-ea09c740d276"
        },
        "item": {
          "id": "cb199048-fec2-4976-8001-f2cd359abdb6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "be9d1ebf-4bbf-4595-bd5f-af18db9dce4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3911843-868a-42f9-ae55-b5b91de34451",
        "cursor": {
          "ref": "70193262-5d39-43b8-9ee2-65c7285fc4ed",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "29f7bdc9-4e16-4c61-9f53-205311b676b2"
        },
        "item": {
          "id": "c3911843-868a-42f9-ae55-b5b91de34451",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ef211df7-b848-4b65-8ca9-839819edee5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6618fad-528a-4510-a6ae-2de1f3401cd7",
        "cursor": {
          "ref": "b779d301-98f1-43dc-8fce-b38b552c046a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f3de81c5-72a2-4ac0-8cf0-655897fc3624"
        },
        "item": {
          "id": "c6618fad-528a-4510-a6ae-2de1f3401cd7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fe98c464-cde5-455b-9288-258f55bf7388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d264978a-024a-47a7-86c9-905d6bcc1ee4",
        "cursor": {
          "ref": "1da08988-1311-499e-915f-ee4402590ab6",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b33f66af-ab66-4631-b29e-cfe97e5c1e1f"
        },
        "item": {
          "id": "d264978a-024a-47a7-86c9-905d6bcc1ee4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9708bf7d-6f73-428d-86bf-dbd970552a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94da7ca7-8c8c-434d-b784-eb678e1091bc",
        "cursor": {
          "ref": "706f73ce-7fbc-4342-8eb2-133496706381",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "79fce8e9-bfed-4ce5-93ba-e676300827df"
        },
        "item": {
          "id": "94da7ca7-8c8c-434d-b784-eb678e1091bc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b5e35dee-a997-4604-899f-bfc70f97a123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b32421-9516-4349-9584-e9f5d8f55d5b",
        "cursor": {
          "ref": "d9c0f2aa-f33e-44bc-bdd8-1f3a8de957cf",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "06835880-0ccb-4bb7-b2d2-cb71422542a1"
        },
        "item": {
          "id": "45b32421-9516-4349-9584-e9f5d8f55d5b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a47e6691-cde2-4d08-b107-ef2de4641ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b98a24-2007-4610-8c5b-43d82e32516b",
        "cursor": {
          "ref": "14cd300d-fb36-45c2-8dee-5fd2a7ce3b02",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e1192e5e-947c-4afe-9059-f66558507fb9"
        },
        "item": {
          "id": "37b98a24-2007-4610-8c5b-43d82e32516b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "042e0633-fe44-4c48-8d5f-894ad5ff9bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9b3b09-2b68-4670-91f1-2fb3e407ee90",
        "cursor": {
          "ref": "cc896cf5-bad0-4f80-b7a2-d7903f03f2a9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5b7751ff-1f13-4503-b406-eb80f90bd072"
        },
        "item": {
          "id": "cd9b3b09-2b68-4670-91f1-2fb3e407ee90",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb78691e-e7c7-4b47-a6cf-7cbf20cc3837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade19bec-cd3a-4ef7-9182-bc3af437ea69",
        "cursor": {
          "ref": "cfb5b2c4-b0ec-443e-b2c4-d505370af879",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "55bb0fe3-ec24-4938-9e0e-9b7491618743"
        },
        "item": {
          "id": "ade19bec-cd3a-4ef7-9182-bc3af437ea69",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "aebdb454-68d0-44bc-94c0-1da7ac0c7670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7531bff6-d03b-4b2f-b136-37eb44756af1",
        "cursor": {
          "ref": "434a6944-a315-458f-90ce-748af22f2928",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8d74a07c-da1b-484c-b773-50961d825ce1"
        },
        "item": {
          "id": "7531bff6-d03b-4b2f-b136-37eb44756af1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "10860228-f1a6-465a-8d53-bae10960ffad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac7f3d8-6468-4511-90c3-cd8feb0558ac",
        "cursor": {
          "ref": "d10a4263-5196-48f6-ab23-abf3f0ae21da",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c87aaba-478f-4bda-95a7-b69c96f54307"
        },
        "item": {
          "id": "8ac7f3d8-6468-4511-90c3-cd8feb0558ac",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f7ec83eb-6cfd-46f6-ae64-408cda824e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204b4dd6-8846-49b8-8c43-45f08184fc76",
        "cursor": {
          "ref": "72f9712f-ec8a-46ad-9956-a67371e6c3f2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "11d860a6-ee58-4a88-8fd4-b3a6a2a61af4"
        },
        "item": {
          "id": "204b4dd6-8846-49b8-8c43-45f08184fc76",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "40269481-69b1-4d0c-9b04-689b67afdf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b5abf4-c133-43af-9072-c8890e450122",
        "cursor": {
          "ref": "6fa52439-9a0b-48de-b9cf-0260c9243f4a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5cd929d2-509a-45db-8742-ad605ff576d8"
        },
        "item": {
          "id": "c3b5abf4-c133-43af-9072-c8890e450122",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "319c73bc-3766-4815-b3d7-0b22c2f97e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec85bfa-3d93-4235-be29-d096a844fc16",
        "cursor": {
          "ref": "39211676-091b-4cab-b47d-b0ebca06229e",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0ae7e25e-4bc6-4982-9390-c70f26d3db5c"
        },
        "item": {
          "id": "6ec85bfa-3d93-4235-be29-d096a844fc16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f5335e6b-3441-4ebd-8133-ba8251e143f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ebe647-2a3b-4361-b433-ef51e156f2c1",
        "cursor": {
          "ref": "770f2973-77b5-4f3e-8b1f-e1dc145382ab",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e721628e-7021-4d15-8d18-3426df2fca48"
        },
        "item": {
          "id": "67ebe647-2a3b-4361-b433-ef51e156f2c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "973c99a0-4538-430c-9c7c-6b35fee1e311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e326a3-58bd-46df-a938-edc6cb1e9b37",
        "cursor": {
          "ref": "a936783f-91c7-4b72-abde-4c7f2d8c7153",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fec282ac-098a-4104-a20f-297b049bb746"
        },
        "item": {
          "id": "c8e326a3-58bd-46df-a938-edc6cb1e9b37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c961b669-8a8e-402b-bd37-b9553233d59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09ec9a5-03fb-4f4b-8207-290e43d1ba3d",
        "cursor": {
          "ref": "a48e6140-c0d7-44bf-b1d6-d413126fee5d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "17b779ea-99cf-44b0-9ad3-8f9c5b630f90"
        },
        "item": {
          "id": "a09ec9a5-03fb-4f4b-8207-290e43d1ba3d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "960ff119-117c-40b1-b9e8-202eaf4b7c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeb37de-3acc-4152-a6a9-00f9ba3bad81",
        "cursor": {
          "ref": "24572731-5990-4f06-b9a0-e5e0c4f3b016",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f8d8746c-6633-4de6-9f7f-3f1c70dce6c7"
        },
        "item": {
          "id": "aeeb37de-3acc-4152-a6a9-00f9ba3bad81",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "392c63d3-8c55-4a04-9a4b-81cb93e91be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdd5cd2-b3f3-4ef9-804e-ce99b23ba52c",
        "cursor": {
          "ref": "7ea65b91-bdd0-4b03-8d22-16c527ec5498",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac8c8407-cc07-4fcb-aa33-c1eee848a3d9"
        },
        "item": {
          "id": "6cdd5cd2-b3f3-4ef9-804e-ce99b23ba52c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3ff42fac-2a40-423c-8eab-093ceb33e175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a804e81-d4d8-4272-9092-36b821086b54",
        "cursor": {
          "ref": "a3422800-bf69-49d5-af9e-b6ddb840ce20",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cd080e6f-703a-490b-9805-ee0588219c67"
        },
        "item": {
          "id": "9a804e81-d4d8-4272-9092-36b821086b54",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1653aad6-8253-4996-af83-15f3a0969638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dd0e58-7213-4099-af51-52ac26cc1f43",
        "cursor": {
          "ref": "148b58d1-5897-4446-83b5-d47c471cc4f7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "de05cb03-7c3d-48ab-bad7-bbe49ebe562d"
        },
        "item": {
          "id": "e0dd0e58-7213-4099-af51-52ac26cc1f43",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bacb46a6-4ae9-40d4-8cbd-e9d3fcb48b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd253bc-84da-4c66-a6b8-71a83b0784a9",
        "cursor": {
          "ref": "72e19d23-d0d7-4f64-83d4-3d838549992e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f6e62de8-079b-4f2d-b5d6-a8c55be2bb4d"
        },
        "item": {
          "id": "bdd253bc-84da-4c66-a6b8-71a83b0784a9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d389b53a-6112-4be3-b177-98dd1005f3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d918c3-58f4-4847-87ab-96c69aabce44",
        "cursor": {
          "ref": "74e12d68-6559-4e75-856b-2b0ff1d2ee69",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e95afdd5-5c1b-4751-a36f-6eb13795079d"
        },
        "item": {
          "id": "26d918c3-58f4-4847-87ab-96c69aabce44",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eed5ec84-3091-46bc-a541-c7c0c105b562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b125055e-3441-4f20-9bcf-d2746626ad5b",
        "cursor": {
          "ref": "96ea4e7a-d80b-42ab-ac0a-618b6faf1be0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b045d0d4-f50f-485f-bea6-ed95cac3d517"
        },
        "item": {
          "id": "b125055e-3441-4f20-9bcf-d2746626ad5b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2ddc1a45-b926-4da6-a4ef-52458961c9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b78535-d8bf-4401-8a7f-25b6b09d1d14",
        "cursor": {
          "ref": "4496d690-c6c5-48a4-9cb2-b681367f110f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "51dd0fba-1e19-4e0a-a176-bc451a3a0541"
        },
        "item": {
          "id": "83b78535-d8bf-4401-8a7f-25b6b09d1d14",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d5f1930e-a31c-4dfc-8cae-f62e99f3c0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abcf6d7-b874-4da7-9eb3-8eaf809cae90",
        "cursor": {
          "ref": "180050dc-48c3-492e-8c7d-126b40df6af8",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "53debb6d-3201-4f49-afe7-b66375551a76"
        },
        "item": {
          "id": "8abcf6d7-b874-4da7-9eb3-8eaf809cae90",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b1b3741a-904c-444b-a296-69e6575d5882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cccfb0-0678-47a5-a903-6b431818c64b",
        "cursor": {
          "ref": "ee6e5be0-7c0f-4203-bdcd-9cf6b2669b68",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b7af49bc-79e3-4226-a747-29e97c518359"
        },
        "item": {
          "id": "54cccfb0-0678-47a5-a903-6b431818c64b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9f8e5420-fd10-4c46-ac6f-15411deaf419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839ac02f-1f5c-4371-b9ee-a4e6ab972131",
        "cursor": {
          "ref": "4ffed9b1-8085-4609-a840-623672953cc4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "25c65847-fb1f-4eb3-8b1c-25351834359f"
        },
        "item": {
          "id": "839ac02f-1f5c-4371-b9ee-a4e6ab972131",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "df68dde6-4b10-4845-88db-71f57273a9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5256d3-30bc-4403-8947-b5323b06630b",
        "cursor": {
          "ref": "ddb7b4fd-8ff7-41e2-9b7d-02ffe9f4e725",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9b0c37f8-84df-4870-8e94-88421580791e"
        },
        "item": {
          "id": "5b5256d3-30bc-4403-8947-b5323b06630b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "47942c93-a94a-4b4d-b966-420f4ec27f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a335ef7-49b2-401b-ba23-6638893051b8",
        "cursor": {
          "ref": "8abe2f10-2241-40a2-9580-fcd5b8f1d31f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6badbd79-9770-4a03-ba0c-0504c907931b"
        },
        "item": {
          "id": "3a335ef7-49b2-401b-ba23-6638893051b8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5310f78b-46da-4728-b55b-4cb8c8c43037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e050947e-1b2c-4c26-966f-21f181d01773",
        "cursor": {
          "ref": "330b4771-d5d5-4e09-b651-529ea6d4bcbc",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aaa8e3fb-d308-4308-a4dd-580111e01946"
        },
        "item": {
          "id": "e050947e-1b2c-4c26-966f-21f181d01773",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "afea386d-423d-4996-be78-65bd82410b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594495ae-66da-4aa1-85ae-9706b9c9d837",
        "cursor": {
          "ref": "286e6520-3e4e-4d16-bfac-faf02bb2281b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "75a7226b-7851-4f15-b5a2-bac3eccde0ef"
        },
        "item": {
          "id": "594495ae-66da-4aa1-85ae-9706b9c9d837",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "97eb6d9d-22f5-4c4f-844e-87727a8abd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bba42f-6c97-483c-aa19-79696018e956",
        "cursor": {
          "ref": "9dc023ef-81e6-46ca-ba7e-f288202eed49",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7a21d013-5232-457b-9ec5-1b5dc5c4bdda"
        },
        "item": {
          "id": "b4bba42f-6c97-483c-aa19-79696018e956",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ec4aa316-5957-4115-b74d-298e95ed452c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80564b12-f3ac-41f7-8577-962cdec2ea5d",
        "cursor": {
          "ref": "3a6dac5b-3fdf-4f3a-832a-aaa634afe352",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "39a5c81c-a680-49cf-8f6b-538540e65463"
        },
        "item": {
          "id": "80564b12-f3ac-41f7-8577-962cdec2ea5d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cc6ac055-e90f-445b-8844-170ce18f389d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3e0968-72b0-4c03-8885-071a951cddac",
        "cursor": {
          "ref": "159cd3d0-cb71-43d6-a873-d16e30c8277e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3fde1db6-5f75-474f-a821-c77730ab3874"
        },
        "item": {
          "id": "1f3e0968-72b0-4c03-8885-071a951cddac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "45f93379-6f78-47d3-96de-c5c4b36cf067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06514112-e9f2-47ca-a77a-bff7ed27e190",
        "cursor": {
          "ref": "9df100af-dc10-4c91-bcdf-89bc9970d8c9",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a598692-9e30-4183-8a9c-a6cd7dddb2e3"
        },
        "item": {
          "id": "06514112-e9f2-47ca-a77a-bff7ed27e190",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9f51a957-9d44-46db-b54a-a9e846bb1eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc769aa-5cc4-4d0b-8a7f-eac10adab14b",
        "cursor": {
          "ref": "476bdea3-16f9-4118-b4fd-006307b1783f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "59adc0bf-5f3b-4e35-bc22-e1736d16bcf7"
        },
        "item": {
          "id": "bbc769aa-5cc4-4d0b-8a7f-eac10adab14b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eee01f28-8ff9-4ecc-82d0-a5bfb33ff9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723af7bf-6905-4e44-8c37-1a496f352e5b",
        "cursor": {
          "ref": "6e188f54-a2e5-47e3-b3aa-79fbaa53144a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2a593638-0d9a-4ed0-8845-431908c62cb6"
        },
        "item": {
          "id": "723af7bf-6905-4e44-8c37-1a496f352e5b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d1835f3d-6de3-41d0-9930-c8b77705c375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3bde88-7e11-43ed-a13b-d988a3088de5",
        "cursor": {
          "ref": "849a1828-fae6-4d81-b017-a051f9af1cf1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d6368fdb-46c8-4604-99f6-b4cca380e116"
        },
        "item": {
          "id": "4b3bde88-7e11-43ed-a13b-d988a3088de5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9bf1e60f-cf97-475d-a100-5164613c11e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308e4fab-be7a-4fc5-a3b6-14e9de5c91eb",
        "cursor": {
          "ref": "87487838-9125-49e9-b418-f02d3cf47bc4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aa5cf3c8-ecda-4045-ac4f-28da59b4ffe6"
        },
        "item": {
          "id": "308e4fab-be7a-4fc5-a3b6-14e9de5c91eb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "08d6bec8-fd2d-40ee-ad2c-78e8392dde84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93771ee1-de9f-4541-ba70-ade2f32bdb89",
        "cursor": {
          "ref": "64904022-07e6-45d4-857c-dae444e56ed1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c6799e07-b004-4a35-a5de-bcc97d67e69a"
        },
        "item": {
          "id": "93771ee1-de9f-4541-ba70-ade2f32bdb89",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb6f7808-b4b8-4a10-b840-f5de8e0cbd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8188ffeb-8c47-4d45-b7ce-cb1c7ec71e6b",
        "cursor": {
          "ref": "b1804606-3513-4fb6-894e-4b85c9d56cc2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "792111ac-0c3d-4b74-a56a-d1119fb57c2a"
        },
        "item": {
          "id": "8188ffeb-8c47-4d45-b7ce-cb1c7ec71e6b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5fa1bb1c-8975-4fa1-8971-71dc287646d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb08939-ef80-4cc0-9f2b-67d3a6a1618c",
        "cursor": {
          "ref": "f7f5b161-7e63-40b5-ac71-bb045f6db78d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f492902-a4e2-4190-95f0-d6e078fc640e"
        },
        "item": {
          "id": "6bb08939-ef80-4cc0-9f2b-67d3a6a1618c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "66a3e46c-fcf2-439b-a51d-7f4991b7ecce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5154a0d3-6c55-488a-8365-c34711d317ab",
        "cursor": {
          "ref": "c1983927-7d15-4db3-9390-2ce0dd7ad751",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "306334f7-de03-4cd1-b1ec-f213ef06965d"
        },
        "item": {
          "id": "5154a0d3-6c55-488a-8365-c34711d317ab",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "25085d2c-1a5e-4164-93df-006998ec08ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba878e30-9141-43e3-8eaf-92895adbd723",
        "cursor": {
          "ref": "1f976187-0177-4388-8888-1a7abee5ae5c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f079aa46-a1ec-4941-b6bb-9fe7a4b4c2db"
        },
        "item": {
          "id": "ba878e30-9141-43e3-8eaf-92895adbd723",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e656934c-3e78-4c10-ae94-cefa60b9918d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6392a34-aa69-421f-b3fb-db91f0cdd24b",
        "cursor": {
          "ref": "5b7e6e9a-6224-4d7b-96cb-e7ab36d68e52",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d3560cc6-0c32-4fbd-941c-48da0a2a1ea1"
        },
        "item": {
          "id": "f6392a34-aa69-421f-b3fb-db91f0cdd24b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e5b97bf0-d2fd-4f14-8815-970678971bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561f2ef9-3770-4704-8562-d61fa8400870",
        "cursor": {
          "ref": "0fa13936-acb8-4103-b3bf-54e7536caf18",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "162bdff8-9fd7-4211-9710-819587ad36e3"
        },
        "item": {
          "id": "561f2ef9-3770-4704-8562-d61fa8400870",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "90521d5c-c9a2-41ad-aec5-6ade6f0c5a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cb6f1a-630f-49c7-a5ad-454e7530ff0e",
        "cursor": {
          "ref": "7889cb16-a09a-44f5-9474-aeacc37ccee8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "082eca95-a264-46d8-874a-fa3427807289"
        },
        "item": {
          "id": "78cb6f1a-630f-49c7-a5ad-454e7530ff0e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "397c2012-8f71-41ff-9a59-8eb7897a9bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ed23aa-9ce2-47f4-9894-11e94fecc57e",
        "cursor": {
          "ref": "97640718-650b-4cf4-90fb-8f604d263720",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4e4d0f28-b4d5-4e7b-8c6e-c85487b24500"
        },
        "item": {
          "id": "f2ed23aa-9ce2-47f4-9894-11e94fecc57e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f426ceb7-23f4-4641-b661-61205fab5231",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b46c85c-70ff-4316-90b2-6b3b3c90a96d",
        "cursor": {
          "ref": "3cb7abe4-a2a9-47eb-825e-46294ada2fe1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0563ce75-e494-479d-83b1-15158a2a76cb"
        },
        "item": {
          "id": "0b46c85c-70ff-4316-90b2-6b3b3c90a96d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "80751686-5f7e-43bb-a19e-722417c2eba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2676e17d-74f4-4822-bb40-cf8e8380cc3c",
        "cursor": {
          "ref": "4f6e8afb-c41e-401c-88d1-abc947b91942",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "10ee5028-c84f-48e3-a049-560efe744487"
        },
        "item": {
          "id": "2676e17d-74f4-4822-bb40-cf8e8380cc3c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "982be64c-9a93-4a49-8f7d-cbdecb432734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "87c69bf8-f72a-4090-b007-899a366d0203",
        "cursor": {
          "ref": "070e16b7-18cb-4aef-a67e-f177d596d135",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "babf477c-dc57-4b8c-a783-40a8563efca3"
        },
        "item": {
          "id": "87c69bf8-f72a-4090-b007-899a366d0203",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fa47d02b-d4f0-4f31-8b45-5589c56d0940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4509f304-8c04-41d8-ac26-f4cca70acb62",
        "cursor": {
          "ref": "9b4d8b67-919e-412e-8206-218289161fc9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b7d963db-5316-4461-845c-ffbeb73849f0"
        },
        "item": {
          "id": "4509f304-8c04-41d8-ac26-f4cca70acb62",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e1a37c8e-852b-4bd9-b4e0-a95e8e88660f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "af7df602-3a13-4936-9fcb-e73399002612",
        "cursor": {
          "ref": "f76e4b8b-85cb-4286-a0b5-d4316602a46a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f49fe803-af9b-4b3a-a1be-946265213785"
        },
        "item": {
          "id": "af7df602-3a13-4936-9fcb-e73399002612",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c3ffba36-9f3f-4299-8e83-3ecb6ab68b40",
          "status": "Created",
          "code": 201,
          "responseTime": 4755,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e415a04-1757-4bf3-b855-d346836c3cdc",
        "cursor": {
          "ref": "d8906aeb-d30e-46e9-aef1-4aea7cbb2d8b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1e046d86-4ce1-4da1-beef-a535db286731"
        },
        "item": {
          "id": "2e415a04-1757-4bf3-b855-d346836c3cdc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ecd71860-6748-49ab-9da9-b2795d550dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ff1ca8a6-d4a7-48d5-8ceb-d0fe41df21bf",
        "cursor": {
          "ref": "13a1628b-517e-442e-be97-e4e9ecd7f89f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1e8345f4-bef2-4f16-b6c8-934c25fb46a6"
        },
        "item": {
          "id": "ff1ca8a6-d4a7-48d5-8ceb-d0fe41df21bf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "577952b3-fc9f-4f3d-a904-f495d5dfa7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e9657ea3-abbd-4a44-a27a-f07fe4ec202e",
        "cursor": {
          "ref": "8f98f6d5-65d3-46be-9a2f-3930fb2e6158",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "651dc901-7f4b-44c0-a26d-622a551e7a5c"
        },
        "item": {
          "id": "e9657ea3-abbd-4a44-a27a-f07fe4ec202e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "86ff725a-5772-4c37-a96d-065e99f82bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b913f-71f7-4e91-9e30-298a120ce317",
        "cursor": {
          "ref": "5631f36a-738c-4424-ab43-d80bd21f318b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "00cc7b7c-9b03-4de6-b2e9-c707e6f263dd"
        },
        "item": {
          "id": "d61b913f-71f7-4e91-9e30-298a120ce317",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f88ce8f2-429f-40e7-8ae8-1c0b1cb6f1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db929f78-ae33-4275-971e-0e0f2521e8bc",
        "cursor": {
          "ref": "ba2e9d0c-02d4-47ec-a6db-206b8670ee8e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a7aa9191-f738-4825-9fdf-1e053d88abcb"
        },
        "item": {
          "id": "db929f78-ae33-4275-971e-0e0f2521e8bc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8e313e0a-2417-4b24-aefa-cd9053cc4917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d61e6a-5cb6-4412-a0fa-09cc504edfc3",
        "cursor": {
          "ref": "87057f17-5d3b-49fd-b004-6de96b4e5607",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ef412393-ee36-4879-8d4e-2cb3410c65e9"
        },
        "item": {
          "id": "35d61e6a-5cb6-4412-a0fa-09cc504edfc3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d2925f36-c552-49c5-9742-2770c013a611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34354f67-f6d3-45a6-80c8-b1e75a8de870",
        "cursor": {
          "ref": "70b88d41-5e97-419b-a543-250d7f408a08",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e8a0c4e9-274d-4934-a8f2-b0561e941ffc"
        },
        "item": {
          "id": "34354f67-f6d3-45a6-80c8-b1e75a8de870",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6522e72d-e0ce-4e99-a1bc-55067a24746a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7959f26f-f94b-4c6a-9d53-065e3a62347b",
        "cursor": {
          "ref": "510a392d-e8e0-46ef-8d84-c325d1e6d59b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2f3bb28a-84a0-4607-9b0c-2bc7375190c0"
        },
        "item": {
          "id": "7959f26f-f94b-4c6a-9d53-065e3a62347b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cfc4710f-b41d-48f3-9153-d60b1984ff1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec16387d-93a1-46c1-b56f-6aa97945c945",
        "cursor": {
          "ref": "7a490f8e-7594-4d3b-a672-492ae60e381d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9f158ad8-f9ff-411e-93ba-13cb285bb559"
        },
        "item": {
          "id": "ec16387d-93a1-46c1-b56f-6aa97945c945",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "35c46c31-9c25-4f8d-bf20-47581da80562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e3feb8-cd2a-4967-b55e-71110e758bac",
        "cursor": {
          "ref": "d01bc72f-21e6-4b1b-a496-1d991fde318b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "03b9c319-59af-4875-95e4-9146719d99ea"
        },
        "item": {
          "id": "77e3feb8-cd2a-4967-b55e-71110e758bac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f6c1015e-103b-4acc-9ae8-1cde5af63b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856d927b-c1f8-4754-bea9-4694ec3273aa",
        "cursor": {
          "ref": "e208b57b-8a85-4d11-a390-457d46b6abe9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "00e3d2c1-4703-4cd3-8430-7941b6704a01"
        },
        "item": {
          "id": "856d927b-c1f8-4754-bea9-4694ec3273aa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5de8382-1957-4a8e-b539-798c8ae33d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e86cd3c-c6b5-419d-a4c7-222fdd07e1ee",
        "cursor": {
          "ref": "271527f0-7023-414e-accf-ebc65aa07247",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d076985-8043-444f-8a14-5559a22a7156"
        },
        "item": {
          "id": "7e86cd3c-c6b5-419d-a4c7-222fdd07e1ee",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c40593a6-efc9-475b-aa96-f9ec0db9e56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c667d58e-0fcb-4e42-a236-02eebce4c04f",
        "cursor": {
          "ref": "df993e5e-2187-4bf5-a8a2-d4ba2235e39a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dd4b7c3e-f8fe-487d-9f64-6e0682a97426"
        },
        "item": {
          "id": "c667d58e-0fcb-4e42-a236-02eebce4c04f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "73a1e4d6-ead2-4f86-a35e-2440e241fa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf877ee4-7434-4114-9ca0-ec134fa28d67",
        "cursor": {
          "ref": "11c2ff58-1bc1-4d36-b67b-02ea0fabfa80",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "845ceb14-f895-4d63-a445-29f481b1cb7e"
        },
        "item": {
          "id": "cf877ee4-7434-4114-9ca0-ec134fa28d67",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5c5a1e89-2707-4fe9-b496-bdd5fdbfae4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1925a226-2136-4d0a-b6f3-691d99251c13",
        "cursor": {
          "ref": "6d49c982-4f28-41ce-9422-e6e549c1f4a5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "287cc110-38ae-4843-a1f2-e22f760c8730"
        },
        "item": {
          "id": "1925a226-2136-4d0a-b6f3-691d99251c13",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f8d9a1c1-1fbf-4c68-812e-76bd6f67855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26eb080-fb5d-4108-bffb-a67941ea4156",
        "cursor": {
          "ref": "60033ae1-dfc7-4594-be3a-f64fa1743516",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5b6e732d-ef6d-4f57-baf0-94b3dc9ac9b4"
        },
        "item": {
          "id": "b26eb080-fb5d-4108-bffb-a67941ea4156",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1a0a127f-c6d8-453f-a34a-9508f9c7c69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f2aa35-33e1-4116-81c8-861fb6dc5237",
        "cursor": {
          "ref": "aa0ec96c-f91f-4990-8b1b-04e50fd36c69",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "16a24914-74d1-43d2-9b65-b136a00d16be"
        },
        "item": {
          "id": "17f2aa35-33e1-4116-81c8-861fb6dc5237",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d14ff5a-ca50-477f-97fc-25d435eb4f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83819d5f-8de5-467c-a08b-1eca9db7bcd7",
        "cursor": {
          "ref": "5863d699-71d1-4e6e-9ff8-c4eff05705ee",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f06bd8ad-b526-4aeb-90ab-10538033fdaf"
        },
        "item": {
          "id": "83819d5f-8de5-467c-a08b-1eca9db7bcd7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "896ab393-1167-4d5e-a53a-9514f23780ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c60328c-9023-460d-a669-fc5e64bf3a39",
        "cursor": {
          "ref": "93dfa102-aeff-48f6-b9dd-e16d663d7512",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dad4d2b1-7f49-4814-897c-fbc1e6530afa"
        },
        "item": {
          "id": "2c60328c-9023-460d-a669-fc5e64bf3a39",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "95e51521-bc37-4a5d-9e11-b8de27ace2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f167c911-6f4d-4e06-aba2-2149243c5b78",
        "cursor": {
          "ref": "aad7359c-1d44-441c-aa20-26f1c41e4a14",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "88a2e0d2-8e5a-415b-95ae-c0a2046082d7"
        },
        "item": {
          "id": "f167c911-6f4d-4e06-aba2-2149243c5b78",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0cc7aae2-71e0-40e1-b9dc-ac72ae89c9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848fc692-4849-4211-acf9-c0398ea3212f",
        "cursor": {
          "ref": "93cd3104-69b8-4b4a-b8b5-9adc93b86ee2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a8303026-1b03-4603-ac6a-20930db8d11e"
        },
        "item": {
          "id": "848fc692-4849-4211-acf9-c0398ea3212f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "371cfaba-a021-4cba-9941-b6c599d2265d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df7a640-50ae-4fb5-911e-f7bb18f9817a",
        "cursor": {
          "ref": "6a62f92c-355a-4989-8e7a-4ef381ff2d10",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6cfe3f03-18dc-4c6d-be95-1079e808f47a"
        },
        "item": {
          "id": "6df7a640-50ae-4fb5-911e-f7bb18f9817a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fbed3b0b-78b7-452c-b6d7-7adb979de2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fadf690-a2c8-49c8-8304-5c6c0246f689",
        "cursor": {
          "ref": "bfe4e82d-a3b2-4892-828e-1b38b603744c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93fd5e67-2978-465a-a228-4dfdeb8e0d1a"
        },
        "item": {
          "id": "9fadf690-a2c8-49c8-8304-5c6c0246f689",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d9dc75ee-2a06-40b9-995d-34b2d9cd5346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27abd4ad-86fd-44f6-a6d1-e35673ff9aa8",
        "cursor": {
          "ref": "6ae628ac-ba21-47d5-b736-3110a419f485",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1d44dc94-108e-40ba-96e9-85bbfe6487de"
        },
        "item": {
          "id": "27abd4ad-86fd-44f6-a6d1-e35673ff9aa8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2001eaaf-7d19-47bc-9165-4f4e8ce20488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9264df-57f5-422c-a351-df98ce69f621",
        "cursor": {
          "ref": "7488b5bf-cc71-4af6-b870-10a6e24a7cb9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e8b2521a-46f3-4258-9407-86ba7e638d77"
        },
        "item": {
          "id": "bf9264df-57f5-422c-a351-df98ce69f621",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6458ca89-1c43-4635-9615-a8c059c4c8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef701efd-60d0-4f8e-ad2f-850b258a95c1",
        "cursor": {
          "ref": "a6acccff-719b-407b-b99d-19fd84751672",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "06d8b01e-0411-47d8-b41c-e8e0445dd14e"
        },
        "item": {
          "id": "ef701efd-60d0-4f8e-ad2f-850b258a95c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "63de4a5c-a921-467f-97b3-7aeb243e1aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7871f8a-99bd-4454-a0ab-aabbe6161900",
        "cursor": {
          "ref": "1b2d7bfa-7761-4b5e-82bb-784e906ce25a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc3eaab6-8100-40d6-9d49-ade461517db1"
        },
        "item": {
          "id": "d7871f8a-99bd-4454-a0ab-aabbe6161900",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a6c93341-d487-46d7-bab7-ee3ddae4a2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e002a796-3ffe-4f7f-8110-d462a76414d6",
        "cursor": {
          "ref": "a0540af0-3fe5-4410-b9ea-d9bd2c0ca4c1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd5c392c-4445-4856-bdd4-a84d97f50188"
        },
        "item": {
          "id": "e002a796-3ffe-4f7f-8110-d462a76414d6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "04e6f438-b402-40ef-b861-aac681463ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e20f87d-f7db-4abc-8de6-41acbe33eae3",
        "cursor": {
          "ref": "68b08466-bd4e-4343-8393-add2261a4ea4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ed41c23-596e-4466-8275-9f1a8a977c0a"
        },
        "item": {
          "id": "1e20f87d-f7db-4abc-8de6-41acbe33eae3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7d442b59-92bf-4b91-9828-918b6ef57ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744bbc35-4ad4-4ca8-b89b-c50b4ae8073c",
        "cursor": {
          "ref": "93ab5154-cec2-4ffd-b2bd-a8a2a079ca18",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ce2ab5d8-b87c-462a-853b-99d053f02031"
        },
        "item": {
          "id": "744bbc35-4ad4-4ca8-b89b-c50b4ae8073c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fcf0568f-c95b-4386-8a4b-aa50a0f3ccc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15119053-e31d-4590-8188-70cba04dadf8",
        "cursor": {
          "ref": "ba8d56d6-f11b-40e0-a41e-20ef4b2707b2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3b28b08c-d35b-4915-86ed-7dc823cec732"
        },
        "item": {
          "id": "15119053-e31d-4590-8188-70cba04dadf8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cd9c1b4f-9c24-45df-a419-229008c56f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f581080-3251-4807-87f5-c40686f86a64",
        "cursor": {
          "ref": "9d8323a4-7799-4e82-add9-68da20dbe973",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de723f43-752a-48bb-85b4-37a26e76adf9"
        },
        "item": {
          "id": "8f581080-3251-4807-87f5-c40686f86a64",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dbba2685-7d35-4868-b4cc-8d03650588b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b07410-dce1-47e6-883e-0fba32955912",
        "cursor": {
          "ref": "9df66b6e-14c2-49e9-9dd4-5fe92fb2136c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b01444ac-dda3-46b6-a753-486037cf8ab5"
        },
        "item": {
          "id": "e9b07410-dce1-47e6-883e-0fba32955912",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4b55868-cbb6-4fbe-941a-0daff82ccab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dce395-d28f-4ad1-8503-cc42347a6439",
        "cursor": {
          "ref": "3e35f778-d81e-49d4-be3b-6b90c9a03d92",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "91298e04-7467-4cae-9147-14397c562a85"
        },
        "item": {
          "id": "55dce395-d28f-4ad1-8503-cc42347a6439",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "67932bae-b1a0-411c-a67f-7123b667b34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8664eea-4941-4dc7-8cad-99e358aad851",
        "cursor": {
          "ref": "dfbf0925-c848-4589-a201-2cf9ad9ca345",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6cc58e8e-f78f-45ab-930a-6e4043b9fe5e"
        },
        "item": {
          "id": "b8664eea-4941-4dc7-8cad-99e358aad851",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4949a165-785e-4837-b958-bcddf107fe8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac51c766-9cbf-45bf-83ce-8843c44384b7",
        "cursor": {
          "ref": "17346654-9b4e-488d-8a18-2e6c2e7b7501",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ba68e3a9-fcb9-4cc0-90d8-3579aad0e395"
        },
        "item": {
          "id": "ac51c766-9cbf-45bf-83ce-8843c44384b7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc1fce5f-95d6-497a-80cb-958befe22076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048fd6ad-b95b-4e9f-9675-bf1b1ba1ee83",
        "cursor": {
          "ref": "4280ea34-fcdd-4453-a4b1-3af503129686",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ace06cfd-be6d-41c6-822f-19356da6a9cf"
        },
        "item": {
          "id": "048fd6ad-b95b-4e9f-9675-bf1b1ba1ee83",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8e1c3c2b-c55c-4f3e-9bae-641c440c443d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e917e509-02de-4eac-855f-ff93554e23f5",
        "cursor": {
          "ref": "29ec3982-233b-49da-89e1-a1c78210a212",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7209ad6c-7fbe-4f31-b89b-31190aab7b7a"
        },
        "item": {
          "id": "e917e509-02de-4eac-855f-ff93554e23f5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4aaa3d13-0ee5-4a18-a731-c19474ac52aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461e65fc-a07f-4bd8-85ee-256f692b1e7c",
        "cursor": {
          "ref": "81836a4a-e9a5-49a2-8242-7d92fb20730f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c2723df-e01c-480d-9554-deff272d249e"
        },
        "item": {
          "id": "461e65fc-a07f-4bd8-85ee-256f692b1e7c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c6f54da3-6481-4287-8143-ad73d6e2e20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157e29f0-1934-434a-bc01-20e337e45304",
        "cursor": {
          "ref": "22ada6fa-3f12-48de-a326-5ffd7e7e235f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "372a3d92-e08c-454f-bdb3-2c3dbf12bcba"
        },
        "item": {
          "id": "157e29f0-1934-434a-bc01-20e337e45304",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a2c5dc0c-9710-479f-8a6a-6c625228d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4187ec42-dfdf-4ced-926e-34d25e0ab829",
        "cursor": {
          "ref": "78860e13-80d2-4148-ba1c-fed0112d179f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b3d232da-6b1e-43a6-a924-086f036bc905"
        },
        "item": {
          "id": "4187ec42-dfdf-4ced-926e-34d25e0ab829",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25235743-9b6b-4462-ac57-1b2b9e8d49f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dddbc8-2656-4b73-9d3e-8a854710babf",
        "cursor": {
          "ref": "c78dc9ca-fb05-4c0e-9b45-6f424af0bf60",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a8b5acf2-ee37-4489-8d99-4b5caa940b3a"
        },
        "item": {
          "id": "10dddbc8-2656-4b73-9d3e-8a854710babf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8d2bf6f7-14dc-466d-bc37-fde4a62826d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed16fe7-31c6-4997-8461-5aa29830e2cf",
        "cursor": {
          "ref": "8549eb69-4a19-45ec-aeec-a45a04ad5826",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fddc6840-fb75-4c67-82dd-0b9931d6e4be"
        },
        "item": {
          "id": "bed16fe7-31c6-4997-8461-5aa29830e2cf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6a251056-c3a1-4ef4-a65e-582a6879c779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a5419b-aa74-4ca3-a212-d73cf8a4afda",
        "cursor": {
          "ref": "6e19ddf8-7f60-43b9-a982-bf9c333b527b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e2124309-0002-4aef-a650-fc4a9366f332"
        },
        "item": {
          "id": "a3a5419b-aa74-4ca3-a212-d73cf8a4afda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8b2cb066-a308-4e66-8b90-0a568b6d7ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08dc483-1e55-4b44-9ffd-1a8df6f8f0bd",
        "cursor": {
          "ref": "f0c91988-6c99-424b-8e02-9669d4ddd227",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d8fd0b3b-c8e3-4d56-9059-bd4e34611e36"
        },
        "item": {
          "id": "b08dc483-1e55-4b44-9ffd-1a8df6f8f0bd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "576c660b-99cc-450d-9411-10339daf4db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82a3e6f-f845-48df-868d-75b243e85f8b",
        "cursor": {
          "ref": "7aed60df-8233-4d43-9a6d-6f95457b6bea",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6bedea79-479b-45b6-8817-1a69e886078a"
        },
        "item": {
          "id": "e82a3e6f-f845-48df-868d-75b243e85f8b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7555a6f0-6a4d-4fca-a9d5-0932ac6a363f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df5bb95-9fa9-45e0-a78b-5f26c58f232a",
        "cursor": {
          "ref": "9035e919-6c36-4512-93d8-1937e6f5e095",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c448e96c-3ef2-4b23-b77f-749e079a1ee7"
        },
        "item": {
          "id": "1df5bb95-9fa9-45e0-a78b-5f26c58f232a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5571e6cf-7633-4ccd-87da-4525c2dce493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c371238d-2478-4ae4-8ebd-07f946d93c5f",
        "cursor": {
          "ref": "c64908c8-9c2a-48f1-83a6-bc85f07c81a9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "de15d543-20ce-42a8-b273-0728cefeffd6"
        },
        "item": {
          "id": "c371238d-2478-4ae4-8ebd-07f946d93c5f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34bf127e-e7e4-452c-8dee-a00db4620e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4166269-62a5-46c6-b788-13d6d3e6e668",
        "cursor": {
          "ref": "f1f1adb3-0966-4b6b-8a1e-0c04a6c49977",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "704d3c04-d5cc-4661-a1d8-d26360db603a"
        },
        "item": {
          "id": "b4166269-62a5-46c6-b788-13d6d3e6e668",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f3ae6b42-5169-4b8e-9d8b-7a05c564d260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cead3c-5918-4032-8b10-4c78ae93ce29",
        "cursor": {
          "ref": "9f21b91d-ac02-47b9-8664-d865c5f219aa",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ed10619b-ab0a-479b-b354-3de363b4ee99"
        },
        "item": {
          "id": "66cead3c-5918-4032-8b10-4c78ae93ce29",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "299d8b6f-79d5-414f-a57b-9a0f1cd729ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926aed8f-522b-413b-9eb9-f2ae6aadf52e",
        "cursor": {
          "ref": "225b031f-b0da-466e-b10a-8b372e6af306",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "086960f8-0588-45e4-ac51-246be99094fd"
        },
        "item": {
          "id": "926aed8f-522b-413b-9eb9-f2ae6aadf52e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6fb57076-d637-450a-a457-8699687fcbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ded36e0-fd67-4547-8554-8ffc0aee321f",
        "cursor": {
          "ref": "fdd0da79-8bcb-4808-bfed-dcf09be10b2b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "51036011-cae0-4318-a885-553d67cd05d9"
        },
        "item": {
          "id": "4ded36e0-fd67-4547-8554-8ffc0aee321f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6af9d48d-7d12-4d86-ad04-7dda482fa750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98aade6-8251-4cb0-aa74-45f3b45681eb",
        "cursor": {
          "ref": "e878ae71-0e99-4271-aa1a-5973ad0a1dd8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "21d4b62d-8a43-48fa-accc-ae412cbe233d"
        },
        "item": {
          "id": "f98aade6-8251-4cb0-aa74-45f3b45681eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d95813f-b22a-42cf-a41a-98fdce576f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8fbf9f-421d-4d23-bb3a-8f4dd7a26a98",
        "cursor": {
          "ref": "45dc5fcc-b8c1-4dfc-a4a1-a1578609a481",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "644cb231-7c00-4cb8-a620-c514cd5431cd"
        },
        "item": {
          "id": "db8fbf9f-421d-4d23-bb3a-8f4dd7a26a98",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "28a2c08c-dc6b-4137-8eae-632dd4db088e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03348cd-538b-4770-8642-0f7bd81bd95e",
        "cursor": {
          "ref": "ad5ec222-bbd2-4be8-a2ce-2cae96995e5a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d98e9094-ce0e-4da8-9fcc-fd6ddf22ef19"
        },
        "item": {
          "id": "d03348cd-538b-4770-8642-0f7bd81bd95e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "26786057-13c0-4dc5-870b-2056f83edab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d127abea-67ff-4632-ba84-b3b030e41191",
        "cursor": {
          "ref": "93ac5eae-0ac9-4ecb-b818-73c8d7a78e96",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f26bc86d-7084-4a3c-b312-6b1d6f2280cc"
        },
        "item": {
          "id": "d127abea-67ff-4632-ba84-b3b030e41191",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "31135944-6c9b-4ce9-8dd7-16d07e3bdc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdbb3df-05da-4ce4-aad1-cf21ad4cd01c",
        "cursor": {
          "ref": "76711507-afa3-4358-bb32-906ba9b0c908",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "300e02ac-409b-4111-ad1f-08a0d88a942b"
        },
        "item": {
          "id": "8bdbb3df-05da-4ce4-aad1-cf21ad4cd01c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a670dbef-7914-4c6b-8dfa-6a9417d67d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b14a67d-d933-47d2-a0f6-3f2ef47d735d",
        "cursor": {
          "ref": "6f792a8a-3462-4355-a826-8f810478f2ba",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a9e9cd40-29a8-4ea9-a8fe-7bd9dda75e05"
        },
        "item": {
          "id": "6b14a67d-d933-47d2-a0f6-3f2ef47d735d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "84878b80-b3e7-4c1e-96d3-ff01ac6a5638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ccb489-c6be-4204-899c-cc637dacba01",
        "cursor": {
          "ref": "682de81b-9681-4efb-8a1b-68d08d482f59",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "324d966c-9d01-4d70-aeb2-1310e0f1336e"
        },
        "item": {
          "id": "94ccb489-c6be-4204-899c-cc637dacba01",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6174f959-1937-4e63-886b-dff1bc25940a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afa9fa1-4713-409a-ac08-4974794b7872",
        "cursor": {
          "ref": "c98aa807-90a2-4b24-b8e7-98cb3ad65c34",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9921df19-f7f8-4d3e-946e-f5ef1bd1bb7d"
        },
        "item": {
          "id": "0afa9fa1-4713-409a-ac08-4974794b7872",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77722be5-756c-4113-9e62-5d7e28cb4e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ecfa76-3897-466f-bef0-abb3e5b02cb7",
        "cursor": {
          "ref": "60173f58-775a-463d-b7b2-9723805453fc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "031f5e81-d010-4a71-bce6-d504ae1a692a"
        },
        "item": {
          "id": "d5ecfa76-3897-466f-bef0-abb3e5b02cb7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7f809274-88b8-4926-84f4-01655c7fbd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bcd496-f08e-4d1f-a240-128f3eafbf8c",
        "cursor": {
          "ref": "d421d1ae-40aa-41ea-af9c-4de0fc7d7415",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "394b5388-f9d1-47a6-9193-73ff58f7101b"
        },
        "item": {
          "id": "03bcd496-f08e-4d1f-a240-128f3eafbf8c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5e28a3c7-54b1-44d5-9cd2-aae63ed4160c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc510c7-dcfb-4cac-ad8d-a3ad5c8d0af9",
        "cursor": {
          "ref": "0f46082c-b6be-49c5-912c-53d35869ca11",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "75731a0e-b056-407d-bd06-b4fec7ff87cc"
        },
        "item": {
          "id": "1fc510c7-dcfb-4cac-ad8d-a3ad5c8d0af9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "94f86645-fa86-4a99-a12f-93d43be9156e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa7c098-4bdd-4bf2-8249-29a4fb646a70",
        "cursor": {
          "ref": "f438de1f-58b0-4fe7-a636-840ad233b5e5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3d0c17b0-ebc5-4798-a426-947431aa2137"
        },
        "item": {
          "id": "3fa7c098-4bdd-4bf2-8249-29a4fb646a70",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1facaa28-aba1-4008-9ddc-7302662972b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7045f72e-0b3c-4789-9189-646145fb3722",
        "cursor": {
          "ref": "82c3d03c-bf77-47d3-9bb8-7cbf55ae67ce",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d6b3de4a-305f-42c9-a4e1-ee4147a947e0"
        },
        "item": {
          "id": "7045f72e-0b3c-4789-9189-646145fb3722",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c5a6b84b-08d0-42f5-9459-cedd28496230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec073c08-206f-4d70-a98d-532f1a7204be",
        "cursor": {
          "ref": "46fb83db-7dc6-4ce1-9e56-4d1a7556a9f8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3888d1e6-0d38-43a5-b8bb-f262b17a6656"
        },
        "item": {
          "id": "ec073c08-206f-4d70-a98d-532f1a7204be",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fd49c4ea-865c-4cb0-a563-8f057f19f67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ab6c30-70e2-45b1-bdf0-743859d21cf4",
        "cursor": {
          "ref": "bd2e5c45-515d-4175-937b-5d04ce5e2057",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "63bf9ac2-03ec-4e71-a2cc-267f5409b53e"
        },
        "item": {
          "id": "e7ab6c30-70e2-45b1-bdf0-743859d21cf4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "72a55e91-7945-406e-b7ca-d04759e03983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b23aeff-af03-4a52-8754-b8516a638ea1",
        "cursor": {
          "ref": "88593064-2cd3-4e64-ab27-8f0042dfbf7b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "608931fd-8db2-4820-82f6-3d7546abf2c3"
        },
        "item": {
          "id": "7b23aeff-af03-4a52-8754-b8516a638ea1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "371d3209-dda3-467d-8690-fbce0d66d209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599a45d3-8f2f-436e-a8c3-b4502524f599",
        "cursor": {
          "ref": "aa93b49a-9631-466e-b014-c0a1627ec127",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "330549a7-f167-4632-9746-ba9355129228"
        },
        "item": {
          "id": "599a45d3-8f2f-436e-a8c3-b4502524f599",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4703eb5d-6155-43ad-9a57-082f5c274cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d4ca5-ba85-4de1-be0a-9997cfd1dab0",
        "cursor": {
          "ref": "e20db00f-3b47-4eae-9e24-6f0f509d69fd",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "239eef12-0c44-4d5b-94e3-4ec8ab2ae422"
        },
        "item": {
          "id": "676d4ca5-ba85-4de1-be0a-9997cfd1dab0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f42b5347-1112-4ab8-8914-10e87852fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca59bd-a227-43ea-b70f-febb1d509225",
        "cursor": {
          "ref": "4385cb59-dcb7-412d-9455-aa126aade045",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "50194a7b-d2d1-4ce2-a193-c543812d2c04"
        },
        "item": {
          "id": "a0ca59bd-a227-43ea-b70f-febb1d509225",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "04f30a9c-997b-46c9-8963-b40c29de33b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b5d4d3-e588-40c7-8dca-fe685253a521",
        "cursor": {
          "ref": "a0d05f38-2309-4f86-bb81-28717519ca2c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "79869dc4-553e-4dc3-9dd4-94fbe89f84df"
        },
        "item": {
          "id": "c8b5d4d3-e588-40c7-8dca-fe685253a521",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "05005a8e-7149-4e80-90cf-dab3e6e63f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2b1c9b-f589-49d2-ba9b-6e259a188824",
        "cursor": {
          "ref": "aee7bde8-8453-405d-8a76-080e1406cabb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "96ce09db-1da9-4b86-b315-d171554937a8"
        },
        "item": {
          "id": "ac2b1c9b-f589-49d2-ba9b-6e259a188824",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "95481f14-997f-46f5-aeae-d50cd7c34e33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d83d9c-1aea-4a11-90f0-217eccbeb824",
        "cursor": {
          "ref": "80e2da8a-9033-4b49-ae4b-f9e3c7986051",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8894c79b-28c3-4657-8168-acca9c82c9d1"
        },
        "item": {
          "id": "a2d83d9c-1aea-4a11-90f0-217eccbeb824",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8ede8ac6-87d8-4692-9ddd-4ca6f0a8d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1da97f-747d-4d73-aadf-bd71618b3975",
        "cursor": {
          "ref": "41f4386c-5473-4baa-a80b-aa4ff1efea64",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6820b73b-d130-4e29-87dd-9fb33464fd77"
        },
        "item": {
          "id": "3c1da97f-747d-4d73-aadf-bd71618b3975",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "11854437-75ce-42c3-a173-abf73c0abf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8c2b80-7353-4441-aecc-81eb8f815ab4",
        "cursor": {
          "ref": "9efc7bde-ced0-4031-af05-a6797b7a3530",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b0e8757f-5c2b-40c0-a46b-b72c16d5af15"
        },
        "item": {
          "id": "3b8c2b80-7353-4441-aecc-81eb8f815ab4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d7514ae1-4093-48f7-9075-73824df62733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fb6874-d9df-4590-9338-545f9adce70a",
        "cursor": {
          "ref": "eb2f9bd0-1e46-4e7e-a27c-f602b422e26c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fae834a0-db15-4cba-ae83-6aebec9a7540"
        },
        "item": {
          "id": "05fb6874-d9df-4590-9338-545f9adce70a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f1c170c-18aa-4159-881f-92b59661ad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9b0a5-ac9f-4794-9cae-8e1e6d250fb9",
        "cursor": {
          "ref": "f40b665f-940e-4f22-8b75-d3147d5b1936",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e8c8c56c-c870-4767-a09b-1a271ab470fb"
        },
        "item": {
          "id": "36a9b0a5-ac9f-4794-9cae-8e1e6d250fb9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "56289b82-6691-43fa-affb-78234d1db40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2d3088-eff3-4a75-82a0-606bb7590206",
        "cursor": {
          "ref": "9128aec1-b63d-4c9e-96d3-435eb84ded48",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "49626e6d-10e8-4781-87ae-0dc2073ab06f"
        },
        "item": {
          "id": "1c2d3088-eff3-4a75-82a0-606bb7590206",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f7f79497-659c-4b60-814b-c1cf1f0aa78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da460cc7-e6e8-43ba-b72b-0a51eefe87bd",
        "cursor": {
          "ref": "571311da-7d61-4c82-9e69-35805b4a9d0e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d04ffa0f-e0bb-4c20-a4ee-3518a73f0468"
        },
        "item": {
          "id": "da460cc7-e6e8-43ba-b72b-0a51eefe87bd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3518a201-3f15-4ee8-afc6-720e6e727b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209e3c36-f832-4f55-8935-d7cd07f4ca85",
        "cursor": {
          "ref": "2771c4ba-5a23-4cf4-b642-fc15026763d9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "43773120-d7f7-49e6-b635-0aa208285704"
        },
        "item": {
          "id": "209e3c36-f832-4f55-8935-d7cd07f4ca85",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e501e660-9b34-44ad-9452-0fed2afe1d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f670aad-f3b0-458c-ac09-f6fcd894fdba",
        "cursor": {
          "ref": "3a2501b8-f6a4-4260-b357-7adc0c931630",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "713f83f4-a772-4aef-92db-772b557f1c01"
        },
        "item": {
          "id": "6f670aad-f3b0-458c-ac09-f6fcd894fdba",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ef03b6d-fa8c-4c4f-b0aa-dcba6490216f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca15a99-ab7b-41dd-ab44-f5df46b1c3bc",
        "cursor": {
          "ref": "0193f1b0-b292-4631-a3e5-49f5c656b7f0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f6d58237-2a1e-472f-bd14-deb6feb3b021"
        },
        "item": {
          "id": "2ca15a99-ab7b-41dd-ab44-f5df46b1c3bc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1190b2b3-f2fb-4011-a9e1-5472e907c1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27e4797-876e-49d7-a291-d3f38446c167",
        "cursor": {
          "ref": "d4c6c128-8fc4-4865-b75b-1630e207db59",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c4c18a07-f3b2-484e-aa18-326b4144b7f8"
        },
        "item": {
          "id": "e27e4797-876e-49d7-a291-d3f38446c167",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2c087ca7-37ca-4b59-9afe-482385572bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e078f2cc-4daf-45a0-9378-b774288a4e47",
        "cursor": {
          "ref": "ca42f2bd-3ab6-4ca7-9757-4de82fd16cb2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02df679a-d8d2-4f72-b146-52fae35e5822"
        },
        "item": {
          "id": "e078f2cc-4daf-45a0-9378-b774288a4e47",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e0196fb2-1d5b-4954-897e-e354ea47dc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cf2c29-71ea-409a-9d54-d3305c413461",
        "cursor": {
          "ref": "0cf243ad-7d68-4d87-b197-ea364dca9903",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "849ba54a-e2c8-49e6-9950-3d64eb5bdd9f"
        },
        "item": {
          "id": "03cf2c29-71ea-409a-9d54-d3305c413461",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ab273f25-4f66-44b1-8cd5-57a4dabb4197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26754e9-49e5-468c-9a76-2b56f05b5e14",
        "cursor": {
          "ref": "91219723-c71b-4ed0-ad2e-2597d7e15dca",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "251bae10-641a-4354-a399-f48ccbb60678"
        },
        "item": {
          "id": "d26754e9-49e5-468c-9a76-2b56f05b5e14",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ecc2e1ac-6446-4970-a6d0-d5b579659eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de79e0a-2384-41d6-9bfd-bcdae134b1f2",
        "cursor": {
          "ref": "d224677f-38c9-463f-9244-c0f508411168",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5bfeb71f-40d8-4764-b40b-a60b3c778258"
        },
        "item": {
          "id": "0de79e0a-2384-41d6-9bfd-bcdae134b1f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "46fdd8b4-4cd7-459c-9a70-0c5ce96eeafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a12f588-035a-4730-96f9-91c752ef156e",
        "cursor": {
          "ref": "bec6f5ee-4242-4060-b0ad-bc334f5fdbb1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f4c3146b-d5dd-4dc2-99e6-9adff3b65f63"
        },
        "item": {
          "id": "7a12f588-035a-4730-96f9-91c752ef156e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4d1c3c60-d489-452e-a407-31b3710e71ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed306ba6-57fa-4a0b-bbe8-79c92ffeccfa",
        "cursor": {
          "ref": "ef5a42fd-b68f-44df-b24a-f2dc4b0a01cf",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "edf714ca-88ef-42ae-9104-8e55cb829e99"
        },
        "item": {
          "id": "ed306ba6-57fa-4a0b-bbe8-79c92ffeccfa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "131a0dc5-d8f9-4df5-ae19-2b51c9927fb9",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "9803ee29-d677-494a-b7f5-8a5fdf51d103",
        "cursor": {
          "ref": "241a37b0-e5ca-42ee-b30e-f2089c63bc8e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9f250b8a-db03-4e46-9a1a-246d35e979bd"
        },
        "item": {
          "id": "9803ee29-d677-494a-b7f5-8a5fdf51d103",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5fd7e67b-4b77-4dd6-9d10-78a92cf4ffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42352554-0742-462e-bb6a-7dcc92f750ed",
        "cursor": {
          "ref": "90bf59f5-2820-4608-8723-c2ab85336c44",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c2a2721c-2cbd-4dfb-81d0-49bd12f48a0a"
        },
        "item": {
          "id": "42352554-0742-462e-bb6a-7dcc92f750ed",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bdc256ff-6bec-45e3-9031-b69cac536872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5242cfa1-75e6-453e-bd26-e4c9a8268eb9",
        "cursor": {
          "ref": "34ed2dd7-72fb-4dcc-b8f9-7330126ca30f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a8cf50ea-1599-46a2-a81f-193dff315fe3"
        },
        "item": {
          "id": "5242cfa1-75e6-453e-bd26-e4c9a8268eb9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f5279039-4c5e-455a-acd8-c9a20fb86789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d369ebfb-0373-41ed-a48b-dc63eed27d42",
        "cursor": {
          "ref": "842be3de-cc11-4ef6-b4d3-befb6a844ab2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "19466d6e-69ac-460f-b172-c614f6353e9e"
        },
        "item": {
          "id": "d369ebfb-0373-41ed-a48b-dc63eed27d42",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "51abffe5-4e22-4158-ab06-57bb06d4846c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82b93ad-086e-498e-ae80-812fbe7fe5c3",
        "cursor": {
          "ref": "11866693-dd0f-4773-b379-13e85e332dfa",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ac21cd6-ba2f-49c6-a689-13a72d4f0653"
        },
        "item": {
          "id": "d82b93ad-086e-498e-ae80-812fbe7fe5c3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "107a4899-a1bb-4809-9948-02a7e2e29b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84af9dcc-1343-4cba-9e4f-90269e9a1f32",
        "cursor": {
          "ref": "e1e071a1-5f32-4071-ada8-53ad48a9dbed",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "542cb740-cb9a-472d-bcb5-fd233e15b2c7"
        },
        "item": {
          "id": "84af9dcc-1343-4cba-9e4f-90269e9a1f32",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4274e7a1-0aae-4d6a-ac5d-a622f7623d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36665bcb-3659-4d7e-8798-65c7ee0bfd4b",
        "cursor": {
          "ref": "7e6f78bc-3673-4120-a781-ad305ffce476",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0f3435b0-f1d9-4da2-94ff-7ef9f445929b"
        },
        "item": {
          "id": "36665bcb-3659-4d7e-8798-65c7ee0bfd4b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ea37ae35-04fb-465c-9d47-ea8fe11ce7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01ea81f-39a8-45f8-bb44-5d711091d8a9",
        "cursor": {
          "ref": "a6b5a0f9-87b7-43b1-abf4-8fb54de1fb8f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a8920d8f-895c-4f2b-81b9-c29a9146d95f"
        },
        "item": {
          "id": "d01ea81f-39a8-45f8-bb44-5d711091d8a9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "40cd8961-49d9-4f22-b79d-6eeae4513dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b677eb1-ff81-4ec3-bfb3-67d656c2cfac",
        "cursor": {
          "ref": "3f9da31c-d221-46f5-ac00-c41c5d852785",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4561ca3f-26a0-4ed3-9297-c2563a8d0e6b"
        },
        "item": {
          "id": "0b677eb1-ff81-4ec3-bfb3-67d656c2cfac",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d19fe4c6-c957-40bb-813e-2dd346d778ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875015f5-e2aa-4c4d-8d74-3a682cc83247",
        "cursor": {
          "ref": "cc7e04b4-82d6-435e-9a36-2189a876218e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cb437852-89f4-476c-b5ce-7a2f52f12138"
        },
        "item": {
          "id": "875015f5-e2aa-4c4d-8d74-3a682cc83247",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "91410cea-19fa-4ad7-a568-8764a4d18e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0583438-4e78-435d-bd48-1fcb500f2c33",
        "cursor": {
          "ref": "288ce30c-da5e-476a-afcd-06c2f8ddeee3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0b628c8d-effa-45af-ad31-315f2145bbbe"
        },
        "item": {
          "id": "b0583438-4e78-435d-bd48-1fcb500f2c33",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8187fdb3-ed18-4c92-9dcf-5d4723abbd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22659d9-1d4b-4795-b5d2-15c14dbd5ccf",
        "cursor": {
          "ref": "0d25d600-eafd-400e-b0ab-b2e1a1da6bab",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "16ebb69a-ebc1-429d-bce6-27edf6f57736"
        },
        "item": {
          "id": "b22659d9-1d4b-4795-b5d2-15c14dbd5ccf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d5fecf7a-43a1-4022-9f10-322db85bff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1610ec-daed-412b-ba1b-3904acb50dfe",
        "cursor": {
          "ref": "b129f8cb-d9e9-46a4-9ba2-71f1f696d274",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "93d41b5d-95ac-4fed-b63d-d08f24eeebb6"
        },
        "item": {
          "id": "4d1610ec-daed-412b-ba1b-3904acb50dfe",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0784633b-20c9-4058-ad1a-12bd2ef9701c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1481bc25-025d-4674-8f16-dfaec2a116e0",
        "cursor": {
          "ref": "6479b0a0-c0fe-4ed3-973c-c7a2bb251f10",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d800c30b-e147-421e-ac7c-8e23697237ff"
        },
        "item": {
          "id": "1481bc25-025d-4674-8f16-dfaec2a116e0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "11ef7ee1-c4d8-4c68-a642-085eb8d6ad96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9306e24e-ac40-4e37-ae2f-58ffd8cfaeba",
        "cursor": {
          "ref": "9e3377b0-7e03-4cdb-a1e4-114f53d3a591",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "44184aab-f3ea-4bd5-aae1-a9036d7c21ba"
        },
        "item": {
          "id": "9306e24e-ac40-4e37-ae2f-58ffd8cfaeba",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "495bc544-0f62-44ce-97e3-4afcd1acef3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eada34-dc9d-4c87-a7a9-a6fe6f430cfa",
        "cursor": {
          "ref": "5b5d5c50-5544-46df-b00b-9b64836271e3",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5bffe9c7-9f90-4987-b959-ad7afbac8125"
        },
        "item": {
          "id": "71eada34-dc9d-4c87-a7a9-a6fe6f430cfa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2ae39b16-5070-4484-90c9-a6e9818e11a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5fbf55-ca36-41ef-a3b6-1fc9177d5969",
        "cursor": {
          "ref": "7a6855a5-3473-4203-9461-3def42455e2b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "006e7742-c414-407c-9d38-27b046d06c9e"
        },
        "item": {
          "id": "0a5fbf55-ca36-41ef-a3b6-1fc9177d5969",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b7a02f3-3855-49ea-8343-cf54759b8721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fadaf7-d73c-4cb4-9fc9-c9562b5bbe32",
        "cursor": {
          "ref": "aad7630f-265e-423a-9cbe-c96b2264af95",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b19ce129-3ffe-48ec-aa86-1b4b1c5e4c01"
        },
        "item": {
          "id": "97fadaf7-d73c-4cb4-9fc9-c9562b5bbe32",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5d5d35e4-4d7f-4279-a860-55d80e03d689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5e25be-3051-4d12-a5ae-98ba1c634bf8",
        "cursor": {
          "ref": "d7fca0d6-2a0e-459e-8eea-23cf4d8641c0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "66d9d6fe-2ff1-4763-8958-5b78f67bc954"
        },
        "item": {
          "id": "fa5e25be-3051-4d12-a5ae-98ba1c634bf8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "965d3420-217d-4c52-bb84-bdf353877fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553ec056-d708-40a7-83f2-ed9e6b6c81d4",
        "cursor": {
          "ref": "6f12dbf2-6d17-4fec-9bb2-9ba4083f5365",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "192dffd0-3cd2-4b68-b51d-6133280518b1"
        },
        "item": {
          "id": "553ec056-d708-40a7-83f2-ed9e6b6c81d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "389d1874-78a9-4002-adb1-3e594e3a464f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7995383-0132-489b-bc93-9f5aafac9519",
        "cursor": {
          "ref": "0feeaeb0-9466-4331-9b32-472fe375954c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "654832bb-2bf7-4761-a4cd-6920dd83b673"
        },
        "item": {
          "id": "a7995383-0132-489b-bc93-9f5aafac9519",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7f63baa9-cdb0-4724-939a-506258c80426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c83c25-79fd-4ae7-975e-df388b84a3b6",
        "cursor": {
          "ref": "9a77329b-407d-4698-88c8-49abdabab12e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8f7e75cb-d90d-4dda-9f04-eeb34dabd660"
        },
        "item": {
          "id": "a7c83c25-79fd-4ae7-975e-df388b84a3b6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "739feb8a-e1ba-48f7-b79f-039acb744bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d220c22-350d-4d64-9252-32f23cdf3d05",
        "cursor": {
          "ref": "25c10e18-6eaf-4a37-be5c-fdd47dbed4ce",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "84d46316-e96f-40e1-a6cd-32f308d5f33d"
        },
        "item": {
          "id": "3d220c22-350d-4d64-9252-32f23cdf3d05",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5d0b4829-6495-4bd6-9439-ea6af6083f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e22673-230f-46e4-8375-6cf9ab9fe7ac",
        "cursor": {
          "ref": "4262b780-d9d1-4af1-942e-81fc9e9c577f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "af6763b0-3838-473b-bb6b-07a7c7b9d1fd"
        },
        "item": {
          "id": "51e22673-230f-46e4-8375-6cf9ab9fe7ac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1def5027-897e-4094-a30f-7e91e3d3998f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a37ffa5-8207-4e6a-82e7-7b7a36f85088",
        "cursor": {
          "ref": "28ac60af-afe6-4926-844f-681b1d631616",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "959de16e-b915-46c4-94df-b8ded4ce86bf"
        },
        "item": {
          "id": "9a37ffa5-8207-4e6a-82e7-7b7a36f85088",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "75607b65-f318-43b4-904d-0c86a708969e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a64bd4-4380-4563-81f5-147be0d36605",
        "cursor": {
          "ref": "80d3d9b8-ce89-4154-95fa-ff8921e71f82",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "91f64252-ba77-4472-b4b8-d1ce0c1d205b"
        },
        "item": {
          "id": "72a64bd4-4380-4563-81f5-147be0d36605",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "50cb6b3d-427d-4941-b1e6-2d315579cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829c24e2-6e93-468e-9ac4-cdf081df68d7",
        "cursor": {
          "ref": "3348d4f0-38f8-43bd-84a0-c938c0701ba2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "20f098a9-8701-4411-9514-ee3287ae5c56"
        },
        "item": {
          "id": "829c24e2-6e93-468e-9ac4-cdf081df68d7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a6a32c79-7b37-4f3e-9cb5-9fab38ccf3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13335a7c-af6c-4f4a-8689-71533714a807",
        "cursor": {
          "ref": "bdb572de-42d8-43cb-b6ae-fb907126db2a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e68aa973-bb3e-4968-bdb1-e541cd2d5b3d"
        },
        "item": {
          "id": "13335a7c-af6c-4f4a-8689-71533714a807",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "900f3f02-5edc-4ad6-8551-3cdf1ee23e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0a7290-6d4d-480d-856e-c697bfc91042",
        "cursor": {
          "ref": "972ce7e6-e0d6-436c-ad49-d0076d553209",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "54939f11-02b1-419a-b9a9-4611706841e7"
        },
        "item": {
          "id": "3b0a7290-6d4d-480d-856e-c697bfc91042",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3ff31a26-0582-4feb-a60c-5d8146c4f525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f08a821-9217-4894-a790-7f15359b938e",
        "cursor": {
          "ref": "b1eb1d96-3646-4f87-b7af-2b4662c22f07",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9b66480-508c-4e87-9e3c-cda19a5b69fa"
        },
        "item": {
          "id": "2f08a821-9217-4894-a790-7f15359b938e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "91e9e51c-c70f-473a-837b-b4af70781954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b32a27-b2a3-497c-9628-00d5a4513ce2",
        "cursor": {
          "ref": "9e8c5827-88a1-4c34-b479-f01dda35b510",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e3c2110d-6526-457d-9a37-44f28ef3459b"
        },
        "item": {
          "id": "78b32a27-b2a3-497c-9628-00d5a4513ce2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "629a841b-0cd8-4c9a-b398-e1fbede138cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95134f40-7598-40ce-a804-3759b86496d8",
        "cursor": {
          "ref": "7569e596-3c21-40de-8fd2-bc4afdf6803c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cc8f7bb7-a87d-407d-8e16-57b80e800342"
        },
        "item": {
          "id": "95134f40-7598-40ce-a804-3759b86496d8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "04e9b7af-e1f4-4b68-ad8f-3f3d8a3fd235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385fbe4a-f2b4-41eb-ab2b-1f068f5bf60b",
        "cursor": {
          "ref": "55f58384-e33a-4287-9f35-5dc3fd18b827",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8239b9e6-8e6e-47fd-8527-7d682b4fe133"
        },
        "item": {
          "id": "385fbe4a-f2b4-41eb-ab2b-1f068f5bf60b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e101aa0f-54fb-4533-9dd5-89a825a16ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f6c5ba-d189-4fb1-9c01-7f7352e188d6",
        "cursor": {
          "ref": "07b20b24-70ca-47e8-a98c-0548947c2d2f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4b0f547a-55bf-4ceb-be6b-2644c5cd2533"
        },
        "item": {
          "id": "f9f6c5ba-d189-4fb1-9c01-7f7352e188d6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "df7f8373-05f2-4695-a47f-6c3e5bca4e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6724e8-1a5d-4450-ab13-c9fa45bb564a",
        "cursor": {
          "ref": "4cac8d69-6d46-4ed7-9309-cf578f7b903d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4a4b7c10-118c-42d5-99aa-1c9627c2ed21"
        },
        "item": {
          "id": "7c6724e8-1a5d-4450-ab13-c9fa45bb564a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "adac69c2-c9d4-4880-8693-383c0f7abcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0386f6e2-9696-471f-8b2d-e322f22c7252",
        "cursor": {
          "ref": "3cd2a7a3-c76a-434f-aa31-48fdecb1b916",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2781bcdf-d3f3-4f55-8da5-0e2f614688b3"
        },
        "item": {
          "id": "0386f6e2-9696-471f-8b2d-e322f22c7252",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b4717cbe-a48d-4ff0-af5a-b3af0bc1b0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798a1a55-3951-41ee-aae3-b7773e4a0760",
        "cursor": {
          "ref": "69c41d42-eb2d-41a5-85ed-972a9097bfbc",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5a31d105-c8c9-4f91-ae2a-9601cdabbf20"
        },
        "item": {
          "id": "798a1a55-3951-41ee-aae3-b7773e4a0760",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0b54988e-f1b0-467c-8ac1-a9aa2adfdea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab8cb56-5997-413b-a124-ed64257b715d",
        "cursor": {
          "ref": "295a9d87-571b-45fd-9611-feaa5efb28cf",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fd84ebaf-ced5-4873-9f51-c0c1c251b895"
        },
        "item": {
          "id": "aab8cb56-5997-413b-a124-ed64257b715d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e566ad3f-f239-45c9-bfdc-47f0a6b55729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee92442f-d9ed-4468-96d4-e00cfb466e8e",
        "cursor": {
          "ref": "7f9eb079-b2fa-4fa8-a6ca-b15df17853d2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ee20ec4d-9872-4633-b18a-6c6008f0b0ef"
        },
        "item": {
          "id": "ee92442f-d9ed-4468-96d4-e00cfb466e8e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "00dc48d3-b666-4449-98d5-7130672a294e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031876be-21a2-4c90-82e9-8b91fbdbfd43",
        "cursor": {
          "ref": "817c5d2b-0e07-4e47-af8b-e220e021cb43",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b1d8dbf9-d6d5-4586-b823-110fbf73bdd8"
        },
        "item": {
          "id": "031876be-21a2-4c90-82e9-8b91fbdbfd43",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8109092a-58f7-42ca-8e91-9b74212d3b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfddd79c-02f8-4f8b-a266-256b10887733",
        "cursor": {
          "ref": "6ad0362c-4067-49c2-9110-04578fd13502",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a5f7565e-b8ce-4872-abc0-5bba6655b95d"
        },
        "item": {
          "id": "cfddd79c-02f8-4f8b-a266-256b10887733",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a3f851a0-3029-45c6-a84b-388f5873e7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d20026-d9f1-418e-b381-02e92dbdea8e",
        "cursor": {
          "ref": "33a718e8-b8c9-4dee-b686-cd2228ea90d8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "89bcf9aa-33fb-4f82-b374-809a05e3eb65"
        },
        "item": {
          "id": "a7d20026-d9f1-418e-b381-02e92dbdea8e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c34a4665-4341-41da-baa2-a8f58ac21169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe1232f-a4e2-4607-aad4-c691ae64a6e3",
        "cursor": {
          "ref": "4e035c3e-3e70-4a2d-91fe-06d81d086804",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5b997b99-327c-4760-adb9-b9fbf8ab440c"
        },
        "item": {
          "id": "5fe1232f-a4e2-4607-aad4-c691ae64a6e3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8f1e82f5-1a4f-48bc-865a-7b5613d22ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468af380-dcf7-44e2-9642-93e408a9b695",
        "cursor": {
          "ref": "cdfff9e4-710e-4edb-99d3-0fee670d2a2b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "61bf0f90-466f-4141-89fa-a377253b3cf1"
        },
        "item": {
          "id": "468af380-dcf7-44e2-9642-93e408a9b695",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8ca6dcd4-62f7-4f2d-a14c-a3972df1d457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f308c4e-ba89-42bf-a7da-a39ae7ab1d29",
        "cursor": {
          "ref": "579b3347-db33-4575-9c79-4caecede32fd",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b5bfc9cf-6b0a-4001-ac69-761a1240de93"
        },
        "item": {
          "id": "7f308c4e-ba89-42bf-a7da-a39ae7ab1d29",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2d4f61dd-f183-4f2f-a849-b53a27df10e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5d74d7-ca9f-45db-b7d4-e0ac78f79fe9",
        "cursor": {
          "ref": "ece5c9c9-678f-43b9-9d3b-b9617ade549c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "77edd56e-41e2-40ba-9c6b-98a3a8b1790d"
        },
        "item": {
          "id": "aa5d74d7-ca9f-45db-b7d4-e0ac78f79fe9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "74d78d6d-ebc2-4288-8cb0-384fa255fa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e8f55-cf35-4520-a48b-06814fc0e984",
        "cursor": {
          "ref": "2b619d30-b9d3-4582-bb0f-ed650ce3229e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b9690c34-ab93-4563-93e3-1676d80ae082"
        },
        "item": {
          "id": "176e8f55-cf35-4520-a48b-06814fc0e984",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e46b1277-7726-4e10-8561-797c4ccd24b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1ef1da-0073-4346-8046-6c64fa38d2d0",
        "cursor": {
          "ref": "9e343703-392b-4a0a-a4dc-0a165bf1c6e0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ea278443-2443-40a3-9d20-72e4184ddb83"
        },
        "item": {
          "id": "ea1ef1da-0073-4346-8046-6c64fa38d2d0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "37dc334e-4ecc-4d32-9ed4-e10c6bace928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fac91f-f6f3-4cf6-924b-270982d13859",
        "cursor": {
          "ref": "d64860c6-c67f-49a0-b37a-3be18d5507cb",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c064fc5c-bfb2-461a-a95c-2fcb1d4ab626"
        },
        "item": {
          "id": "03fac91f-f6f3-4cf6-924b-270982d13859",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c88a63f7-aef8-423f-ba58-8dc3d73e9f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb99f62c-050e-4495-8bbd-9a5966701975",
        "cursor": {
          "ref": "3e8a550d-8373-47b0-bcb4-735dc8d02f62",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5d26c396-fdf7-44eb-8e80-7a7467d77db7"
        },
        "item": {
          "id": "cb99f62c-050e-4495-8bbd-9a5966701975",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d6353192-6e17-4b56-9729-7976585006a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e427845-c247-45bc-b2e2-446fdd4900ee",
        "cursor": {
          "ref": "191be228-4348-4340-9be6-e9f505940e72",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "acaa7301-a095-4b06-bc94-96b242fd32e6"
        },
        "item": {
          "id": "8e427845-c247-45bc-b2e2-446fdd4900ee",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "44a1eb8c-7808-4f46-8a9f-40b5b194349a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846d1414-f440-4a6b-b626-81c975770d76",
        "cursor": {
          "ref": "b10ae50b-cd82-40bb-89ee-ad526f510ca5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "199a8aac-e808-4b3c-bc1c-41b0c480c6fe"
        },
        "item": {
          "id": "846d1414-f440-4a6b-b626-81c975770d76",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1d646401-a02f-44ff-b45e-e835fa2ee473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8df80d-0f70-4d68-9b0b-8bb166e6fbb6",
        "cursor": {
          "ref": "5b3dee06-25d4-404a-bd92-f00706877a35",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "38383d1a-41d1-4d09-a98b-caa29866a405"
        },
        "item": {
          "id": "8f8df80d-0f70-4d68-9b0b-8bb166e6fbb6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "34df5d2e-68a3-4355-9dcb-6c7b042e1275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba282f0-c75e-4d00-9218-28d70e0e9cfd",
        "cursor": {
          "ref": "8064a012-3f09-4b46-a42a-fbff72663262",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "05a970e9-2d1f-46d5-aa1f-816d68f7ac84"
        },
        "item": {
          "id": "9ba282f0-c75e-4d00-9218-28d70e0e9cfd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4bd6b738-3595-479b-80f3-239b4c1cd755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d444e9-d2d9-49c9-92f7-92ccd5da6176",
        "cursor": {
          "ref": "4053f48f-c187-4fdc-b5bc-cd3e5a02dc9c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "96209e05-03a2-4fb6-94b8-48e9728996ff"
        },
        "item": {
          "id": "91d444e9-d2d9-49c9-92f7-92ccd5da6176",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "00ce8128-37f3-4656-b283-1fd1d1f6abc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb081fc1-322c-41f4-8f95-f4a6d64aba9c",
        "cursor": {
          "ref": "db356daa-fa9b-41bd-9612-e403ffd983cd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "888bb6bf-788e-4428-b5b4-c13402d583b9"
        },
        "item": {
          "id": "fb081fc1-322c-41f4-8f95-f4a6d64aba9c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cde441f3-10ab-455d-8191-8c3a874e742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082db29d-0b2f-406c-840b-8e5a91a2cd34",
        "cursor": {
          "ref": "1c0fcd94-e1ff-4750-92aa-4a84035199a1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2b86d5e7-ecb8-4b9d-9cd8-b9406289671f"
        },
        "item": {
          "id": "082db29d-0b2f-406c-840b-8e5a91a2cd34",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "644ab43b-6e24-49ab-b2ac-a2eb1c773367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7456dd3-329c-45f4-aafe-d04c17c46718",
        "cursor": {
          "ref": "2b353045-edf7-4a3a-84ce-60cf4de1b338",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c641f70b-be83-4593-929f-5fc2e12081f0"
        },
        "item": {
          "id": "f7456dd3-329c-45f4-aafe-d04c17c46718",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b44fc413-3398-4342-8605-77ce36ec7dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa4bf5d-b6fa-4eca-b519-c0b053452885",
        "cursor": {
          "ref": "167e58a7-d217-44e9-b3b6-3e404f1d974e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6917d5de-7548-419f-9348-a7ba9d7d3ed0"
        },
        "item": {
          "id": "3aa4bf5d-b6fa-4eca-b519-c0b053452885",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c7f8653d-6f95-43f5-a5db-6d3a83afb96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247bf73d-f897-4ff7-8e2c-e9648f231831",
        "cursor": {
          "ref": "479f631b-7fe8-40ab-a4ce-ea93eef5217c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c2af20b4-40c9-4fe0-be44-96b35956a059"
        },
        "item": {
          "id": "247bf73d-f897-4ff7-8e2c-e9648f231831",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4c5bd384-06fd-4809-91d2-6e05abf448f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdce819b-baaf-4752-9d1e-bd225d93a2f7",
        "cursor": {
          "ref": "ed0f9ef8-f99c-4de0-8df7-d79efceb694e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0cf2687a-6817-4848-a3b2-d6b38df6d25f"
        },
        "item": {
          "id": "fdce819b-baaf-4752-9d1e-bd225d93a2f7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "03ce3151-249e-4700-a865-1f398de2d788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394df7a9-cf79-4bba-bb83-21261029f653",
        "cursor": {
          "ref": "a05d9eb5-32dd-4282-a7e4-2c4ae50547df",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cc3e114e-d751-458e-ad31-706cd1ba27ea"
        },
        "item": {
          "id": "394df7a9-cf79-4bba-bb83-21261029f653",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b17278f5-a852-468e-9f24-c574ade9b64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33488c5d-ad76-4dd2-9cc2-d97b8429702f",
        "cursor": {
          "ref": "5389f9c2-326c-4a61-b0fd-840f1f500e47",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "102bec89-fc12-453e-8857-129ef10c9ab1"
        },
        "item": {
          "id": "33488c5d-ad76-4dd2-9cc2-d97b8429702f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9e1a761b-a2e8-4f25-b2f7-0fc1a305e6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74363dc7-e861-4a4a-af7d-6c0448afc949",
        "cursor": {
          "ref": "481a503c-c753-45ec-8d31-85be963e506c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "da142306-b28a-4051-94c3-e4e07571dccb"
        },
        "item": {
          "id": "74363dc7-e861-4a4a-af7d-6c0448afc949",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b0b0fb6a-294b-4a6d-b1ba-91c8da987fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81f84f4-7a92-4556-8a53-79e1bac8c6c2",
        "cursor": {
          "ref": "26f80ecd-d23d-49aa-b96b-8561f51ade9c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7b452bf5-dea4-4d27-b535-c6f78833d6a1"
        },
        "item": {
          "id": "d81f84f4-7a92-4556-8a53-79e1bac8c6c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fdc6f568-3e15-45bb-9373-cb82bb99f9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d86daf-4c11-48c6-a98e-dff22964582c",
        "cursor": {
          "ref": "b40ec33b-170e-49aa-8edf-5672899649c5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7ef05d5f-ac88-4b37-a7f6-cf3e4cab94bf"
        },
        "item": {
          "id": "f6d86daf-4c11-48c6-a98e-dff22964582c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4cd8aa45-ab8c-4564-af63-144397bc4d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7f5a7c-9d12-445c-b37e-95465a59ae36",
        "cursor": {
          "ref": "8bb3e1aa-f790-448b-932f-bad0b7f3dbd0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f17fbcba-2364-4fa0-a8dd-4598ad65e062"
        },
        "item": {
          "id": "7e7f5a7c-9d12-445c-b37e-95465a59ae36",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "11012882-91c8-4b35-a7d0-8ba23b13a56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8177afcb-bd00-4135-a0c9-b63901798612",
        "cursor": {
          "ref": "968f6bbc-892a-4e08-bd73-3ab05008013e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6af949a9-1a42-4dfa-9b30-1c0539849a13"
        },
        "item": {
          "id": "8177afcb-bd00-4135-a0c9-b63901798612",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4c0802cf-00f3-4519-a441-ae1baa39ebea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c860e85d-9a48-4256-a014-ccbcbb3a5477",
        "cursor": {
          "ref": "01ee9596-4308-4ee5-b0b8-edfe722e824c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b547e66a-c088-484a-81e9-071c5944a206"
        },
        "item": {
          "id": "c860e85d-9a48-4256-a014-ccbcbb3a5477",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c4552c71-5bec-4785-894f-ae0b3058a543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f0a177-a36f-4d1c-acf5-14362f620573",
        "cursor": {
          "ref": "edf9c0e2-74e2-4864-9f4d-4caeb3ee42f1",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f0d3403b-2450-4daa-be97-40f96f6f18e1"
        },
        "item": {
          "id": "41f0a177-a36f-4d1c-acf5-14362f620573",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "aa185be0-4373-4fad-b8b1-7c213dc25fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c62b43e-c160-4a7a-b767-03b96cadcabd",
        "cursor": {
          "ref": "78462b6b-c383-40fc-a05c-e80497bc7121",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0625c2df-6823-42d4-abb1-06f3e5083e65"
        },
        "item": {
          "id": "3c62b43e-c160-4a7a-b767-03b96cadcabd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "de32e4da-f06b-4e50-bbfa-3a7c3168b9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eda35a-9200-4060-a15f-1dc6f7155224",
        "cursor": {
          "ref": "3cb6bee1-e5d1-40fa-a973-c0c8536813d7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "81ea5bd6-6850-42ce-b3d5-38a2401db09d"
        },
        "item": {
          "id": "29eda35a-9200-4060-a15f-1dc6f7155224",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7815225b-0e70-4dc5-801c-6d1de735b2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f8c526-df75-419d-8e38-254b22a554a8",
        "cursor": {
          "ref": "725ac254-487a-4b1a-9c05-1ed5a40a1eae",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "989b83df-f93b-4c47-9d93-26b354152636"
        },
        "item": {
          "id": "95f8c526-df75-419d-8e38-254b22a554a8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "40ef2ea7-6f90-4938-b9e6-5c6e437751cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5943fe2-a1c5-467e-8b4d-1a2e2c1f2e99",
        "cursor": {
          "ref": "63bcc508-1749-4dc6-ba1e-48c7121e6d98",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6d553f4e-d770-4239-99ce-b7bb19ae85ab"
        },
        "item": {
          "id": "b5943fe2-a1c5-467e-8b4d-1a2e2c1f2e99",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0bafe1c3-f839-4a98-82dc-7b94fa53c9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff418fb-e508-4f59-84c1-bdf8dc53090d",
        "cursor": {
          "ref": "6e3c041e-0b94-4323-a247-28e576f8b099",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "542af0e5-6a5d-4893-a3d8-77761394473e"
        },
        "item": {
          "id": "7ff418fb-e508-4f59-84c1-bdf8dc53090d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4926db17-1ccf-4aa2-b87b-029214cfe37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efbbd60-88f2-4878-9c63-2749aa6716d1",
        "cursor": {
          "ref": "c4b7d3b8-84ec-4a6a-b3d9-ca0044003919",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fbeda870-4ad6-4d4d-9de9-5874646b7b1f"
        },
        "item": {
          "id": "8efbbd60-88f2-4878-9c63-2749aa6716d1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e9ea420c-2d9a-4e30-bdfd-47d5428ed52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd13317-c3b9-42e9-b3f0-47c98d76eb62",
        "cursor": {
          "ref": "aadc1355-1480-4bdf-870b-b8dae1be6956",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2d5e6687-13d4-4b62-98ce-1c97e800a66f"
        },
        "item": {
          "id": "cdd13317-c3b9-42e9-b3f0-47c98d76eb62",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5010ab6e-9235-4e46-90d2-11499abcaff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9c88f7-2db5-48f0-aec0-5e13d3d92861",
        "cursor": {
          "ref": "8168411d-7d69-4aa9-99e2-f572c5cee567",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "39132a74-cc72-4a52-8031-917de36a04b9"
        },
        "item": {
          "id": "ed9c88f7-2db5-48f0-aec0-5e13d3d92861",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5b29473c-de9c-4fdb-8183-a52944bb11eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4f5621-bb4f-47ba-8dd5-0cb22562db49",
        "cursor": {
          "ref": "24575c4a-b6dd-4682-b718-b532fc022e30",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c31529fa-1326-43ba-9e45-8997b5f8e518"
        },
        "item": {
          "id": "bb4f5621-bb4f-47ba-8dd5-0cb22562db49",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "30b250db-98f6-4b22-b25b-fda097099d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b161263b-079d-4a59-a83f-556a20173ec9",
        "cursor": {
          "ref": "4f5538b2-37b9-4959-9ab3-6465c2fc1fd2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "444d66a7-e0fc-4581-bb59-faf235af341c"
        },
        "item": {
          "id": "b161263b-079d-4a59-a83f-556a20173ec9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "64c53594-afa4-48c5-8fac-6431b4c27643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0c532f-634e-4868-8564-af98c76dd865",
        "cursor": {
          "ref": "55443084-9cfd-4bf9-aec2-90bce3018a6b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "43a048e5-8aa6-4d72-9e5b-7d3ad6cf8aec"
        },
        "item": {
          "id": "7c0c532f-634e-4868-8564-af98c76dd865",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b2dd3428-ea90-4954-b50c-a2aa4bdda7d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9b1357-33d8-435a-a813-3da8305f4d16",
        "cursor": {
          "ref": "46b6da1a-744c-42a2-b27a-bb23194b33f6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e9c71c5b-827f-4cc6-945f-18d9e5d479c3"
        },
        "item": {
          "id": "9d9b1357-33d8-435a-a813-3da8305f4d16",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "761194b5-a8de-4939-b8a8-f4e2f79f514f",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3992d11a-e150-4329-aabb-ccac1a28eb49",
        "cursor": {
          "ref": "23367e57-fc2d-4e99-a193-890f9a1962fe",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "84a4c222-7f67-4bf3-ae20-43c398107ffe"
        },
        "item": {
          "id": "3992d11a-e150-4329-aabb-ccac1a28eb49",
          "name": "credentials_verify"
        },
        "response": {
          "id": "70c672ad-bcea-4f5d-9bb5-05e86b6e1c7b",
          "status": "OK",
          "code": 200,
          "responseTime": 2983,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8415a40e-362e-4b57-b24a-864c15e600ab",
        "cursor": {
          "ref": "b415ed47-ab26-4ddd-bdd9-037c0c820ad0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "aa6a2844-8002-4bed-8db9-14119b89bc04"
        },
        "item": {
          "id": "8415a40e-362e-4b57-b24a-864c15e600ab",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "73ba040d-e017-496e-b687-6a2db23c78cd",
          "status": "OK",
          "code": 200,
          "responseTime": 2639,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "666fa4f0-e3f1-4891-922a-1e1b1506a9de",
        "cursor": {
          "ref": "fb2cde41-ced1-407d-8701-58ce56e8221c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1a70c1a1-c325-4278-b5fe-a3064454c836"
        },
        "item": {
          "id": "666fa4f0-e3f1-4891-922a-1e1b1506a9de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8f849d1-3971-43d3-822c-50b63466a6c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666fa4f0-e3f1-4891-922a-1e1b1506a9de",
        "cursor": {
          "ref": "fb2cde41-ced1-407d-8701-58ce56e8221c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1a70c1a1-c325-4278-b5fe-a3064454c836"
        },
        "item": {
          "id": "666fa4f0-e3f1-4891-922a-1e1b1506a9de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8f849d1-3971-43d3-822c-50b63466a6c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b7f144-95ea-4da9-9ff7-07b238877219",
        "cursor": {
          "ref": "eb665bba-a674-4de4-9663-9b04d0ddb78e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4a87eedd-a827-4232-b510-446ee7cb46c2"
        },
        "item": {
          "id": "16b7f144-95ea-4da9-9ff7-07b238877219",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff5edce5-a656-4998-a3c1-f043429f1fad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd115fb-735b-4e4d-bc7c-38874db97444",
        "cursor": {
          "ref": "60e6994a-059c-42df-8683-916ae33cb436",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c5e1e9c8-6f76-44d7-a77f-206b26436bd3"
        },
        "item": {
          "id": "ebd115fb-735b-4e4d-bc7c-38874db97444",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ee48fee0-b459-4aa0-be50-f8511f0cb039",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}