{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aaa4b746-30c9-4b1a-b07c-9f18a3e60085",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ff061e75-2680-46f7-a866-569e8c1ce193",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6adeb84-ab90-49a1-813e-83ba466bef62",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21298eaa-1ae4-4e13-ad37-8fcdae3159b5"
                }
              }
            ]
          },
          {
            "id": "8e4cf62c-6da5-4bae-b7d4-429a51eebe13",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd3a6fef-7319-4ee4-b9cb-425e97d51859",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2abc3df3-b01e-4c26-b091-87e356c85abe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bcdec440-6b72-4483-8068-a7f95c9574ca",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "925a143e-7043-4642-a551-3925ab34032a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7028ffb-f138-4071-b16c-b496928b58b6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5124629a-a321-4944-9b03-d4215312d5ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ead605b1-562f-4af6-89ea-3a5647cc1c43"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a41437c-db9b-4bd5-8827-dd4eea633273",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ad00435-2aa1-499f-88ab-e309cefda512"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0c7f3d9-0a38-4cc3-95e5-971474fc6982",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51c9f607-51db-4c85-bd2f-e5ec4be88d1f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c72bfde2-ed6c-49bc-a90d-5e78451edbfc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4fea4f85-3e96-4fc5-b079-1aaa6b831bce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38b1fa12-dd0d-4a7b-ad8f-0a38e0d76b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c5560e0-5120-459d-b022-f13e6579ca1c"
            }
          }
        ]
      },
      {
        "id": "f55fb1d8-cd13-4840-9dec-ce925772935e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ef198f03-0b18-4fbb-adb0-1a888a6b9bbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84f03a51-d81e-4e64-8294-0cc3cb0d38f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "504e64ab-928b-46c8-abd4-9cd19da48025",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8982c617-dff8-4190-a4e4-ac759a7d709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d5a4d43-a5f5-4ce0-b74c-ac27b5dc09eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157fe666-b823-42d4-9cfe-2317b615c6c3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a670c9b-b3d1-44bf-b2c9-3b55123b1e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d949a7d1-2c7e-41d2-9bbb-8a29d08fb16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f30916-186f-44cd-ad70-9b5acb1b4648",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306ba591-c1a3-4de2-a431-1a244d43581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0e50a0f-8d7f-47ac-8f38-7e4ae9a39f7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "beebc5d1-e28c-41ac-ba3e-3ef3226d5ab6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc951bcc-663d-4c92-bfcb-e6180d779153",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b2874b-f420-474e-81a3-80e73b042c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0767e7b-c217-4df1-b944-a66d973cb936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6f4a25-1202-4bf9-b9ea-ea9711444935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e72c554-3d50-4d72-9fa1-dca1a4473eb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "200aff03-a4d7-4bc8-b232-42be1a3d9b33",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fea4a72a-b8c1-4c22-b9ef-d782cb5c24a4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db7d88d-6db0-4622-bb45-4b6fa35273fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "78d43ac3-216d-44a5-b703-955a615c9390"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cd7755d-1db6-46e9-a958-f4bc68956757",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b27c4d42-d28c-4e2f-b08a-6a95a2d250c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2f4da4b-5464-445f-9469-c20b683e9d83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db58f86f-f906-46fb-9adb-6dfb0fa49a21"
            }
          }
        ]
      },
      {
        "id": "9c1cb2ac-e5f0-4054-b402-ea91ea3e7084",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f84fb11c-bfce-4530-980c-a880f37536e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ec3d809-f5e6-4df1-ac7e-196493acd8e9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2e8df7ba-47c9-4fe5-8c18-3935b047135c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f272fde-80f8-4f1b-b7d8-6083705f8a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dba7af-3b1c-44b4-942a-6b0cc904080b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b058aae2-8136-4ca5-9602-11e2dc5dddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b8565c7-0d32-4f20-a2fb-6d751b77d7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f42e6d-54d2-49b2-8033-24fd0c7e4438",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afaee6e-adef-4610-bdda-20a0138c3561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d519ee5-7844-4614-88d6-937fde0da878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bb6c9c-d8c6-40e7-9944-20d76d54ba5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6832d67-caa4-4c13-aa43-28fe632adb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c34d83-9018-41e8-abf1-7c2bfd588755",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6821a35-65ef-4379-a402-fdf7a2f7545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d3f826-7d93-4a5b-bbab-0b5c5c8d6be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6dd132-6f6c-4a80-8b42-d4f3a7de6f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4af3c24-0357-435c-bdd2-196e5048173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8ad6f4-7cfa-450f-9993-9c45c720aeff",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b8105e-b1ed-4bb9-914e-e02ece6b0dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a79172-7e02-421b-89d3-cc01b39bdad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102c9558-0a14-4d03-b35b-c0bfdce8706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36c17ea9-5d29-4ea1-a444-a427e1eabc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b41367e-2757-44f1-bd55-86f042f3f3f1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4911a2c-59a5-4b7b-9cef-ea490d4d6e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54834acd-998a-4b94-860e-805e61324481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba226d81-8067-4572-a879-aa5f2ccde976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5909c18e-d85e-41af-9c60-3769b419d659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c27b38-3a2c-4eeb-968c-3b8d6a0ee617",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4f70d6-b4b1-40bf-9fa5-d7d14d429d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338088b1-e02d-48a1-a582-41915f5033cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac9b9d5-8ede-42fb-84d8-a27f5caffee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a716768f-c690-466e-bdb4-5a14386d7140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4e878d-0143-4438-a024-b88bfc5775b0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a014237c-8acb-491c-a1a0-72b843d7c08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f938d6-5aaf-4fe1-9249-b2f0a7fb64cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56352ae-4366-49a0-9f18-b1697a24f75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff53361-2afb-4d70-b5b3-f014b028ac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7e3dc2-4bfb-4c11-afab-39fbe72269fa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd077406-9f31-42d2-9d87-edf1e63bedc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3fbe98-f867-40b0-8044-461a334cdd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5303e3-0b66-42e2-85c6-6eb3d75fb67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b62a87f-a21e-4a7d-bd54-83ef8fc2a36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac5125-5caf-4368-ac18-be3c7f58cf6a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cc0b32-8ec7-4b1f-8269-212846114c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12bb851-e6b3-42c4-ae6d-73f94c88452f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44868c05-63b4-47f2-82c5-5c9f18966388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30426554-6b75-4254-a943-129f04f64932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bab373e-8675-4bce-82e3-20ce083f3420",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0a9d7a-92b4-4623-9566-6628138b169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f528409f-7bc6-4d3c-8cd1-1c71c1429118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c685bc-6993-4b1c-a0fc-1412f9f3325f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ce54d9c-1af1-4f20-8617-8e14e6003c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e1d2b9-3f79-44ea-9d4a-33cc822dceb5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdff67ca-93f1-4060-9f30-8d84dd3e6631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8e5df7-9e88-481d-aee2-f58d03e2f05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a1127d-b4ba-4793-aaa4-4ca513b827b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92fa7461-789a-436c-94e3-e47991fd24c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05af1c6e-1552-4829-a74e-b5fc1cedd990",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb01cb90-9321-4ea8-9b7b-8636f8039d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4745edb3-dfbb-46b2-ba8f-1a97c4f72ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b47779-d524-47a9-99fa-ab0a92f69799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ee9b4a6-eb81-4860-97ff-ebeebb18aa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393b59d5-e623-4adf-91c9-aabdef22e65c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6f1f4a-a8c9-45b3-b0d5-2815b3d1eb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a672aeb-61fa-499c-8a8f-c380604c6880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb0a03f-9a35-4f81-af37-dd9c545d8365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "919a6737-02bf-4fa7-9425-3cb99c1d55d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4f41d2-51a1-46f9-a1c6-07181e510936",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2264bd3e-3561-4674-872d-b1b257ba1107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c096b15-9683-47dd-902d-a0f51fc106af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0d5bc5-9031-4b8c-8ff1-4141079c398d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f76671ec-7695-4f02-a91c-b13ec903c538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833cc44f-53fd-4400-80d5-48727c8a21da",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267061f8-6f25-423f-aeab-bbb20677df61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a43dc7-a077-438e-b7f9-6b2222eac2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04b6914-2278-47bb-8145-f5d1100e1ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffe95924-0745-4608-84f4-b9544a853923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2356953-8cf5-4194-8dd9-353a1ecae911",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97fb897-5728-4eb1-91d8-98c95941d38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cde46a-7778-44d8-8ab8-3023365c565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1b772d-81f6-443b-8f53-8e100ea072fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b5015d7-c256-4544-98e1-e07c091cb1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cddd21-0d21-4d76-ad2c-5f6c41657db3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8f0cd4-6a89-4e50-af65-0aa54d83355e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14be96bc-fae0-4657-bb10-6bf9dd546a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de4f7c0-a6dc-4368-b694-5bfeb6f20f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21b7d13-6409-4925-a4e9-0d066abb31eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603d216d-b259-4f0c-a761-6d01461cdfc4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6d240f-380f-4576-b3cb-b228e1d6801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a86991e-61e6-474f-8e92-2fe6d41a5496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fc0740-5762-45f9-b363-fe2f9e03271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce98b69-43c7-4053-be5a-33c5038a4d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad77e916-a5a4-4f27-8361-e342ce40b35e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd24fcd3-d747-4e02-8ebd-7174de13c0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f45b1e7-f08e-4e51-8ecd-278933859dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d3b860-740f-4c21-8e83-cbe417fc8e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae1a819-0271-40e4-94e5-9ff9d182ea9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c196c992-0e3e-40f2-a146-6335b56fc083",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7b7bda-9c7b-4670-9dc9-1b1352195a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d83c9b5-0fdb-496c-88fc-36e3f06f3455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc99178-293b-4cb6-9f9e-8bd295ca3811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec932e2-8dd0-449b-a874-24ba13487d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf91a0c5-9e79-4c8b-936f-33e9ee4a1ddd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c60a00-131b-48a6-afe2-48f58cbdef2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e724b3-6b1d-4828-88bb-4a72ae46bf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8dc45d-4ad7-489f-b078-c4926f3a09d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9960fa-534d-4027-a8dd-217d8eb9e5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad38f7e-7e3c-4e0a-812c-0196f79f29a8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c517a51f-6049-4f65-adb4-e8c6238c6278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258e245b-3ed2-4086-9753-634f84da3a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ca30d6-74ac-4f59-bb57-0e60e43d6aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41283d3c-0678-4fb3-bd11-e6e96391cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d109015e-7c14-40d4-98a0-5d834f041ca5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96872575-ec95-47f1-b6d3-edb6adab8492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5908a390-c17e-4b3f-961e-ebbbf1acaa42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1473abd3-e770-494b-8310-e4b1e9047e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e98c7acc-0412-4a85-8ec4-cdf3f11e87e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f4271b-76e3-4152-92e1-a20640b9f404",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d553efe3-92cc-4ed2-87b9-7159dcbab6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68550351-12c4-4b45-9559-0d6bdb714d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894d073a-73bf-47f6-985a-945d44aacdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03a0c4d-8fd6-430f-9ea0-1c4f6f9fbe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07d3783-4856-49a2-9527-f3b8bf2ae9e1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542faa32-3310-4bc9-a8e0-f2b4419bcf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddadfcb-5d35-4150-bac3-d042a427590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16d2f5f-95d3-4544-aacc-adbee0f220ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72adbe1d-8073-4d55-964a-0b9ef78f9ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90afe200-e2dc-479e-a7ab-4985cc1c84d3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928dfa5b-0f47-4813-9a85-eb370e44a733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0cc4dd-56ea-4aae-80d3-6674feb613d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4a25c1-7c87-46da-adb5-f84a7fba7bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77e2efd-9c19-45a0-9b1d-09e61ee75d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6361322e-f021-4b20-9107-8739306190f4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befa231e-3a40-4f3c-86c3-a5cd56f51566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7619fb9c-604e-41c4-8ed3-6366e0e3a778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdda8d9-64f0-4570-aede-44b8dcc38d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fe5e71-3792-4aec-bada-a4eff95abf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76281fc0-6973-4db9-85e0-493754e02d5a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5dd3eb-dc14-4d93-adc6-66bc29b8ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766405fa-89bf-4e17-a2be-624c8a147aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69fea59-e091-4656-b7ea-1d7eea406ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd530ad-f1b3-4620-b4ae-e719d65c47b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7a8569-a758-4fb0-96ad-d2dd484f7c27",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a728ea-1403-4b47-b086-ad9d26431910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7641cd3e-94d5-4e4f-9c7f-3e318fb1fb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3678e26f-7fa4-477b-b157-3c236d8e6dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9268074e-7a53-40ad-b148-6f700b8be726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6da5d9-c02a-4571-ac37-7804c870ccf7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab6db5c-9fa2-488a-8dfc-a75f4f4645f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15aed03-46a6-4699-892b-fb5e78f4ee24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7979cb9-39c5-4d24-976d-494e8133b126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ec7522-27c4-4558-9eeb-d6c758316927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6738575-436d-48dd-bade-c34d59b29847",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3185f6d9-8517-4ca7-895a-ead68a778570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1dd86d-6a14-4c06-962d-0b170f90fb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736edbf7-b683-4724-9964-1a53072800e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed46a1c-d302-4775-9fd0-0f7a7198e873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c0b368-0728-4f4d-986b-b0967151e661",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bce0a9-6fd2-4e38-be3a-87d6623fe4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7913bc9-da31-4b4e-8fcf-bda48d68da54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee15ef9-2030-4419-b3e6-a7a01c275b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18015dd6-96cc-4348-9bff-e71a825f91bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c53bfd2-9b6c-4e18-8ac0-1128ab915085",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2028d0f1-2f67-4e7c-ae60-1306a2a88697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91af7473-d0ed-45a3-a14d-2929c5cb37cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21831d3b-cf96-4f8d-b8d6-e9ff951db82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2e24b3-89aa-4b3e-a8b5-3e3ee0b6a731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb12aced-90b6-4134-b3c3-3efb9fa50fe3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05808ccd-4d33-42db-ada2-b5b9c81a3d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318b810-444f-4ff0-bd6f-b142006a15ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3178ea5a-da39-4e1f-912d-c54f654ad4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0825fa-2879-43b2-80c6-b6167ac507ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0801ce96-849c-46dd-9960-b1eea7985ce5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8027e1-46de-4d95-9e1e-9755f3a138e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff3e49a-aa04-456b-b17a-9e9f596b1947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4ddfc0-c00d-4d51-8212-3615c23d2cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4d9fcd-5f68-4a81-a92f-cd0e7c67d940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86a3c76-e60b-4246-a5d2-ca589d275bdb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd65aac-f9f5-4e42-a834-3843dedb86e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36a5c68e-958e-42d7-b29b-173e20975c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25599482-39e5-43ba-a66a-810e99bac17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90c059f5-c118-4576-8296-43dd3f193dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159f3420-b700-4921-b6dc-f5c97076bc22",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e9a90c-d628-4053-8fe6-8e33a1cb5696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe9564f-9d3d-48f0-8133-d95b25f3e417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f58563-5f14-4a43-8107-37187a44dc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e003e02-7a09-4722-9d12-86e2cb8316e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f99558d-53c9-4b2a-8663-9545a390a3ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a891f66c-b0d6-4177-affe-20d8da096bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c57051-4002-484e-83e2-cf9544dfbd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b5b95c-05af-4ba6-867c-00a8da4dadd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d4d798-a741-43c3-860b-221da1bfd4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d189c48-2f15-4900-8ee8-1abac62bf98a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7a1712-6c45-4165-a8aa-6b00d9e85397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870287ad-5796-4bad-b32a-d41e827f8768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6b20a6-1ccb-4b16-8cb2-535364d90daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbe5398-d071-432b-8feb-2c20fedf5d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0694a3-d8f4-4ef4-ab37-1b056f171340",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621975e3-4586-485d-84ae-fb53a9d05cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d93786-6c5a-4651-93d6-af684bb9b688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47abba56-6326-4ae8-9f99-cdc413d69524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b22e92-6272-4af8-a745-090fea592eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bde3a4-dec5-4aec-8a64-cb8dcf432a9f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615be040-bd73-4ff5-99a0-46e7ae3632cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc7f173-207c-4132-a330-2969db6cc4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2943e2c8-e867-4554-9c14-d5d64f91b98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96329bf8-0679-4149-8efe-340338e853ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a696a03-5fb4-4e0b-8906-d39fea49533b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29106de-a110-40b0-9405-04f9c401e8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6911416e-ac9f-48e4-9e18-3752ca0ad781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617553a4-4ca6-418a-b8fb-d06c7bdb7b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e4705279-fc82-49eb-92bd-5a2c75f3343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7140d8-5a88-46f3-b443-8b4c65ca2d0b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2febe5-bc7d-40d4-8234-4d6a0b914a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68f689d-d17e-4cf2-8551-136d61417402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7ebdd5-3720-44b4-9a43-483a5ab3bd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e36d2a47-424b-4242-839c-2906d65a433e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad44df9-c5b8-4037-aeab-f779b0091618",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c225d7b9-e609-48bd-94d6-6aee763f5a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d0d019-7d8c-44c6-9d66-516d1b57890e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4907a8fd-7241-4234-a234-afb797b5156e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b090c633-faa5-4ca9-8436-4017157c2523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35e518b-624d-4c43-a53d-c02e26715389",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51893b0-ab50-4830-8701-d0f68059fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5a89c3-6182-44f7-9fda-82bb9bd729a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b817f4a-0f53-417c-9c66-d0cfbf55b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58cd3889-b75f-47d9-9b30-89e13e00d123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc5bce1-bc79-451c-b863-3c0a53b79d59",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa2e6d4-6e51-4f14-93ce-f1e5b9294915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109c02d4-231a-4a7f-a36e-e1c73a66da78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55528e64-6933-4cfc-bd4c-672d06c2eb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c820900a-48c9-40f6-8283-69fd096eab5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c775a2-87e8-414d-a727-ccb589b5ecdd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59822fbe-d9d3-453e-9fef-b0575509b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a870c36-8dde-49f3-871d-1254120674bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63afce3-98b4-41c8-89b6-8150cf34626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c6e345-9f7e-47e8-97b5-21177a7f2f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25fc970-d0e6-4dc5-b063-0d8a3806c914",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19937a88-3374-4771-b467-224cbc4be630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ffe44c-6600-46a3-a892-80e36e6c2e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5a87a8-46ce-49cf-aad6-34c957fe7332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6946ec7-f928-412b-a755-78ec0ba95cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d190b21e-17f5-48f3-ac40-9e92322e7d2c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3c9f2b-b3bf-4e75-a9c8-59029e214358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c659801-739b-4c54-951c-033e9896d641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c2ff4a-197b-4db4-9450-5377f2a3ef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "051125e8-6d8f-491e-bfe8-783592367083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1be63f0-c9af-418e-90c8-9e28d17d807b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ef088d-bb5d-41b3-b27b-e51dc881e5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57cc74e-a6e8-4a34-9ce4-94e8a2669ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9ee231-c434-44cd-b06a-3c3b34bccdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe688fc-8906-4d49-ad41-43ccc91b1211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb89a13f-53b4-40b9-bd2b-0717b5ae245e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f8da9e-89c7-4dfa-8f34-52b63c5d7101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0405a7-6c85-471c-812b-2e6e8b88d818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403678c1-ca27-47c3-b81e-c9e5e2a43901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "42790c1f-c820-46e9-b7f4-448caec253b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05983594-8d90-418d-a440-74db13fc85e7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0299a4-7d68-4dd4-adf8-c95941fa12e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66660dd-9301-4bb3-8bff-e0d9a653f89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a911e6-7425-4136-9ee7-5ce1cf61bddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20159f56-0599-4ee2-ad14-d50e7239455a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9fc89-a07f-43c9-8a46-3461d3bd80bf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba113a3a-908a-4347-925b-8f7a56d77634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dc70bc-d569-462c-9a0d-e03231c092c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff0593d-1acd-4787-ab0e-1a2d893fb7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62739f1-97c3-4c14-a505-5eb34445c5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c33e0ac-b565-4caf-a697-8cd33bd98d53",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81de936a-67e0-4f83-a49a-3d66600406ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bef261-4212-4bae-acdd-55560b0c578d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc45a4e-6351-4d25-a133-d9ae82193a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eaa7c7b-e60c-4dae-a4db-15822cb2408f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d685d-f8d3-4f04-9b59-37373f611aab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8e7c2b-b27f-4d4b-9941-be8712d2461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e44ea99-c0b6-4432-8567-78233db53c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aba79e3-9242-4c66-acb2-0073445311fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "228a51f0-e1ee-4ab0-ac39-299045155317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d11828a-213a-46d8-9919-7c6f2365639e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fe2271-3117-4ae1-96d4-1a8317ae6e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c849777-0792-40bd-9be0-411c9a091e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ee01d8-00d9-47ff-963f-50d0bd08affa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbab20c-39a5-4594-84ed-2a11f60ecd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1140f006-4d11-4f5f-b047-8945408cb4ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9227855-b977-4f3b-aacd-047df186c081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fde1e43-9b62-4b75-a356-072977382fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42074ace-fa6c-4277-9a53-ca2f0d8ef116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "827367db-3cf4-4c91-8ea0-95d089ef3f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496a480-3c19-4768-aad7-d2b956e3cd35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59329c5-5410-4ddc-8fc4-aba65aaaea66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8d1ffe-6f35-4b8c-95fb-08ff0ea2d254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47917e8c-a97e-4ce0-ac5f-715a92cce9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "af9edae8-e2c5-405b-a024-fd3b5f148466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfdce7b-8753-4fed-887b-0f73507fd88c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5703452d-2473-4541-b52d-f4833697918c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df80cad7-3b11-4478-8e1d-4a7c0d4af1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c634e24a-8af8-4ea3-bdca-c9250294c16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "153ef759-9a95-4e16-8504-dff56e0f479e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07d89b2-0b3b-49ec-9084-18a48b2a3e35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45d344b-db24-41c8-b127-1a542b6c5ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea9962f-78d4-401c-8446-bfd778536257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a46119f-93b8-46b9-8379-3676f6c73f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5223ec9a-06eb-4c7a-9116-2a95cbb0ef4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f0ab35-337d-4bf4-b2f0-75082a29d80d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a425ba-9d6e-4429-9929-55f5c85694fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f883318-1a8c-4da1-be74-ce87838d27b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459c193c-46b8-438f-a096-2b8d1136bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb370719-35a5-42be-a63d-b1d155ef1622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfb3cf0-f39a-427b-ac9a-9a6322520036",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6e53ae-2be1-4ec4-aa23-20cbf4951d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20de4f5-7f77-4c38-a476-8f56573abbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cfe3f7-6f5f-4916-91e5-ac83aee21c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "834060d5-04a9-4162-9d00-3ec92168c56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a658f93-f988-4e40-bf98-6e281bf1319b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c635e54-23dd-49f3-982a-ac41c4422715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6763619-f43e-4055-b362-aca857d8816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c64441e-fea5-4f33-ad39-c2431f068100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55f1601-e64f-4533-840f-2d92551a9e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26402d8-0f16-4ddc-a883-0b80e5b1e8ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15cab91-3a84-4a10-8883-02a3a112796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fea2684-e123-434d-9d40-ebdbd308ef24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b2666a-0075-451a-9bf1-86002ea10ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a07bb833-de01-4e65-8e2b-de1fd8691211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163b1cfd-54b9-40a4-a602-86349b4d5de2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589833a7-73f3-44aa-b278-3fed2b85cf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f4c137-7221-4337-8897-10dc0f52b9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebe9695-b6d8-499a-a445-aa1699e0ca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00249bb4-2661-4146-9d4d-5771fdf173ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4f7a30-9ec6-40d7-b34f-f52088c924e4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1638a3b-49e5-45ac-9839-074a5c9343ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa4c3be-5f31-40df-befc-86a7219717b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7d00af-fbd0-44c6-bd63-3d4c4bac1e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0788965-893f-4d74-8164-2a9779ce7e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac53440-5287-4d91-a358-3c015be5369a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bdffa7-c7d7-40a2-b877-69b01ad37765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4549809f-8fdc-4481-b79d-7708865ac4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ee061-1e1a-4a38-865c-0b4d69edcb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0eb442-3c66-4468-988a-90ca9d3116b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2a8239-eec9-4ddd-938a-c57feefc3d96",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec4a7e5-d9fd-4d73-88f4-ac5bf0e4eebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9b19cf-3366-4c7c-b0ef-4a46913a654e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9604779-ab49-422e-897a-28ce6db36340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "665c887f-7589-4fe9-8272-0f2bd424c15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaae94e-80b3-427e-b8b9-47da557b88ee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129c85c4-c1fa-4620-b470-3554657673a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdf280e-9aad-4b85-825d-01c76e7070e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676a1714-2803-483e-8fab-7b3f420ae6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06318f8-b92a-4aad-a935-f14bc3886d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627958c5-052c-4e34-8c77-0e5a68c4ae5d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d18730-2be4-4ac4-8bc7-55d8019e7a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a731cd-0290-4769-b03e-c6064a620738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c05d337-c965-4560-b05f-f37cb00e4808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3e82de-41f4-4bce-a241-e1ed7011249c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd27123-4eae-4218-be03-ac6fb1bf59c2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed9a9b6-74e2-419e-b497-f5268122764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41326a59-992a-455a-bf0d-674f195bed6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47df7c1-b024-4dd8-a352-22002f9aeb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b83a7d0-e9d1-477e-96a5-8767bbdf6728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f1879c-c8b9-4acf-81cf-742da6903d59",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a59db1-f314-40b3-b49e-de43b43d6c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c9e37c-a186-467e-bf00-27c8212ffd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279b9f44-9f7c-49f1-8d9c-43e95a17d46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed68108d-2728-467b-b79d-1f91a36febca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beea803-af5f-4c49-8fa4-fb79323a88cc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58ee45e-da3f-4200-b531-c83196f29c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed86853-5bc5-4737-8e03-643beee5f1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d96a43-9c24-4d40-8a00-714002248db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab30d25-60d1-4757-91f3-73d3f2271d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f518b29-cf56-4e39-959f-097b7a7afc3a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefceaea-7882-4a5e-acc8-c0c883621b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639cc901-de9a-444d-aeec-d43ce1134af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f2eb14-1e19-439e-ae50-86b761ccb508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbd495a-adbc-4ea9-9cd7-555c0a6e5df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7044d2c1-5e03-4ab1-b1f6-5ef047603de9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc464bed-cb82-4ad2-b35e-659994a00510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d3f5f9-5dd0-413f-a90f-6a04fa7cca17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082b325c-2722-457f-b464-3638d029f42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f5dfa4-0f25-49a6-960a-0f642357c865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ab8f38-abc6-426c-97cc-a6e01d7f719c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcc81c8-3ed7-4e1b-915f-dc08fccdbc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01089b58-fb91-461a-bef0-d6f61481baf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1637a78f-13d9-48b8-9f24-c65306105d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "025a04db-1733-4fcf-9d25-e6d2bea55857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622c0f12-1abe-42de-8033-fdc97d050d2a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694a9e8f-a2f7-4faf-b798-1a509da1f2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365c8dcd-32e9-44e9-abd5-44a7af4b91a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01220b5b-656f-44eb-9a56-d40ef5a438ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93608a7b-de01-4bcf-9450-3735422b220a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b55ac4c-1994-460c-9eab-f17bf9ce6542",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda0be2-7a0a-4dee-a394-0e6fb2080c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfe3927-8b7f-4c7f-933c-c75b04746f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de199331-d953-4e8e-9031-0cad24fc0e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6e7755-68ac-4f39-8717-83770f910714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76db2fd1-8124-4717-9828-14db2fa94612",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51956e2-22d9-41cf-b146-789311f7bd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6925da4c-7962-473b-a6f7-41e6f9ed590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2a2141-a4c8-46fc-8d0b-2e4300410a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39d03299-e3a6-4029-9ca2-1ead442ff3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c0e893-bc36-47d3-a153-5203438eb4fb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12289cee-633c-4400-9404-610e9bb71010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed3af09-64ef-4abd-80e6-b62e4fa2f946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a05037-9102-4782-9cc7-d4d26f4631db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e7743c-8abf-40ad-9ddf-ffacf3cbf576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee29628-7130-405f-87de-0aba76841d5c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a15808-6a47-4874-ad15-e853f6e6ccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0579b506-6ed2-413a-9eaa-fe49fc8c46b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c5e5bd-992b-44f5-9fad-4d159426d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a26d0f3e-28f6-4183-a785-f7f521c19cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1669aed-777e-4ed9-9233-870e9593c9a4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb35f09-5ac4-45b3-b8fa-2a2b72562134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b0c547-e862-40c8-ace0-7c6aae53f0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69281b17-2cb5-4ef7-86d0-ef24268575ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9735d930-83c6-40cc-abf2-46618c4e52ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326cf432-ef3e-438b-ba3c-02353722e282",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e9bc66-4498-4b24-befe-ff8e9d5047ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983cff1e-2055-4a1a-a997-13085c84ec7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc818c2-617b-419c-93a3-eba86449e61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a74d7d-7f80-47ad-8f29-b4557a0e1306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fd5627-0538-4679-bcca-b0f7cbb0a2e4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b096b327-d722-4e31-a89c-914f1afefb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f29108-c51c-48ea-b985-c7d1391d0626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f68f5a3-8501-4473-98fb-c48df68b2b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36509d6-7358-4457-a1b3-74262165e144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54ec21f-12f7-4cf8-bfdd-0872e700ec70",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb36363a-1f74-4e6d-a98d-bc3fac3007fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19d447a-5790-4279-ac75-204ffeee2adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1559f1-0a72-408b-8798-c70b69c89ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff361a0-8beb-458e-b091-a5d10fd35bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb108b5-cb1b-4927-ad16-4704841400a7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855aa36d-6e52-481a-a51c-8c8de1f9b077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdfaad6-ddca-49c5-a7d1-147aa5844e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8c322b-c842-4399-a8fd-f97cd952dbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6eac4c-65fd-4c10-92bc-003808812fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7464c3a6-0c27-4073-aeff-cebf421380ce",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee63b02-e507-43af-9b8f-721e6623ccc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e9e1a9-5587-4d1c-a0bc-28354147f698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36afa8ab-6cf4-4ae0-af49-b63c3b5dd7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37d4ee67-86e4-46bb-941f-0eb4521e1d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efee53ff-c047-4b38-a2da-1f63bea8e5c3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fa0c14-f907-4134-a7fd-96c27094221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc870a2-be5f-4b87-956c-f35f6630e7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eab205-5415-49df-a0ca-970f582e05e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "611dd48b-4e52-4419-a2f9-231f123917de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c056ecb-97a1-4d0b-9471-e4d418174325",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b31b356-12ae-4af0-8dca-99a2dfc516a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4d4f8e-5290-4c5c-8d86-39ca28e263b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27af8462-7db7-4bab-b922-7c2e4aff6ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efdd8352-d650-40a1-8943-dd0959976d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef33568-40d8-4710-bb28-9618075bbb88",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad83f96-7064-4084-b904-75fac415f2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a7d83d-d8c3-4b61-85b3-6bb25b30f653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea711df-91f0-4491-8a24-f985b40bd8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "744c15ee-3b4b-4c3c-b3fb-b3c343c62ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6d8194-4c22-493f-9e39-6798fcba52bd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688213aa-c0a4-4623-b3cf-b7a599a51022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b813f3-1725-481a-8a76-fa41a551fc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e193008c-f140-4867-837b-4c2a196bd340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b286ca0-bef7-4659-b78a-8739d9e09eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113ae09-4b58-40ca-bd02-3a5f604221fe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26149eb3-6780-4043-baa2-00b9961f02b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "368df1c7-c9eb-4369-89de-d435568f9e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d3ea02-4ccd-4353-9377-772b11498f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6bd76e-3c74-48f2-9700-8a82f6634b63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7003bf54-7b49-423d-afb2-eed6f6653c2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e682807-b283-4a70-a8b2-c3aed9d53e29",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41028405-d5c7-4e92-804f-d98153c25d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac63a0ae-81cb-41cd-8e1c-16d897f47ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bed6b7-f79f-4cdd-8a55-23c4fa93ddff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cec28ecf-cb13-41e1-a0c9-b99336378f0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae886efa-4ced-4b1a-aa93-bf7c49f4c7af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4a9a945-41fe-4046-9f20-9c84eb6f05a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0b65687-47a3-4a6c-bb1f-62bb2e776c0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a02f32-f4b8-4c25-8396-b6a0f860bfb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bafe5447-a2b6-41b6-92b3-df144de28a61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1ba7787-fabe-4e63-8fec-9dbd0c34d569"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd45143d-a0e8-4c18-ad56-535f69e4c936",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4d7ef3c-7632-40e7-891c-87e17716c64b"
                }
              }
            ]
          },
          {
            "id": "25af435e-231b-481d-9509-4535fc45ebe2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81a46009-cdbb-4ef2-ad71-ff8c4045ea92",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f90eeac1-25e3-4040-bfec-facbcf746af1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47138ee0-effb-4a5e-bbf0-ca3c684bb899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bc091c26-2a80-4c08-959d-9b826dc4aea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11059280-28ea-4126-99d1-476274ce1f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff71cd04-67e9-4fcf-a3e5-780eaaae3995"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79cf3b63-cd9b-4b8c-9099-efb73da40458",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3861dcf-b393-4731-ad96-72f67ecf7ff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fe21c2e-45ab-4d06-9ddd-97e23d4c0fbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5a03371-2fde-4862-911a-6e1886b04f8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76915c73-c430-4540-9d24-0b333e814739"
                    }
                  }
                ]
              },
              {
                "id": "73f85658-28e6-4f4f-b533-3e113a649e17",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53f1c995-23f8-4a17-a724-a0e6b3c895f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36e6ec28-eed3-46f8-9a2a-54f88308e38e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015739cd-d78a-4402-b02f-f311d78e9b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f96c205-6ae4-4f2d-b978-15c2afbf948c"
                    }
                  }
                ]
              },
              {
                "id": "8b19afaa-7b35-4624-ac07-ca521067f83b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19b7e268-9e7d-49e5-ac23-7909b834bb68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "552f441b-30c5-4fb5-be4a-93cb79908749"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c64077af-5e28-4690-a911-e2c01fc73d61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9f6708c-5f84-4d09-8b71-c17d978af244"
                    }
                  }
                ]
              },
              {
                "id": "670b0628-c220-4810-82d4-a4bdd2636358",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb91d9e3-5584-4035-bb78-250ee239307e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "574e64c9-c082-4df3-a3d2-be0f66b88f47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36b4b84c-49ea-40a2-a2bd-d228890953d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b49e638b-a0e3-4c1b-8ad8-9a3eefaa1b54"
                    }
                  }
                ]
              },
              {
                "id": "af6d7691-e681-43aa-a34b-1d518ebdb26c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56c8edfd-fc6b-47c9-b001-5082f33c5b1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f341a50a-99d8-4832-9217-be4339fdb15e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a25599f2-5cae-45b4-8c0b-23aee95031ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f7fcd26c-c642-435c-a3cb-1dbcf3c3b06e"
                    }
                  }
                ]
              },
              {
                "id": "5b19337c-868d-48ef-9e10-836f69620797",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a63cd22f-e1c3-4d3f-93ca-872e3a53a5ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65d5b97d-764b-4c21-880c-e6b3c4cc71f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ec3efa6-5452-4cc7-b02c-1db53660f800",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1627eca8-f2e9-4269-83c3-9a2399b13c17"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dec05bfd-5d19-4b2d-8280-2733b3f15dfa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c16d287-1994-4a48-bbe0-d830f605dda6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "335db268-5b68-47f0-87ae-449c2c4db67a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18e62bf7-7223-4653-abd0-cbd58915966c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3bbc626-bcd4-484d-8fb7-2a7b9c3fa04a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "34cc1338-aa42-4ac7-b72a-33d950a8f47e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c9c1923-5691-4a00-98da-925b38c79c41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59ded626-4c9e-466f-b5cc-60acaa46f1e6"
            }
          }
        ]
      },
      {
        "id": "6375bfb4-fdae-4892-9d8a-61b8c20934b4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ae19efe-ccaf-4517-a6dc-c1dea7371ce3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8008f6a-ea89-4765-b2f2-6be35aac2b97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "818e1e93-96fe-4568-bdda-8257d47a0a11",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c91a3-a86f-4d9e-8e7f-d1bdd4d1ecee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72dd7e53-6576-4eb6-849e-de9d8a798c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47fcde8-9e5a-473c-8a45-015ea03f1621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8536e396-cd81-4d78-b5a2-b3d376b3a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d4a45-62b8-473f-9b68-32c33c2553ec",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f451e71-b048-47c5-abba-7bc142ac6295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fff85f-82ef-4627-ba41-964bd327c532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a898f558-dda9-4296-bb33-9f5c1d38a18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c44bb16-713c-4548-95d1-4f5adfbe75cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7a10d3-122f-4e4e-a241-a37c643639d9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8004ed26-7e99-4549-80e8-e782d19d2c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7392eb43-004f-42a3-8f57-00c790d51f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aa0a4c-47ae-4e70-9eaa-459681a4db09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcc5ccf-4989-40ce-9c34-5951b74a3c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42e3d44-cca8-4076-abc6-b3ea232cb376",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2770ab-3b44-424b-b64c-b3a1e5f8bdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe52e235-251f-4a14-bfc0-e24a1f40b606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f868a8-96ce-4216-b3e2-3c92b9fcdfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1bc563-8810-46c6-873f-dbf0e3fb9f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c72e035-c142-461b-b662-aaafb0f63943",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcf76e2-5a26-4a48-8947-8360a7c7228c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93faba0-d964-41fa-bc46-4d9d5997e6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45fd4ee-ff6f-4cf2-ac27-2d15b4a262a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a4b688-6ee2-4548-b69b-69954d550dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b7878-2e62-4921-96e1-eea7c2e964d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18905aa0-36cc-4a15-9441-173d5744a17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e22d98-353a-43a7-b7f2-8e169b6fa6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44296ca1-b639-496f-9d93-ac5aec650474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e184e1-d2fb-417c-a10a-3944ef226dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5edf95e-769f-4bc0-8b8c-e21cff494ed3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205a3f08-691b-46d6-899f-465c3f87dfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c39447-c814-4ab8-9197-69aca6d626cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b1b2e6-03b2-47c6-ace8-41d365a9b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f7c69c-e4c7-4d14-a695-df1c5daea333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf6a448-3ece-4452-a884-4a0dea9a6cac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115f0c99-90b1-4d30-a34b-293ee76c478c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d83a4f-c396-4140-8fb3-cf7bd92f0c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa22217-a704-49e8-bcad-779521c2e58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ec6adf-187b-4917-bbf1-108299f84ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5d0509-8196-4301-9d0d-8d156cc1fe45",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8c900e-85e4-476d-8d17-638e18d1578d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bb7b46-c1a5-4eb7-b7a3-837b99f6ac39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8222a99b-b3d1-4b38-991e-326a1a4af302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9949278-255e-47d5-9126-07ce266dc6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462b8a90-472f-4eb8-921a-01d937921c60",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa44edc-0325-43f6-bc49-eb8f8e4295dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25c301f-2e96-4b9c-a573-6c3aab3c4be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f809fa02-1172-4f0b-a74e-57fd7c2f83d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af823f4e-f118-4e9e-95af-0396f5354c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8772fd-41bd-446e-84f3-d92f25dbee29",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8808dcef-3c5e-458d-ac99-07370acb6bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9df9565-19e6-4e87-8f09-41388bc02b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbc5475-7619-4556-8b6c-c644f035100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e230810a-3ced-4f24-ad13-29e60ce45d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af8f10f-e0f2-435a-ac8e-9679d8bd7653",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c4c24e-faaf-4898-9b67-a5fc26e009fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6890642c-79a7-4abe-be62-ffe611b8882e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50582b15-2103-4626-ba4f-0f32e17dd893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64771773-aad8-4a96-bf80-203935eb4c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb00dd66-8b10-4dc6-98f7-768efcfba7ea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbbc550-2ca5-4013-9812-2ad7d1714799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1942f65-b0c7-4843-a66a-76ac791db556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449054a8-a2ee-4126-92cb-e42197dd7224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e49ba3-bf7c-448f-855f-4e5a3467efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f151f6-b46c-48f1-ba30-ef057767f0e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68187de5-bf8f-48b8-966f-1de993252b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b3c67-b898-4c21-b641-0eacd220e02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c0065c-799e-48bd-90a7-6292fdbc739f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ccd737-5748-47ef-9e21-b0fba01cde9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0cd05b-6f07-4888-be88-02e07b79844d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1061a5f-7a8d-4215-8faf-86e017bf5e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2966b26a-e055-4c93-b6ca-63a327912e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ce0408-e6d8-4226-9b6d-06a5916483da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b01174-f235-4d0c-b4e7-a2c893162191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec6c76e-7cb7-4967-ac55-d00d7d555f1a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ff93e3-c1bc-4e4d-867f-b651bde9ff72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9436035-84a3-4e75-992a-06f661b15acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e381491-ca32-4c4c-a160-446e9459be15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8037d7e7-efbf-4b17-b843-aff2c3aa12be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd30d83-f1f5-492d-af8b-5833a6beff2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba0148e-c362-427f-a337-3a9c06641736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd602637-ffee-4981-b868-a1d92934f129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c049c7-afc7-4e17-8602-44a6baa673c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5468b4b-0900-4746-82a3-850add1746c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1b3af6-8ffa-486d-b188-c2e300607045",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b49c07f-0d44-4239-bb64-2daef80f653a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1ef4c8-ba4f-44c9-8217-656adda71466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5475278-3efd-48c2-8685-bd52d21d0f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b46e24-76ed-47ab-8eb2-27cf70e5254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1234310-4fcc-48d9-8160-56e290a9bf49",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d40cb7f-4ee8-4533-8047-b32e67d2df56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de9cd22-0d4a-4179-854e-06a6688a7f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe3a792-8634-473d-b912-3450499749de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c28c8d8-a80e-40ef-9b52-6437adb8e96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ec41f8-814d-4adb-a235-835f9ba09a21",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250fb6f8-6687-4021-87c0-2b2c8e091371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827e688f-7bb2-482c-ab87-d1e385d8b5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e01598-772f-4a96-a17a-2ddbbecf42de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab79b88-df89-42a1-9e13-b6f3583994ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3420b4e-56ac-45d5-9558-5a9267eaee99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca9c9a9-643f-48e0-9b06-24934113fc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8eded5-de7d-4b12-bc0b-261d49225367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171399f8-74e3-45e0-9957-45299b375c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05b91a7-7819-4d6f-888f-57fd38564525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1961bf2f-1dfa-4309-bd53-c1c25f8b40f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b58f05-8e45-4c87-bcb6-11a94068fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ac8fe3-8278-4901-8a1b-b6bf2373acf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7161b13-d0fb-4bbc-a4f4-449a69aa5781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1548f8c-3489-4769-8bcd-590efab25ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9ee8e4-e8be-4b55-872b-f10794520915",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf155f2-1d4a-412e-9502-cff9d2c7b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379e7c38-3c15-4d72-91f6-e95af9e04ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64963e7-4a53-435c-9508-928e5889616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c09e99-bd2b-4129-b4ba-78564634364b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be00ce70-f05e-48c5-b7ad-5473f40a39f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1a3578-4625-41f2-893a-75c27a350c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0d068b-cb8a-40d2-a61b-f0a8921de609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c735652c-8b92-4352-bb6d-3aa94381497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44695995-9aeb-410a-94e9-6d5439bb2559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143e41d0-38f5-47a9-885c-398990c053f7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5285965a-834d-4a95-a491-f24553862832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8544c6bb-ae56-4836-b2fd-341d6abd833f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e027e3f5-cece-4d16-ac48-a0e3c9666f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec750978-8add-4eab-838f-13a0c9de99af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b19ef3e-c613-4a80-bb7d-1bbcb81a0957",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc807b38-dd3b-41d8-84f0-c42b9a4e5882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33730fb-6534-42c3-97fb-f62662334300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e48ae4-8e29-452c-9e51-412b87df552d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b629e4-8957-4b87-937c-546adfb2e999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f42c563-d5ea-4763-9ef3-05804475ef1e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b2eb89-6ec6-4019-9956-d086227a8ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f58cc6-54aa-44ea-83b7-fb460810a5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2c9102-128e-47ba-ad93-c00965e3e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff65db71-4970-41c4-875a-f0465537e025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b6b666-f0c5-48a8-998a-51e4e2f24a52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecafcf08-7ca5-420e-a4e4-9e9f4ed09acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7fde44-2c0d-468e-87ca-f4fefdade52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e647ab-b8a5-4662-adae-89b2321bbd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bc45f9-d693-4979-8c98-74be6d820ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb0aed0-982c-4c8a-b09f-cbf3ced6ce82",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dc3140-bb40-4108-870c-1ca3e4bb160a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedb3137-d3b6-4ad6-b232-3f53c1136a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6717f87a-9974-446d-83c6-87a8a82749ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcea6f4-b500-4704-9e35-918e09a3af7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdf0e45-938d-472a-9edb-d17b49c74b5e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9a7fd0-dcf0-4a47-8951-9db2a1aca4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29189df-643f-46a2-bafc-173ac91e9d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1729e8-780e-4917-b173-994b88d3ff68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73876cc2-6fd0-41bf-aebd-a7d71f334810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53e2ba2-c64e-4c39-9d94-3f89ca1cb5b5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99426a2-b95d-4b49-a405-33a625ebe381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8861f3d-4794-4488-9438-994e81f3381d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7f1424-c2e8-4534-a1ac-86f259528a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b2a0eb-e4e0-419f-8a23-1bd673b60ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f39eb69-5621-4ca5-9ee9-5dc2ade51212",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb73c614-fd36-4489-96cc-5308e2c957ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf68294-1797-47ee-b76e-0f64a6723096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2658653-e6dc-46a4-a05e-3d4de0c28673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab617924-2982-41d7-ae47-c3afd46dfdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e53e01-fd34-4a6c-9352-c233e1f34b91",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d3ed16-12c8-43b5-bd8b-60565c2e2210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a18a5b6-47a6-437c-9eaa-9a6acc4e4e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b3cd55-b0d9-4493-8439-866f0be37b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15b84a19-91e0-4f41-8f9b-857b19a22cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5266b2-b882-4dfb-ad98-5b6b0ee6cd84",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66571bbd-f2f8-4d47-a10c-030b2a0521df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19d8da3-2c40-4d66-b593-99681cc87a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f435c5f-3045-4ea8-ad1c-96b4f3237c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ed6fd4-6fcf-4e88-a19f-60464fcef406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4f695d-c5bf-4593-83e0-12a5147466a7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975e81e4-69d5-4f27-a041-a03b9c11c2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c121d0-c251-49e8-98f9-8e1fd27acbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c4abef-ac2b-4d10-9c20-393c07c54604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee77709-52a3-4706-9d3a-5dc0d34f4c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df188ca-025b-439e-8fc3-68a5884370f7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f1704c-29bc-4ab9-a1d0-5e59b0eae5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c38820-480a-4e51-9940-f81e489c6332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cea6be-1bee-43c5-9a36-d2f705790998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ee0773-428d-46a5-82eb-d9862e941a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638f6cb-fb2f-498d-8fa7-7d5ff94466b0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173d4e1e-cdb1-4d1f-900b-298730369924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca1104c-e3ef-4385-b296-84744565ae2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab013fbc-7648-4715-8b4d-8e0fc14732fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80050ef6-0caf-4e99-be98-5266504e8314"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "242717a2-99a0-4240-ba81-4b4f2518880b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23bb16ad-422e-4dc4-98ca-8a3c436cd05b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272960e7-c496-451c-8b08-d3a16d96962b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef1ef7d-797b-45c5-82f7-f758ec9f3ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d045f172-889c-4776-89a6-722688b04d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5572cb43-dec3-4ed7-b105-e7c2aec5cb6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1ea49b5-2c10-4cd2-b290-1e90ad1d8b9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18945a9c-1a93-499b-8268-19bb33bdf7c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceef1bad-0567-40f3-bf6c-7ae8b7f58b6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a24d03dd-b880-4733-8e69-9d7c0dd3108b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7db130f1-3d61-423f-b8c7-c1cb70d7b8a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59d7501f-9153-48e7-b840-a295ae362227"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4508aea3-f829-4ed3-af12-a7c1905f39e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1621665-fbf3-405c-9408-d14c75220360"
            }
          }
        ]
      },
      {
        "id": "166df060-01ea-4182-9f55-bde3d752948f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f6f9271b-8974-410c-92bd-9316be8af146",
            "name": "Negative Testing",
            "item": [
              {
                "id": "190d773a-4af7-4759-bb28-1ab23d33dee6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7778b413-19b9-49cc-ab1d-ca95cec6b17d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e288f0d0-fb8c-4596-a335-28849307fa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dd2482-3bf7-4cc1-a627-a28c04a04f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9271ac1a-f13e-46db-b226-0a0af55022d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6b3717-34a0-4b12-b5b2-4079e9945b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bb8980-dc9e-4836-b47e-8817fc801123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d261225-f1ad-40e0-9397-14b79a0e4b42",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303b9a51-a2ec-4cec-ac64-4c3d2c23d083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e0fd4e-109d-47c0-9898-44ac070b7b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05ada3e-523b-4ec4-a562-ebeba9118216",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e0e52c-e467-4b75-babd-406461d6d3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5903f6cb-93ff-454b-bdf1-b2c229fdc3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dede07f-9ad3-4753-b371-cf5289e625c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a784e9e-0d93-4e1d-b81b-0555f42ef0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1350795-82ec-4151-b476-a8fb6440ff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5080a2f4-4e35-4f63-bf9c-531a48f16601",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0da96d9-6f75-462d-a625-80304d4258c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86702780-3268-43c4-9116-ecfc3e64d0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a666a4-ba5c-4f41-94ef-51f924712d8d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf1f3b4-c129-48d7-8813-f2a552f60b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49daf012-2f62-4d87-879d-327dc499ee98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb8714a-a75e-4dd4-901b-bf7155c3d424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a32f24-64c0-4188-9325-fe6d7a56790f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c66231-fd1d-4ba9-b646-48bd18c81656",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94849f55-0646-4e48-962b-f859157210d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c98dd2-8f10-4d54-8abe-34cb8b9f5a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaedc15-260c-43d6-b7fa-8d8de171ba4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6721f6a4-471e-48ec-a138-8faaa3931f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afea4453-63fc-4907-b533-04bc515899ab",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37eed4c-5898-418c-ba33-982266e7fd45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36298611-bcae-41be-a3d8-b520592bb12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0637f7-e004-42ec-9a71-13cd198b0d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bedf175-bb0e-4e03-95c9-556b874a1da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d103c5-488b-45f5-82cd-8b1702df4d2b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f47e4d4-e6e8-4fda-b172-b7a3ff2b63a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505a0b4e-3066-47e1-a4b5-f59789f8f5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71dd703-257a-47f7-962a-a877aae62308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72992aae-c8bc-4576-be87-69009f6a4cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae839c0a-2ee6-4fd7-a0fe-17333edae42f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f826ec90-f02d-4993-a0f1-c9f740a34f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcd82e7-49ab-41a0-9bee-a5fc5831cc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6613a099-ca0d-4a2e-b859-ed4ab56680e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b33255e-0b8b-4f0d-bcd1-6bcb97868cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3355324b-9d63-430d-8fd9-965e8628f201",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8325bb51-8d9a-4099-aaa9-e0e6f2b1e509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e70d83-ca24-42dc-a016-14f77d2857b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1b758a-fe26-40eb-bba5-17c21a3732e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ac0ab0-6824-4a84-a440-8e22c543d75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c117ab-ab39-4d58-ae02-a0152b26f481",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08eec05-5213-4594-89d9-70865df93238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da980970-49b9-4925-a97f-6f89e9ca11e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fe9a0d-9660-44db-b476-ba3fe5505081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18da3790-6762-4104-a482-cf3922c338d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705ac437-4632-45ee-92b1-8cea557a245d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c4542b-983b-4cf0-a863-8e89e2e89e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0701054b-6943-461d-a8eb-5879c40c793b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eebdd52-49b4-4b32-95f1-731af1c670cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b810b9-80e5-4608-9c49-6ec65a5d8ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a710ad0d-5ce1-4957-835c-1564c1ca79f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2899d8a6-7c48-45c1-a9a3-19e24b2020a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d43bb6f8-f648-4c7b-995a-a61620d71c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffdbe32-009d-48ec-939d-9a4e42a78490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a3195b-0a4f-4317-b7ac-3f3ae100a04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a2b2c2-8c70-4ac8-81f6-33509b6a16c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd0adbc-deda-48ca-86aa-358eb0b38758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c61b0e54-92cc-4cdc-9e33-9b24abab7ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bc7883-3d33-4e8a-91c6-27add414cef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d436ab52-810b-42ed-9c69-3e37464e690b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cacbf6-eade-46c9-a32b-8b00b7017195",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06785b9-0eb8-405d-bf2a-6ab14a1f3dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4508e3-cd52-4657-b362-0ac2d5a3189e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf4fb73-8b12-4ee2-93f0-20685e022d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678402bb-6ad9-441b-8e92-a719ef724781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b804f57-6eab-4904-8ad4-8fca0506b85e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8044c1f-f3c2-4c8b-8c2b-6b74d855c067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4fa57b-4bac-4a64-a04b-5c8a83110600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3390f6b5-67fe-4066-a3af-2b920b0ddd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b5e28f-feb6-44bb-b755-741d41fe3342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230cc61a-51da-4b90-a911-246e07f5fc66",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525ee3c6-229a-4561-99d9-80b097deeb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5f9d45-023d-4a9f-a351-9366c183fbb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c475ad59-a950-4320-86d2-84a1e0506794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a06ccd-560a-4fb9-9eb1-c00fb32cf88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260cc80-97ff-4255-b4d2-73ae9ded235a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5623aa3-fbf4-41fd-b6ef-fb8aadf9a454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc896e48-733a-4e3c-af59-5bbc491b4c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e89a38e-0eb5-4013-bc21-892841bfbf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8331ec8b-efd8-42f5-af11-b1b9b901a748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3e34df-d4c7-4014-b3e2-1647b30b77aa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa67a76-4b7e-434d-9e10-ceeba79a2113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c08047-86e8-4aa5-a355-77a63237486c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff9811c-aca8-4fe7-b7d5-c598be65152e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7196dabb-411e-462a-852e-fbf6d9beaf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fa3357-a716-494a-9fe1-69e911762980",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0741a06c-7278-4a2b-afa6-860c6609b967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845d2879-3d19-4358-8dad-a4aa1007816d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4492c1-f234-45d4-9c59-ef782fa11130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8165326f-647f-497b-98e4-2c05da1b9de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6790ba-7489-421e-a702-5d04ff2cc556",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfcc87a-57f9-4e68-8483-50d046bc21ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51abc6a4-6175-4497-aaea-565750a6b2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b9001b-5996-4f89-af35-c4fd168418be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962ecbfb-0b3d-4a32-a7ff-110d4f24183c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cc630f-76b6-444b-9765-a0573e51e1d1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83da33d-c37a-4c53-b457-0700f0cca84e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715cbc1f-7de8-4906-ab66-c3ad88767bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ed26f1-ab9e-43be-988b-f6808e126cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510c720c-aea0-4a2d-9911-e719f590bc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0056c64-e6fb-468c-be70-dbac0b81ec62",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4d5840-52fb-4e94-826d-eb36b6fdef62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63016706-3b66-4ec8-978c-bbdce05d5285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cca0aa-2f26-4d2c-bb3e-780c51e4bde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedbebfc-9f41-458a-9cdc-6f51ad3a8002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b859d2f8-f33f-44df-a6ad-d85b59ff242d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030fe454-6827-47b3-8393-d83c8f4aa203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a490fa1-85a5-404d-aeaa-b97bdb9c03e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ce5fa2-ca3d-406e-b8bb-c4854918eaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc915ac3-3efe-4f55-8d26-c4a7ff895370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef82798b-8912-46cb-bd64-788c65e6ef70",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee84648-457f-4419-988f-0151fe781295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7369f184-d6b5-4f9c-8fce-00e0df38e045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d12d687-aa02-4cf2-90be-2145ac888567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3d73dd-1802-425e-8508-e889361b4e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efbed94-caf3-4e19-b9d2-3f595c14e5d3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c50b2a4-68a0-44b5-a51d-fb1e61dfed67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018fbebc-55fe-47d0-a0f1-fc97e011cf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1defe8b-59da-4d94-a9c0-e4e0b6d6c4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8388c646-c1a8-416d-aaaf-5054c7bb6e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f3c9d2-5ea1-433d-b91e-eba5bce7184b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8992dba8-f19d-4b11-a53d-c5dd368f8c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e704cf98-76fd-4a3d-92bc-8baed2812029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f1eb4d-34ca-4aa3-9c37-add0e9006342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d877af53-f9cf-4b6a-9252-cc34152e5f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d4c35a-c7fa-49d0-9d06-65b4e3e3d425",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ef8c02-2688-4470-9ef9-7ed2cce56b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416d7c11-24be-4625-890c-6acf338c4b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6474761c-e13e-4142-8974-cb350b69f88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989306c3-b70d-466a-9bb2-17e859afcf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03e738-d647-40c0-b0a1-bd703c03e8c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0724f6-7d42-49cd-978c-7cccbb62fe40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a03324e-946a-41a2-9107-50edb3440c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdef745-b5b5-49eb-be09-828f82dc9c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1c7e02-4e7a-4f50-a18c-86553bcdb1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fe7852-4ab6-4615-8996-bda583391d00",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb98abbe-9412-4936-9244-5e25b1891c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe154cd8-1856-43d9-b303-e78b754cffe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a094d2-e24d-4f6c-9666-5565acdf8dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8193ce-2bb7-4291-a45e-0c80c954de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04111c10-4ffe-4154-844a-523df8cb92b8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b773285b-b52f-49aa-a4a1-f3289be4d036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8127ff0-791e-4b55-a60a-9837712f39c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b758e6-9dc5-432a-82cf-e9474cc80d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a011496f-8a82-453d-b959-e8381632abc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882c7676-2918-4e07-b020-d408e5bb0ade",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3176885e-909f-4c69-b14f-fd35ba84b027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ef805c-b44c-4b6e-b271-da88bc89cdd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a575bfe-0bda-45f4-8ce2-e8ca86b64c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8775186-255b-4a4f-9e0f-ff5c3c864704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1decaf2f-884f-4058-aa09-ff646f9b00a1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b22155-024b-4bd4-99b3-5f818e1c04bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3d572d-6fcf-483f-b226-1cd6c89426f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa23275-0ca8-4f38-8796-0c6f187ce968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26420a16-35a7-41c2-8c18-29b812dac070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b99e8b-75b9-4d38-9066-2cf0c167d1bb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f466bffd-4c29-4ad1-9ba9-635032e98780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f773800-1d18-4ab0-96d7-a7e61b1e730c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec90a71-ea45-402b-8ee3-601fff9f46b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdaad78-a430-4385-8ea6-4884c885797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511f1db2-48d5-4ceb-9a37-73ba081ff439",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e547a72-4a83-4fb2-8b75-03e2c6b8127e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b189fd-90b8-4c73-89e4-52987a105ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e992d2e-7b99-494e-96d6-1ab455cf2956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83048ad9-7c68-414f-8cf1-a880dbcbae17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c6f6a5-f244-4505-9b23-c17ff674b928",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f38a0d3-2775-413c-b335-73061049e6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6332eea2-eadd-45bf-990e-bee3ac1a42c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f53770d-29e6-4c3b-aaae-dadde03fb5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4ee6e1-5ffd-4304-a85a-a4ca4de95b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb89432a-f5a9-4ee0-a56a-c7198c1613ec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af2ce7-76ee-46aa-abcb-a5295a38fcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79331e8-ded1-4106-b49d-5a250c188fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194f2a99-d6a3-448f-b9ce-574f7e526603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7e911c-b7ce-46d6-bc22-130e82fde552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d24128-3d08-4af7-bbc7-9047982c276f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e7fa19-b0ea-4e33-b442-a7a8bf9ed02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02dacfe-b01b-4e00-9db0-b077a580a94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f901b0-3830-49ac-a6ad-4ce6294380a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4c14ed-84e9-48c2-af8a-5df20fead510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eb69cd-34c2-485e-87d5-e49cf9c3fa78",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0d8e5b-e679-49cf-a2ba-97de4514e3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f3b6af-1ce6-494d-8512-2b763dc59337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678fc59e-0ab0-45e2-93b7-44c370f380ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e347faf8-851e-422e-b81c-8446cb4864c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04b78bf-97f3-4bc8-b781-da8d6e25d115",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f88120-9376-43e0-b625-70184d7b5275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fc99f1-949c-44d4-96bc-ebb792c32bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121335d0-ddae-4295-aca5-31ba47ab403c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeafbc5-d0de-4bef-a1b9-430a9d02417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987a2da8-7a0f-4e6a-b02d-6de2d140ff40",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6a6016-1f18-42f2-a147-9a2533294e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb73139-5b88-48b7-9329-c94f3968e5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4211e74-e140-47db-8a70-28f7e6c305ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1b0913-bacd-4046-909d-912e4c9065b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acdc7c7-6732-49c0-8907-305e8cd5f616",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a02a6a6-4aaf-4704-99f9-3a51285dd59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89be6e0e-b773-4a7d-96d2-9c2797fae6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f679fe6-5ebf-47d9-b803-b6a3a3216067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd74cd07-752e-498c-b6c0-664f0ba4c128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b36922-e4eb-493a-9497-f3922bf93984",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49e76a1-d467-4b43-bd56-4e2601cb47ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a0b08e-0731-4633-99c8-608cbe6bc8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281c108e-2ff5-41e9-8542-b5233143cc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d7d0d3-a743-4896-8089-679e82ce8b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2334e86b-5172-46dd-912f-13a8bdd1353d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9740be2-792f-4061-894d-9062667974bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd1c3a6-5552-4ba6-ae4c-d8e4ad397a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dd56b5-9ff2-4c2b-990d-5ebfbd6c6f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fd491c-8aca-49fd-8eb4-2118738fc97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ebc2ea-5102-4ac3-b6a6-e3958791bbe8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9d5c92-945f-4c4c-a6c4-3559462ed47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df71a3fa-f279-48d6-8220-fbf19b5449d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b625f-f90b-46a9-ba15-a58c834b7c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc15c3b-ec76-4505-a0eb-9ad88500c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aba4a0c-e023-4ab6-b44f-6ff0661d3d92",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151271ba-078e-4651-9553-e0f491fc37f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c00e51-9f07-4036-8c0c-51c070eaaa3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf09420-2257-41cf-8228-82bbf4dbdbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc89a92-c252-4fa9-80c0-aa75490c6af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d899b80-490d-4225-84db-b5011f6b867a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d9a303-147a-475f-b7ab-8ecfdcc99fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6370afe2-027d-4d3f-95f6-69321343af9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2272fae-056e-4ee2-98fa-70b7bbf6c641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969be77d-2814-48fc-a95d-e399af791f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3703503-e75d-45b7-b192-d48ad0ca2ee5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccda715a-cce3-4a8e-8e77-c2a820088959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa756c52-c7f2-49b2-b016-e1dd3f88acda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed50026c-3401-4440-ae5e-4973fc09a2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141a34d5-dd7a-409f-b209-0f67f78222a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87740cf-2d09-4a37-abcb-a900c086b29d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21c2933-6a61-4e45-9c57-6ba8bb9277e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e7bf69-11d8-4f28-996e-8b42c8ae26b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f585f757-31f6-437c-9eba-0350856348a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae509f6d-a2b1-4af2-9436-bfab082a2acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e513598a-963f-4a4f-b7ea-099816320e31",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e322980-63d2-4189-9b9e-52615586e765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0632c51b-032d-49e5-af87-fdda182e6fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5503807-b3e3-4802-9c19-05c623121d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9447f980-da29-4e5b-a3d7-f96e8d3727d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8d94f9-2956-4386-8887-6323f83d31b2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac40ef13-4d52-4996-8e4c-5abd2ccb5714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb713347-fc26-4be8-be85-d7a66c443e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a277f92b-1189-466d-a1e6-4f69b93fad23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86e987a-59b6-4df8-9321-1144020feb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e6640d-a104-4ef6-95e9-72f7ac11bc0d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3c6454-ae5d-4c25-90e0-b6233c4a8ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb447e5-eafb-4fde-bad8-60545e8c6bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd2fc94-290f-4ffc-aa10-227937b5ce0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8732e296-6cc1-4814-b8a5-ff706d39c633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfa5ce7-d199-4a41-ba71-4e311924198d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37f8773-b481-47c4-bcea-3c2cec7a912a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40521d5e-d2a3-4735-8715-cb28f9c42c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a50469-5ea4-4fb7-a3e0-0157d5f247f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3de107a-af98-45db-8cd5-53fbf09c6ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b4ea72-640d-494e-b935-d89f04d90e85",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3014164-c54f-45bb-abae-9fe564da5c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec527a4-46e0-41ee-902c-2136b99fda83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12313964-e09d-4d6e-af26-6c8dea29e662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f0a285-e985-4534-b24c-4c87ab50d2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e1d1b1-7f90-4771-875b-c2140dcb35b3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64440cfd-5625-4812-a34d-9b2917bde0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ecdf42-3e76-4e2a-a3b3-d7851dbd5175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d935bd81-16f3-4cda-b638-19158b4c63bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182ba7a8-2800-4a73-ba53-0b179053ee1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090ada32-4c8d-4a2f-a644-dfde227dbd2a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a3623a-6894-437d-a564-f2a369ab25fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bcd78b-8b7f-42e2-977f-a2e112d3fcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1c2181-eb6e-4d30-9134-dc14b5001c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2928feef-36cf-42e3-ab77-fbbf11430dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8702b7-8d01-423b-b1df-d0d7f74ca818",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f56803d-c17b-4dfb-8fd8-569f53c64407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beef22da-ca9c-48ae-b226-2d103481124f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da6e5d-fb0a-4542-9a99-217d3a9d1fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7ad987-3212-414c-b6f9-cafdc8bfe5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e925a921-10dd-41a1-af58-4fe3a104ac6d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d433a323-689b-4a3b-8e41-24e79693a1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db8cb69-ac49-4cb3-8f4c-15f0861108d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f16a5bd-6938-4777-9e2f-59b4ecfb41cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a459e74-b827-4184-8972-f7e3b219d6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710470b5-61df-4b37-8d66-553715f93d8d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1093e4c6-cfa0-4390-b32d-e201e6399f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9f95e1-a589-4636-931b-8dd8a6b749e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce78da8-f206-40f7-a68d-6cc717be5a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e49d3f2-caf5-48a0-a3dc-97685015ba2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e48d6e-71c6-4a03-b88f-f89fb019fb5f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2195af91-c845-4e9f-9641-aac5e35df24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b513258-ead8-485b-9872-2795a72aaa67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a96c9-6f41-4932-88fb-50d59270f136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6caa8c-c317-4a3c-b3f3-6885450709a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b60d24e-dcee-4da6-9835-1a0e9d7b280e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9ff46d-28fe-4aa1-af8a-004fa8e11512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0845ca-a5a7-46a4-acc8-076474e8bb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed12f8fa-7999-46be-b068-1e13ea3269bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baaf622-33b5-4c17-907e-160a3d877c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6159300-27f3-4733-9b16-3e03cec3e982",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52a3fe5-b008-4a1d-a462-f173dca3e771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c82a356-ccf1-4eaa-a984-d0d9658ede49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f481ede8-7caa-4ccf-bda1-fa6b2c333b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4681eade-da55-4986-9a49-0806fe672bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2ef26e-bafb-4090-86cc-5b272a5a52f4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddfeb49-dc47-440d-930e-50c8f2d565b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10307345-fc16-46b6-9c23-fbee28bd8017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945b3731-6038-4d8d-8ea0-933cc434ad22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489f7f54-a486-4c52-bda6-1c1aa880512f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ffcf10-bdd2-4a5b-9ee2-a758da77cb7a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cb9831-52a7-43b2-b788-6acc7c35ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7eadc2e-dd27-4444-accb-6d65faf49f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d894af4-1ff2-484a-9ff5-1e90847d51e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93daa72-e677-4441-a699-42426e9739c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86764ed-8309-437e-aad2-bd7dff912361",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2932f9da-bbc1-4538-87fa-68f0e2a6d3cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872f0f87-49b7-4a0f-972f-201c1b625c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f1153c-d9ff-453c-bc75-f81d491f0cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fd6a4e-3661-4a95-b718-dba239e935de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00656837-5471-494d-a803-0cb3af8359d9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fa60d0-1294-4611-9729-000b7abd2ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a19c02eb-9884-4afb-a7e3-48ad7720bf0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6418e259-ace9-4a98-bc2b-0ac33319f8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af409b66-4fa7-40d5-a6bb-d3dc3b2f36b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a61d08-0b38-4507-98c9-e7921c22086f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a514de13-e7f5-4c9b-b29c-46a7d79449ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa529571-8eca-4cde-933e-4b4d7037f884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c088f16a-2a59-4aa4-812f-2be53f3cc6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e0159a-20a9-414b-a33f-216854f47cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fd297a-2f52-47c8-b65d-74f606c7da46",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3887a3-a986-49d0-804c-963ec7f46b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ce8748-4bee-4e2d-9d8a-17eb173f014f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be499b8f-0b50-406d-8f1a-838458a548f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666de6e3-3089-44dd-8866-eb222fc44b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc3aead-edb1-486b-8e58-031815e515b0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dfc356-158e-4572-9016-abd6ae5a87d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70bebd99-8a1f-4942-8995-06e62cd956b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374667d2-c000-4994-a6e5-91df40d13f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f6f842-ba52-48b4-bfb9-dc29ef4fba4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af82be63-6060-4aab-81bb-f932b11fb0bb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adfc59e-7d6b-49e0-83e2-3d0441cc314b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df60de83-45b4-46c7-9487-9b50a8f7e6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d9ca4c-7aaf-41b8-b9b2-6b291f945144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f331d8a6-d30f-436c-95f0-cd02a2064d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68683da-346e-4c82-a8a9-49f7f082406b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48e5db2-ac3d-44cb-a8b3-5c672ef9b0c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b8d3db-fd0b-4387-88dd-2178396e8a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b999781-e690-498d-b876-90a98f18e62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2397920-4305-4efc-9541-516f632b95fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0779d881-6fc8-4163-8673-b94cd706db4a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5278ef83-de72-413d-a088-291982002073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19feefd2-12d9-4f22-a343-542915996f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad320eb-3fb2-4ec6-a8c3-60659d9c785e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf70f0cf-1224-4c63-8663-8de4e2b8321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8bd43c-51ce-4765-89de-cd90e5862977",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d670022-cb10-41ed-8782-69350e727528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd73b15-a38b-484b-8ba1-3cefff1c11b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a718ce-3c46-4d02-98e7-d75b04eb429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32590ac3-e224-4786-9b9a-dc073513199e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfda8ab-04f6-4f8e-9d19-1233ec2a7120",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd88871e-4f59-440f-abb3-fadcdbb373fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2061faa9-aca9-4878-b3be-a7f2ca3c304b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a4d66c-15d6-4999-8ce6-5756074c58d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d41623d-af2d-40c2-b7c2-5eaadc0b3abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6ccb9a-3786-4af3-bf8d-42cd35e0e752",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e08bb04-3b30-44b9-b04a-7da5d6c83ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef817536-311e-4a46-b0b3-421d36752210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28515351-a5d4-47bc-ae8c-17fb123ea73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac91ba6-b1d3-43e8-a43d-b41d1afb194e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d08aef8-9315-46af-bf93-23edd44dcf9e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976392ea-7ecf-4678-99d4-f2df4978257b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b642ae1-10cc-4595-9c6f-e6d97299ed82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d18fe2-22da-4f3a-a184-cf7623db582c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f4a1e3-102c-4ffd-b6d0-78fba150ae78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f711539f-4c1c-4567-859a-df1f59c81169",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7384e855-83e1-4ee4-a912-f72609c7f8e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cab49f6-5a42-4f13-a27c-105d178a99f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33226cfa-dd04-477d-b448-3e3f730e0495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f6b6d7-f12e-4d4f-b41b-a3158242e8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db186b5f-1088-43d0-ba00-9def9f063a16",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b714057c-5448-40aa-b8db-0fcfbaeb3574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384a1089-3897-40ca-971e-bce286347f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872499f4-28d0-4f2f-82a1-8e29ba28fc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4864e8-8c01-4211-835b-249bb4ce9820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1ca946-ffd0-48cd-9b63-3d99d0eba51a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4599cf61-a028-4c0d-ad98-384d5052475f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d00272d-35f3-4097-aec8-14078c91e5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0fb8f8-ee38-4b42-a934-fffe16ff372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38646667-3f68-43a2-be4f-92745609eb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbff7a2-30ba-4363-9b58-e7d4ec71f917",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b7252-67a4-403e-8404-774fb608d04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d7d6f4-4af7-4cca-81ba-9c137c5c3081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a542ca2-3d41-4ee0-8642-ab5a229c1931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75afc09f-1dfc-4f36-b566-4fc027e3f76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a956e1-d0b9-4739-8b08-e71bd07b632d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103e395b-43cd-4039-801b-c66d46b68607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f80961-7cc1-48ef-8847-d1c4fe7b2301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13ae2a2-daf7-46c2-9b77-aa080b7dd9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b919a6cb-9d1b-49ad-a4b4-8730040ffb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df90fa2b-5b2e-481d-89a1-df33a7e3c8d5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e486ed2-98c1-4be1-a34c-97bc60b8ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ab87d0-ec13-4d2b-ab3f-ddb9abce4108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b6b438-70ce-4083-8362-f4e2b8a3d147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c2bbe2-9f33-41ea-8d73-7c32b2243c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb056fe-b6d4-4e76-bdc8-ec59f24c31ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c3b7dc-77f7-4be4-9c77-7ec8ec76a4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd2dda8-ebd1-4205-9ae6-40855d485092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40ccb4-5713-4a98-9635-b2538afb5a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51b870f-9f16-4e4a-9a0a-4113f0fee5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba63fc4-b49e-4476-b5b2-f9c83b06db33",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f379b02f-fefc-458d-84a1-85a29fa99d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ce9a59-6374-4bc1-a859-6cf6216e91fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcbb7cc-6721-4b0a-b6ef-2b88f1b98369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8225db75-8165-4482-9233-98ea2d75704e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7f273e-fcc3-4027-8064-691b15faa13d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac117cc2-87cf-4436-bce2-f395a760a903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f20558-942c-4800-994c-40bd4663c977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0b3ef9-4c06-4602-be20-98e3d1081f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6c76fc-9e71-409b-852c-adadee9ca32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa7a00d-e8fb-4356-9ac9-f412938d7ac9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fdf67c-c204-48c7-9325-8628c358992c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f15433c-1c7d-4883-a6fc-cdd6f9957145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1630e95-f0fb-4139-a465-c58476f8def7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2545b51-4fc3-442b-9e55-f2d57db32e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adecd8c7-8f82-4b9f-a4a2-61a10cafb271",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39723f7-ca88-4e99-aa2b-487e2f11e257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ff8509-5501-44fc-9383-db9b2bf119d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a9cdd8-e5d0-426c-bd18-bf77ecda6cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32958baa-5168-44e0-bef9-2a9de4ffb614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf16af5f-249b-41fc-921d-604da716fd47",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afd13fa-bf86-47f5-b93b-81e211637e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8bf6400-23a1-4da1-8ff7-555bff0ba487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9625180-905b-4101-a927-384ea95cdf60",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78156df5-412b-4373-a271-3ad50ee75378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed985649-779e-4f7d-8a22-caa4268c1329",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55b120d-3152-4081-ab2f-67f0cda23171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b2975fc-cd7f-41b9-a642-bf4a6bc22f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53e381f-ede7-46e4-8092-7399782cf624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb4dc7a-f530-4c22-a180-a927411cc724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429269ee-e4ce-494b-912b-e93a47eca08d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b8195f-12de-456a-9e95-3ffd242ee7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353d0a8d-8f42-438a-803a-2dcf85c71332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a42538-96cc-4043-93b2-36eac5f90a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d78063-67ba-4277-9758-236a7a1d208b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fe54bc-23b8-421f-99e6-31890cf4bfc2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ac8a5c-b1a4-442f-998e-63fab6f4b938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5ec0df-1bb6-40ab-8e3e-d697dde95d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6869106-6c57-4909-890f-86260eac0951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669ec51b-ac1d-4216-b836-cdcc12c4043e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d669bb2-a790-44bf-af19-3166d08cdf66",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19461d78-092f-4717-9d3d-321b5abca852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d995914-6f3a-41b0-a723-eb0c214d192c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae43754-1ef5-42f7-b6da-82ea4d7abd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e25caec-3c17-4f13-a725-57263af6205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b319c335-ea26-4172-9ebe-560d88851b17",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdf900f-351d-4707-8071-12a5827c1f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d10f879-4fd9-4bc5-ae69-d1c4a545d964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f886f7bb-625b-4c43-add8-95231e943e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b76f6c6-7c58-4e61-8e19-4e1ac3e635b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09071f82-13be-4333-acf7-9ec5d2205dbd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2ce990-5d62-49d0-96ec-f874516afbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b10f10-ba83-4bf3-9773-325d37451142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb28061e-8aa3-4e07-bb85-42e0f1dc304e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c9f899-69f9-44dc-a38b-1bba70e1b9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489ebaeb-e484-491c-8886-753d0625e9ed",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce109e-3705-43ae-9252-af56cd2cae27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86d0d86-6f98-4963-95d9-6fec294c44fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d697864f-6b06-47a2-abe6-ab997e943006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abad9a22-42f3-4aa9-bc66-47f34c055242"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c5bf059-42b7-438f-aa98-63ccbcd79f57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39c6d0a1-19c0-4835-9098-a666b1bb6b18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6ac650-4685-4017-8b01-3eb0ee017964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb246a96-693d-462d-98b9-4b7d3a830012"
                    }
                  }
                ]
              },
              {
                "id": "8ab6b5c3-d6b2-40ee-a3f5-9916dea74cba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffdfd74d-5f37-40a2-85ae-d77ee77c40be",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb02da6-3d58-4e2c-81a4-af46621b031d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "07fae3a1-711e-4dfa-9cfc-ff6cc55ef0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c49072-2657-4e5f-8aaa-3f407884b015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7931aac-4afa-4ed8-ba83-a87926e1ba41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a597e70-72dd-4df0-9511-3441e5d9d7c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4dff7e2-01af-4d47-aed9-567d7509bab6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b20936ef-06ed-4920-8692-bee96f199d0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e37a7e67-1aa2-4d84-96d3-b73ae2a298e9"
                    }
                  }
                ]
              },
              {
                "id": "d633df5d-ab48-463a-9a46-9826f5ea78f0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f0740e54-53ee-446c-bccb-10ad4865f245",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c729e0d-a407-4f62-9491-90c5855b3b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e3912f39-7f22-40a1-bd5e-03156f34b59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73b462c-5eeb-4000-87a4-c697ed4e3365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44282e96-5ea0-41b8-b66a-84ab92538589"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "55098a01-496f-484e-99bf-f1f4c82409f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "483b01f1-2f1c-4296-8786-406468ee42c7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48c57b73-a8e9-4a22-8ebe-40b57949dd15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6d5bd13-d037-436a-acd0-6c1dff144c49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63ca2dfc-1a5f-44d7-b649-8125629628aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7041e6ea-bd70-4367-99f0-89beaf7e4723"
                    }
                  }
                ]
              },
              {
                "id": "04a5515d-f14e-46c4-b0da-4f087efce012",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d7128ce-8b5e-4a4a-ab5e-074e0dd60068",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "642cd182-bce2-40d6-97ee-99efd465c467"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "819485a9-befc-44c2-ab27-480c38f120b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f26b07f-b84e-4a8f-91d1-db52e13fd4f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41044f1b-d4bb-4b7b-9726-7b12986131bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0dc98a79-99e5-4966-9f24-9803f25291bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8547d0e-ff5b-40ee-ab2c-c52f0f1ae6f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc97383f-a989-4471-bb12-0dd28d8a7a7b"
            }
          }
        ]
      },
      {
        "id": "e5a6988b-9e8c-4746-a11e-11c899c41895",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2f0e53dc-290c-4b43-8e7f-9882e4c92fbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08888aca-5fde-4130-b11b-c8ece30a447d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e18bcf02-96ba-48ad-b92c-49e4c61910da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9b3ee4-4c87-43ad-b357-36c07ee21fba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e0215baf-6d1d-4672-86d1-fa2b598aae32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464a316b-3f60-4dac-a35d-3859ddfe8d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa0c893f-b2ea-4f04-b12b-41b562ef5767"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f73718ee-a603-40a1-821a-96c41bf7881c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81a2d1e7-798d-45a0-bd43-b0dfe91c6dfd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "850613c2-c620-4a1e-8fec-252842c339ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "507070e3-d895-407c-a8f9-75345724cb29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0573ded2-fe35-4f29-859c-86dcb2a1b28a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "853b324f-e2a9-45d7-b574-b1dc65b00aff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9593fa59-42c7-40c1-ad3a-2347c1a187bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb8432e4-34ca-4bd4-a30a-8193ae57fd74"
            }
          }
        ]
      },
      {
        "id": "67acdc48-35ec-4fa4-9c8c-56f640b8c26a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d0128456-aae7-41f1-9787-e503377490f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b85b6cb3-8e7b-4360-98b1-0cae7f3d3037",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e6567bf-e8e4-4a8e-bc5c-a61aa57c6900",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b266c49d-5497-435a-9e36-1f5b3c6b7a4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a08de4a-e9a4-42d9-bab5-343eb75ea076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6469c03-2c5a-491d-9faf-8005dd49fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc6b5e39-e5f1-40a5-b042-f03195e83cb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d023d766-be1e-490a-8ddc-68d636ae6915",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "995b674a-0929-411e-a684-7d6646e0eaaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31dad7a8-de84-41a1-8eba-46967dbfcf82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63fcca89-d3ce-4f25-b621-97d203570c7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0f48387-3ef5-4044-9df1-9afae35598b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "624778ab-caa5-4a68-bf77-17f0d9119e1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65e038f1-adda-4915-ab67-b77ce29a0d4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b46415f3-34ad-4136-a075-98d17582db0c"
            }
          }
        ]
      },
      {
        "id": "c45fe38b-bf4d-45de-bf21-ef053c3d955c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9a26f68b-1eb4-466e-947a-d2fcd659d7ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e296ea71-b5e8-4e5f-b325-85bf60aa5f18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e767ba2d-efbf-40e1-a095-0d31c43769d1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c23c2c-c342-459b-8d8f-4e9a2db6952e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e776a73-8535-4df4-be59-b893a7fefcdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b69b70-5445-4142-b92a-590be2c788ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2e9c4e4-f0c3-4373-a486-3772f51719c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81b80342-01e3-48bd-9dba-ae586fe5df5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e02c9c1-f379-4adf-a40d-52e7bf4df6c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "991ebf26-9d68-4618-b1e6-1561e4ffaec7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45a777b4-2c68-4c75-85aa-b2076e65118d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54d0b183-91e5-4600-b96b-8a1818002ab8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8e9583ef-2904-4e85-8480-27fbb00118fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "539d5b36-e277-4532-b0f3-f82c8de03ded",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f619a88-05f0-478f-be3f-39bc190d0ef4"
            }
          }
        ]
      },
      {
        "id": "e823ed69-6796-477f-aa5d-c747822d4613",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ec027a3-7e03-4169-bf30-ca59df40ea07",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74c485da-92c6-4060-b87c-523c543a1c21",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4cb988f2-ddcb-4d04-9579-5508ea2ff4d4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "758c7039-758d-45e0-9211-c68a18683b61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7328166-0e70-4dd5-ba0d-f76ed606785c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 110.66666666666661,
      "responseMin": 23,
      "responseMax": 9396,
      "responseSd": 641.4839319270868,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722213681079,
      "completed": 1722213717318
    },
    "executions": [
      {
        "id": "ff061e75-2680-46f7-a866-569e8c1ce193",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ee09c261-a898-4d99-9468-43a6ce21f146",
          "httpRequestId": "4a139a37-2731-4d8d-9d96-ba48bd73f674"
        },
        "item": {
          "id": "ff061e75-2680-46f7-a866-569e8c1ce193",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "78d8f904-5146-47ac-8301-0022b941e555",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 0
        }
      },
      {
        "id": "8e4cf62c-6da5-4bae-b7d4-429a51eebe13",
        "cursor": {
          "ref": "00984368-8ba3-4852-a431-a60d6ec2526b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "260de6af-c565-4af3-a6fe-40526d79b158"
        },
        "item": {
          "id": "8e4cf62c-6da5-4bae-b7d4-429a51eebe13",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "36b0d302-9396-49e3-8a11-40692b934a46",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "c7028ffb-f138-4071-b16c-b496928b58b6",
        "cursor": {
          "ref": "c1e654e9-4c94-4a4d-ad69-4e9f595c4253",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d866ac55-edbb-45ee-b178-fee6d2cd7151"
        },
        "item": {
          "id": "c7028ffb-f138-4071-b16c-b496928b58b6",
          "name": "did_json"
        },
        "response": {
          "id": "639e9c41-8fd6-4ad4-8532-d9350ff57090",
          "status": "OK",
          "code": 200,
          "responseTime": 269,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504e64ab-928b-46c8-abd4-9cd19da48025",
        "cursor": {
          "ref": "2611c564-d675-4ddd-ae19-e9656737d319",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b941cf35-dd30-47bd-a087-88ccb04f97a6"
        },
        "item": {
          "id": "504e64ab-928b-46c8-abd4-9cd19da48025",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5903897-5feb-424e-8475-3ca7c5b2a9dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 403,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504e64ab-928b-46c8-abd4-9cd19da48025",
        "cursor": {
          "ref": "2611c564-d675-4ddd-ae19-e9656737d319",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b941cf35-dd30-47bd-a087-88ccb04f97a6"
        },
        "item": {
          "id": "504e64ab-928b-46c8-abd4-9cd19da48025",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5903897-5feb-424e-8475-3ca7c5b2a9dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 403,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157fe666-b823-42d4-9cfe-2317b615c6c3",
        "cursor": {
          "ref": "1fb8ca5a-508d-4c35-b97c-a81d810b9254",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4433b4ef-c493-4fda-9323-276a9bc0c522"
        },
        "item": {
          "id": "157fe666-b823-42d4-9cfe-2317b615c6c3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "545cfbbd-dfae-4457-bf3a-fa83f659d211",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f30916-186f-44cd-ad70-9b5acb1b4648",
        "cursor": {
          "ref": "90af4e48-cca0-49e0-ad78-9284931a6bdd",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "64502aff-a985-4659-8ae5-419a95ecff36"
        },
        "item": {
          "id": "d6f30916-186f-44cd-ad70-9b5acb1b4648",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a9187e39-a31c-4ea2-820c-382f1771a0bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc951bcc-663d-4c92-bfcb-e6180d779153",
        "cursor": {
          "ref": "c73e2b3b-08eb-4126-b539-71e3c11519f0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "144bd74e-9f1b-4210-a24c-39a053aeecae"
        },
        "item": {
          "id": "dc951bcc-663d-4c92-bfcb-e6180d779153",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eaaffcea-e7f7-457f-9279-f71c4267d68d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea4a72a-b8c1-4c22-b9ef-d782cb5c24a4",
        "cursor": {
          "ref": "df68689e-9490-4be9-9b64-ee51f0bfa671",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "93dec25c-25cc-4fe6-9436-0f6e3f62da96"
        },
        "item": {
          "id": "fea4a72a-b8c1-4c22-b9ef-d782cb5c24a4",
          "name": "identifiers"
        },
        "response": {
          "id": "58a8a2ba-d037-46db-bf83-a96f9be48b3c",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8df7ba-47c9-4fe5-8c18-3935b047135c",
        "cursor": {
          "ref": "d485c912-632e-4586-b68a-a987e995a1d0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ebfd396-9b44-47b6-a7ba-66b61d3782bb"
        },
        "item": {
          "id": "2e8df7ba-47c9-4fe5-8c18-3935b047135c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "449ef076-6ff0-4bd2-b299-f9f04c187469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f42e6d-54d2-49b2-8033-24fd0c7e4438",
        "cursor": {
          "ref": "23750629-082f-432c-b711-374b7d99ace8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bfbef7ba-3ce7-4d29-8a68-8a94fd239464"
        },
        "item": {
          "id": "a3f42e6d-54d2-49b2-8033-24fd0c7e4438",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c5c00e99-f561-45cb-b031-b7c8939a44b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c34d83-9018-41e8-abf1-7c2bfd588755",
        "cursor": {
          "ref": "1b050863-ba28-4104-92d2-218cc4b7f743",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "826dcec4-e7a3-44d0-a9f4-1f0cb951df62"
        },
        "item": {
          "id": "42c34d83-9018-41e8-abf1-7c2bfd588755",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "81cc98e8-4206-4ee7-b25a-b910e180a441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8ad6f4-7cfa-450f-9993-9c45c720aeff",
        "cursor": {
          "ref": "6967b8a9-1246-4978-8755-db222ae8f0a1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "acdc6a4b-9503-4065-97fc-49eb2bc727aa"
        },
        "item": {
          "id": "5e8ad6f4-7cfa-450f-9993-9c45c720aeff",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aab626cd-7e5e-4669-bd2a-9ed521a72928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b41367e-2757-44f1-bd55-86f042f3f3f1",
        "cursor": {
          "ref": "c87e8951-5b76-443b-acc1-1eb1f770ae5d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "934ad7cb-cd9c-4318-896e-9bddc7667417"
        },
        "item": {
          "id": "5b41367e-2757-44f1-bd55-86f042f3f3f1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6058268a-e784-40d8-b0fd-b6bd8788e143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c27b38-3a2c-4eeb-968c-3b8d6a0ee617",
        "cursor": {
          "ref": "79921e60-4eba-451b-8395-ee19ff2311ba",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0d0b3d48-3cf2-4edf-8969-982cd3e911ba"
        },
        "item": {
          "id": "72c27b38-3a2c-4eeb-968c-3b8d6a0ee617",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "617983b8-3141-4934-a553-3c0e2fc1a25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4e878d-0143-4438-a024-b88bfc5775b0",
        "cursor": {
          "ref": "41b07775-0d58-42a7-8ac6-67f68ea4d14a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fcd6c0cd-62a4-4f6b-90d9-eca16c17c0f3"
        },
        "item": {
          "id": "0b4e878d-0143-4438-a024-b88bfc5775b0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c96ca3fc-eb6b-4bff-bf84-3e890700ae78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e3dc2-4bfb-4c11-afab-39fbe72269fa",
        "cursor": {
          "ref": "5f2fc74c-778e-49d6-ac0c-b4e6c43ab629",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3aaaedd4-ceca-48da-955e-51875c342408"
        },
        "item": {
          "id": "0c7e3dc2-4bfb-4c11-afab-39fbe72269fa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "42519db6-66b5-4609-a8de-44b8da610431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac5125-5caf-4368-ac18-be3c7f58cf6a",
        "cursor": {
          "ref": "df2dfb77-e6c5-4ada-b78f-51f925fb0111",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "94be1a81-6664-434e-a200-97855bf556df"
        },
        "item": {
          "id": "2bac5125-5caf-4368-ac18-be3c7f58cf6a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d65edf3-0d67-4a32-98fe-a0fa7bd7031a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bab373e-8675-4bce-82e3-20ce083f3420",
        "cursor": {
          "ref": "f6189906-ac7e-4a55-9cfb-afd2572282e7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "13d4c3a6-8b9e-4b9d-ac44-21f6e755657e"
        },
        "item": {
          "id": "3bab373e-8675-4bce-82e3-20ce083f3420",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c285d35c-05f3-4081-ba70-2f92f70baedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e1d2b9-3f79-44ea-9d4a-33cc822dceb5",
        "cursor": {
          "ref": "f4d050be-cb04-426e-b3be-66211e8e2dc8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9e3b00d4-7849-4b1c-a512-28bb4d66890d"
        },
        "item": {
          "id": "51e1d2b9-3f79-44ea-9d4a-33cc822dceb5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9db0afbe-632e-4445-89b7-fc50023d0f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05af1c6e-1552-4829-a74e-b5fc1cedd990",
        "cursor": {
          "ref": "ceeccc6f-36ff-427e-a8fc-9d1ffac9f98a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8989a45a-8bba-4e14-84e4-e42c49adb683"
        },
        "item": {
          "id": "05af1c6e-1552-4829-a74e-b5fc1cedd990",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "68c7cc7f-50e4-45e9-a983-77eef678cdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393b59d5-e623-4adf-91c9-aabdef22e65c",
        "cursor": {
          "ref": "eff5c387-79f5-4da5-aa01-0e85fdd6aa83",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6db8e9f6-3053-4872-a7e4-66bc94a8b494"
        },
        "item": {
          "id": "393b59d5-e623-4adf-91c9-aabdef22e65c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b191b86f-639d-4e3a-b2bd-dcbb90421b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4f41d2-51a1-46f9-a1c6-07181e510936",
        "cursor": {
          "ref": "19a5f2ec-11ab-4af9-a78d-f0f3934f3fcf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9412c776-4aee-4a34-a421-d3150bc587a7"
        },
        "item": {
          "id": "7d4f41d2-51a1-46f9-a1c6-07181e510936",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a38a1b11-1e05-481e-842a-b636e75c9b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833cc44f-53fd-4400-80d5-48727c8a21da",
        "cursor": {
          "ref": "d9e564f2-c506-4988-9d80-f1b8388f9b89",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dbc35d17-21db-44d7-a894-323e0e4a702d"
        },
        "item": {
          "id": "833cc44f-53fd-4400-80d5-48727c8a21da",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e65798eb-31de-4c7f-82ac-6ca9c9decb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2356953-8cf5-4194-8dd9-353a1ecae911",
        "cursor": {
          "ref": "947b62af-3d91-4b21-88ab-2989b8b31d4b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fa1f7aac-9267-49ed-a4d8-2f32dac9c0ea"
        },
        "item": {
          "id": "c2356953-8cf5-4194-8dd9-353a1ecae911",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "51d4fa75-036e-43e7-b3b5-6d9cb3867b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cddd21-0d21-4d76-ad2c-5f6c41657db3",
        "cursor": {
          "ref": "1e738233-3289-4d31-b123-e987e39d41b6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4985ec07-937a-4d03-a0c1-ecf8a008d7e4"
        },
        "item": {
          "id": "92cddd21-0d21-4d76-ad2c-5f6c41657db3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7f9c903f-6404-4aae-bb98-f350917a6932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603d216d-b259-4f0c-a761-6d01461cdfc4",
        "cursor": {
          "ref": "f78207a8-c587-437e-9c09-47f16aea9418",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "49a92a57-7643-4f36-a9ae-354a4672f453"
        },
        "item": {
          "id": "603d216d-b259-4f0c-a761-6d01461cdfc4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5a583c84-fe59-42e7-ad00-0b3ac8db6255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad77e916-a5a4-4f27-8361-e342ce40b35e",
        "cursor": {
          "ref": "f95ccc9b-2a62-412e-a881-fdcf14be0c52",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f746a1c3-01cf-4a53-8a26-905275921fbc"
        },
        "item": {
          "id": "ad77e916-a5a4-4f27-8361-e342ce40b35e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b7437e5f-2729-4dba-bd1d-1fad98489dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c196c992-0e3e-40f2-a146-6335b56fc083",
        "cursor": {
          "ref": "82ada2d1-90e8-4042-8daa-b3791edcec8f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "786d6751-ebc5-49a8-9f92-eec19bde63db"
        },
        "item": {
          "id": "c196c992-0e3e-40f2-a146-6335b56fc083",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "367d7b1b-e356-4bf6-8171-043e293ac2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf91a0c5-9e79-4c8b-936f-33e9ee4a1ddd",
        "cursor": {
          "ref": "7d6561eb-c9e4-4190-87f9-2e5f91e587e4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7b18d5b-c9ef-41d4-bc8e-a4f633fbc438"
        },
        "item": {
          "id": "cf91a0c5-9e79-4c8b-936f-33e9ee4a1ddd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ea20774e-c613-4f2a-8e94-ed5b2d3dbaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad38f7e-7e3c-4e0a-812c-0196f79f29a8",
        "cursor": {
          "ref": "0bf0fa49-e02e-4193-ad14-1ad2cb8c04ac",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0adaa438-800a-43d8-9381-259f69b7fc35"
        },
        "item": {
          "id": "3ad38f7e-7e3c-4e0a-812c-0196f79f29a8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2adb0754-28ee-4768-9d98-36e55119034f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d109015e-7c14-40d4-98a0-5d834f041ca5",
        "cursor": {
          "ref": "5daec36c-4d60-44f3-b9ee-7cce8a7f06e8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "79061e6f-2940-4cc9-8550-0bee0063c739"
        },
        "item": {
          "id": "d109015e-7c14-40d4-98a0-5d834f041ca5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "04a5c1bf-8b9d-4728-ab6e-5e2b747612f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f4271b-76e3-4152-92e1-a20640b9f404",
        "cursor": {
          "ref": "40045629-c2f0-474a-8914-8379ef393696",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3fdf124c-5e0f-4837-a6d4-018100abf16d"
        },
        "item": {
          "id": "18f4271b-76e3-4152-92e1-a20640b9f404",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "be075c7a-63b6-4445-872f-cf6a66b02582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07d3783-4856-49a2-9527-f3b8bf2ae9e1",
        "cursor": {
          "ref": "f91c816a-77ef-416a-a2ac-857831542300",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8ea2f3f3-e6c5-4779-9d49-ac3b15609bc7"
        },
        "item": {
          "id": "e07d3783-4856-49a2-9527-f3b8bf2ae9e1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "814846d2-d05b-4fda-b8ad-565c778d5d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90afe200-e2dc-479e-a7ab-4985cc1c84d3",
        "cursor": {
          "ref": "014120c3-d382-45ef-bdf4-96c2787388e1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f81fc45d-a4e2-4b5e-8380-645a864cc650"
        },
        "item": {
          "id": "90afe200-e2dc-479e-a7ab-4985cc1c84d3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "865e3794-edf1-489d-a210-e53161fedcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6361322e-f021-4b20-9107-8739306190f4",
        "cursor": {
          "ref": "bff5a44e-acbe-452c-99fb-55e830e63406",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8256fc97-c7fc-45ab-9ead-9e04c0719931"
        },
        "item": {
          "id": "6361322e-f021-4b20-9107-8739306190f4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7932a24f-7bf8-4806-9fab-83ca9787e586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76281fc0-6973-4db9-85e0-493754e02d5a",
        "cursor": {
          "ref": "bcf9f0ea-15a7-4f41-ae48-374174fd084b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2882b43c-f648-4235-a1f0-9c36fa54dbe3"
        },
        "item": {
          "id": "76281fc0-6973-4db9-85e0-493754e02d5a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aab1e60c-74c3-418d-aef1-a53fae4c194c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7a8569-a758-4fb0-96ad-d2dd484f7c27",
        "cursor": {
          "ref": "438274c4-b296-499f-9186-82499539d541",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "98596087-68bc-4f0e-b3b8-6b4f0dab46b4"
        },
        "item": {
          "id": "ff7a8569-a758-4fb0-96ad-d2dd484f7c27",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e087ded7-5c7d-4bee-9672-d2c3bdc78d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6da5d9-c02a-4571-ac37-7804c870ccf7",
        "cursor": {
          "ref": "4b89360d-8dec-480f-9122-230cf83c75a3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2fac6c08-e071-438a-a9fd-6b6d0cac4210"
        },
        "item": {
          "id": "ed6da5d9-c02a-4571-ac37-7804c870ccf7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6e153195-2280-4f39-ad0a-ea5b8e1e1e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6738575-436d-48dd-bade-c34d59b29847",
        "cursor": {
          "ref": "7f1f4231-fc3e-4386-8912-0a337ea8c4f9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a2138d90-8b76-44f0-8823-6a35927379f4"
        },
        "item": {
          "id": "a6738575-436d-48dd-bade-c34d59b29847",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9eae5674-c39d-4b23-ae0f-132a95e95a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c0b368-0728-4f4d-986b-b0967151e661",
        "cursor": {
          "ref": "5756a4cc-8263-4847-bf24-c261aa1373a0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1d6385a0-39bc-4de0-b804-f2c82c5345c7"
        },
        "item": {
          "id": "66c0b368-0728-4f4d-986b-b0967151e661",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dec5fed1-ff78-415f-833e-84831973688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c53bfd2-9b6c-4e18-8ac0-1128ab915085",
        "cursor": {
          "ref": "de02b2a2-ae62-4008-bf46-330086904efb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e1f9e18d-4e15-411e-90b7-6ab04326a6f8"
        },
        "item": {
          "id": "6c53bfd2-9b6c-4e18-8ac0-1128ab915085",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fca025d9-64ec-46cf-9445-51fbdc561ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb12aced-90b6-4134-b3c3-3efb9fa50fe3",
        "cursor": {
          "ref": "c83b4512-385d-4a32-9d59-9a84feac08cd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b4bbae2-0932-46b0-8635-33fe6f184b6a"
        },
        "item": {
          "id": "cb12aced-90b6-4134-b3c3-3efb9fa50fe3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1f2017ab-b43b-42f3-b834-6695a5e6f95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0801ce96-849c-46dd-9960-b1eea7985ce5",
        "cursor": {
          "ref": "0b454ee1-034a-40d6-9406-b7cdd1c853af",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6b0f6279-06ae-4198-a21e-2e1f2e6e8f81"
        },
        "item": {
          "id": "0801ce96-849c-46dd-9960-b1eea7985ce5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "83dd4ff3-35b5-49d1-a94b-e93f1a61a9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86a3c76-e60b-4246-a5d2-ca589d275bdb",
        "cursor": {
          "ref": "cdab4df5-6518-4c08-af9d-995c74bac0fd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f97c4585-dfc3-4d45-af6c-fd6df5f08ce5"
        },
        "item": {
          "id": "c86a3c76-e60b-4246-a5d2-ca589d275bdb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e5d09216-eaad-46da-bb5f-fc1b06cc42dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159f3420-b700-4921-b6dc-f5c97076bc22",
        "cursor": {
          "ref": "3cb6ad64-ed94-4c05-9701-da69684a75b7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "876a2ae4-0b61-4003-81fe-47caafc4f0ad"
        },
        "item": {
          "id": "159f3420-b700-4921-b6dc-f5c97076bc22",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "603a29df-e576-4c57-aaac-3da41ffcaec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f99558d-53c9-4b2a-8663-9545a390a3ab",
        "cursor": {
          "ref": "c199b7d6-287a-47e5-b719-e509bef22842",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "973d64ad-2dfb-45d7-a115-05e97ad0234b"
        },
        "item": {
          "id": "3f99558d-53c9-4b2a-8663-9545a390a3ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d91b8f4f-ed0b-45a3-9b11-14f7451516c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d189c48-2f15-4900-8ee8-1abac62bf98a",
        "cursor": {
          "ref": "97e16ea6-fc24-4fad-bb04-47aa2ef65595",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9a7c5c56-595d-4293-a534-f1c2cb9bcabc"
        },
        "item": {
          "id": "8d189c48-2f15-4900-8ee8-1abac62bf98a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1fe6b603-b479-4674-9a54-2fd888960035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0694a3-d8f4-4ef4-ab37-1b056f171340",
        "cursor": {
          "ref": "182c8dd6-4efe-4b87-b630-912b63ad20e8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "01d19775-f78d-4a7e-96ea-3ab855fe9ff0"
        },
        "item": {
          "id": "4a0694a3-d8f4-4ef4-ab37-1b056f171340",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c66a5e90-27fe-46e6-9c34-ad81a588d06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bde3a4-dec5-4aec-8a64-cb8dcf432a9f",
        "cursor": {
          "ref": "7fafb549-fea4-4960-bb2e-e436993e5f0d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fef9bc4b-9ba6-47f6-a2f7-ab15a867f4d1"
        },
        "item": {
          "id": "67bde3a4-dec5-4aec-8a64-cb8dcf432a9f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c3b7d3b2-2c64-474c-8460-ae56ccf31ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a696a03-5fb4-4e0b-8906-d39fea49533b",
        "cursor": {
          "ref": "db329cd8-a14f-4970-a997-0e5cdafea967",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ded8cc7c-d81e-4ef4-82cd-aff06bef97a5"
        },
        "item": {
          "id": "3a696a03-5fb4-4e0b-8906-d39fea49533b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "52b0de0b-a714-4e35-994a-73bab9691e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7140d8-5a88-46f3-b443-8b4c65ca2d0b",
        "cursor": {
          "ref": "7a48c062-ceda-47d4-854b-9ea45900b7e6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b0536809-f4a2-434e-9813-e8b6af1205ec"
        },
        "item": {
          "id": "3d7140d8-5a88-46f3-b443-8b4c65ca2d0b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3a277e4f-ff58-45a0-8135-e302dbaab61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad44df9-c5b8-4037-aeab-f779b0091618",
        "cursor": {
          "ref": "4ddb262c-779f-4300-bc21-d0c1c1913364",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4e067da5-51e9-4d04-8520-50655db6c1a2"
        },
        "item": {
          "id": "9ad44df9-c5b8-4037-aeab-f779b0091618",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "463999a2-7fb3-4a92-b7e4-d986bc21cbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35e518b-624d-4c43-a53d-c02e26715389",
        "cursor": {
          "ref": "2a1b7db6-215b-46bc-bd1a-c56b0dbb44a6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cabcbfa5-db1b-4f53-9e9e-9391364e14a3"
        },
        "item": {
          "id": "b35e518b-624d-4c43-a53d-c02e26715389",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7b531a59-1517-4a94-b054-056b1645f8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc5bce1-bc79-451c-b863-3c0a53b79d59",
        "cursor": {
          "ref": "83d612b7-3b39-438e-bf1c-b418b59b55ca",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "37b5f621-b923-4ed3-a7f6-db8112bb0d54"
        },
        "item": {
          "id": "ebc5bce1-bc79-451c-b863-3c0a53b79d59",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "469ebf3f-2029-44e8-8a55-31580923a41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c775a2-87e8-414d-a727-ccb589b5ecdd",
        "cursor": {
          "ref": "77eab224-33b8-4cb4-9a4e-5bcba10756d4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bad90859-2c24-4ef6-bccd-0690136dc058"
        },
        "item": {
          "id": "99c775a2-87e8-414d-a727-ccb589b5ecdd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fd41d0da-403b-453b-964d-0247da611791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25fc970-d0e6-4dc5-b063-0d8a3806c914",
        "cursor": {
          "ref": "4d51ef5f-b324-4289-b0f0-12d14a613606",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "799e8ea6-7a6e-4893-9342-c2035f32908f"
        },
        "item": {
          "id": "c25fc970-d0e6-4dc5-b063-0d8a3806c914",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "362480c5-b132-41d7-ab6c-0ef3a60bac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d190b21e-17f5-48f3-ac40-9e92322e7d2c",
        "cursor": {
          "ref": "9df8e6e1-d4da-4e19-9a67-5e8d20f1f2c9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3fbf1a5e-09d5-4eff-a1b6-e7b1563b5c53"
        },
        "item": {
          "id": "d190b21e-17f5-48f3-ac40-9e92322e7d2c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5f1f11a2-aedf-4a8a-8b1b-90a04ca2dd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1be63f0-c9af-418e-90c8-9e28d17d807b",
        "cursor": {
          "ref": "5dc74ca7-2d6b-4363-8760-ee284145b15c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "67add30f-5902-417d-bc26-a9e7d8e53ff8"
        },
        "item": {
          "id": "c1be63f0-c9af-418e-90c8-9e28d17d807b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6eaf5e76-3cff-4240-bd78-3f22e75a433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb89a13f-53b4-40b9-bd2b-0717b5ae245e",
        "cursor": {
          "ref": "dfc8e48e-3cbb-45c9-ba7a-29ea04bfe976",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "403cfd0a-df41-41bc-a805-1fdf1d1618e7"
        },
        "item": {
          "id": "fb89a13f-53b4-40b9-bd2b-0717b5ae245e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cd8bf282-d920-4489-abdd-f64b98858b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05983594-8d90-418d-a440-74db13fc85e7",
        "cursor": {
          "ref": "fc84407e-21d6-481d-a5e9-ba6f4b4f0883",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5855cb6c-aa26-49a6-9271-b7f217c33224"
        },
        "item": {
          "id": "05983594-8d90-418d-a440-74db13fc85e7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a3197789-3b65-4fa1-91db-b9283ed08d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9fc89-a07f-43c9-8a46-3461d3bd80bf",
        "cursor": {
          "ref": "c1f3e8bd-d4d0-4809-a14b-bed0de0e5b5f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "294ea30b-3ffe-4356-aa7f-a63739acc397"
        },
        "item": {
          "id": "6cf9fc89-a07f-43c9-8a46-3461d3bd80bf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "be1e749b-830a-4cdb-94f8-d16a53222977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c33e0ac-b565-4caf-a697-8cd33bd98d53",
        "cursor": {
          "ref": "3c3bba62-5657-43d8-8a38-3b18808cb6e5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ebe61f3c-d98f-488c-ad66-fb2b2c5e9b90"
        },
        "item": {
          "id": "2c33e0ac-b565-4caf-a697-8cd33bd98d53",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9fad7e59-63e4-4ac4-9a84-11f1e4f6dfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d685d-f8d3-4f04-9b59-37373f611aab",
        "cursor": {
          "ref": "ae9cbc75-af6f-4594-b85f-58e8f0e922ef",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f7144c84-829a-4e9a-add9-f86102d9c0d3"
        },
        "item": {
          "id": "ab0d685d-f8d3-4f04-9b59-37373f611aab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6540e75b-ab17-41c0-982b-ce23ae0784b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d11828a-213a-46d8-9919-7c6f2365639e",
        "cursor": {
          "ref": "431c8c0b-485b-4cff-82f3-36f4c793fcb5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c4f7322a-9f18-4413-93e9-b9fc50536f02"
        },
        "item": {
          "id": "7d11828a-213a-46d8-9919-7c6f2365639e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e893a803-5830-4a9d-a89d-a67c678c488b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1140f006-4d11-4f5f-b047-8945408cb4ff",
        "cursor": {
          "ref": "d576b2c5-1b57-492a-8dcd-705e0a5d9afb",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "648ea4c7-7a0d-421f-a600-976d53b58d68"
        },
        "item": {
          "id": "1140f006-4d11-4f5f-b047-8945408cb4ff",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c03d4283-6fd1-42b2-b55b-9e93044c02dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496a480-3c19-4768-aad7-d2b956e3cd35",
        "cursor": {
          "ref": "cb0b3a68-291d-4653-87b1-548f0f759bc3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05c02ab9-ccc2-446f-90e9-7dd07bd82c73"
        },
        "item": {
          "id": "7496a480-3c19-4768-aad7-d2b956e3cd35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2d0b1849-e100-40a3-9314-fa6345cb1544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfdce7b-8753-4fed-887b-0f73507fd88c",
        "cursor": {
          "ref": "5670fc5f-e516-4951-9d3d-a1061536da04",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b04cc10d-f158-4ac7-8290-b02af8a638e5"
        },
        "item": {
          "id": "bbfdce7b-8753-4fed-887b-0f73507fd88c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d2bd65db-9e72-4eac-a38f-1d26aae55f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07d89b2-0b3b-49ec-9084-18a48b2a3e35",
        "cursor": {
          "ref": "cfcbfcfe-a5ea-49d8-9e27-fee081423bcd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "34f8514c-20e4-470e-8c9b-3c2e24f47356"
        },
        "item": {
          "id": "b07d89b2-0b3b-49ec-9084-18a48b2a3e35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "111660e6-984e-483a-8745-0d2cdbfbc2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f0ab35-337d-4bf4-b2f0-75082a29d80d",
        "cursor": {
          "ref": "89d9d3f1-7bba-48d5-ac7e-26cf811539f6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a54431db-de74-4002-a8d0-dfa6981dabf5"
        },
        "item": {
          "id": "d4f0ab35-337d-4bf4-b2f0-75082a29d80d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "98e1e01a-9836-46a9-8fd6-999873c6780d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfb3cf0-f39a-427b-ac9a-9a6322520036",
        "cursor": {
          "ref": "17b4fbe1-9199-491e-90bc-c03b627dd2f9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6bb9691b-9d6f-48fe-92c8-5ea2b97ad4fb"
        },
        "item": {
          "id": "9cfb3cf0-f39a-427b-ac9a-9a6322520036",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9f1c9137-763d-4b48-8034-e5915f0961f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a658f93-f988-4e40-bf98-6e281bf1319b",
        "cursor": {
          "ref": "e506ed6a-89ec-43e4-a6a7-00c9c11c5e98",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5783c593-7e98-4733-a77c-cf7c90fd7003"
        },
        "item": {
          "id": "0a658f93-f988-4e40-bf98-6e281bf1319b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b2bd3175-18b1-42f3-8dde-ad63f2cd5f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26402d8-0f16-4ddc-a883-0b80e5b1e8ae",
        "cursor": {
          "ref": "c831c56a-8978-423f-8492-33340a2c6fb0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "49ba48bf-55c0-4bc0-81eb-0982500536d4"
        },
        "item": {
          "id": "a26402d8-0f16-4ddc-a883-0b80e5b1e8ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7eecaca6-461e-46af-872d-9f7f09c88524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163b1cfd-54b9-40a4-a602-86349b4d5de2",
        "cursor": {
          "ref": "e74280c2-636c-40b4-a8bd-5781324ea08c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cbb9c041-68a8-4963-9106-0c835ae6e2d6"
        },
        "item": {
          "id": "163b1cfd-54b9-40a4-a602-86349b4d5de2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a7dce581-4fa3-4d67-acf5-85ea875ae7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4f7a30-9ec6-40d7-b34f-f52088c924e4",
        "cursor": {
          "ref": "9426c9f0-ecfc-432f-8967-64dceb0df3c7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c4c94b91-de41-4432-9d79-3e26442aa991"
        },
        "item": {
          "id": "2f4f7a30-9ec6-40d7-b34f-f52088c924e4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62d71a26-e6a1-49f9-97be-eb4630d5559d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac53440-5287-4d91-a358-3c015be5369a",
        "cursor": {
          "ref": "65357eca-2a13-4e8c-b14d-832ac26b47de",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c0172e71-d08b-410c-a7b2-dc86adfc935e"
        },
        "item": {
          "id": "0ac53440-5287-4d91-a358-3c015be5369a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ed89f914-7d89-4c10-8f72-4f27c4e1221e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2a8239-eec9-4ddd-938a-c57feefc3d96",
        "cursor": {
          "ref": "3d598098-3860-4759-ab04-a222249ba078",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d275b57f-21b6-448a-9c28-29b09097ce87"
        },
        "item": {
          "id": "ca2a8239-eec9-4ddd-938a-c57feefc3d96",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8ce1d9d5-b07a-4dce-857a-8b3bf8fedb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaae94e-80b3-427e-b8b9-47da557b88ee",
        "cursor": {
          "ref": "4d2735b2-bb0e-47c4-a984-ea44ba3e0a5a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d831a8cd-948b-43f1-868b-986acf52a665"
        },
        "item": {
          "id": "aeaae94e-80b3-427e-b8b9-47da557b88ee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "77b66289-e75d-4903-a96c-911d81d9806e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627958c5-052c-4e34-8c77-0e5a68c4ae5d",
        "cursor": {
          "ref": "397573e4-2105-4ea7-8e76-d90a72266cec",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8eedc5aa-c06e-4348-9810-a962eb1f7ceb"
        },
        "item": {
          "id": "627958c5-052c-4e34-8c77-0e5a68c4ae5d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5b829d7d-1e66-4b85-a7d9-763287061fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd27123-4eae-4218-be03-ac6fb1bf59c2",
        "cursor": {
          "ref": "c75b18c5-3525-49ff-a4d0-f6e9d911576e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1b5349f4-d619-4881-89b1-4ae4f6a6a9cd"
        },
        "item": {
          "id": "4dd27123-4eae-4218-be03-ac6fb1bf59c2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e1d7fddc-803e-4527-b8fe-c222c53882ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f1879c-c8b9-4acf-81cf-742da6903d59",
        "cursor": {
          "ref": "37e9b953-fb01-4de2-a479-075bfa67f816",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e9c2a652-85be-4247-8083-5a6b80878bd2"
        },
        "item": {
          "id": "f2f1879c-c8b9-4acf-81cf-742da6903d59",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "514a191c-ba1e-430c-bce7-2488ded5ec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beea803-af5f-4c49-8fa4-fb79323a88cc",
        "cursor": {
          "ref": "936795b5-b2ca-4b5a-873d-edcb48fcbb5d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a94a5c05-0168-43f2-9fe7-3afc705aebcc"
        },
        "item": {
          "id": "7beea803-af5f-4c49-8fa4-fb79323a88cc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "96770a10-4972-4edd-9bb2-da60dbea0ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f518b29-cf56-4e39-959f-097b7a7afc3a",
        "cursor": {
          "ref": "80b35cc0-229f-48ef-a0d5-07ea3c254679",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c92f1ff9-3e14-45ca-9086-4cdbb9eb99b0"
        },
        "item": {
          "id": "3f518b29-cf56-4e39-959f-097b7a7afc3a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "42930d2e-0114-41dd-9ed4-1d8fe226cc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7044d2c1-5e03-4ab1-b1f6-5ef047603de9",
        "cursor": {
          "ref": "a48605e5-aa6d-495b-acbb-24894cffdf8d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c33844a3-f0d1-4224-82e3-c660614c33d9"
        },
        "item": {
          "id": "7044d2c1-5e03-4ab1-b1f6-5ef047603de9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "44599138-1b21-4c69-989a-598a3bac2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ab8f38-abc6-426c-97cc-a6e01d7f719c",
        "cursor": {
          "ref": "a1daa0b1-799e-4e76-b914-42a81f9daf4a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "217e27b4-1d5d-4c47-aec7-485347cea21e"
        },
        "item": {
          "id": "d7ab8f38-abc6-426c-97cc-a6e01d7f719c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6aa48b30-8ba7-430c-9186-9c26eb02168f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622c0f12-1abe-42de-8033-fdc97d050d2a",
        "cursor": {
          "ref": "42ffa7b3-a778-4209-bf05-b50daebcd0f0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "96ef0755-3c0e-4b74-b17d-767877d0d0c8"
        },
        "item": {
          "id": "622c0f12-1abe-42de-8033-fdc97d050d2a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "40a2094a-fbd2-4657-a17a-8ab2f3168f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b55ac4c-1994-460c-9eab-f17bf9ce6542",
        "cursor": {
          "ref": "762be133-0e2d-4529-afb5-1562a8d204e0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fadc249e-8634-48be-8854-ae30dc8a4796"
        },
        "item": {
          "id": "4b55ac4c-1994-460c-9eab-f17bf9ce6542",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b55c965-8734-47cc-9515-d25db6e8e7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db2fd1-8124-4717-9828-14db2fa94612",
        "cursor": {
          "ref": "fd2985c0-08b0-47b3-8cbd-77c31b593e37",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "453b1f48-1481-4f69-9ba8-4ccff3c55d79"
        },
        "item": {
          "id": "76db2fd1-8124-4717-9828-14db2fa94612",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b22f71f5-e600-4fb7-839d-afccb0e40d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c0e893-bc36-47d3-a153-5203438eb4fb",
        "cursor": {
          "ref": "d4943f7d-b8ab-4d4c-a7ac-55c573d76083",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4e10ac49-d930-4273-b0cf-1e6767a9b1dd"
        },
        "item": {
          "id": "b5c0e893-bc36-47d3-a153-5203438eb4fb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7dc0bd9b-59fb-4187-b8a0-f92ecdffb481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee29628-7130-405f-87de-0aba76841d5c",
        "cursor": {
          "ref": "1fc40171-5313-4135-8710-bd014780c497",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "57d1574f-93b5-4a42-bb25-31d8850f5dd6"
        },
        "item": {
          "id": "5ee29628-7130-405f-87de-0aba76841d5c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9de6a976-8b52-4030-95ce-0c5ee3740c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1669aed-777e-4ed9-9233-870e9593c9a4",
        "cursor": {
          "ref": "7f77b42b-dd6e-4659-ba6b-15d514f23606",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ed1a54b4-cb45-4181-9d7d-8c4590b7501a"
        },
        "item": {
          "id": "b1669aed-777e-4ed9-9233-870e9593c9a4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "78c9ac15-f393-4208-9367-a049b3881440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326cf432-ef3e-438b-ba3c-02353722e282",
        "cursor": {
          "ref": "1f3cadfe-af84-43b2-8969-921b9bfd9585",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e73b61e3-8c29-4cc4-8995-ea60ce5a8e34"
        },
        "item": {
          "id": "326cf432-ef3e-438b-ba3c-02353722e282",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6c1d415c-7ce0-43a0-b3ae-040c06f1e7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fd5627-0538-4679-bcca-b0f7cbb0a2e4",
        "cursor": {
          "ref": "4e0d5d17-cb5c-4464-9d89-47b6e573bd79",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bddeb623-88d0-4839-add8-b7b9f245aeca"
        },
        "item": {
          "id": "62fd5627-0538-4679-bcca-b0f7cbb0a2e4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cede932a-9926-434f-ba23-f7da30e28a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54ec21f-12f7-4cf8-bfdd-0872e700ec70",
        "cursor": {
          "ref": "1fdb924b-855d-4592-9c46-c7c3d341c6c5",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f5c1b9f4-1dbe-40c9-86ce-4bc53431ee97"
        },
        "item": {
          "id": "b54ec21f-12f7-4cf8-bfdd-0872e700ec70",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0883d347-a665-43d0-9994-7a8d58963548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb108b5-cb1b-4927-ad16-4704841400a7",
        "cursor": {
          "ref": "247cef51-0c54-4a2b-815f-c033f211e9d5",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ce856898-e8ab-43af-8b1d-53770286ed1d"
        },
        "item": {
          "id": "ceb108b5-cb1b-4927-ad16-4704841400a7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8c1c7cfc-685a-43fb-87a9-808046b7e3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7464c3a6-0c27-4073-aeff-cebf421380ce",
        "cursor": {
          "ref": "38da4e07-3db9-48e0-9173-aff653db6e8b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "886f452f-2731-44ea-8abb-868ce24998d2"
        },
        "item": {
          "id": "7464c3a6-0c27-4073-aeff-cebf421380ce",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9354f001-4e44-4588-a441-fd8d5b528315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efee53ff-c047-4b38-a2da-1f63bea8e5c3",
        "cursor": {
          "ref": "5e8c1329-cb20-4910-bc90-facb251c2cf0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9da6a181-7ebd-4d52-a667-9f5a2a10ecde"
        },
        "item": {
          "id": "efee53ff-c047-4b38-a2da-1f63bea8e5c3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a02e0e92-d073-4ab9-9bc9-33c130a31d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c056ecb-97a1-4d0b-9471-e4d418174325",
        "cursor": {
          "ref": "fc042e9a-6d1a-4856-8957-882dba329ea3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "96de4649-a467-471b-98ed-d2f5d21e3aac"
        },
        "item": {
          "id": "0c056ecb-97a1-4d0b-9471-e4d418174325",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d3b759c2-cbc3-47d9-adb7-ec11f1162353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef33568-40d8-4710-bb28-9618075bbb88",
        "cursor": {
          "ref": "133ac25e-b61d-4d79-9332-7110ce8ce79d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0bc022c8-c30e-494c-9266-6c648b8a4d08"
        },
        "item": {
          "id": "2ef33568-40d8-4710-bb28-9618075bbb88",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2b3cd615-cd31-4fe5-8d10-a107a2895573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6d8194-4c22-493f-9e39-6798fcba52bd",
        "cursor": {
          "ref": "72f7aeb9-c7eb-49d0-9985-c751d058d7b1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18563b2f-71d0-4a3a-a233-4e6f2040e210"
        },
        "item": {
          "id": "4f6d8194-4c22-493f-9e39-6798fcba52bd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6edeabd9-de79-4a6d-ad2d-f6bcb229b96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113ae09-4b58-40ca-bd02-3a5f604221fe",
        "cursor": {
          "ref": "13fcb771-7282-428e-857a-ff1634672a8b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2bbbb10a-a51a-4575-b9ff-7db182ea25f9"
        },
        "item": {
          "id": "8113ae09-4b58-40ca-bd02-3a5f604221fe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "186d984a-6d5a-42a7-90db-dd0796f5f29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e682807-b283-4a70-a8b2-c3aed9d53e29",
        "cursor": {
          "ref": "a14e06b5-a672-4705-a4ea-3d87622c0937",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "03a316b1-f820-4f00-bae5-b4f0c4cf8948"
        },
        "item": {
          "id": "5e682807-b283-4a70-a8b2-c3aed9d53e29",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "eca1fca2-1d38-4623-8c9a-212f6b74ad01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90eeac1-25e3-4040-bfec-facbcf746af1",
        "cursor": {
          "ref": "a9b62ca5-9246-45fa-a8eb-6df890409371",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "80884495-7765-4c1e-99d9-47170e0bebab"
        },
        "item": {
          "id": "f90eeac1-25e3-4040-bfec-facbcf746af1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "983735c2-ef25-44d2-a69c-9ee28a95c69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "79cf3b63-cd9b-4b8c-9099-efb73da40458",
        "cursor": {
          "ref": "81e7e08c-799e-42f6-ad7f-0da078e0a3b3",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "16ed5812-0f3f-4e36-8769-4fab6cc31833"
        },
        "item": {
          "id": "79cf3b63-cd9b-4b8c-9099-efb73da40458",
          "name": "credentials_issue"
        },
        "response": {
          "id": "72e60a0d-1f06-4e8d-834c-b31bf9e2d369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "73f85658-28e6-4f4f-b533-3e113a649e17",
        "cursor": {
          "ref": "332165fb-b4f7-47cc-a110-211be3eb57e8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e1b8075d-207d-4b75-a1d2-b5119b81cc08"
        },
        "item": {
          "id": "73f85658-28e6-4f4f-b533-3e113a649e17",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f9bf70b7-bf87-4a63-b664-5a668cce01ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8b19afaa-7b35-4624-ac07-ca521067f83b",
        "cursor": {
          "ref": "f07e5132-ea74-42c2-90ad-3933c07b0208",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e2dfabfd-8050-42f1-8500-991f072f9583"
        },
        "item": {
          "id": "8b19afaa-7b35-4624-ac07-ca521067f83b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f3232ef1-e52f-4922-a307-046b045546ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "670b0628-c220-4810-82d4-a4bdd2636358",
        "cursor": {
          "ref": "8bc16f3a-43ff-4f69-b918-a358b0fe5b74",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2aadb109-b431-44c5-b74e-cd627941ff54"
        },
        "item": {
          "id": "670b0628-c220-4810-82d4-a4bdd2636358",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "399c5e37-d608-41e5-a750-1c2c676c8a50",
          "status": "Created",
          "code": 201,
          "responseTime": 9396,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6d7691-e681-43aa-a34b-1d518ebdb26c",
        "cursor": {
          "ref": "a7a7dd86-2b53-4445-8c2f-734490de859d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "23ee3a54-64de-48ec-b795-939ef62e7e27"
        },
        "item": {
          "id": "af6d7691-e681-43aa-a34b-1d518ebdb26c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f8f59efd-131f-40c2-b900-fd196800c8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5b19337c-868d-48ef-9e10-836f69620797",
        "cursor": {
          "ref": "1b6618e8-a570-4ee4-8226-80c374c48c59",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4e873171-63b7-488b-b082-9ed6bf47a546"
        },
        "item": {
          "id": "5b19337c-868d-48ef-9e10-836f69620797",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fe58d4eb-e496-4ca6-a32b-19443cf07287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "818e1e93-96fe-4568-bdda-8257d47a0a11",
        "cursor": {
          "ref": "ef7c9317-fc06-4b28-a08e-7b0632acd3d1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b3c15edf-4118-4cc3-999d-666bd59b5f95"
        },
        "item": {
          "id": "818e1e93-96fe-4568-bdda-8257d47a0a11",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94c173da-8b83-43db-b9c9-89bb5ada78e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d4a45-62b8-473f-9b68-32c33c2553ec",
        "cursor": {
          "ref": "5f24e7e5-4e6f-45e7-8afc-c5457e6ba496",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b446890b-1c71-408a-aa38-6d34750af766"
        },
        "item": {
          "id": "117d4a45-62b8-473f-9b68-32c33c2553ec",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bda61b73-e9ca-4398-9d73-42c15aefbdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7a10d3-122f-4e4e-a241-a37c643639d9",
        "cursor": {
          "ref": "a0e6906a-38e8-45a0-925d-3ccafc0efb95",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f4642b82-0629-4f83-8b79-0231d8dc5751"
        },
        "item": {
          "id": "4d7a10d3-122f-4e4e-a241-a37c643639d9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4f20827-9a35-42fe-af42-ef97f2fc1d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e3d44-cca8-4076-abc6-b3ea232cb376",
        "cursor": {
          "ref": "ca0d6080-f423-42b2-b77d-ca7f06be721a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "44143214-4178-4517-b0e8-aac10ad590a7"
        },
        "item": {
          "id": "a42e3d44-cca8-4076-abc6-b3ea232cb376",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73972d08-1321-4db4-859a-a4e92340a9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c72e035-c142-461b-b662-aaafb0f63943",
        "cursor": {
          "ref": "2ae0aad7-a2ef-4801-bf97-5fc15d89f051",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4155516a-fe8d-414b-9b44-92411a2b8ddf"
        },
        "item": {
          "id": "2c72e035-c142-461b-b662-aaafb0f63943",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ee474e65-5a70-416a-9593-b2bcd6455fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b7878-2e62-4921-96e1-eea7c2e964d2",
        "cursor": {
          "ref": "7c206e82-b619-4847-a766-537f5611235d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8043a033-439e-4df5-838b-462961f2525a"
        },
        "item": {
          "id": "8a6b7878-2e62-4921-96e1-eea7c2e964d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "494610d5-bcad-47d0-b1e0-d322971117f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5edf95e-769f-4bc0-8b8c-e21cff494ed3",
        "cursor": {
          "ref": "446e904d-9591-492a-94a6-b43b7cc04a4d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "807a59ac-3df9-4ce3-b359-379283a7db63"
        },
        "item": {
          "id": "e5edf95e-769f-4bc0-8b8c-e21cff494ed3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fbd6f8ad-20a2-471d-aed6-b4ef897a377b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf6a448-3ece-4452-a884-4a0dea9a6cac",
        "cursor": {
          "ref": "0894cc69-339f-44e2-8d68-a19aa4f2e16d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0746f86a-bcf1-41ea-b6f6-f0f6a2195798"
        },
        "item": {
          "id": "baf6a448-3ece-4452-a884-4a0dea9a6cac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6d5016ac-4b13-4e00-b1e9-e5b2c934a0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5d0509-8196-4301-9d0d-8d156cc1fe45",
        "cursor": {
          "ref": "8bf8d4a4-f1ca-4d3c-891d-fd95dd4900b6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5818f2ae-ad75-4f3a-a815-61b7d6de3949"
        },
        "item": {
          "id": "fa5d0509-8196-4301-9d0d-8d156cc1fe45",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b601bb46-daf7-45a2-91cb-07b61963f5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462b8a90-472f-4eb8-921a-01d937921c60",
        "cursor": {
          "ref": "beb66344-e2b4-4a26-8064-a725625bf773",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2135ce2d-d87b-45e6-91f3-0cdf40249c36"
        },
        "item": {
          "id": "462b8a90-472f-4eb8-921a-01d937921c60",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "039c9b64-7177-4103-91c3-41abf41b5519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8772fd-41bd-446e-84f3-d92f25dbee29",
        "cursor": {
          "ref": "52cc248a-cf29-4a3b-8612-c9c6c2365e93",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0758b524-eed3-41a2-afbe-e84f4792aac1"
        },
        "item": {
          "id": "bd8772fd-41bd-446e-84f3-d92f25dbee29",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "267bac8e-0b56-4109-ac94-e93d444b76a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af8f10f-e0f2-435a-ac8e-9679d8bd7653",
        "cursor": {
          "ref": "4e7ab989-1181-4462-8e16-99e7741f6432",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1064cdbb-e91f-4fce-989e-b9cf0bfef14f"
        },
        "item": {
          "id": "7af8f10f-e0f2-435a-ac8e-9679d8bd7653",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "795cf8e6-45d4-4e31-b497-9ca0a71c6ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb00dd66-8b10-4dc6-98f7-768efcfba7ea",
        "cursor": {
          "ref": "a31099d5-2033-4e1c-8931-17de230fe2be",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "47088b38-dc97-45c8-82a1-bf037b5d8a67"
        },
        "item": {
          "id": "fb00dd66-8b10-4dc6-98f7-768efcfba7ea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1fb5cbde-9bc7-4ed5-bbba-76d8da1d4553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f151f6-b46c-48f1-ba30-ef057767f0e6",
        "cursor": {
          "ref": "0452e506-33a1-42cf-b724-71db3ca0baa5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "24b2623e-60eb-4401-b220-408b7fbcda37"
        },
        "item": {
          "id": "a1f151f6-b46c-48f1-ba30-ef057767f0e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fff1b60f-4d0f-4070-8961-e148363ed0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0cd05b-6f07-4888-be88-02e07b79844d",
        "cursor": {
          "ref": "52e46990-abf7-4f88-a752-c07733d4d8b5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9b5ddf11-cb50-4aee-b193-0e3dd7930df5"
        },
        "item": {
          "id": "7d0cd05b-6f07-4888-be88-02e07b79844d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "86c72c69-07a7-48b8-b437-e7942d3d393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec6c76e-7cb7-4967-ac55-d00d7d555f1a",
        "cursor": {
          "ref": "32d1af3f-a71c-41ee-b709-eb61cf78ef36",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0dfa23c1-efca-46a6-80cd-8c3df463bab7"
        },
        "item": {
          "id": "6ec6c76e-7cb7-4967-ac55-d00d7d555f1a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4528d844-3349-43c7-bf0e-dc8ce4888297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd30d83-f1f5-492d-af8b-5833a6beff2e",
        "cursor": {
          "ref": "261856dd-4d0b-4456-8aec-97210aad6d06",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e2943d13-6678-41b5-9969-dbc5f61d7a6a"
        },
        "item": {
          "id": "acd30d83-f1f5-492d-af8b-5833a6beff2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8c92d4b3-0b4d-4c5a-81d3-d4d6a6877b54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ff1b3af6-8ffa-486d-b188-c2e300607045",
        "cursor": {
          "ref": "d214088c-ba61-4b83-afea-a5f2f822cfcd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b6eccda1-1aae-47fe-bfff-deb0267b6d31"
        },
        "item": {
          "id": "ff1b3af6-8ffa-486d-b188-c2e300607045",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b1ed8a40-c337-4276-8caa-2a66c81cbfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1234310-4fcc-48d9-8160-56e290a9bf49",
        "cursor": {
          "ref": "56b35974-fb2f-4795-9e0b-8fa988047e34",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1918fa9a-42d8-4657-8350-bc08a0f17187"
        },
        "item": {
          "id": "d1234310-4fcc-48d9-8160-56e290a9bf49",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4ab8fac9-7e52-4f36-bf5e-152c06aab5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ec41f8-814d-4adb-a235-835f9ba09a21",
        "cursor": {
          "ref": "42eccd0d-6316-4cc7-ba0e-5f6cec044d87",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "73385b16-8b18-40ff-900a-8b288e70328a"
        },
        "item": {
          "id": "c4ec41f8-814d-4adb-a235-835f9ba09a21",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d4e14fa8-6919-4456-b495-2d74fe9801c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3420b4e-56ac-45d5-9558-5a9267eaee99",
        "cursor": {
          "ref": "a71785a1-b770-4920-9d15-a7e2b7edf10e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0d582dbf-29e4-4273-9b00-4c94c1db4698"
        },
        "item": {
          "id": "c3420b4e-56ac-45d5-9558-5a9267eaee99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec4ce3f2-f99b-4ad1-a00f-d6aefb976f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1961bf2f-1dfa-4309-bd53-c1c25f8b40f6",
        "cursor": {
          "ref": "c76ad775-be44-4462-9e0a-2cb908bb041a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "84e3354f-849a-49d4-9aa3-f495a293871a"
        },
        "item": {
          "id": "1961bf2f-1dfa-4309-bd53-c1c25f8b40f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79fb33d2-8419-429b-acf6-84ee35f8192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9ee8e4-e8be-4b55-872b-f10794520915",
        "cursor": {
          "ref": "e0a42ed8-e752-4cbb-b18a-b3581f09e3a8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4cb1d446-acd5-47e5-b765-29c390a5271b"
        },
        "item": {
          "id": "cb9ee8e4-e8be-4b55-872b-f10794520915",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2c42a6f1-5f24-46ab-bf4f-35c4a0262098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be00ce70-f05e-48c5-b7ad-5473f40a39f7",
        "cursor": {
          "ref": "ddda1780-72f8-4c24-8617-2e72eb5b7e33",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "79b2d902-ab59-4316-a9b3-e18bb52022b4"
        },
        "item": {
          "id": "be00ce70-f05e-48c5-b7ad-5473f40a39f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5c626f51-f719-47b0-9c06-857b759597fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143e41d0-38f5-47a9-885c-398990c053f7",
        "cursor": {
          "ref": "e4202496-7431-432f-bb29-4c187b0a8351",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "165c235c-7ce8-4365-bba9-e2be88a6d22e"
        },
        "item": {
          "id": "143e41d0-38f5-47a9-885c-398990c053f7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "90eb64cd-1ad6-42cb-94ba-9a4eb71a040f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0b19ef3e-c613-4a80-bb7d-1bbcb81a0957",
        "cursor": {
          "ref": "1648e157-1ea4-4418-8c4c-30ea3f334cf4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "873b5489-aa73-4fc4-9c81-ed8605a8f24f"
        },
        "item": {
          "id": "0b19ef3e-c613-4a80-bb7d-1bbcb81a0957",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "308c52b1-1995-49bf-af1d-bb4e29b67d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f42c563-d5ea-4763-9ef3-05804475ef1e",
        "cursor": {
          "ref": "df94d803-faf0-4965-971e-bc12b638fd35",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0e6b8736-5e0f-485b-af24-e08bfaa44036"
        },
        "item": {
          "id": "7f42c563-d5ea-4763-9ef3-05804475ef1e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ee9344bf-5e9b-4ff2-be11-0db3cbd43ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b6b666-f0c5-48a8-998a-51e4e2f24a52",
        "cursor": {
          "ref": "9abb9124-bc90-4b7e-a012-650a84d82a4c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7b33916b-8d40-48fc-8a62-3436e403c89d"
        },
        "item": {
          "id": "86b6b666-f0c5-48a8-998a-51e4e2f24a52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "62963015-bb8e-454e-b005-adf2bd258305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb0aed0-982c-4c8a-b09f-cbf3ced6ce82",
        "cursor": {
          "ref": "02f86b1c-a79d-40d7-aac3-a2a884f4426f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c0a779f6-120b-4afe-a56c-2b2dd99ad924"
        },
        "item": {
          "id": "edb0aed0-982c-4c8a-b09f-cbf3ced6ce82",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a59fbee2-8a58-4f4c-8b3f-ea7f05a8c10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdf0e45-938d-472a-9edb-d17b49c74b5e",
        "cursor": {
          "ref": "c488ce3d-2ac2-46bf-ac9a-9e89706daa80",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ca1a375e-af8b-4988-bfbd-60a3cb8be47c"
        },
        "item": {
          "id": "ffdf0e45-938d-472a-9edb-d17b49c74b5e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "95ac2766-4e04-452f-8221-6cab56f31b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53e2ba2-c64e-4c39-9d94-3f89ca1cb5b5",
        "cursor": {
          "ref": "d1f71484-3fff-4336-9f87-87d4ba947847",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f90ebbc9-30b2-4379-a78b-e5dcb752b0f7"
        },
        "item": {
          "id": "c53e2ba2-c64e-4c39-9d94-3f89ca1cb5b5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c48ae70d-5ebf-4f66-b013-e4ab9d012d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f39eb69-5621-4ca5-9ee9-5dc2ade51212",
        "cursor": {
          "ref": "46bf47f6-8ccc-4149-883d-6533288d9760",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c178521c-114e-4fd3-beb6-f37768e173bb"
        },
        "item": {
          "id": "2f39eb69-5621-4ca5-9ee9-5dc2ade51212",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "49a14575-09e1-466e-bd3e-4dd5d2d8d018",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "59e53e01-fd34-4a6c-9352-c233e1f34b91",
        "cursor": {
          "ref": "b377b725-af80-462f-8f7f-aed72b0d3243",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3725cc55-6389-47d6-9f65-d86a2de0024a"
        },
        "item": {
          "id": "59e53e01-fd34-4a6c-9352-c233e1f34b91",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c0cf7124-f7c2-4afc-bba2-a9d17f83a2bc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "2b5266b2-b882-4dfb-ad98-5b6b0ee6cd84",
        "cursor": {
          "ref": "849ba5f6-d234-443a-ba91-68513f7ccee0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2f79a302-4b61-404d-b7b4-0903aafe9fef"
        },
        "item": {
          "id": "2b5266b2-b882-4dfb-ad98-5b6b0ee6cd84",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "60eaba57-9a6c-4e7b-bc68-d1d3b107e4e1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 140,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7e4f695d-c5bf-4593-83e0-12a5147466a7",
        "cursor": {
          "ref": "60b66b5d-a458-4cdd-b4a9-36f20c991a42",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "177447cf-cfda-45eb-bae1-ab7593b59833"
        },
        "item": {
          "id": "7e4f695d-c5bf-4593-83e0-12a5147466a7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4a00aef6-422b-4f3f-bcbd-db6de64f2c32",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "2df188ca-025b-439e-8fc3-68a5884370f7",
        "cursor": {
          "ref": "83300973-f86f-48ea-bbb5-c757fa89c789",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9a929b51-0951-4af0-9351-e50de4f547fb"
        },
        "item": {
          "id": "2df188ca-025b-439e-8fc3-68a5884370f7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e73a150b-541a-44c9-bc6b-fe240be4214e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1638f6cb-fb2f-498d-8fa7-7d5ff94466b0",
        "cursor": {
          "ref": "68c79fb3-b243-41c7-8e7a-d7e04aa1e12c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c4bdcea5-504b-4eaa-95bb-11086e105ca8"
        },
        "item": {
          "id": "1638f6cb-fb2f-498d-8fa7-7d5ff94466b0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "13e87b08-acd0-484b-8e28-efa34cc7e180",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "23bb16ad-422e-4dc4-98ca-8a3c436cd05b",
        "cursor": {
          "ref": "6af2d398-54ff-4c22-a3f3-90bf8a52afa3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8854ac3e-9648-4046-bb9a-3473139f5e58"
        },
        "item": {
          "id": "23bb16ad-422e-4dc4-98ca-8a3c436cd05b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "596a40bf-5bdf-4800-abfb-cce0ea9a7657",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7778b413-19b9-49cc-ab1d-ca95cec6b17d",
        "cursor": {
          "ref": "32e1c983-0ccc-408b-8f48-caf623b2bb83",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a7ec05a6-21fb-457f-92b5-3f4de8f5ba50"
        },
        "item": {
          "id": "7778b413-19b9-49cc-ab1d-ca95cec6b17d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3185fb3c-919e-4390-aa45-efc49e4b679e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9271ac1a-f13e-46db-b226-0a0af55022d9",
        "cursor": {
          "ref": "0084c993-5b63-4df1-b1ea-a308685d570f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9152e6ef-9a88-44c4-bf55-09e5f7159d97"
        },
        "item": {
          "id": "9271ac1a-f13e-46db-b226-0a0af55022d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e7dffa2f-2a40-4090-b67e-9017990690f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d261225-f1ad-40e0-9397-14b79a0e4b42",
        "cursor": {
          "ref": "5eb822f3-8814-4f80-b379-b4166db7ac3e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "57b4f5fb-f9d6-4f1c-bac2-687a208bbc14"
        },
        "item": {
          "id": "5d261225-f1ad-40e0-9397-14b79a0e4b42",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "df9f3c4e-78de-49ee-866c-ec3d3f2d1f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05ada3e-523b-4ec4-a562-ebeba9118216",
        "cursor": {
          "ref": "c6846d81-b498-4a83-9909-b2a156d986af",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1b2455a2-c46c-4d0a-940a-1dd7a077d6d0"
        },
        "item": {
          "id": "e05ada3e-523b-4ec4-a562-ebeba9118216",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f9a21424-9540-4e37-9da4-b2bc382b504e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dede07f-9ad3-4753-b371-cf5289e625c7",
        "cursor": {
          "ref": "13d92900-b7ef-4a55-bd38-7daa71f124c7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1e998439-7cb3-4eca-b21a-deb936af5464"
        },
        "item": {
          "id": "9dede07f-9ad3-4753-b371-cf5289e625c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e0315951-a575-4202-9497-ec6bce7c23ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5080a2f4-4e35-4f63-bf9c-531a48f16601",
        "cursor": {
          "ref": "597060a4-e2b4-40f0-b336-b2deaaf0c9dc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2c54f206-6b9a-449e-8a16-a4059abb136b"
        },
        "item": {
          "id": "5080a2f4-4e35-4f63-bf9c-531a48f16601",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f88efc52-1c08-4932-8db8-e5f21f08efe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a666a4-ba5c-4f41-94ef-51f924712d8d",
        "cursor": {
          "ref": "da4b3cd9-7330-4b9b-904f-502fae815770",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "41a8b5d4-7b71-48b6-916f-c3c7fa09d661"
        },
        "item": {
          "id": "30a666a4-ba5c-4f41-94ef-51f924712d8d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1f071389-433e-4faa-99a1-338004fb173c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c66231-fd1d-4ba9-b646-48bd18c81656",
        "cursor": {
          "ref": "e0b79c91-4d05-49ec-b54e-a07128b742fc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cdc90a66-10d7-4767-b1f5-e55601e9c647"
        },
        "item": {
          "id": "61c66231-fd1d-4ba9-b646-48bd18c81656",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "56d6f4db-05df-479a-9d18-87e1b206a9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afea4453-63fc-4907-b533-04bc515899ab",
        "cursor": {
          "ref": "a5043046-aa17-44fb-94d0-20d65cbf75b1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fd8fc354-762a-45b3-9f2b-1676ba04831c"
        },
        "item": {
          "id": "afea4453-63fc-4907-b533-04bc515899ab",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aa2e55f4-ccd8-430a-a381-ef15f7ca11a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d103c5-488b-45f5-82cd-8b1702df4d2b",
        "cursor": {
          "ref": "3430b446-bc6c-45f4-ba2d-cd0e2959177f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e21e64a1-dc2a-4687-9c2d-c2c143911df2"
        },
        "item": {
          "id": "b7d103c5-488b-45f5-82cd-8b1702df4d2b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c7b277e4-6bad-413e-bccd-062d6d38b4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae839c0a-2ee6-4fd7-a0fe-17333edae42f",
        "cursor": {
          "ref": "435157fa-a579-4730-8a2f-ebc3ec717e61",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "696ec5b2-77ce-4176-ad77-c13ccad2fbea"
        },
        "item": {
          "id": "ae839c0a-2ee6-4fd7-a0fe-17333edae42f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a0d87564-c441-4913-8f3e-993dfdd04bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3355324b-9d63-430d-8fd9-965e8628f201",
        "cursor": {
          "ref": "bf4a1ee6-4c91-4299-b6db-71d49a5b7427",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ee53b087-69ad-4261-b46f-ed0097820bdc"
        },
        "item": {
          "id": "3355324b-9d63-430d-8fd9-965e8628f201",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "20302337-a813-4333-9d4d-eb5ec2443faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c117ab-ab39-4d58-ae02-a0152b26f481",
        "cursor": {
          "ref": "ca266e9c-8cf5-4fcf-ab82-87d936e164ed",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6db75c53-c269-4c8e-8b1a-0b74ab006641"
        },
        "item": {
          "id": "70c117ab-ab39-4d58-ae02-a0152b26f481",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "35a23e1a-1dc5-4f04-8bc8-a568bace2f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705ac437-4632-45ee-92b1-8cea557a245d",
        "cursor": {
          "ref": "e7d24f5b-275d-440e-bc97-30283c5ae83f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "01f736e9-73c7-41ba-896d-7c035896e5e5"
        },
        "item": {
          "id": "705ac437-4632-45ee-92b1-8cea557a245d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b90a552a-15d6-4281-9789-c7cbb0a5caa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a710ad0d-5ce1-4957-835c-1564c1ca79f0",
        "cursor": {
          "ref": "44bcaf7a-c534-48a3-8e20-df2e380ee236",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "84868d1b-db02-4987-93c2-91fed4826341"
        },
        "item": {
          "id": "a710ad0d-5ce1-4957-835c-1564c1ca79f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "542016be-b8ab-4cc4-b0c5-f7cf6108b56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a2b2c2-8c70-4ac8-81f6-33509b6a16c0",
        "cursor": {
          "ref": "05974584-c91b-4fe8-9a4b-5de31ced29c5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4831c4db-212c-4fe0-a40b-5446e85f0190"
        },
        "item": {
          "id": "48a2b2c2-8c70-4ac8-81f6-33509b6a16c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3b4d124f-ebc6-4d99-88a4-6e7c8403e294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cacbf6-eade-46c9-a32b-8b00b7017195",
        "cursor": {
          "ref": "04fffc3b-04c1-46b5-a584-3ff6207d8ba8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "77faf1d1-c06a-4587-911a-8b76ff4ad1a8"
        },
        "item": {
          "id": "80cacbf6-eade-46c9-a32b-8b00b7017195",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "282e2eae-2bf0-44b1-9788-be7c77e84ad4",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6b804f57-6eab-4904-8ad4-8fca0506b85e",
        "cursor": {
          "ref": "3af4323b-2223-4408-a1c1-db5a80ef74c4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3e3db750-ea6b-475c-8929-2b89b315c164"
        },
        "item": {
          "id": "6b804f57-6eab-4904-8ad4-8fca0506b85e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5284b2a1-295e-4964-8d8e-8de4e417c272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230cc61a-51da-4b90-a911-246e07f5fc66",
        "cursor": {
          "ref": "6e65b854-fe9b-4323-8c12-f2e41bccdfe6",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6ac651e0-9562-43fd-9979-da38cd8c39a2"
        },
        "item": {
          "id": "230cc61a-51da-4b90-a911-246e07f5fc66",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd0c151a-11bc-402b-bf8a-995dce8aa5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260cc80-97ff-4255-b4d2-73ae9ded235a",
        "cursor": {
          "ref": "ed1645aa-0c63-412a-b3c5-62a48fb127fe",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cd873cbd-608b-4e55-a497-81e1e9ad0ea8"
        },
        "item": {
          "id": "9260cc80-97ff-4255-b4d2-73ae9ded235a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1c60d7c7-7e8c-4193-b19d-9cca420d0879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3e34df-d4c7-4014-b3e2-1647b30b77aa",
        "cursor": {
          "ref": "782a58f7-9bbd-4099-92e1-9275044afa62",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aec4acd7-f093-48c1-9f82-448d33a0bacb"
        },
        "item": {
          "id": "ea3e34df-d4c7-4014-b3e2-1647b30b77aa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "21eced5e-8182-43d2-96db-ea7a78fab6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fa3357-a716-494a-9fe1-69e911762980",
        "cursor": {
          "ref": "58509adf-2b1e-41a9-ab7e-379df75b857d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "02ad366c-8f99-4c30-88a7-6f76316fdfb2"
        },
        "item": {
          "id": "79fa3357-a716-494a-9fe1-69e911762980",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "52e8acbb-03bc-4960-aa31-5d02dbeac524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6790ba-7489-421e-a702-5d04ff2cc556",
        "cursor": {
          "ref": "8cdeca14-e8c5-43bf-8bf3-e2c099d4230a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8e57e59c-8cec-4d36-8e62-212e4dcd9daf"
        },
        "item": {
          "id": "2d6790ba-7489-421e-a702-5d04ff2cc556",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4cd9ed84-935d-4ba5-9a42-a282102238de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc630f-76b6-444b-9765-a0573e51e1d1",
        "cursor": {
          "ref": "8fd739f2-e380-4b49-8b24-2718b71089fe",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9c8f65d6-aaa7-43ef-90fe-faed2256e9c6"
        },
        "item": {
          "id": "04cc630f-76b6-444b-9765-a0573e51e1d1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "30cdb3a0-6913-4830-94f0-0f08eb23a7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0056c64-e6fb-468c-be70-dbac0b81ec62",
        "cursor": {
          "ref": "d7361697-0335-4e8a-84ab-def76018b1df",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a71eb988-6c06-47e9-ad35-b76d983b7336"
        },
        "item": {
          "id": "e0056c64-e6fb-468c-be70-dbac0b81ec62",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bf9f8435-0fb2-40d8-85db-445a8b177316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b859d2f8-f33f-44df-a6ad-d85b59ff242d",
        "cursor": {
          "ref": "1425b1fc-7ba8-4f2f-94bc-bab8a20cd48b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "410b6d1e-abc5-414a-ac4a-caf78fd43cb8"
        },
        "item": {
          "id": "b859d2f8-f33f-44df-a6ad-d85b59ff242d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "018a8c18-8099-436b-9492-ec60161fd0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef82798b-8912-46cb-bd64-788c65e6ef70",
        "cursor": {
          "ref": "4bbcaa0b-9d5c-4b9c-8e00-8faf52f5c69a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "08f7b567-7c30-4150-9a6a-cf6110d55217"
        },
        "item": {
          "id": "ef82798b-8912-46cb-bd64-788c65e6ef70",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cbe6d549-f55f-48a7-b610-cc844294db59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efbed94-caf3-4e19-b9d2-3f595c14e5d3",
        "cursor": {
          "ref": "cb674710-8bca-4f91-9d34-91b79a970224",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "11a0fc51-4589-4f0e-bdc9-7d3f470c7991"
        },
        "item": {
          "id": "2efbed94-caf3-4e19-b9d2-3f595c14e5d3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0d49e54a-8d83-429a-9743-6b9425ccc211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f3c9d2-5ea1-433d-b91e-eba5bce7184b",
        "cursor": {
          "ref": "7d9e361c-0890-4cf5-ac76-97458f7922ea",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fe227315-605e-450b-8d6a-fd8c433c8675"
        },
        "item": {
          "id": "26f3c9d2-5ea1-433d-b91e-eba5bce7184b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5966f259-dcad-40ca-945d-9ba9e3121a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d4c35a-c7fa-49d0-9d06-65b4e3e3d425",
        "cursor": {
          "ref": "84474ad5-5c9a-4c1f-9706-da5da8ca8322",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "45706a5e-c371-47eb-b0ce-9fb9f8765c9f"
        },
        "item": {
          "id": "44d4c35a-c7fa-49d0-9d06-65b4e3e3d425",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "698f46c7-a198-4503-8d7b-2c571499912a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03e738-d647-40c0-b0a1-bd703c03e8c9",
        "cursor": {
          "ref": "4d78cd0a-5bb3-4649-b02f-0f5820507002",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "86a6a0ff-e072-4ac6-a3b0-cf3d20882749"
        },
        "item": {
          "id": "8f03e738-d647-40c0-b0a1-bd703c03e8c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1a1df8db-03dc-4b5b-b904-ed7dc5e1cdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fe7852-4ab6-4615-8996-bda583391d00",
        "cursor": {
          "ref": "baf2a78e-914c-4f4b-8e42-68d6e6b2a28f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a4a49ae9-241e-4773-a031-c941dd5f5df7"
        },
        "item": {
          "id": "f4fe7852-4ab6-4615-8996-bda583391d00",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "46090651-ab54-4b2a-b0bd-538022457ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04111c10-4ffe-4154-844a-523df8cb92b8",
        "cursor": {
          "ref": "79deea7e-d065-4691-8442-e4e672947676",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "afc5a135-eafa-4c5e-ace5-4014e911a853"
        },
        "item": {
          "id": "04111c10-4ffe-4154-844a-523df8cb92b8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5a170ff6-e148-412e-a68f-a44d0bcf8486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882c7676-2918-4e07-b020-d408e5bb0ade",
        "cursor": {
          "ref": "59f87b7a-6b64-477f-ae04-0f0d3ee66d1b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "50473b5f-493a-4ab8-9dd1-0bca707a9e88"
        },
        "item": {
          "id": "882c7676-2918-4e07-b020-d408e5bb0ade",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "60cd59bf-00f6-4157-b779-7e6372a3dc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1decaf2f-884f-4058-aa09-ff646f9b00a1",
        "cursor": {
          "ref": "3c2a500c-57da-4ce5-94cf-b3042584633e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bde0a09b-a315-4c39-9129-56cd63723526"
        },
        "item": {
          "id": "1decaf2f-884f-4058-aa09-ff646f9b00a1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e256424c-9295-4722-a923-da326fca1422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b99e8b-75b9-4d38-9066-2cf0c167d1bb",
        "cursor": {
          "ref": "70a0e5cc-ecd0-450e-b022-621678974ebd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "579f7f42-1ff6-4c66-aeb6-20eab56993d9"
        },
        "item": {
          "id": "19b99e8b-75b9-4d38-9066-2cf0c167d1bb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9604728d-7ffa-47de-8140-39fd6d87e0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511f1db2-48d5-4ceb-9a37-73ba081ff439",
        "cursor": {
          "ref": "af38b962-3079-4771-837d-c1005267e8ba",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "912cefc8-a4f5-4ae8-8489-ebf88429dd78"
        },
        "item": {
          "id": "511f1db2-48d5-4ceb-9a37-73ba081ff439",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2ad50c41-8921-4da4-bf98-a2602bc38d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c6f6a5-f244-4505-9b23-c17ff674b928",
        "cursor": {
          "ref": "9416ecc0-ec80-41d6-9dd8-378582fe171a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9b9ee606-a16a-4bb1-bfd7-38abdaa4c4ad"
        },
        "item": {
          "id": "16c6f6a5-f244-4505-9b23-c17ff674b928",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9eed5fa2-00d1-4fef-914e-80e1becf9cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb89432a-f5a9-4ee0-a56a-c7198c1613ec",
        "cursor": {
          "ref": "e349f634-30d2-415c-b1ec-15e0c61ac0f6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fceb67fc-a30e-4581-be07-84110a425a3b"
        },
        "item": {
          "id": "eb89432a-f5a9-4ee0-a56a-c7198c1613ec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7f727c34-8b47-4c61-b6f5-ba54c7b25536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d24128-3d08-4af7-bbc7-9047982c276f",
        "cursor": {
          "ref": "ed9360ea-63b4-4b7f-93ae-f06c699b07e0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f322137e-f69d-4abd-a089-4fa3853e42d8"
        },
        "item": {
          "id": "13d24128-3d08-4af7-bbc7-9047982c276f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c12764c-2287-491d-84e1-87c801c8a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eb69cd-34c2-485e-87d5-e49cf9c3fa78",
        "cursor": {
          "ref": "269e6fa6-2583-459d-84c0-958d9e4d4cda",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "74216f48-d884-4740-a83d-f4476522cb39"
        },
        "item": {
          "id": "e8eb69cd-34c2-485e-87d5-e49cf9c3fa78",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "54f8a5d6-0982-4523-a9c4-b9d85b7ac4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04b78bf-97f3-4bc8-b781-da8d6e25d115",
        "cursor": {
          "ref": "c8017cb8-77c0-4661-b422-895299f07a3c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4205295b-753c-4730-b631-b23fc39c4ce8"
        },
        "item": {
          "id": "d04b78bf-97f3-4bc8-b781-da8d6e25d115",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4d341892-2ded-42c5-9c08-3fcee0cb6972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987a2da8-7a0f-4e6a-b02d-6de2d140ff40",
        "cursor": {
          "ref": "8f4edf37-0755-462f-ab59-ac309277659c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a275d52a-f91d-494d-93a4-0975a6890c92"
        },
        "item": {
          "id": "987a2da8-7a0f-4e6a-b02d-6de2d140ff40",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d0e30ef6-c37f-4e3e-b74e-669c9f44980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acdc7c7-6732-49c0-8907-305e8cd5f616",
        "cursor": {
          "ref": "c99d6a25-480d-4aca-9406-e8bf039fae39",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "300e7683-b554-4d7b-a4e1-f681f7dd6d40"
        },
        "item": {
          "id": "8acdc7c7-6732-49c0-8907-305e8cd5f616",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1085484f-6e57-4be0-952a-27a46a345e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b36922-e4eb-493a-9497-f3922bf93984",
        "cursor": {
          "ref": "6525b6d6-a0fd-49aa-9e79-440c0a62d7f8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "81c36e81-3ad7-4d77-a776-4ce0812dd675"
        },
        "item": {
          "id": "75b36922-e4eb-493a-9497-f3922bf93984",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e2a99a82-e45c-402f-8ffa-74be91294568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2334e86b-5172-46dd-912f-13a8bdd1353d",
        "cursor": {
          "ref": "b12a584e-923f-42fd-a7aa-ad60f69f44e9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "79aa5bcb-e14d-40b4-8e17-2aa5ac82de17"
        },
        "item": {
          "id": "2334e86b-5172-46dd-912f-13a8bdd1353d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "11191a4e-26fb-4cb7-857c-e64fd839558e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ebc2ea-5102-4ac3-b6a6-e3958791bbe8",
        "cursor": {
          "ref": "bc73683b-b04d-4a2e-b148-8dda8c72f60c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8a9e60b7-1480-408c-8f84-06960da05a91"
        },
        "item": {
          "id": "37ebc2ea-5102-4ac3-b6a6-e3958791bbe8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "84be071b-c924-4202-a4c5-c5bd202804eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aba4a0c-e023-4ab6-b44f-6ff0661d3d92",
        "cursor": {
          "ref": "e63f3005-a26e-46c8-91c9-7c9f03b087c4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3e5add87-1b4b-4db5-adbc-efe19348c29a"
        },
        "item": {
          "id": "8aba4a0c-e023-4ab6-b44f-6ff0661d3d92",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1e09e8ed-f400-4e51-8d7e-4224c47f190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d899b80-490d-4225-84db-b5011f6b867a",
        "cursor": {
          "ref": "820db811-2f51-465a-b0a0-6161b73969d5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d16653ec-40af-4d20-b554-962f0bdc322b"
        },
        "item": {
          "id": "2d899b80-490d-4225-84db-b5011f6b867a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "41051d4f-3070-43a1-9055-b2b0e614d12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3703503-e75d-45b7-b192-d48ad0ca2ee5",
        "cursor": {
          "ref": "2c4f4dc2-fd2e-44e1-82ac-9d9d9abcf36d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7ab4573e-b846-4973-b8ce-262acb704be4"
        },
        "item": {
          "id": "e3703503-e75d-45b7-b192-d48ad0ca2ee5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "33e09d1c-7241-4bc0-9167-95644feafc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87740cf-2d09-4a37-abcb-a900c086b29d",
        "cursor": {
          "ref": "4a82b313-99c5-423e-8da9-9d29bfb69dc2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "675358cf-a28e-44d3-80d0-1d85113c3e90"
        },
        "item": {
          "id": "f87740cf-2d09-4a37-abcb-a900c086b29d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c0085c90-c87e-499f-a29a-b41dcdf5b2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e513598a-963f-4a4f-b7ea-099816320e31",
        "cursor": {
          "ref": "1bf80a09-7e88-4575-8389-2a4135776fb4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a6aad35d-21be-4486-866e-4dd7e6161c1e"
        },
        "item": {
          "id": "e513598a-963f-4a4f-b7ea-099816320e31",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ce941a8b-a73f-4e7a-88a6-974a8bfa2662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8d94f9-2956-4386-8887-6323f83d31b2",
        "cursor": {
          "ref": "615a152c-c2cd-497c-b798-1cf9429b59de",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f04e6884-442b-4aff-a196-9e8a48f616eb"
        },
        "item": {
          "id": "dd8d94f9-2956-4386-8887-6323f83d31b2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "68286462-8d55-4941-aa71-b0647073f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e6640d-a104-4ef6-95e9-72f7ac11bc0d",
        "cursor": {
          "ref": "8e160c56-da50-4791-b0c9-4e659d577cff",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8ae76690-f719-4517-86b5-6e3269c5fcd3"
        },
        "item": {
          "id": "38e6640d-a104-4ef6-95e9-72f7ac11bc0d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a5c0c25-6c9f-44b7-be22-6c97c94452e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfa5ce7-d199-4a41-ba71-4e311924198d",
        "cursor": {
          "ref": "4d1ea7d1-e47d-46de-add0-e7da19aba3d2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e34b5e7d-7a81-42c4-932c-b04be7f8c39f"
        },
        "item": {
          "id": "6cfa5ce7-d199-4a41-ba71-4e311924198d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02a376c2-6519-46f0-aaa0-b51e03796d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b4ea72-640d-494e-b935-d89f04d90e85",
        "cursor": {
          "ref": "caf10631-95d5-4ffe-bf16-d8f060b051a1",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4b70caa3-db42-4cb6-af6c-31741d914cd6"
        },
        "item": {
          "id": "f7b4ea72-640d-494e-b935-d89f04d90e85",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "26947833-ef54-44aa-824e-bcc7d9d8d6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e1d1b1-7f90-4771-875b-c2140dcb35b3",
        "cursor": {
          "ref": "2a3f5d6b-ee36-4fb4-a606-5380b5737ca5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "262f2b7d-5817-4fe4-b877-e270bb4f1152"
        },
        "item": {
          "id": "f9e1d1b1-7f90-4771-875b-c2140dcb35b3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "148a305b-70cb-4c4e-86e1-51b8a9b2999d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090ada32-4c8d-4a2f-a644-dfde227dbd2a",
        "cursor": {
          "ref": "774266f9-381d-4345-864a-e06c33b9d2d9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f1e37801-f4de-47a9-8784-8a091d6eb378"
        },
        "item": {
          "id": "090ada32-4c8d-4a2f-a644-dfde227dbd2a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "45df297f-69d9-4ab4-ba10-7f90d788f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8702b7-8d01-423b-b1df-d0d7f74ca818",
        "cursor": {
          "ref": "efb797d1-ac71-4e28-be9d-e5073be04f1f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5380790e-6f0b-4a00-85ba-8dbb0a07a70a"
        },
        "item": {
          "id": "9d8702b7-8d01-423b-b1df-d0d7f74ca818",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6b2314a6-233b-490a-8eeb-c587fe0f1680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e925a921-10dd-41a1-af58-4fe3a104ac6d",
        "cursor": {
          "ref": "665d9305-066c-4114-9ea2-b244eb2b5e5d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a7be684-e479-4061-8a72-03535d3bb3ce"
        },
        "item": {
          "id": "e925a921-10dd-41a1-af58-4fe3a104ac6d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fa93fdd3-8f26-4350-95dc-ce419a831b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710470b5-61df-4b37-8d66-553715f93d8d",
        "cursor": {
          "ref": "cf429f8c-04eb-4b22-a401-f345fd4a3c93",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6854bbad-4b66-43ba-b818-6788940647f8"
        },
        "item": {
          "id": "710470b5-61df-4b37-8d66-553715f93d8d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84c7bdd7-39b4-4456-a9f1-a68fb53880a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e48d6e-71c6-4a03-b88f-f89fb019fb5f",
        "cursor": {
          "ref": "364e42ad-52a5-46bd-b51c-de228f85cf0e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1036c700-30a8-400e-9be2-132283d68170"
        },
        "item": {
          "id": "a5e48d6e-71c6-4a03-b88f-f89fb019fb5f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aa558cd8-aebe-49ac-b8e6-6c29f859f029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b60d24e-dcee-4da6-9835-1a0e9d7b280e",
        "cursor": {
          "ref": "dbe6d162-c460-4797-94f8-1cf5b37cf7b5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "61d3384a-48c8-4cdb-b47b-97fd7644d5a2"
        },
        "item": {
          "id": "5b60d24e-dcee-4da6-9835-1a0e9d7b280e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "23f0448d-aca9-446b-98eb-6079188aec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6159300-27f3-4733-9b16-3e03cec3e982",
        "cursor": {
          "ref": "1e212486-1f47-477d-a9d4-be3b52a03f5d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bacf33c5-2f5b-4cfb-9933-0de6b2d1afb5"
        },
        "item": {
          "id": "b6159300-27f3-4733-9b16-3e03cec3e982",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "13d61273-a9e4-4891-9b6c-1b96c3597dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2ef26e-bafb-4090-86cc-5b272a5a52f4",
        "cursor": {
          "ref": "697e5448-efc2-43d3-b058-d335c1cbbb7a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "beb78b3f-8d55-4d6e-95ff-a1040b1acd93"
        },
        "item": {
          "id": "ab2ef26e-bafb-4090-86cc-5b272a5a52f4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "48a54279-6766-46f8-bdf8-6844c9533866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ffcf10-bdd2-4a5b-9ee2-a758da77cb7a",
        "cursor": {
          "ref": "fb9a9098-c35c-4dab-b277-14f84f6ccdd6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "39807581-e3fb-4543-b635-84bfb6af7f59"
        },
        "item": {
          "id": "e6ffcf10-bdd2-4a5b-9ee2-a758da77cb7a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2afd9cb6-c53f-48e6-9d23-bde410d1bdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86764ed-8309-437e-aad2-bd7dff912361",
        "cursor": {
          "ref": "74aaf138-b527-4e12-aa5a-59bd45bd2301",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b636a12d-e74b-41a0-a942-a20cf0f7bd18"
        },
        "item": {
          "id": "d86764ed-8309-437e-aad2-bd7dff912361",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f68a4f39-069f-41d8-972f-6a4f2df00b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00656837-5471-494d-a803-0cb3af8359d9",
        "cursor": {
          "ref": "89b27dc8-b199-44d0-bd70-521bdfedd754",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7f367b20-2905-442e-b6c8-41328303c876"
        },
        "item": {
          "id": "00656837-5471-494d-a803-0cb3af8359d9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d251e924-09b5-4cf5-b4e1-af09cea66a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a61d08-0b38-4507-98c9-e7921c22086f",
        "cursor": {
          "ref": "2898568c-4b6d-4024-aca4-0923c58a9578",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "08b6f45b-8971-4d72-9f57-df36e77e01ca"
        },
        "item": {
          "id": "d5a61d08-0b38-4507-98c9-e7921c22086f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "155771bb-44b5-49ea-853d-d9871303c8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fd297a-2f52-47c8-b65d-74f606c7da46",
        "cursor": {
          "ref": "ebbc171f-1913-4e04-9abc-912a243a7cc3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f4fdee6-8965-420f-8fec-7936c1c61ca0"
        },
        "item": {
          "id": "83fd297a-2f52-47c8-b65d-74f606c7da46",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7a08bd4d-a950-48cc-9449-6e5351caf737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc3aead-edb1-486b-8e58-031815e515b0",
        "cursor": {
          "ref": "aa3c3f5b-cb5a-400b-8fb4-beaaf1c8a7d8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7590eab3-e31f-4ff4-aca7-3bfb50fbe72a"
        },
        "item": {
          "id": "5bc3aead-edb1-486b-8e58-031815e515b0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b97e7a9b-14d6-44be-a651-09286496e0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af82be63-6060-4aab-81bb-f932b11fb0bb",
        "cursor": {
          "ref": "2ec369a6-b8a4-41c4-b516-ba4ca24b7772",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0cd9da68-e917-493c-b19c-bc71cf749eeb"
        },
        "item": {
          "id": "af82be63-6060-4aab-81bb-f932b11fb0bb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a2c9f43d-9004-49b4-9860-a92476344801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68683da-346e-4c82-a8a9-49f7f082406b",
        "cursor": {
          "ref": "32890043-3bc0-460a-a495-439b171604fe",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8015b03e-97af-44a2-98e6-eef0283f94f0"
        },
        "item": {
          "id": "c68683da-346e-4c82-a8a9-49f7f082406b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d96be8c1-6e71-4ae1-8242-fddc6c4b4927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0779d881-6fc8-4163-8673-b94cd706db4a",
        "cursor": {
          "ref": "4dde3d3a-c9a4-4cda-b592-fa607bd986dd",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "47e84a9d-827e-4f72-bfc1-a2f398a60668"
        },
        "item": {
          "id": "0779d881-6fc8-4163-8673-b94cd706db4a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9ec329ee-bd4d-4455-b324-5ef983526489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8bd43c-51ce-4765-89de-cd90e5862977",
        "cursor": {
          "ref": "9b931830-e252-4463-b278-b8ba7bb9f7e7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8d86c6e8-332c-43e8-a7bd-559718627661"
        },
        "item": {
          "id": "2d8bd43c-51ce-4765-89de-cd90e5862977",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "379267b4-eaa0-4282-83aa-f5082484f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfda8ab-04f6-4f8e-9d19-1233ec2a7120",
        "cursor": {
          "ref": "77923ffe-7a03-4b8f-8d0d-d110a7cca8a9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "78d8d2d4-23d9-4bed-b44a-a72fc677d647"
        },
        "item": {
          "id": "9bfda8ab-04f6-4f8e-9d19-1233ec2a7120",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "140fc58f-0264-409b-8d17-4f171ec7fdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6ccb9a-3786-4af3-bf8d-42cd35e0e752",
        "cursor": {
          "ref": "6a8cf7a1-ee29-41f2-a7dd-395f7cac7647",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ee83257d-4cb9-4793-81c7-e8bb9b62da91"
        },
        "item": {
          "id": "fc6ccb9a-3786-4af3-bf8d-42cd35e0e752",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dc7984b9-c4c9-4372-870f-48f90bbf9e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d08aef8-9315-46af-bf93-23edd44dcf9e",
        "cursor": {
          "ref": "6e0ec53d-f331-40c3-ab2c-a0cc2a541ff0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c4357f31-c31b-41cc-9cc9-b39592c8ee45"
        },
        "item": {
          "id": "4d08aef8-9315-46af-bf93-23edd44dcf9e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4db79d15-cdaf-47ad-a9ae-e13ee8a68227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f711539f-4c1c-4567-859a-df1f59c81169",
        "cursor": {
          "ref": "818b3c06-5bfa-45ab-92db-aeb7058016a9",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1344d99f-ac72-4eff-ba80-7128ae37540c"
        },
        "item": {
          "id": "f711539f-4c1c-4567-859a-df1f59c81169",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "885a19c6-6956-4c0f-b3ab-710e57455a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db186b5f-1088-43d0-ba00-9def9f063a16",
        "cursor": {
          "ref": "b19224f5-d6f4-4bb2-bd53-dfd467bd2dd3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2eaf87da-efb2-4120-bf1b-c8cb18cbac60"
        },
        "item": {
          "id": "db186b5f-1088-43d0-ba00-9def9f063a16",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "94f5391e-49e0-4cc7-977f-f7adaf99491a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1ca946-ffd0-48cd-9b63-3d99d0eba51a",
        "cursor": {
          "ref": "2af7448b-4d76-4cc7-b0f2-d1c0a8ed0ddf",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a37045f0-206b-4de1-a61d-8bae3dc5f76c"
        },
        "item": {
          "id": "da1ca946-ffd0-48cd-9b63-3d99d0eba51a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8fd53d49-c5a7-4534-985e-5f9809dd901a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbff7a2-30ba-4363-9b58-e7d4ec71f917",
        "cursor": {
          "ref": "ff8f60f3-e17d-4e00-91f4-372c022170a4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2732e9f3-e1b6-499e-9b2d-8b032eaad8f5"
        },
        "item": {
          "id": "ecbff7a2-30ba-4363-9b58-e7d4ec71f917",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0e16cf80-3a12-43a5-96d2-072b7380a084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a956e1-d0b9-4739-8b08-e71bd07b632d",
        "cursor": {
          "ref": "dc39aebd-62d3-406b-ac2b-66df011060bd",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9f830c55-66d8-432b-a77b-282cdf99700f"
        },
        "item": {
          "id": "c7a956e1-d0b9-4739-8b08-e71bd07b632d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "322f2193-3e09-45f6-b89d-190d192b6a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df90fa2b-5b2e-481d-89a1-df33a7e3c8d5",
        "cursor": {
          "ref": "b8e122f5-5fe9-402c-9a94-6123a3e47f34",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e6062b60-f9c3-4058-9d85-eab8919b33cf"
        },
        "item": {
          "id": "df90fa2b-5b2e-481d-89a1-df33a7e3c8d5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8b632e88-bb46-4e92-b05e-5356a5851681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb056fe-b6d4-4e76-bdc8-ec59f24c31ff",
        "cursor": {
          "ref": "f9c2be96-f51d-4ee5-9787-92d48aeaaf53",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8da77d6c-3f42-41a0-a69f-fe9642546e51"
        },
        "item": {
          "id": "bcb056fe-b6d4-4e76-bdc8-ec59f24c31ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "25f64841-27ae-45d1-9037-0f9a2eae7e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba63fc4-b49e-4476-b5b2-f9c83b06db33",
        "cursor": {
          "ref": "364838c3-13fc-44cd-8cd9-440e5ba6adb0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ea27c8fd-611b-4e26-af99-52ac294be7b1"
        },
        "item": {
          "id": "0ba63fc4-b49e-4476-b5b2-f9c83b06db33",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "df1bc66e-0ce2-4f14-871d-4d15c2156ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7f273e-fcc3-4027-8064-691b15faa13d",
        "cursor": {
          "ref": "aa4b9bab-91f2-468c-8b5a-6d52de73a60f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5272543f-fe8a-4705-8615-1beedd018144"
        },
        "item": {
          "id": "ae7f273e-fcc3-4027-8064-691b15faa13d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6a828b54-ffbf-4999-90ca-a67358602762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa7a00d-e8fb-4356-9ac9-f412938d7ac9",
        "cursor": {
          "ref": "9fc8da47-49d6-4f7a-a9b3-e0dc49bc764a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "72699e35-8e45-4932-b571-bd7498d0ffaf"
        },
        "item": {
          "id": "2aa7a00d-e8fb-4356-9ac9-f412938d7ac9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "459bc900-496f-40ee-a26d-5f2ba4ba74f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adecd8c7-8f82-4b9f-a4a2-61a10cafb271",
        "cursor": {
          "ref": "30ea5120-1117-42d9-b603-a689fea177b7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f3b34f82-150c-458c-8019-ffea7ad67727"
        },
        "item": {
          "id": "adecd8c7-8f82-4b9f-a4a2-61a10cafb271",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d198adf9-b37a-478a-84cb-36e1971e6e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf16af5f-249b-41fc-921d-604da716fd47",
        "cursor": {
          "ref": "a09783b7-b2d3-4daa-a968-43d74e822649",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "53c0d596-4945-42e2-9c85-1ffde1226d20"
        },
        "item": {
          "id": "bf16af5f-249b-41fc-921d-604da716fd47",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "444255a6-db49-41c2-a822-e77bc37c1316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed985649-779e-4f7d-8a22-caa4268c1329",
        "cursor": {
          "ref": "7e04d466-1b88-468d-86eb-1b1876b9b5fc",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00e7cb29-c870-446c-bc87-917a32c14968"
        },
        "item": {
          "id": "ed985649-779e-4f7d-8a22-caa4268c1329",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "85f50968-19c2-4115-92a4-3583ae433bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429269ee-e4ce-494b-912b-e93a47eca08d",
        "cursor": {
          "ref": "15a6a5b6-9c9c-45ba-8f3a-dd6eda36dc80",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eb1aa57e-d493-4ebd-ab66-97bc33126a30"
        },
        "item": {
          "id": "429269ee-e4ce-494b-912b-e93a47eca08d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f8cd95c3-17ef-43a2-88cd-85dedd2bac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fe54bc-23b8-421f-99e6-31890cf4bfc2",
        "cursor": {
          "ref": "df15087a-8067-4860-a860-af88e6b879da",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e9ea93e2-4a54-4da9-9594-3dfbda55310c"
        },
        "item": {
          "id": "83fe54bc-23b8-421f-99e6-31890cf4bfc2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6cb54209-2336-4f83-96b3-0baa1d858e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d669bb2-a790-44bf-af19-3166d08cdf66",
        "cursor": {
          "ref": "1edb8972-1f19-48a1-9a47-3dce039fc3e1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e7ddf1db-107f-4a5a-913e-315640349ee1"
        },
        "item": {
          "id": "9d669bb2-a790-44bf-af19-3166d08cdf66",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1721db3b-33d7-4310-875f-8ad8f86931df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b319c335-ea26-4172-9ebe-560d88851b17",
        "cursor": {
          "ref": "359706c8-1c4e-4a30-9473-7016e7c3dfa6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "afadbab1-76c3-4505-88c7-bc708f2bac6f"
        },
        "item": {
          "id": "b319c335-ea26-4172-9ebe-560d88851b17",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "856df7c5-0394-4779-a763-15cf64cbbb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09071f82-13be-4333-acf7-9ec5d2205dbd",
        "cursor": {
          "ref": "af85a689-f947-4b44-988f-a0b97ac76b13",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a5d952d9-fa50-4d2e-937e-a823a5303e86"
        },
        "item": {
          "id": "09071f82-13be-4333-acf7-9ec5d2205dbd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "001a7c1b-9480-4803-84b8-e3cb15e6c791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489ebaeb-e484-491c-8886-753d0625e9ed",
        "cursor": {
          "ref": "89fc4833-e437-4a97-9c83-25e1a8f92ae0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "91d58105-0886-4c8b-b352-e437a9b97bdf"
        },
        "item": {
          "id": "489ebaeb-e484-491c-8886-753d0625e9ed",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "38e498ee-f371-4e02-81fd-4c2bcea5005e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdfd74d-5f37-40a2-85ae-d77ee77c40be",
        "cursor": {
          "ref": "70560935-8ede-486c-827e-9abd20c0ecf3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "725a2caa-8a77-466c-a73a-5f7d7ec65900"
        },
        "item": {
          "id": "ffdfd74d-5f37-40a2-85ae-d77ee77c40be",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3b9d40c-5bf7-48d2-81ab-cb24e48a5df0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0740e54-53ee-446c-bccb-10ad4865f245",
        "cursor": {
          "ref": "c0da17fb-effc-4b9f-ae47-4e67d4b6b92e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e7fa65c2-8223-4024-9679-7a7dbb668d2b"
        },
        "item": {
          "id": "f0740e54-53ee-446c-bccb-10ad4865f245",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c03b8e9c-def4-41f0-a003-b3b3e27b6a57",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "483b01f1-2f1c-4296-8786-406468ee42c7",
        "cursor": {
          "ref": "d998c52c-7c2a-49b0-bcc8-c5e8b2921d65",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6fe2af53-1f6e-4feb-ae70-7e8e2175e074"
        },
        "item": {
          "id": "483b01f1-2f1c-4296-8786-406468ee42c7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "30f0a792-15b7-45c8-9d37-aeb1b2211969",
          "status": "OK",
          "code": 200,
          "responseTime": 2952,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a5515d-f14e-46c4-b0da-4f087efce012",
        "cursor": {
          "ref": "b1ad80e5-78b8-4298-ace4-bb4a329b064e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b6b6439b-1916-4880-b214-6a7c3105f3ee"
        },
        "item": {
          "id": "04a5515d-f14e-46c4-b0da-4f087efce012",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c400b428-b2a0-4bf4-9648-b793d52452b4",
          "status": "OK",
          "code": 200,
          "responseTime": 2596,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18bcf02-96ba-48ad-b92c-49e4c61910da",
        "cursor": {
          "ref": "71e24fa0-6f9a-414f-830e-93c6b8652089",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "23251425-b130-4908-a587-7c9edefce327"
        },
        "item": {
          "id": "e18bcf02-96ba-48ad-b92c-49e4c61910da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d9d6007b-efab-4394-8438-f6202abca940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18bcf02-96ba-48ad-b92c-49e4c61910da",
        "cursor": {
          "ref": "71e24fa0-6f9a-414f-830e-93c6b8652089",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "23251425-b130-4908-a587-7c9edefce327"
        },
        "item": {
          "id": "e18bcf02-96ba-48ad-b92c-49e4c61910da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d9d6007b-efab-4394-8438-f6202abca940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6567bf-e8e4-4a8e-bc5c-a61aa57c6900",
        "cursor": {
          "ref": "56f6527e-7ddf-432a-bac5-b226ffd25acf",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c163d95f-0e6d-48b6-81d2-82826ccdb5fc"
        },
        "item": {
          "id": "6e6567bf-e8e4-4a8e-bc5c-a61aa57c6900",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1c74b0fe-c66d-45bc-a420-5a4e89642818",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e767ba2d-efbf-40e1-a095-0d31c43769d1",
        "cursor": {
          "ref": "c047b29c-b6ad-4180-ac28-e92ef67256bd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "466979b0-c6c4-4ad8-9dae-84f8f197eaa5"
        },
        "item": {
          "id": "e767ba2d-efbf-40e1-a095-0d31c43769d1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "297af457-144c-417d-9dda-79f76473265c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}