{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7962a7c0-eb07-4ed3-8d36-aed914d4b104",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6d8cd34e-2c34-46b7-a68d-8eed347874a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfecdd75-0ae4-4122-a365-18186f9e914d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad14c110-55c6-4741-8b74-b7cdf4c963d1"
                }
              }
            ]
          },
          {
            "id": "0c7149c3-73ee-4c21-a92d-a9de8a7bf126",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d67f62ac-087f-4ada-bc37-9a675333fd0e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1d86d6fa-4d4b-494a-8065-243918ba0038"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "82ee67c5-f40a-4442-9f2b-3ed0f88ba2b3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5ca7988f-8ad5-468e-b0a9-7030afc517ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c217519e-85db-4786-9779-76a6b4497e1b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "987ea3de-9364-416b-9e76-54efe66824ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9bf8838-365d-419d-8093-ce2354a7e7b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d734cda0-a23b-4df2-a387-27802ba5f6f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61676c46-ee5e-4d5f-9961-a97c1d347c2b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16b4faad-5cf6-42fd-adab-68e5feb53b55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0aedb8bd-ad18-4239-919e-8b2055fef811"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5540387-1d1a-43dd-8279-0a285f09e9cc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "efa18f68-aa46-4d50-abc5-af92846befae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa69d079-d01a-48b1-b5a9-e9aae25f3fbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f34a4821-b287-46bf-bbd1-071a9b27c9ba"
            }
          }
        ]
      },
      {
        "id": "296cee68-31f2-4701-8c33-95635e6c7302",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "28103af9-0c42-406a-b818-50e89d09b76f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc074791-294c-4822-a54d-854c55391e56",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f56b01c3-9dce-47a1-b637-09acd42b9cac",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f069bec2-b10a-4ebc-90ec-772262b3dd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9e200d0-71d5-4230-b61e-5f3e31ab4a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab06f876-554f-4c37-aca3-569061c08164",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75197c6c-ba39-400b-bae3-76f2c80270f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e61ccf6-52fc-43fe-95fe-9bed6b50fdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f88f40-af3d-4b8e-be11-1cffe999d739",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce28465-b40e-4c82-9f41-1af47eeb97b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "557d930f-99c9-4b6c-97b7-38b557e655e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bd89c38-319b-4cba-9a71-046663f88f7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "733465ff-a481-4b9a-b79a-f9b530f746a3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8398480c-6193-4a41-8111-b7486ad900c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "791cde44-6672-4175-9276-b70ce42dab5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a546892a-e57b-4f34-92b7-efc88d5d9261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a569dd2-f310-477d-9a5b-f3598c2c1145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30820af8-1f07-49d8-8c04-d9ed5a2a02e8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a81acb0-4e2f-46f4-9107-b67ad6386d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1f3f409-2135-409e-8d68-4d96b3e820d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fffb3bb-8d1f-48c8-9add-fd41ac127893",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7e7a6a60-908d-4d1e-9024-c777eb6b67ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74f89310-d0d1-43fd-9134-011d9a9e90c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdc4339d-0c5c-41fd-8051-9a9c4b20cc87",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08394a5d-2732-4ddc-930e-515309b1ec5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e82e5322-7819-4e52-a81e-3363c833352f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2f30906-46bb-47cd-aa2c-a2eb2b714e7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "dd50dc30-39e0-4e71-8306-e31ed5a4f8ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4aa3f533-b1bd-47f5-b864-0d2d1a24ea81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b23278d9-5411-4ef0-bebc-babf7454719b"
            }
          }
        ]
      },
      {
        "id": "5f3f105f-abb5-424a-9db2-1dc08468e926",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1ca1b029-60e8-4bed-a07e-b708655b8e4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a5a62e0-3f31-4e51-a005-c2bb0909cc08",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4ceacbc5-3e34-44cc-b3da-05a735fb61bc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f368cc6f-213b-4f04-b2e6-8c598c4c495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b231f7-3d4e-4ad5-84f0-2b02d7f926e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cab1fbb-d7f3-4bad-92c7-fd184f61c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed172814-59b6-4da0-919e-865a56e92bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a580faf7-04e9-4f03-9672-aaf3c8f61119",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5670c3ee-2761-4c42-98a4-320a1c2fb93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cfb1b3-26f5-4693-99c3-13f653370ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff50307b-88c8-4f38-9b8f-ccaed36fe974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a444306-26ca-4d58-9512-b987c1c3a3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc0447-16f0-4eb4-aeab-2585c6f0a69a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe29886a-d99f-4596-99ea-0a9a2a4140f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ed5121-4b89-4006-b951-789b5ac27e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805efd4d-0dd9-4254-95bd-36bd9d437525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a5ee83a-2604-4a53-b918-5956e2d52c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ffe7a2-f603-4c42-8525-71c2a8fead81",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2f713-cfdb-4e77-b875-0f7417f17281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3226d89-6812-4940-bc24-484c4d843d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9624153-36f6-409f-8d23-9a9179fd3622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a465b7a3-41a6-4712-8823-61bbf8f8db86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f755ffef-1640-47a6-9792-e2717fd91221",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4c03c8-39df-4a11-8926-68a562bb97af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aebef61-7bfb-40e9-9f5a-9b7190d16daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f08ece8-2b1d-4d66-b1c0-8a3aa36d0f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16aa349a-fde6-4bce-8f34-e9dbcbe6fe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0e83e2-cc6f-4763-b8e8-13256e0925dc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9688262f-7e4f-4e58-9983-3d8f00843ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366de083-f74e-477f-b988-f32d6a77480a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cecf40e-550b-46ec-88d6-face1ca9c0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "434fbee8-3a9e-4418-ab80-1fb7343f644f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cf2cc9-5446-43cb-97aa-d5cc9a922045",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e0ded3-7551-430b-b162-772ca82af837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff09802-eb85-49c6-8643-4999065fea36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6352bd4f-a541-4f99-9882-8661fd79e8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c157f026-4a03-4e4d-b58f-4cb29ee837a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238ab322-e158-4208-b726-6f8226c1f058",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fa6d33-32c4-40fe-a90f-fd0efb29a778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d64927d-e56d-429e-90cb-dbb494e2543b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d87e4-8fd3-48f2-852c-8df78383a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c1dd5de-d639-4629-89bb-fc706ac30e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e327cd8-7e77-4032-8579-e698fa4c1229",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc26a1-a95d-47d3-a2be-4c249a7f8efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b530146-ecab-4702-a65d-f9213720f8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e209341-9aad-463c-9cd3-18ca994ec941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63c46018-fcab-4705-b6c4-50cd3e7b4b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b522c9-2ee6-4e49-b190-20080c98ca6b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a289c0a-3f2a-40c5-ac18-df56a555d537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28327090-4822-4682-a327-c8777ec1f8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e61a96c-7c5a-42eb-ab97-962227329236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67fdb431-e83f-44c3-8d63-4c2825a2952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abb6de0-9d35-4d5d-83f9-6db501065902",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecb4823-4702-4ab3-902c-0e38c3e3449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f26d0d-aa50-422b-811b-845bfa913a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5564dbb8-133c-4473-afd4-e8d0ad9f7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "534cde89-0c4f-4e9b-a823-9336d99a06da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704966ea-69eb-4b12-a36b-d872d5794b3d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff30fd-14fe-4f0e-8fd5-3f0b5f425588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f285e4-021b-4c8e-b91b-bf53505b65cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed24c48d-094f-4ab1-b5db-3cdf6500fa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daf6e86d-8e0b-4dd4-93ed-bb26e0cefc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7323b9d4-8c7f-4d2c-9980-5a6918404af6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1db720-994a-4b7f-a877-a5634c705e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c1762d-018d-4489-8d9c-105dbf3ed732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14710398-dbf6-4050-b6c6-15518aed4f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27249f4c-e384-4de7-8b17-2dfb0274987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42004cf-05e5-46af-8f95-61cb557bfc48",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec191e22-6b34-41b0-8093-b443cd1282c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37cd3b7-f34e-46bc-a1e4-1d0a66682928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5c0698-6559-4149-a331-5b21bcc635cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0756f3f-89c1-4f4f-af55-4cd9381a2f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4747421f-7577-424b-80a4-84353a8415db",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27b6ffd-0bde-4404-af9b-56e9ec94d1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5c2879-899c-457f-867a-9ccb3d42b4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451f0aa4-a9f0-4ee3-bd75-3f0145260f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab38ef80-1669-4e76-9e2a-039279bfe1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5f3d0d-b91f-4bd8-8127-d6d918c060f1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1024b66b-3f84-49fe-ba2a-0091e24085da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8136f2-b32f-4f38-a650-da30e8b761c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80b9e32-3f9a-4aa6-bc9f-1e3f3f8d91a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40f2467b-5e50-4ac6-bb9d-7a3a40ffb7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d983b18-5e52-441a-bf25-59f34556be96",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7cf3be-9b4a-4edd-9787-83afa2684906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76868cb-229d-4bdd-a8e8-d016bfc8cba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c0dd8-1aa3-447f-99a8-71d8c97bea93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25861fcc-3020-401a-bf19-26b1073b3a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0179d8e-688c-44cd-b867-029d70c53512",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d2dd95-3ab4-4c09-996c-7ec31679cbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06995a6f-7488-40ef-af85-1723f590463f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb07eb11-53f1-49a4-bdab-8fb62fb1e185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffbf50f-b7c6-4486-9095-9d1bc0f8e730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e219f15-9703-4b43-8b44-94a4878322f8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895647f0-75ef-4015-ba3b-eb8233b4e237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc87d0d-7e9f-4dd4-9d43-7727c5d123c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabc90f3-ce17-423c-8b6a-8429d2cc4754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17222e88-2bba-428e-972c-c34aa8ecda8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a868723c-17e3-4f7b-a2b4-da3ca1160587",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4e66d9-417b-4427-b62f-bff83dbc1f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91085c7-82da-402b-949a-8ebc6f5e2a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fccec2-a6a8-49ec-a3ba-a4a771691b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cef8fd7-b596-4bc2-9e0c-89f8cf111229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715966d5-5ce1-40d1-90a0-728da1bd9c3d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d595b674-e639-4839-944a-eed1eb30730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4642dea0-8dc1-4795-aba1-4ed24868fac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfe7205-c549-4b7c-b266-4d514d7adc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f654b9d8-8582-4901-83bd-73320dc390fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b37974-7244-498e-bb8c-f068b231551d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cda05d-9010-4304-936f-e590e513bcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca243143-ba56-42b8-8403-310d726042fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7116650f-f66a-4261-ba3d-fec8a945545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc854527-a505-4451-bff5-2126269a60cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5d4285-63b9-48f7-ae8c-acdef193a6d2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8d0bc3-48ad-423e-a57a-b6b6d3d9e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffff0ee2-acd5-49c9-b150-0c28639bc770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c144d8d-0cf3-42e4-afc5-bd9019106b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "955b151c-2389-4015-a153-4e559d790b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ef98a3-d722-4834-8e02-3f91adb6945c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5921c0-3160-4e28-acbd-c8688e72d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf4586e-6c7f-43e5-9644-76fbd1ee4579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d1844f-1755-4c12-ad33-5c669e3ded7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdf7f31-689a-4484-95fc-3c29f28ceb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362ce1c4-12b0-46c4-9490-f549f7af9d8d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ed0508-ab9f-4321-8838-3b84033af128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba6a997-1403-4f76-a72e-d16f7d235d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b4db9d-463c-4db9-96c8-36fd7fe57188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6129b044-49b8-405f-8d17-9a4333750f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e42fe44-cafc-463e-8ed5-771dbb6635fe",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d1239-e45a-4ec9-9a3b-3bd3d284bd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea1f78c-9326-42f8-8af2-f5cc2ac7bc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfe0fe3-099d-41b8-a1b5-b71e8db649fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32cb167-135c-43cb-8daa-d009ab6f6766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220363bc-ad19-47bf-a6cd-6e54e4a949cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1846bbdd-39f1-4de4-9bd9-38c7733ead2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa6e1d0-3167-4b5e-9e54-3c3cd5b60445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd0ab8e-00ed-41c1-9c6a-040f5eab405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "933a3053-e3a5-44ad-8139-c7fdfe3d6832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b118c67-e7bc-4e13-9a57-93b026ab7c04",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bbfc1d-0aa3-4e49-a844-9ab2cbc42664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc83eb0f-3ce0-4199-9561-40bbe60460ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9d2f06-3d81-44fe-a104-2b0e1cd5e5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be1ee8e1-d8bd-424d-bf81-376795b0bd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef55b58-517d-4f1d-9ac8-66fc2ee68acc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e367945-31b8-4f93-b5d1-b8c59297d5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4146647c-a10e-4bab-a6d5-cf28e5f41506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75541390-75a2-4a1a-8a8a-531d69cad8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "432fa3c8-381a-4f56-afcc-a05a04373e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4836bb24-76b4-4efb-982d-4c2756307dcd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e0e098-ef4a-4091-bb6f-f902d9435aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c142761-c3d5-484e-a6a2-cf1ff877b274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de83ded7-6255-4335-b7b1-4938cf290b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b2efc7-c35d-4277-9097-c69d8bb2551c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b85a76-ecd7-47ea-9ecf-90a9e9bc2e1b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fde6e2-16e8-4eca-89ae-c8bd7aeee229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0541f2-ce50-47d3-88d9-9181d89814c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902b7e78-7eb6-4661-9bc1-83bb8311dce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36449cdb-1f6a-4d07-9ef2-2b1e30cae4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3148a845-6dcf-442b-847e-169ceb351287",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488db2ea-e57b-4d06-ac10-8f38572481b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb50a053-bbde-49be-be2c-18944abd4ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43276c3-0266-4d95-b072-2b12ff2549cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70cd85f4-4253-4cdc-b0a3-1f867b6a3ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c0c733-01cc-4a7b-9a14-f0c21ec2cfa2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229bdf72-ffa1-47b7-9526-9e42499e3ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb46fb50-6f95-49e4-b465-c54519e679ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd99454-0c93-4a39-9e41-c4368bc1b0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e014a99-b37e-40ed-92e1-ff315c8a632c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd5b120-f932-43b5-8363-359be87ba49f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e127255-cdeb-47f6-a01c-c8c3f15a6d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ac6706-edba-4faf-bdb8-b9804f5648a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e569ff-68ba-4f7c-8781-652f29ca93b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5cfb57-1772-4823-a1fc-2aeb37763328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ec3b2-d05b-4b47-aaaa-5b49b2534f04",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2b6fe4-1b51-4e51-9c8a-0423b4e66592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd1e731-4ead-4ef1-9164-c3696da24714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1529d8c8-baf1-4171-8c2b-412656ad5a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2e503cfd-a9c7-42c1-a261-7697192700da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e8c151-f87d-4ad6-864e-94aea89c74c1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b6d4ce-4312-4bf5-baae-6ccc1c7048ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b31b511-58dc-4356-ac8c-0cde990be55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf0c811-8b21-4ca7-b703-cc79d6f7da22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bad46155-267a-4f53-8b43-ae3f2a924c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6723b6e2-b7a2-42ba-b55a-3f77aef65e37",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a44b51-45b0-45b5-8849-63f634451172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432449f7-e1ac-43cc-aae1-90cb4340f6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b179adfc-2f98-458a-93ed-5b3a2bd34659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6142b8e4-417f-4000-a85b-c24cac3f16a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b69ef6-e3da-44ba-88d2-f3a85bca57b2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0f785f-2a29-46ae-a129-d3771fd350d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f951c1bf-c9a9-4b76-a129-9aa776eadfd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1644560-e68c-44f5-a2a7-6a42d7e58673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5418eeab-e08c-42e4-a23d-594254c55408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e4cbcb-6222-47eb-989d-4cd76ce3a1e8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffe3593-430a-4671-85e0-14a87a015d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35158d2-097d-42cc-b296-067515c476fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a649784-f048-437d-9fd0-888ec77998d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8a9344-fad1-4cef-a5f6-88efe3b2843b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cf2498-9b8c-4e82-8c6c-a93f45aa1612",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3adbfa-e05d-4292-ab58-e1fb193548e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1a17b5-a2f0-4ef9-a4c4-9288e25fc884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ff1232-35ed-4eb5-bf47-d28a2cf8dbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05e105ca-1f99-4103-aabe-625c109cebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bf93c4-1677-4fad-9156-a251309ebcee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840c639c-7fc1-4af5-a59c-23ec72ee754a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768e3850-5947-4832-8d8a-cd0c46c1cb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3705275-1f0e-4ebc-b880-d73c2264bb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "629015f0-194c-44db-a999-d2990ea580b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdd108e-5b7d-42a1-bea8-be1f79654e14",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da511f9-cc83-4da6-aa6d-4a5c79e93b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0ed652-c340-4757-bbcd-78bd3ebe62a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d071d0-399d-4a21-9b5c-b3c35b77fbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "25dc2f44-7dd8-49c3-a219-c29c6f95df59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8b49c0-eb80-415b-8c90-be26a5294f1c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f011bbc6-22b6-4c58-8733-48eb67db1dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12acea9-6cb7-4156-ad47-1bcc16fdb38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8212fe4e-6ef3-4875-8861-f4c96f8699fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e00788-9da7-44cd-afc6-956fbd918432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c1eb36-9ec4-4ee8-8efe-2606bf6fc2b2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca84576-b5be-48a2-a38d-9fc928166142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7dd3731-0d67-46e3-aeff-05b878c1d49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cacd673-137f-4ab2-9a16-b5bf421825e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd676bbd-5007-4d51-9d6d-f050c1ac3886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5337e16-2639-4ca4-aea7-ff15cf9555f2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2511fd-fea7-4c6d-b557-19f6eba67de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7210c8c3-31ec-4c75-bfa3-50857043e265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82179666-eac5-40f2-9564-fdf21891d6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "843c0db5-1375-4d69-a420-b32bbf9edd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f96ddd1-a276-4b60-8f46-1ffe774e7629",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abee38a2-6ff8-47a2-8bfb-3b6476210e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00910b42-279c-45d8-ba2c-833c5c12ff1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112363fe-5cc2-4f59-8a34-40856d7d2c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93062a29-da77-4b14-ac3c-031262c679c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83af291-c980-4edd-9c69-e37b1b6623ae",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08b2f04-5601-4139-8a1e-5841a364595a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5938687-8b59-406a-b65d-abe315241641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43cc4b9-1636-44b2-8b0e-025411b7ac41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8e233e-3e75-4dfb-b081-4a39f29b77ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512b029a-33ae-451a-8aa0-22d15db2f463",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8d4c3b-7e74-4b65-bd78-3ad891d35fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6a68b9-7ebc-4af3-b20e-16288656e179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673b63bf-2b4a-40ad-a335-e0197c07a947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45df3d81-8ba5-4463-ad7a-f0287a80ec54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9359e4-7809-4a9d-a902-f6d1645487eb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec7a043-b9eb-45df-8e3e-53cfddab1914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39128d4c-2d8d-4a1a-88ce-9490e52452a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c957ee9c-de81-4339-8aff-399dcd98b559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc8262d-69b1-489c-9d8d-994210f89c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45bdafb-4b5b-4422-b839-29db343e5905",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24fd139-c8b1-4cd7-adee-11caed34f171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61982f0a-6951-4948-a6d5-8907051a2867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82921030-4ffe-494b-9dd5-fa8e06b7fd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41b28fc7-2ad4-42c4-bae0-a5bce039815b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4fdfbf-a2ba-4829-8558-e59ac1273428",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4175aac3-eb6d-49ec-b827-3352df131099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55233546-3cb0-4890-8586-ec7e9bbffce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b27773-2bad-4890-94ab-b288520fc286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfb3430-cecb-4402-95f0-28f6e02ea812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2828f115-d92c-4200-98d0-7cac3887b136",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f56265c-e580-48f7-9510-5e4e55019d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6046c549-b2ca-420e-8682-db19ef94f787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73352a75-d23a-4d7e-bd55-8308b5536efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5faae124-7413-4e66-9a1a-18e7b5d33786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060f0a35-1d8b-4980-935c-45dc780d816f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56499f8a-cccf-4d76-97b7-41b6ad4b9e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d578d3f-346b-442e-b8e0-7d201143dcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cb52a9-3e20-4aa3-bbc6-91e19834debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd187f69-2de2-40f3-af10-74ae555e5d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e0d067-4aab-4bc6-a42b-850cb88cd576",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc71eef8-8d6a-4d8b-842c-008d2171188a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a45914e-7fe0-47c5-b9c2-2ad4e5d0fc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e103d60-2f56-4d99-9f5d-c83db0350a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc5ddef-b6a4-47b6-a6d5-7480d11533a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2265fc03-639d-4af8-8ca6-2cedb31289b0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950a3165-2204-4b7c-8d11-2292fdfaf259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebbfe43-57b6-4108-a07a-13f8c4c7e7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197fe49d-19e6-4e2d-ab83-ef43a6ac1aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7318629d-e05d-4ad9-bd68-c9aac734c866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d690bcd-9441-4322-ae4e-27396ea315c7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4330f41b-3d5c-4496-a0a6-be549e018b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cd3fbf-8072-4522-b33b-83bbf48256e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdff2e7-2a88-42c0-99dc-965f00707861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "47e7e6af-498e-4e8f-97a3-d66a3c052148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23122cc-cdc5-4d5f-892b-29cf44362386",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07446dcc-2199-4139-a2e8-d9aa24724f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758cbba1-8a2e-4482-8afd-cff534611e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9364bad3-96ac-4133-9f19-43ce227ab000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3afa045-5073-498a-a374-793b5481a04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c223c31e-5126-4a9d-92bd-8060536170aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0018c7-3617-4837-8b3f-0c3d6663b700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a724caf-f622-405a-8185-2340f433b01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f477af-ea3d-4b55-b6f5-55c369a146cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48277de2-1fcd-46fc-8209-1783cf22de7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d2f0ea-9f4d-4cab-80d1-3811777acb86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208b9346-d4c1-40a1-800e-4b088f80c99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978cb4e1-5e78-4239-b116-27be3af9849e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f345b40-6caa-424a-b4ee-73efcd067f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4c9910-e1f6-4b4a-b509-b7d717c70208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a212d4-d957-4391-af93-44c999b9cbc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ca9460-47f6-4b45-8a65-8334e97994c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0748675-b9a9-43f8-982e-62014fccd726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffd9e4f-acb5-4e51-854f-74789532790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e09fe86-299d-4782-ad60-38f0c81413e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdfadff-f5ba-4bc1-ac46-6d62163c10be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c9206e-7de2-441c-8bf3-a5d6013ce7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8a66dc-82da-4c76-b4f2-1952e62e2bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80264646-2d70-421a-83ed-71ba5a0f9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d05625-df31-484a-8dde-e97ae3e13e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecd3941-90c3-4b90-bdba-2641018b4cdc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91127e11-0078-4493-870b-c65a22601d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d29cc4d-72e6-48d9-b81d-ab6fdfc8d128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e697ee4-b3a5-465d-8646-7939a60a7c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6abbbe8-aa01-40d7-a186-0af8d3f9a2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bbaeb4-9cb3-49bc-8dd3-93f94a5de185",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69369208-b6f7-46fb-8d03-b49c2e6b3d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bb5a26-b149-4ad3-b526-523a983051f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9f0004-b64b-4c88-99a5-9afa96121143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d725d160-20a2-4037-ac25-31accf056b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae323ac-eb58-4e6b-8b82-61d5607685c9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c0a57f-36f5-486b-94f3-42cd9347444d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798a14de-a83a-492a-a307-80dfd1fd8348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7eb469-8d6f-4f13-8c20-ef4848ef3544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d8ba6f-5ee1-4ddd-804f-40fa75a9b6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fbdc66-4c8b-4c64-95e1-8a07be39b021",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfab3427-b43f-41c6-b5ed-e19092d85d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aede9c26-147c-4c4d-a782-99aa869fca5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d15bd1-edb1-47bb-9341-9897b7ffd606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8dd22a-7f5b-4715-a73a-a3ccc5e3b2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d208d332-7593-4b75-b712-45ac0d42c2f8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61b063b-d22e-4f3e-911a-e712c29cc229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42c90ad-428d-4166-9b5c-eda8efe2c93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c76f56a-2206-4e17-9f2e-cd1fc42ff1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfca460-22e5-4d19-99c9-d88fd6728823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791af98b-241a-430d-9d56-faa95e166982",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95011a07-7ae4-4b9f-a709-9f9e243db7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f7f022-9acf-4379-9e09-f995ae502671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a95f7d-427d-4d75-9609-89daecc4ac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6fa97e-8828-451e-9044-9de8f1c56c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6687877c-dfe7-41a1-9267-71edd6c347cb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ff2473-d61c-4724-aaa8-f16b0c7c1128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831c7fdc-6b27-4eac-98b3-869d4e234f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23eddeeb-a503-4d2b-90b4-950607e7ffdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e11e2b-22d4-4265-8575-363990b130d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841f5c73-3664-4a0d-901d-4552c36633df",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95708e3e-2101-444e-984e-f4eb5a6d7cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ed8c88-73bc-41a0-9bff-aa3fe741c7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bd0dda-45b2-4a43-a0be-4c5182564678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3315dc6b-a3a6-4c7f-9b6f-340699437015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e688b858-c4f0-42aa-bb1a-0abf92789140",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20bddc0-d355-4406-9770-9187ca450f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c489e420-bcaf-489b-b297-329176d24eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5c4e3f-89b6-46cc-8d0b-44d4bef12889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af6f2c5-55e7-4a3f-ac08-99250f32ef38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e7ec41-bd2f-4fd7-a2b3-2aaeb80591cb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a187ef10-e385-429e-a16f-cc368217bb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1eeb962-cf98-461c-a379-400ce9105c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b850c7-4cc3-4dfc-bcf3-56244a3e415f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c11c256b-58b3-4fe9-9fd1-7278221d52ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3509d89-b459-458e-8b90-f1ee54ae0505",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b6877e-4989-4632-8c42-6bc213d6adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091e70c8-44ff-4365-8738-e4df4db1ffc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8953e1f5-7e51-41d5-958e-236969558fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee582d7-fae4-47d2-bec1-652a511ea444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53e79be-ef64-4f34-add5-a18fca20b00e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05caec3-5369-41ef-8ffb-06b42c20547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef394caa-58b2-4841-bea4-e8485e0f4104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e54c26-c485-48e8-a002-1e9b2ff68c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "347d4267-83f5-49ba-a7c1-e97a1ef21299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c424d9a-6c41-40d9-8dec-b372a3e559f7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e8e9f3-35b3-4d25-9933-c06db7fdb0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb493ed-540d-42dd-9bb7-30404c430bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db47f1c3-2c6e-4592-8875-10e9580b3cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4da85b21-dcbe-405f-bbd9-ad931db6e408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bfcb77-fc72-4f0f-8b79-4342fa84bbd1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b453c5b-7c3d-4123-a944-7a6c48b605e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b386f543-f54e-490b-82ff-650484f8ab33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d738ec37-f658-4493-8fa2-365aa22ef236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ced6a4d-33f1-4b86-b310-4d974f0adacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b8a31d-b75b-4a22-8191-84fc6d4a13ee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23edcc5b-eb18-4edd-bc71-8726eb907b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340ec540-2fdd-407c-8da8-d27d1bd26750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cec3bcc-1a5e-4dec-8ea7-83f1ff19e162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7ff00b-4139-4bc9-bcc4-b2f03f7b503c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad713ee-5c38-484f-988e-bc55bc7842f1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70d2b1d-4a1b-4348-9e72-36c19e82db4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31359a26-33fa-4692-9356-d7c08e196597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb707a20-de2c-48f4-8321-a38f9acde9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb0bb63-6c0d-4a26-a43e-0643a3f14bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4681e0-4b1d-4566-9ca3-bdedb280677b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c25e42-d7a5-4539-9279-8e379c069895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e14f16-7fae-48b6-8728-df22795a213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5789cb24-6edd-43bf-ad6c-8cbe15ddf622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d32aa5-6582-4347-bc92-5a3d46f92aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0795be1c-3481-4840-bb99-8173f42bcf20",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a945c1-178f-454b-9f9f-12a33cca36b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27edb921-df64-46d3-99cc-d5c192514cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7e4c19-6f6f-452e-bfa8-2cea6d3eb96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b639ae8c-d947-47ba-89a9-570c2fd2faae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99985ad8-75da-4551-9244-9fec3faac27d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84faf802-e85c-4ddb-bd31-e78415a951ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fdac25-e1a7-4021-9cec-40cc6b9323a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85475f8c-7fb9-4b00-b10a-9187e653914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5994aa20-3f9d-4e23-bf36-47420d9ce92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3eef116-d468-4748-bf3a-56d62284a904",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c280ee1-8d35-49a9-937b-05d4e168eff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3730aea5-7be5-4211-967c-ea98f7003f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057e0f2a-e8a9-4bff-87df-8f92f86ae405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9746f3c-ea01-404e-ac00-f27fa9e79fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583c7ca4-c33a-487a-a9c7-04457d5809e3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5faae77-515c-42c8-a925-c7cfe05c242b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e292fa3-faed-4ec9-971e-eedcffef97ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a5b8f9-a96e-452b-b72c-420a539439c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a945ff0-5c1a-4f4e-b3c6-734f2abd676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca313c6c-5ec3-4cc7-ac35-f2f12f6c81e2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebcc0e-725c-4fa7-89c2-027a451385fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cf48ed-7f92-4c96-956a-f45a9fb4e97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e222223-afa1-4c3d-becf-77c45ab9171c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b73509bb-e1b9-4a51-a711-bfe1d38e794f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ab4800-3c02-4d5c-b29c-c9eb1dcbe9a8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa03fa67-b785-419d-995e-7456e5112b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df97ce0-db9d-4981-9d07-0d2fc11b036b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae4ace0-a1f7-435a-bafa-70e38d45cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3cec89-409d-4566-a7e6-b87b539aa24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a193ad-02f1-4f25-95b8-de8035bc6b2b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5db5126-849e-41b1-a534-56cbfc7d67a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f0fc75-37b7-499a-bfcf-e64bdf5342dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573194b2-add4-4d04-8fd9-cbcf88393b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9905ab-0770-405f-bfc9-497448cdb397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b572d728-6880-410a-9dc5-be951bb70de4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4171c88-b1b0-44e7-8b6f-fde9f2f78cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd6cf2e-9b42-41ba-9d13-d171a78bb370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ec8c8a-ba58-4251-8b6f-4bc3138adb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f25e9c5e-dc0d-4754-b42e-52a722f3f2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a25a967-bed2-4149-a96f-d892c1d71e0c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06420346-7607-4941-9b85-a3b30030951a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e4e444-0784-4a37-945c-aa51c8b1fcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9659d7-24e8-4fda-aca9-db6f9baface7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0224cf37-8ee6-4bec-961b-5caa4511392e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07c475f-6c9d-4c83-a821-feb0a1075306",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2a7576-fb88-4d11-94bc-669572c8843b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da083223-204c-47d4-b292-98c005ca1fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c741d80-823c-4698-b5fb-46043e3a4498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e50acac4-36d3-4fec-99a3-3785cd0a459c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52f6038-e0e6-4014-83de-0b792fef4b75",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0335ff35-c7a6-47e7-96f2-e32cea8c879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7eb9e19-744b-4c5e-920e-1fda01874fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93117159-f068-4905-acd6-5cd60bcad28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90579e9-b46c-47f9-9888-036f7d82931e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f5d179-829e-4354-a4b8-ebe5a671e346",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85169c6-2c34-487f-9416-512634cd07ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d85f8fd-88e0-4e32-a7cb-d15e22a82fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70130443-a6de-43cd-a34b-4b91d2107ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e337a72-4ab3-466d-8b4d-f6e49d21217f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ae07a6-d3ad-4028-86c5-b5f33840480d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879f40c3-580c-4cf2-ba22-8117e96d216d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129eb56b-0bbd-4904-88ac-388f6bd22bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bd0f69-8bbd-449b-8a3c-2b093a347de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d16ead9-7dd5-43c0-a21f-0bb17b3e4764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e0d4ed-f300-4f31-b6ba-30b6f1963e2e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7f4bba-bef4-4ef9-9d72-0e16b8475096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "972a0ff3-46a2-4bcb-be79-b3415de8475a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42a52aa-d95b-473d-9783-0c39aaca00e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4363ca-04e7-4f91-8462-fa98ca69fbd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2a35a74-f639-439b-a41d-cf312f528237",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7d47707-1ad6-4ef5-8953-dac577237982",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7428df-7afd-438c-88b7-f8b228a718ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d9ef2de-3a04-4ee0-b6c2-e0a44cf38d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdcfb90-bf02-4117-b25a-74641db4fb02",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b83f844-aaee-4c24-84f3-c15a8be051c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc52352-6202-4090-a0d0-08a5d60a31ca",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74c9671-eaf4-45a0-a9c2-1338a626db2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "519e9096-e1c4-478a-bf9b-fbcafd385015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d9bd9a-17a0-41c5-9b74-06a08a7acc7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dab2e58-2358-45e6-a327-aad9b7e6761c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "625c0632-9a7d-48fb-adba-e600021bbc37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b807b2c-f04d-4bc4-8373-6f2556205188"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e7e085-c8ee-442c-8102-3c87fbf8cf7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5fd29ac-e4ee-4a4b-8cce-8ddc38ad24b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d968c18-1452-405e-9b6c-ca1d91ca520d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "129d5c4d-1173-41f5-91b9-48f41fb7ac49"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25e8c89c-7605-4aef-b3af-82bc4d592eeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2333acf2-e4ed-47a7-b84c-85282f4cc8b9"
                }
              }
            ]
          },
          {
            "id": "d13b3bd3-839f-47bf-a9e1-08a285dacfa6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4972383-b307-47ab-b089-cb56f364f5dd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bab78af-6f59-41bd-ace0-76a886c87675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3429647-f70d-443a-987a-71aea1fb6387"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95061c30-9dd0-41ed-8216-e30ca2a9fb89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73d73246-7840-4c42-8b21-fd85e32c0dba"
                    }
                  }
                ]
              },
              {
                "id": "dd9f462f-b3c0-49b7-9c80-3f0184e07761",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81165c51-22e8-474e-b0ea-8b8b6651ada1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f0dbb83-65e4-4aee-8d4d-4666befdf0d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dd9e189-9fe6-428b-9ec3-dc6998900480",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f5e9c47-92a8-4abd-8b0b-0d3c3b0019ab"
                    }
                  }
                ]
              },
              {
                "id": "0522d3be-9a48-4277-942b-516cbefc002d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fe67670-d543-4f6e-894b-981adb46c8ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc209b35-f597-4eba-9d68-ce6010c51fa9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01cd1861-408f-4ec5-8a7f-e9c887359dcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9260e049-657b-43ac-9d1c-c47a2e0c9b57"
                    }
                  }
                ]
              },
              {
                "id": "64e60f4e-b584-4bbb-8672-675ce3a92c3f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0d2cebd-891a-42f2-8524-db442e718f2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f3482b7-3eff-4c55-a0a4-e0e026f0816a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a953f317-e324-409f-bbbe-f036c64bbc22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a6c8e75f-ca3a-409e-88a9-2eabf4e35a1f"
                    }
                  }
                ]
              },
              {
                "id": "b47b143c-451c-4d4b-8843-d6b69ce288bb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09d36d48-a2ce-472b-afba-1cf18b407173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae715fb5-3c71-45b2-ae18-defc1dbc3fbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bee8caa7-69dd-4c2c-a3d6-b54ce6bca767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2e651797-aae9-45b4-a914-a8f4e93dc8f5"
                    }
                  }
                ]
              },
              {
                "id": "e21c41cf-26a4-4647-9fb0-2f07dfa4e7a2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82f3d432-312f-4abe-b8b7-d5e3f0441167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0886774a-9f1f-430b-9c93-4cc4fa6ef295"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049f5a09-3b55-4175-b960-dabe8ec95cab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0ae386f-9a7f-4ddc-9e4a-9806bed4cb0f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79358030-a91b-4c89-8d20-cef2192ebebe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3fd89a12-1d68-4cad-8068-8d1020b8e319"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa399bc2-31aa-4640-a55b-ee0bdf897292",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c72787e2-b4bd-45a8-8b78-ae3735989fbf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6595d0c1-5d2b-4dc3-a500-a353728483c4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f18b154-5b50-4d2b-87b5-4c9b41c642c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24f1701a-1d23-4732-9b20-7547b5ce071c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "279d7f78-92c9-4f9c-8749-b88c95546955"
            }
          }
        ]
      },
      {
        "id": "3e4be120-5cc3-4699-b9a6-e18e94d23cc1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a48f1541-166c-4976-8916-2adbae3f4035",
            "name": "Negative Testing",
            "item": [
              {
                "id": "251bb763-90b3-4f9b-bd87-da5b7e6ecb99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "482bbcb1-66f7-4adc-8eed-601d3d0b63d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808e4131-f783-49ed-a006-517faae49f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71599cc9-8279-4fb1-8187-3cf7a9f25432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b8b696-aae8-433e-8229-82ceeacac14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1944acc6-2768-4a03-8683-f851e8502028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ede8b1-e484-4f91-8dc2-39b24a7ff363",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fcb2c6-ed69-457c-baff-1306df62ecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9183ad4-ba4a-4ba0-8c9e-48f5054963aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1a9726-5c8d-434a-b419-207870d0e481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed23ad60-ca5a-4c6d-acb2-b4180b9b44ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6346b47-0aa0-41b3-a890-256bbb717909",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403860fe-b160-48c0-8372-f327591fcfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588c2eb8-84bc-4394-8ffb-41a0e7c84f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b0833a-0dfe-4377-be18-0e0143e97d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d664db07-240b-433c-817c-b0f648dc8277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d406831a-4029-463d-b246-c8489b6a59b5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c382aa81-8927-4aec-bbb9-c5e2f674b771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc58648-fe7f-400e-95fc-a26d105fc691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1618d67b-051e-4c6a-8daa-3d0437685d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb322aa-169f-4d7c-b1d8-2a107208c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6fdd22-6adf-49a8-8cd7-a524f430aa96",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788b151d-c12d-4195-b844-7921befb65a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66afcef-ec37-4b51-b994-150218c820db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790d888d-cf74-49d8-8215-baf1f9987549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5484d4f1-fc15-4218-95ae-e2badbdb8c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eb49ae-c773-41fc-8ebc-bae6b2bd7c92",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba4f8be-4207-4cf0-8091-7574a703e159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b050c98d-5a49-4bc7-ab8f-ea2dbc832804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313ecd81-3010-4e18-a4e2-7e5cf38ff5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49d9eb6c-8d41-4d5b-9588-1d37b6c5d6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9e66b0-0f94-43fc-8607-6619cca6ba33",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec6d23a-6bf9-4866-9650-99bc55c7f11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7f395e-cc16-4d0a-b62f-5dbb3e5ccb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229e6918-e47b-4bb5-b571-6a73177d237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b50f89-1395-419d-820a-a2624f60125f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4def3214-2048-4e9f-b3ff-cce3e17a65ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d57a2b1-6c25-4e97-91e6-5419e0e84202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e893cb-0327-4d74-859e-f0f59fb1cabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e16d97-6aee-4e51-81b0-8fb6a4ca9940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a77aa38-3709-46bf-aaf7-c71bc1ca70bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9fc3c9-120c-41df-8211-8a1d090de41f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa351e8-aa9d-4a67-87ef-09eed068e4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8710eb-2348-42cd-af13-9e9dd37ff5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d754c70a-e1a7-49de-9963-c3da776eaa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f671a75-cf1d-4152-9a77-69ffad1c31d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa2bf85-74c5-4e5f-9493-69d2dc67db45",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232f8e77-17c4-4a84-9506-5d007d3560fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b1d969-e912-4116-aacf-cf1802de02da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4032005-148c-4024-88e5-9814c22ca5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a24406c-07fc-4c11-993e-41d4f70bae07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca08e2a-faa9-49d2-b007-f554ce24d9b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa62214-9c60-4e24-975f-25a12b87038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e750fdcd-ece4-4fba-9f03-80db7cfb549b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da989218-3f35-499d-a867-b2bdfcbc45d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db55c1d5-3c67-4dff-bfb5-ef84960e8e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4db346-4ce1-45b1-8f8b-00271c346641",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53415478-5eea-422e-a7fa-fe3d7256e4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7e7000-5baa-4494-b06b-f6e420a1ae0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07767de-a6e5-428e-a553-eca1f92ff1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13a42af6-c224-4bad-ab50-23c1bcdf95c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5ed3fc-f5e7-4618-8cc1-a71226de2131",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9af1e-6dc9-4132-a655-94ab60087577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f88b76-12ef-440b-b87f-c6e4744f526d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da87074-ad75-4cdd-a9cd-b7794a25225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4725e468-0dc5-4a60-9049-e25fc56f1952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b859fcea-378b-46b8-9226-33d659a0dea9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4d3ee1-0ddd-4ac2-b252-0d8502b99e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357db12f-8915-4a8b-a25a-89d90ef28a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0870e47c-96f9-4955-a399-646e9ab404c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbf63c3-f1ff-4ffc-af55-2dd332c59466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d169cb67-3869-4f01-8d88-0edf31112782",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a77d96-5e76-4209-aa21-c22fa7e28dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ac6ad7-c3cb-42e1-8b21-f9041f07f2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23850c5e-c6de-4619-b6a1-f76d2b004aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1968c603-289d-4c04-90c0-9018270277ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f0d151-1c63-4a6e-a226-e44641416160",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d976c1d-b9ec-4c63-bc0c-c276bc659ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b70fd1a-ac8e-4d6a-8f79-f01d08922eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8da5c26-9c88-49fe-8abf-69c096e43530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a0c0ac-739a-401d-b3d8-765418d37e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4932af1-786d-4d3e-8cda-f9cc7bc3bb1b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02260cf-81a9-4d95-bbac-544338e49c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a8f0dd-5183-409a-ac23-d1e38715dba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2339c488-a37b-41f3-831a-48609c771062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab86fd7-d011-4e66-b10a-4c5637fd49d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc74c4-52f7-48cf-89f6-3d3cd38f04f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbe975b-690f-43a2-a44e-846f5ccce874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc1bb28-306c-44cb-85d8-ae0614d6cfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251951a2-3e1d-4bea-8a87-ffbbf34fdcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a8e36b-ff07-4a69-a792-31f8823280d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e8de37-e827-40a2-9bc4-d5fb9e453c13",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8c4402-8a45-496e-b1e4-0215161e9748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8280f234-97f7-4d12-8d08-7e760924d4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04a1468-765b-4e9c-a3bb-b25aaad5e4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fed880a-789e-4398-8069-9f62bce3120f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71624e7f-e45a-4f2c-990a-111a31d5ff9a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26a4468-9baf-4d82-b7a8-a1d1646d596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbedc6c-8002-49b9-90d7-a77909408ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640e1133-648f-49bd-b4c9-16a96fb96f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "720e94eb-71da-449c-b470-fa36c945a821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88feba4b-ae20-4815-8245-1ea2bcdf4723",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32394349-3b23-423e-ba7f-14dd155e2090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2070ef45-77a3-4313-aed5-0e71b768c11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444eeabb-6b53-471f-96b1-a1107e79c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe57c3b2-6871-4ff8-83a0-c9fb198f87c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa4b8a6-786f-4dde-876a-3e55d2b1a673",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ef4fb6-4426-4e27-a760-94769c2040f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5af3b9-8e69-4d96-8ff3-c4b12cd1f652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74c5893-2b50-4ca3-a67c-0b99ccc90c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1042c3-ea9c-477c-992b-f4cbecf542de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd1090c-0d06-467a-8e44-c8fee19254f0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d66957-9158-44c0-91ca-17fa3b70febf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0421a7-f14e-4931-8ea6-5f95167ca22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d841a9d9-07e4-4c3a-a9a3-c5416f8d9f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5e06fa-ca4c-400c-a2fe-67e29f6f1ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0772e4-ee55-49d7-8a97-d21d6671ae8a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c896530c-b2cc-44d8-8510-947d0ce175fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef66730-45cd-4e8b-afa4-a9114eefe5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90911768-6a54-4081-b392-3d0f818b6474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7823faf3-c137-4285-967d-0521ff021806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcccafb-24af-4264-ad81-649ba8dbecb8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ee1595-72e0-4386-ab4e-4beae361e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5d52d7-0580-4fda-a3cc-0563edb65c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aa88f3-71c1-40e6-a010-affeb24707d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f4a893-1479-4ffd-8061-c16b2ba55fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd878a-3078-4098-9c08-ccf175745f48",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e71390c-bc4c-4982-bfae-2b8dca6c104e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2129b75-eaa3-45df-bfc9-c2ed9c038c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7414748-ef70-4c99-9081-5687c59d381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea73acd-e125-495a-b328-d2cde1ea2ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d63150f-ed70-4096-ace7-0dc3269ca872",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fc6f2a-8852-415d-90f2-4434bc753331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc9107a-6d35-45ab-ba75-ccc331a19e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab30d95-4126-4261-9279-c7f48c6169da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "919f33ce-5bb8-474c-a0cf-9226067c68cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39177755-1729-4562-9e38-f2280aae7575",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bcc080-19d0-4b94-9cce-2c565f194c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba59ff35-4602-4bac-87aa-f4cdaf1a6135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94b115e-9bce-407e-ad5b-1d72fcfa018d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7361f61a-8660-4eaf-a968-a1cffdea0792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0835a61-7805-4ea4-94bf-ed9cbd964d03",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8277e3a9-caa5-4a2a-9959-6cf67d3ec53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c67d57-d4f6-4c17-9813-66ce477f5e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab5cc17-0bce-4ec5-9a68-76d12e2fafc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b82b87e-1957-4774-9daf-3410cb7a86b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343e71e6-6d02-420a-8059-996dfd71494c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c33acc-4d14-4307-942a-a6ffd2e005ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1257c4e-6b5c-4c37-978f-39cce933516c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d575be6-e271-47f1-8674-1c955936a81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1a3407-ed22-4cac-a4f6-1763cfb68322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e32cdd6-fe4d-42f8-a9dd-ce2b8050c159",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219dab57-8454-4b03-8473-3de3b74c5c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043860d3-e158-40ce-a3f4-5eabe67dd65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbff9d3-0a0d-46e3-9ca5-44341c352f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52f8b858-a86c-486a-ab1c-7ccafeeaece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbe6ec4-5d75-4ba0-ae3d-6e66113c5a3b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d810b9c-749c-4797-a0c0-4e0bcdf012d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1d5088-f456-48b3-8c06-1b2fe1c87e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd670a1-d1e7-48e8-816c-33e5129bf4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae75b19-3050-4a87-b86f-e8837626ae13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3beb7532-4bb8-4866-8cb9-8c6dcfc505d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ab4f57a-7ad9-45f4-a42f-42ae5d47f05c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfd116c-0bd4-498e-9545-bc4a65d834ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1197ebb8-7f9f-4966-bd0c-5cca112d8531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd50e76-d90c-4861-b218-e34ecc04c9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73352a8c-faa5-46a5-bc15-5e5669b35b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60e442e-f413-464b-926b-51d015cf289d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264cd851-b0d7-4460-8ced-26b4f8e0361b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8f57ec42-2ff3-464b-abf7-5d76445fe26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7234733-0774-4976-a29a-c63a81180dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62575949-979b-43b6-9c48-3740985e6739"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63cba07c-c403-4932-bcac-60972610e1c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46307926-1cb2-45c2-a7ab-094326e0e1ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd46b405-2744-44d4-a363-ab1f1cd4d5e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2eec56eb-ce6d-4950-9dc7-8b690bf466e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f98e782-1795-4fb0-8a5b-fdcef3932eae",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e234d36-10ca-46d3-abd2-1f33a77d4165"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56f592d5-fbee-44f6-bfa8-356efc48435e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2125b88-0496-4d15-9f9f-1c29a37cc97a"
            }
          }
        ]
      },
      {
        "id": "796bff20-d3d3-483f-b51f-d30f81760405",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37294670-00f0-4234-a579-51cecf5306e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55673a26-63b6-49c7-80cb-b43cf82d708c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb555f50-af27-4bae-abcf-7b75d8dd96f0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31c9fb2-ba58-4b9a-86bc-d027d4786138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df95cf9e-2c2b-427a-ac69-6d701d788377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47afeda-588c-4e58-b255-33c0b0c61d0c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913e6515-3e0c-40e4-91a7-18de29977ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35151f70-61dd-4a0d-8c25-3202f9c48ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33de4bb5-48be-48e4-944a-7031165562b3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597e99e3-7c32-4c60-a859-465b68ff6e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d642a15c-7198-41ed-bded-73d674d0f2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b194d90e-142b-405c-9237-7f2d5b62e457",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f2c91-a296-4bab-b4cd-970a7b9dc1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe354eb-d1cd-4af3-be70-7b96ee4c73f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57877abb-49f7-4ceb-9242-37acbd18c998",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c593ac3f-7111-42b3-a395-bfad74b7612f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5125db41-2ca5-45a2-a495-6595b0524a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa34069-9f78-44dd-ad6e-fb4b60d0e1f4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab916b8f-cdc3-4c7e-a2f2-69179cf9ad65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825f72dc-98cc-467e-b51d-2f5edff1cb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d5bc84-e569-4d1e-96d9-28cab443deee",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98408d32-05dd-4630-a226-1f855f4781df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e03b94b-fd0d-4a3c-bc6b-1fcd0e470670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0276f2c6-3bbf-4be5-9a08-9bce43274f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39087783-dc73-4133-a13f-6acd0eb2ec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc47dd6-0e66-4ef8-b142-a2fec556d09d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffdb51f-7d52-4d75-ad49-0f82e890a007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c535066-199f-4293-bddc-60e4509ebdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e9272f-f624-447b-8d46-96f6c65981f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56f4fe9-e8c5-4c68-85d9-6ca450018a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f5ef76-e520-4e25-9535-27b40efb6598",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8cd9ef-61aa-4031-9515-fb1fb5a92f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ab0d33-454b-49c1-b26d-2c33f913718a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def86c88-1040-4470-b770-e753ebedd6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9578ba2b-af5c-43be-9300-7756e2c7bd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6c3336-469e-4d26-a967-921f47f3eeae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94589048-bce5-446f-b5d7-130c176e926b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01230cb-fe53-4929-888e-46c145400c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a0473c-09c3-4047-b362-ba95ae3b850b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45848721-ac39-4412-a936-7f5565511b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b64469a-9dc3-4897-93be-1a1349b80afb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e08e154-d64d-488a-8c2d-4280149bef34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cb003a-5325-44a1-8546-1999fac2965b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da32d504-de18-40bc-b743-76db5aad3def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e40f3b1-9728-4b78-b79e-5f9492b46202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a27c69e-549c-47bc-bbb4-1732732bc914",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819f5196-4c7e-4fc4-aff7-605d82c15209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f4de7f-148b-45e7-9ee0-bd445b5dab90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beee6a09-28e2-450a-9351-c314794c1abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab85bba-718d-4abd-b699-baf44e2461de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2396cb82-a0c0-4930-99ea-0c4a1143898f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a850b90-31ce-4c4b-b714-aa19cc1c843b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e684bf-5087-4626-9b58-1d66c307061e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcefee6-b17e-471b-a362-3acf5c52a0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0c33a0-de9a-4dfa-a668-f18a3056fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf01cee-38fd-415c-9ea4-f3f15e7069ba",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efba02b9-ddff-4d5d-8368-b9f3564f5c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab967cff-239f-4a06-bc40-0f37d9872805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ceb86f-8b88-4c54-829a-17092fb2168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1e6316-1beb-4686-a6c2-9fe86f715d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbbb0a6-9d84-46df-8aee-2206a45429a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a93ebe-8623-4b03-befd-b0c6e0400071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd0a158-1dd8-4cbe-ad7c-9887a4d6d813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea5c89-1a5b-4a97-b63b-b203cc04fcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8309d9a6-3e26-4ac7-8e98-1218391fd9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6722b3-16ec-4717-8d94-76701e5569c6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fce4497-9e65-4a95-a42c-01c52b6abb7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71dd479a-c8bf-4115-9a7d-5cec39b78369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555dcec6-c941-4b37-bf45-6082264e6406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c760be4-afe2-4e95-99e5-71c03e33d7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35253f16-1bf6-4c36-a8b4-30de557d9c7b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efaf947-3964-4283-9b08-b139b2f5f52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba24ade-45f5-4722-89ac-e189897ce0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71efb0dc-15e1-4d81-854c-faa6f3f800c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db0a807-87dc-4208-ad8b-4f72c95ba48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dffd522-1881-43a8-8735-48f19e9e0070",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adde73e4-df32-443a-bf66-87636fbde564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4289e05-b753-4465-8bb7-0272738d7dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252b7bd9-18bc-42d7-a696-e17399d845e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6203ee3-f398-466b-9a78-754ad29061f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da5d21-8673-4e68-818d-ca4cba428469",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5333190f-0ad4-4461-beb6-4834d3b5e81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c66d07-fe9f-485a-aec4-507025d81cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25695357-204f-439b-b3ca-f89a52f54723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4c7c04-fac7-4def-aa6b-b776fd8dc753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5005042-ac94-47e8-9ff3-89c3a7b11c56",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4fa31f-e8a3-4312-9ca8-46c5ed506178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0261cc58-4036-43f4-a66b-1fd5f2b5a060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e692dba-c46f-4f7c-9713-bde59b3f6cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb5b0e7-bb8c-48fe-9c79-9a0e82cdbf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d72b21-85d7-49b9-b339-12b5c8d5ea75",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52da3cb-43f0-4a17-ad81-46f175611611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8d74c2-72bb-4edb-a896-01848c13822f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0394dfa5-3303-4385-8ab1-362a76216d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a9269b-f99f-4d7c-9183-81b17a961833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd53ad9-46bb-46e3-b519-962254be09ad",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383d399e-c731-44ff-8a58-2cc9fe7f9b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36415b70-400e-446c-af35-43a78d09f8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44756cf-036c-4a34-869d-8295f12f8b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c406bb-61ba-4f5b-9c18-1a3e319c5dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f95597b-1ec0-4253-b3cf-a1026fc93fa1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209ab85b-a446-43e1-9e75-ef855ba7c985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5143ae-b85a-4982-a363-6854adbe0fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef380821-d824-47aa-9701-a009e4755136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbb4b94-9afc-4184-b1b0-924cc488efb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21c7f03-998d-4502-9151-33784b005009",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcd0010-bd97-4288-9fdc-8a241054ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b22937-abb0-43da-b50c-32b87e8cebf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31f0c40-2a45-4437-8ae4-2d56853ee5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560e9955-a931-44a9-8717-fd7624fe7ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9443dd5-dec7-42de-a5ee-198952b0e971",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0668f6-fc70-4bd0-a853-95d91a29ffc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d180da9-5ff3-4f58-b52a-412e1f347efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd53778-3035-4baa-bd0e-2deca5020471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f022623-30a6-4822-8774-5f6795907a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f30e86f-22bb-407b-ae9e-5de74bf60864",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3335209-9b52-4bbf-a676-7ad48f2405d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c2d4d7-26a9-46bd-a626-a0234e7ad861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dc81ae-7546-4a40-8f09-f5bb648e9441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f14dbe8-67bf-4139-8b2b-c5140d4b604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9678c598-8ec8-4734-86ba-e4bee90723b9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9164500e-a27e-457a-b4b2-87d8e0f83965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1a7729-8b0e-4c08-8adf-94b112be850d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45f0ed6-a79d-4750-96c2-0a3eb0d0a2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af61f3d-2992-4598-8325-8c63770e06a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accd9b5a-3fad-4998-b18c-46508fa862c5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf2f07f-7a89-4ca3-a65a-1a9aee1474c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd4dfa9-6012-4b88-843b-27ce891b1edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87234eaf-f095-48c8-aa4a-66b293314adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd36343-df4b-4d81-a080-09e812a3444a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfce2ab-6225-4a89-a268-dadebe78eb5f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbedff8-246f-4746-9407-11618851be0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0371f1d9-2059-4434-b157-bfed827451c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f00c60-780a-4396-95d4-14249a9f5363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d96ada5-1b14-491c-a5c4-8b9baf65b92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c51748-a9f2-4e26-9634-d527ea4bd5e6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd7db08-4707-4acd-a509-49196f58b79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc6eab0-c5f0-42d0-8987-cb0b83237245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd115e6d-e9c8-4d33-b77c-ac133efaa9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c922cd-3820-4813-82d4-97add26add38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d4ae10-65b3-4851-9c22-50a21906b274",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50762ab1-2b59-409c-b214-4d7721bc202e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7bcdb5c-0cbd-497c-9175-08644986f7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df77f14a-8558-4965-968c-638acfd6291a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16244a8a-a147-4a59-8b9a-a9dd76e0e82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7ee0d6-3812-41b6-a996-c2b08e82dcdb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b61ab3-58d9-437d-b275-885a34458208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7191ba-f358-4cc2-b742-a7c326adac67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3870aeff-086e-4e9f-8178-0b7657498aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52a5877-5ac4-48a5-bc31-a148b1fcab31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6088b8bd-5697-4b51-b7e3-93afeb8a1572",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f20d4ad-2a34-4300-a7be-a4c7d0cd367a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6318b3a-b481-4ae8-9a39-7f45f67b9d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b721f706-b5a3-46f2-ac78-11434d5c0475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69d9524-8c1c-42a7-8309-44595828e3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8d4fa7-c4cd-4b99-b340-a1fc6eea928c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b09904-1ee5-474b-a2b1-e9dd36424945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e8e5f5-d8f4-4913-a854-8cc054472f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da90b5f-27b0-4f79-b9ab-51ccd71bbabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2826ef7-d7df-468b-8a04-91df10a64f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cf6c7b-8ccb-413e-853f-cd0c21c0a801",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2496a46-c24c-4076-903b-58f95aa86002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3859163-ab44-4d71-b8b7-b0f2c0580244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08025f6-fb31-4385-8bd0-647efc45b043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f7d9ed-75f7-44cf-80a3-8d7f3e6fd7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6110d22-650d-4a94-8abb-dc1d4b90e4c1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5736afa8-d860-47ca-8978-7468a4953f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f12eb2-f178-43c3-ac46-cb844de36664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a49039-3169-4273-b17f-b227d1035b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23f8378-43b0-48ff-9211-a9b88628ab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33df0c4-9b8e-400f-be82-18f59b282999",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b350db75-c896-4b3e-a899-b6ef52f7091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68b9fed-0fd0-46f4-8f4f-d9102435ffdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba6756d-8e0f-4340-9999-0269c0b3398e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75edd5c-ed80-476f-a3ff-fd9fb8b93ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2defd7-aeb4-4f9f-88d8-577eb8426703",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d5b4d1-9010-427a-98bf-67be19f36510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8aae50-c68f-47da-9361-415cc227d71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013799d2-d768-4e04-a894-28c8b0323a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa7b77d-e0b8-4a8b-bf0f-d7007f8da5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132e5dfc-1267-476e-9421-40113b204dbb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae286976-cbe6-413c-a037-2bf295ce4d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16be2545-ad0e-45b4-bc3a-5fd485d5272a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b5d05a-415a-4b01-b14f-88b6e143947e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec07845-d623-45c4-a594-668e55d8d782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc4840c-0eeb-4dcb-bc21-5291c06ae57f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfd7ad8-2516-4e79-af17-8a64aa6d33a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9af824f-78d2-497c-a112-fd4ac522aac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445fc175-f654-460d-8bd3-0d1bcd79f632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83e0a8e-44d9-4bfb-a9fb-f91b009a0fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3763b68-6cd7-4e1d-a55a-4f737c4cd6c3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3828c20b-dea6-43f5-833a-fee9dc0e1be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5e35a3-3c9a-432c-8bb9-d8b23378572e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0671ad-4ced-4a38-8712-d68fece34e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5014202-1b1b-4960-a8fc-b35543571752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05126879-e3ce-450b-97ff-c20700580bdf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f371abbe-2b60-4660-a67d-ff5a6037bf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fff0925-8452-4b0f-85a6-22c28d675141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9499f9b3-00d3-4329-b445-906dca92e94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec49267-98f1-4f0a-b7cb-3766d3e63a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06eac886-8afe-4c9b-bf8b-31e269dacd56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851157dd-5442-4f86-9d18-3ff5bb2536f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2724f0-3666-4994-bdfc-803f88050939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1309a3-e8e9-4639-9fb3-185d2c1954ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b044db3f-63bb-47c1-9c5c-2063ef16d757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97febe64-f1cb-4e88-b432-d6d34577d878",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9bffdb-58fc-4b12-8a23-4826d479cd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396185be-5f72-4da1-b464-7f3ca942e1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf10a1f-6415-48c7-a3cb-04b96758dd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0714885-9599-441c-88da-fcde87161da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b826686b-7bd5-4cde-8f68-f5f373abe8e9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc80c8-c02d-4429-9d98-e6607e7c2029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e4269a-8eac-446e-bcce-1c69917be419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ab906b-7ec9-4412-9c2a-7c317d131b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf3ed9d-e07e-41d1-8d03-d85c5a73fe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e9c212-02d6-4b87-b30c-70299d570c9f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc5955-2709-467a-835b-0f6ef2b0483f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86ad9a6-6c62-4640-a01b-a2fa1b29781e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca38a05e-0366-4bc8-b477-af1bb1784fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64e0c7d-650a-4c25-9023-31f2a27f9f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82597b26-50c0-4210-8de7-d56b02bd838c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242c338e-d825-4c4b-a3b0-7f1567467f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb45b5be-178b-4ac7-80e2-9f1e0e702db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ef9f42-ee83-4bea-8dbc-687b3754c15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6175319-0756-42a1-959f-eb0f10253a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3869ea7-e496-45d9-aa1d-9d817efb54bf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f159feb-a4c2-4401-ac79-4ff3f7238c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8173ae5-9130-455d-b9fb-737d2d435e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bddf9b5-aa3d-464f-af00-d4ce5ce533d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7247db36-0c13-407e-a0ae-8203780e0dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f057f26e-50cf-459c-a0c8-0974375d316e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d85a75-e6da-46b5-b325-ba0b928aead7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c8762a-1b07-4a66-82f1-0d1d1c5a2923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe29aea6-ad5e-4c05-b4bc-df3ec5423aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6ed4e3-6854-40ae-a196-7d9b098a0a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffb85cc-3c56-4cf8-8789-3a48ae4031ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f15be61-5b12-4c51-9b72-8a1c3247a4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474812ee-153c-4a15-bedd-35d97f77da50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004fe650-93d3-41d7-bdf9-88e9216e8dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807f7b65-adfb-43da-8cf8-a8fe8fdb0f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd69dc8-76f6-4f8c-956f-a45220a2c9fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7826c17f-d6ec-4c01-bf63-9c1016caadfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4512b81f-4f31-4c06-9180-0b2ab5fd5031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae310a-6f83-4097-baeb-6389fabe88d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a8d1b0-2e37-43f2-822d-600c41b34e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba997f77-f27e-4e9a-90cf-a1241645f490",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c3f506-b8e9-4dff-aa61-e5799fa30d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ce7df1-63cd-4d4d-be58-4fd480898bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd90cd1-6e06-44e3-a4a8-376906b78a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c632fd33-aacf-4684-b555-f437e2fdb7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5e567e-e1c7-4ccf-b908-aa9b93bb4464",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abdcfd7-6485-44a1-b14e-36f45fd81644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f634f3c5-8365-4998-b470-342a89c7a68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764ccca9-b828-45b0-935b-88c60118d259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905127d8-9a72-4b50-92ee-bad5eda01b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08b8cb9-fb95-4c4c-a3d0-ce090cec1c3c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570691fc-5311-42ce-9b84-d3331103a9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd95554-b576-4ae0-a6ac-93193390cff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad76e0ff-d8e0-4ea1-b9a1-1070551f0232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f158fa-dc53-438c-bc92-26d77c747c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b08476-7c99-4869-9e5e-bf0c23a4ac4a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8396f317-34f2-4302-b7e8-1cde82246b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b521edc-0bcb-4a0a-aacb-493476fa4ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafa3295-8a4d-4372-b93d-40bdbc219e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47019d05-26ca-45ab-875d-cc9c43eb5d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e6fee4-4ed3-448d-aec4-99030d634c57",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6ed7a8-3bde-49f5-af33-27da2484567d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c26f6f-55d4-407f-b40e-5f2f313ea5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b6ae7e-783c-4e9d-9a63-a6ae0baed52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9677e984-03a5-41e7-8ebf-cdff5fc79077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba147efb-538e-4c9b-975c-d009e961f612",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64011df-c601-4893-bfa0-c0793304bb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a365bb4d-11ed-4675-8437-6869cda14db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e34e3e5-bcb4-4850-a181-537a52faaf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f3efe7-7e98-4486-bc66-96d999258e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb0153b-55aa-4d94-b153-6aced4721f0b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e9d9f5-b46e-4493-adac-06ff0f7cf0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c7fbf8-1873-4735-a502-53305bf74613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a026c61-97ff-4ebd-b61c-c5bc1bac094c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641a0a40-c083-4ea5-9c91-20fe3996b8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b571a8c-f68a-4e57-aa84-f159aeca24bd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c75a64d-df0e-45bb-901a-40c8a531dbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18484f7-559a-4d48-8be0-aef64eed5fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627e9940-99e8-4bca-969b-e4d49b907b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5d970b-07ce-40b6-bf19-1cd2fee2bac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ceb774-e6fa-44b2-b18b-a2bf6f236a41",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a869c8f1-1fe9-4b29-83b4-6851fe47341d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd956ca-e02f-48e4-8c5b-bec434a29d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda4a476-05cc-48fa-97be-86b752ed5fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bcb670-db86-44e9-b95f-f7f0cacd3ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962c8676-444a-4d41-bb32-98812fd8dbee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9c036a-081c-44de-940d-a1df3a9e1a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd17923-df3c-4c0b-a8d7-7b83b87ab5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6a0f09-26df-48b1-a96d-40c8826a6dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60716dad-e86e-4639-8c79-a207616fd47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64724b28-2280-416f-bbe5-090d924a3ca8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c7e4e7-6a86-456f-ac47-01f864c8763b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53292bab-3d88-4736-b2d9-729616d7238f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073c33f5-2331-45ce-823a-72e4875285df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5c9a63-e63a-4b7d-9185-effc4f1b19e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e009a3d-a844-4650-bfc7-70e4db83b939",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287dfece-3e5b-4e61-924a-82ce1f052b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0ca174-27e1-4d80-817e-0ebaa5714006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827a8b02-0c5a-42c0-92a9-a40f8a2be5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb360ce-75d4-47ac-a8be-c9345577b548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938348ce-ba56-4085-9371-986a863625da",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce8e79-4684-4927-8a01-9bd2b7ca7e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07648683-ffc6-44d4-ac60-3c7635fccac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d42ad0-2252-41ce-ab8c-07319c06588b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de826d76-080a-4638-8b08-b2975870ef58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6b1b32-609c-4462-b6da-045946f4bd6b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247cbdc0-c26e-49de-8490-c75c33fe6cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6693b0-1265-413e-b91c-180b0bce2e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112f160d-8df3-4b25-a820-56eefee682ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8226a66-dc9a-4067-907d-e5bb264baaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5e88ad-9ab8-4fc7-8ca0-cc5202bb455a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e341139e-a3b4-4db3-be92-30efba8ae14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f6dfba-12cc-473c-b58a-95850a23308d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eedcd0-06f9-4ef3-96ee-592ef2bd70a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c792dacb-f023-4bbe-955a-ef1115c13163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c1d440-583b-43dd-8659-dd00356acedc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970a4889-b777-4ec7-a1dc-57f499dd0585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f1abf6-4f10-4d57-903c-c5592056b32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84861774-97b4-4d1d-ba58-964dd5e80858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb350698-2ad7-46b1-876d-62c73a607189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc83622-3eaf-4f23-89aa-9e334b87c819",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e9a263-4565-4c51-a9eb-1db5c330af6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26485b2-5776-48c4-8f62-44abffd00e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d4d51d-48e8-499d-8ecb-c410aa1dd57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70027983-9b7b-4387-9ed8-a059158d6423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1773f14-c9a0-49b6-9c81-8abccc05d439",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e961cc-94ba-45d2-86a5-fd2984052eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83760771-6569-44e2-b98d-bcc6d9a8b059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c08ac78-45bb-46d4-9259-b5fbd3670aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c6fd07-4b12-4d5f-9991-e227debe6573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249bae26-608b-4496-a13a-b6d1b981af6e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3f2e7f-437a-481f-9f1e-bf0be24ede83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858687cf-d3fe-4ae8-a752-1093bc3b6779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8850102-ba0c-4057-8167-0038952822a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15c193c-aa81-4c82-9f9e-daf42f168892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56ac7f9-caf6-453e-b74d-e65fa5c23b63",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f606bdc-d19b-4cea-a46d-1fb51622a8d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599c5123-5e86-4c51-a9de-b6f1b72c3e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4429e231-ed6e-4046-bcd8-8606836219b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa43ec8-63fc-442d-984f-f2bf760cdb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96de1aee-4f2b-4f67-91da-faca7d270172",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb280cc-cf07-4228-8dd4-645c8fb88321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92fdc44-ef95-452d-93b0-da55882b5030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded2e15d-4575-462f-9dab-7fa80d076d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d4197d-f3b5-48ed-8b42-7f88c493ca6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb0e317-4c31-42b9-a76d-740e2e0e9953",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5d8a4a-2805-4394-94e2-25936ebcf893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f947a540-bf22-4481-858f-b5f243e8cf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c05c1f3-33e1-4cb0-84d3-cd2059e7c637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e61a5e-294d-48d3-b773-ea7dc68d7c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f66aedf-0791-4ae4-b58e-891f6a03290c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b5cd79-ce0f-4deb-ad79-af7d9bd708ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a4a50d-09ab-4300-903c-f47a430b796c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90100182-5237-49c1-a200-291641855d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d8ee8c-d38b-41fd-98d8-ddf7cad25d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11407def-1d8f-48f0-85dd-8aa51daa2d11",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9031bc54-9aec-4b9a-b743-1aa4423dd886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e89cf439-338c-4727-a970-ebcdf4f31eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4198e24c-14f7-45cf-8df5-81204474ecbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576b2e8f-228e-42d5-bd7d-ae80c7f196c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be5d377-3e38-47c1-a347-5557e9f4c85b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30ebf79-3e4f-4969-bf16-0e8611b48e92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af777b0-a5b2-43bd-a22b-8e657c68a363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e157e08b-8ffe-49c8-bf2a-0eadac23f3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81df5c8c-9e82-4a9e-8a29-1825e231c9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff2f960-933f-4dd5-8fde-98c6900b71a5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1435322c-3236-4c1b-b92e-e288f77724f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7835babc-c16f-4929-88dc-20c90fc81d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5647643d-8ab8-4804-a622-eb588c59f5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b3eeca-8a88-4447-bcd2-f0c83ba2978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af46363-2948-4eed-a061-46e6a64308d9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1902b1e-b9ec-4cb2-8632-b6ec68dfc5fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ce857d-00c7-4713-b502-62f946e8355a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5cca60-d76e-4263-a83b-d16c2c5ba0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e15aca-2026-4c89-aef6-6008e13023c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e102e760-5e3b-4fc3-b427-8005fbf23519",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab35f059-fdb9-47a1-8e3d-258a9f5e07df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "231d279b-3337-462a-96a8-2b26bda41de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9408de13-b171-49be-a39c-373141786d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5b069f-6e19-40e8-b676-3614c48b32d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dcf2ca-67a7-4e0e-88de-46fae033bbb3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328570f4-2f8f-4af1-8dfa-852776a3c6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22829643-f0d0-4163-b6f0-e74f182bb71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa46406-f8d2-4c8b-9750-7138f8883789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1377d681-dd66-49cf-bc13-75b1043f6d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b7d5b0-acc0-4cdf-84fb-2795dca4318c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418414b8-1b44-460f-af2d-dac7f60017e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c49c6ff-2ddf-4b4a-a54a-547360b5a7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1cc5e5-6a11-48ff-b6a2-e5738efc4e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d54e20-b9c3-4aaa-a812-29b93dc72ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed7828b-eba0-46de-92e7-b45a688e7ecf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cab0394-0e28-42e8-a5b6-4818b667439c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97229f57-c5d5-490a-b160-8a31efeae88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce99bb01-8c5b-4d96-9614-39ace0f75ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7814fcdf-9d98-4825-9234-2e3174bd3301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c530e3-b234-4432-b03e-86e51531ed7e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22f3f96-0d29-431b-83b9-2dca2a5287e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f08831-a78c-4f75-9a0b-e41ee0592fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4aabb0-1a30-4600-8e44-dba7af5c564e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d26da7-7c32-4f2a-a878-49733e8df01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729b820c-a3a7-46ee-9d98-627807c2d2bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae08a6f6-ec76-41f9-874b-c6453ca4a222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fcfcae-0fbf-45b5-b60e-8a1fa203c4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aaef37-88eb-47ff-8cd1-9643d01de3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a8af90-c46e-45b0-acae-8e18053d9b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c122ef-cdba-481a-94bb-a4a7c02f5eb0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279a39a1-7a84-4056-b512-3aac72cf6093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f8e154-3e9c-4643-b9a8-48902c1bfb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355cd570-f39d-4f55-a6c4-87829a1d1ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8269d509-d93b-405a-9678-1c77eaf0cba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accee1a0-c4ea-40db-8448-74c6b1b4f919",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b68c09f-3d9b-4736-8f43-49ef6acfcf95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e58356-1da0-423c-b65b-c4b38570e9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4f2eb8-c2ef-4ca2-974b-d2622d9ac95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef31006-c129-42bf-a8ef-5c599c56ee36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cc1598-e283-4e46-86c3-54347976476e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5df9378-048a-484a-8ed1-812450bf0943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "083ef263-a5c3-4513-8ae3-4cc98174faed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10199098-2a99-43f4-8d66-a107395e33b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9408f492-c94d-415e-ba63-ca9ed3fc134d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc78132-9ab8-4d13-bf1e-ce9df6aed225",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ae9cde-0dfa-4739-9248-bb482d40740b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d21e9a9-73d7-4839-bdd2-b24a412dca23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea3be59-a608-40c5-958e-66b64fa5c3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f44eb7-abf4-4f40-a286-e0b35a3da1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c8fb1f-6f7e-459a-b17d-c99a625ecad0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c10340-5073-443f-aac0-8bee1ffb6ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec73ae88-db83-4cb5-925e-fa0ff45964ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04521c88-6347-40a4-845c-866cabb7a0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15a257a-5de7-4ea0-a077-8ca61b7d62a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db337e4c-b609-4be8-93c1-e87e01d24cb9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac30e58-f6bd-43a6-8e2d-b81a3d46efb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6fd4b9-41f9-46db-81d6-5acade06b318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784e3a45-49bf-485a-8156-50a499439b44",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13207e2d-79ca-49ee-bd29-6d59c4195416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef75edf5-7f09-48c6-8980-6d9d269d31b9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b3dd73-9034-4f55-8225-5742bcf16dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3aa4d4-72e5-4cae-ba33-1cd5e4a38af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3fc627-b4a4-4c6e-ae12-f499a4fa423d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b03124-c4b7-4d8e-a222-fca439c53bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e87d51-df03-4a3f-aa43-6f9d0013cbb1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40367b3-23a7-4944-bcb2-7004728a46aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc45bb8b-e52f-4228-9318-4a22fc9c6de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43614077-f71c-4c00-a748-1dfe545a06a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e8d10e-2551-4bee-bb11-c9ca13d4ef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1b0e12-9f72-468f-b417-14d9e835794a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d860bde-ccfa-4ff6-b9ce-42f73fb0bbed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c4a2d2-4422-4300-acd8-e47319381fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab45e53c-bcff-441b-aec3-a0616510df41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c84fd5-e09a-4e68-9d34-96d3de24b33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e73d8a-d129-47d9-9ad8-a0640da7c7e4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca937f4-1c8c-4dd1-bfdd-9534c33d7881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d62de3-1e31-4ceb-84b0-93a523fa13ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d44d0a7-a565-423f-9e46-b29eb6a97e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a546e4-a7f6-4c30-ab36-0e5124114482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c25def1-30c3-4ba0-8818-32d1bfeef7a0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2886d1-75eb-4daa-bdf5-d8aeef54f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56b3e9c-5c8b-43c3-a75a-51cbf0b8c702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3937b2af-b14c-4569-b7bd-bf297b52f50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd57570-1e14-4e48-967a-5425509f0900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a76b685-0bb1-4109-ae90-4cf43b2a5b54",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c143fbff-d4ba-4fbb-85f7-124059f78970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32db7ab1-075d-4183-995a-fa1372fa8c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f06c2cf-6a2d-422f-ae43-7243ee170e34",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22541df-f5c7-4a5c-886d-951fc8e7b6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934260fa-9ab1-4801-86e8-b0097c3d68c1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffad4ad-ab97-4969-9387-c3ca78f6008c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76315a73-36a4-4cdf-91ec-b555d86f90b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f3cde2-1f54-49ac-8f22-0c432ac9c8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e48d046-b30a-41f7-afe8-0e1fb0154cf6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97a4d618-746a-4e2d-8db3-4e01abf5b161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef4e297-87cc-4736-b0d6-c451647716f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4dbc1cb-a822-4bec-b85c-6d18d05e8be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13255235-2b81-4c2a-8b42-c42958af986d"
                    }
                  }
                ]
              },
              {
                "id": "30bb4828-d37f-4ee1-a60b-5fc9e1836abe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03b1fcd1-b808-458f-be56-c817ab33b03f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d276b557-19ca-4009-8bf1-bf5179d0c0f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "893b70ff-c9af-41a8-8aad-f7c01859c6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6adbca8-44c7-4024-962e-209ec7ff7150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02127755-14b7-41cb-8c74-1e6048836e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba8590c-6830-4902-9071-61e128af0c24",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7593429a-5b1f-480b-b968-32d67126601c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "699ad435-2847-4293-866e-e036acb43544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b4de78-d02b-4237-998d-8c070c929718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b411dcb-cc2e-4289-85a4-b13f581ae65c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d8a5b4b-eb8a-4bae-8097-da69c33eba36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c9f2eaa-79a1-4c78-847d-2913c0e42ab4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3150a6c1-f12c-444b-bb32-e25e79c23d80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03f32abe-d3e1-4f84-bab6-70720ff943cf"
                    }
                  }
                ]
              },
              {
                "id": "2268898b-207c-4722-9d7c-f201dc1a9ab8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "66658b76-0926-45aa-a181-fca162cbcf9b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff69e30-988f-4d7c-a199-c2a57f75a7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "383e3c53-f3cd-4a72-80fa-3d1384fc21b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301f4ee1-28a0-4555-890e-a513ecd8c654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167407eb-3f3e-454a-a6de-9ec0c33e6b99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e3223299-733f-483d-8b5f-e97cc1bfc785",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76a47125-af68-4c2b-8e0b-fb89cc2d42ea",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "145b0c4c-6d9e-497f-84f4-b0351fc7a9b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "371c3a70-8e06-4136-876a-b60849cc7969"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d100c03a-582a-4a62-8ef8-9b4c6e821ac1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaf8de81-767b-4f6f-b823-5799451bf912"
                    }
                  }
                ]
              },
              {
                "id": "6e54d6bd-2dd2-4119-8b7a-a5698acf8a26",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2421192a-2309-4bec-a0da-923ffa39ca95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5e4802e-54b9-4fbe-95d6-1670386c95da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b81cf9a-31d9-496d-bd63-de5cc8d11db5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "131a6e2e-fbfe-4cac-9c26-cc3d8c078f81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "084939fd-a80d-4c58-9abc-bde0cbd8d3bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cfac1ff2-521e-4c38-9deb-30106c76f6a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000809af-2e1c-419d-9d94-e761d78092b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5fc1ada-1a94-40b8-8f8c-009291010c56"
            }
          }
        ]
      },
      {
        "id": "d5b821ba-f00b-494a-b02e-041ee37a4bf8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9d5060a3-186b-4322-a50c-4054b9c4af98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd759f2b-32b1-4bc2-83eb-6f2ddd6bfa57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8367d45d-0a02-47ad-9571-f04db2c83120",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d5d2a3-6e58-488d-9e00-fcf16192cf62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "080a59ea-87b3-46cf-9f46-71e70d560243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aea0887-8cbf-4049-a85f-02c6caa93fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9467046a-03d7-45ba-9e62-6419f537b2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa4b076-97a1-4cb4-bca0-fe189c5a9287",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b7d466-026b-4fb1-a025-4d6d9111f459",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a947f47e-28c4-48dd-8ce1-b427457d8649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f59cf78-539a-4535-8a1e-97ffa67ceec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80ffa976-15b0-4ea8-9aea-f1d390114265"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa52ef09-6910-4a5c-bc06-62169c136ea2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4f6bd29-08a5-43cc-af4a-59690ae02943"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9279bfe-96ea-4796-84bd-5a6b55f05e80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16be9662-8630-4edc-b848-13962328bbc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "284ba161-4363-4e85-9ffc-36ada9fea1ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "de3c5146-ab8c-481e-b6db-a9b325fbf19a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49cd4edb-dfaa-4c54-b833-82bba4f0391c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4185f64a-0dd5-4593-b1cb-66e7296cff8d"
            }
          }
        ]
      },
      {
        "id": "8b29bd1a-5d09-425a-a62b-e70d5424be8d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6b2572f6-50a6-4371-9d68-e32924329c7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fc69b69-3542-45e4-a036-f6baa1175540",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f92bf5f-ce62-4c6f-8b80-e3894c93c2ed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2858c552-c0e5-4ed7-9079-4e7d5624c807",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f191faf-5031-486e-a4d0-9bc7e017121f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936e89ef-773e-4c92-b9f2-49e3b8e5b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99d07826-b29b-49db-ae68-543104233db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9cef3c-4333-47a3-8cbe-37618d59450f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50be903d-70b3-4222-a476-4285f22ab4a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "68a98ca7-6aa8-4af3-b3b3-4bbc12980e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec3e2ca-257c-4351-a0f2-4409c268d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b18fb2f-33b1-4b1e-9aa8-ec031e106723"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2bd18cc-8902-4a3a-bc45-c86f8fc94b43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e5a5a65-2877-4556-ac45-5e85a8110a7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ad840b1-1d9d-4542-8b5b-3437b87c72f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b19cd1f-2a88-4948-8d9c-a3cbe7cb06be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7477c6ac-8257-443a-8651-56a73daf5a03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dea9f003-7118-45a2-a01f-16c41a16a233"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce30c3f1-4cac-4a98-af1a-76d4862388f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b9a1300-42c9-4a46-8718-656081cb444a"
            }
          }
        ]
      },
      {
        "id": "ad4c0b08-e080-4b04-b9ea-0fc9c25e2efd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "45edc38d-f8aa-4ffc-80fa-549165ffad7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68ae8b11-efea-42e5-9172-f9254baa6c45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8e3c2bf-7412-4c54-966a-7662f3c648bd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7e0112-614b-42b5-9e14-f6aae77e109d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1affa384-b8b5-45c0-8a75-6e503176e490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc333d13-387e-4a9a-a282-0d690577b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ed80319-60f6-491b-9b43-94cb1e3333bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9e1aed-9369-43c2-8660-947488f24eff",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69d32a4-04d0-470e-8677-5cbf05df0f51",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "15825a56-d8c4-4d31-9cbf-f46de219bbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30082961-a74c-4e8d-a4f3-c6afcddad9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41be5e5e-1572-4901-9b9e-48756b8db26a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68b72c4a-fd63-41c6-a156-d71c3f6a5fa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a80ddb6-c4e4-4859-b508-f35b22da1ab9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0fc8479-8553-4e1e-94d1-8f289a278c58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef4ed978-9cb3-45f3-b861-3f8b3242edc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "470ecc73-ddf3-46a4-aed9-0cff1ebfbfaf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87169ee7-1d75-4a13-9998-9fd0dc68bfe8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ce8b2d6-8916-4de8-96ed-34ca6c631214",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a470405c-aa7e-4455-9a47-d25dc8424566"
            }
          }
        ]
      },
      {
        "id": "4f494de5-26b1-4188-bf9b-4ff3576b185c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79571727-58f4-46c1-877f-b4a31803774b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30503951-a5d8-4da2-97b0-3bf311a992cf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aa4e930f-ce13-4b11-9e3d-09ca364a90c3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9a59589-9961-4dd4-bdd7-0fe1805f0b8a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f49d40c5-3b0d-4962-8d67-b21d55985ae4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.696153846153843,
      "responseMin": 3,
      "responseMax": 404,
      "responseSd": 50.230200697689604,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685407175967,
      "completed": 1685407190658
    },
    "executions": [
      {
        "id": "6d8cd34e-2c34-46b7-a68d-8eed347874a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "38deaf43-1a5a-402c-9807-5917f9142c98",
          "httpRequestId": "e4d5667f-b8a9-4f37-9b54-0de881722225"
        },
        "item": {
          "id": "6d8cd34e-2c34-46b7-a68d-8eed347874a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec4e3125-da52-4969-8a22-2e8f9db892e2",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "0c7149c3-73ee-4c21-a92d-a9de8a7bf126",
        "cursor": {
          "ref": "7ff90ccd-67a8-4877-9482-5091a0bb8814",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8ae1dfb7-466f-4a13-b1c7-c9cd1edabc4c"
        },
        "item": {
          "id": "0c7149c3-73ee-4c21-a92d-a9de8a7bf126",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6d5bbeb5-afaf-486a-b24c-189959e53a79",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "c217519e-85db-4786-9779-76a6b4497e1b",
        "cursor": {
          "ref": "e0e9c980-a4f5-465b-8947-4332d9ae97fb",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ded92d25-93d4-4c8d-8cff-7a63dbe5903a"
        },
        "item": {
          "id": "c217519e-85db-4786-9779-76a6b4497e1b",
          "name": "did_json"
        },
        "response": {
          "id": "060f8d6a-b94c-4e14-8b07-7f7032fdb12f",
          "status": "OK",
          "code": 200,
          "responseTime": 208,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56b01c3-9dce-47a1-b637-09acd42b9cac",
        "cursor": {
          "ref": "ca4845da-984f-42dc-956d-a2fb6d23a366",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "89e6bdee-272b-45f1-a633-52fa64d9667a"
        },
        "item": {
          "id": "f56b01c3-9dce-47a1-b637-09acd42b9cac",
          "name": "did:invalid"
        },
        "response": {
          "id": "f907abb6-a3c9-4fca-aeab-7eafc44d89e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56b01c3-9dce-47a1-b637-09acd42b9cac",
        "cursor": {
          "ref": "ca4845da-984f-42dc-956d-a2fb6d23a366",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "89e6bdee-272b-45f1-a633-52fa64d9667a"
        },
        "item": {
          "id": "f56b01c3-9dce-47a1-b637-09acd42b9cac",
          "name": "did:invalid"
        },
        "response": {
          "id": "f907abb6-a3c9-4fca-aeab-7eafc44d89e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab06f876-554f-4c37-aca3-569061c08164",
        "cursor": {
          "ref": "885040f2-ba84-4543-b260-093ee3117d66",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ab1d39d1-18a9-45d4-bb77-2cf8084079a1"
        },
        "item": {
          "id": "ab06f876-554f-4c37-aca3-569061c08164",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eedb54c6-45c5-4afc-bbf3-75fed3c86534",
          "status": "Not Found",
          "code": 404,
          "responseTime": 125,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f88f40-af3d-4b8e-be11-1cffe999d739",
        "cursor": {
          "ref": "b4e15d1b-a1ce-446b-a98b-cc16a8608946",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d41460f2-f658-49f2-9161-90bfd1734d5f"
        },
        "item": {
          "id": "43f88f40-af3d-4b8e-be11-1cffe999d739",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "48032972-5d0f-41df-948f-cf59d042b6ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733465ff-a481-4b9a-b79a-f9b530f746a3",
        "cursor": {
          "ref": "4cade30b-7c06-4581-876c-f46fbb9a5d25",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e9495277-db82-460e-9744-0637543132f7"
        },
        "item": {
          "id": "733465ff-a481-4b9a-b79a-f9b530f746a3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "de91d359-6bc0-47e1-bb54-7b254c08bbb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30820af8-1f07-49d8-8c04-d9ed5a2a02e8",
        "cursor": {
          "ref": "c38d4857-29ff-4e77-a75c-32131fe9366b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b70896c6-6929-48d6-9378-b56998ce34ec"
        },
        "item": {
          "id": "30820af8-1f07-49d8-8c04-d9ed5a2a02e8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "313ac599-2e38-4c08-8394-c9923a7cd85a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30820af8-1f07-49d8-8c04-d9ed5a2a02e8",
        "cursor": {
          "ref": "c38d4857-29ff-4e77-a75c-32131fe9366b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b70896c6-6929-48d6-9378-b56998ce34ec"
        },
        "item": {
          "id": "30820af8-1f07-49d8-8c04-d9ed5a2a02e8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "313ac599-2e38-4c08-8394-c9923a7cd85a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc4339d-0c5c-41fd-8051-9a9c4b20cc87",
        "cursor": {
          "ref": "d1573af9-06fc-45d1-8d50-f567759987a6",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c9025bc4-2f18-49ad-bf3f-75f903fbee1a"
        },
        "item": {
          "id": "fdc4339d-0c5c-41fd-8051-9a9c4b20cc87",
          "name": "identifiers"
        },
        "response": {
          "id": "aa90f76d-c99e-499e-b956-05e6403f5f59",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceacbc5-3e34-44cc-b3da-05a735fb61bc",
        "cursor": {
          "ref": "d3aa115f-f3e5-4c6a-af0e-d0f1058f5161",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "563862a3-b279-434a-9ba2-a7159ec7a3ef"
        },
        "item": {
          "id": "4ceacbc5-3e34-44cc-b3da-05a735fb61bc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "38b4755d-060f-4d0e-a39d-c54aba976481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceacbc5-3e34-44cc-b3da-05a735fb61bc",
        "cursor": {
          "ref": "d3aa115f-f3e5-4c6a-af0e-d0f1058f5161",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "563862a3-b279-434a-9ba2-a7159ec7a3ef"
        },
        "item": {
          "id": "4ceacbc5-3e34-44cc-b3da-05a735fb61bc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "38b4755d-060f-4d0e-a39d-c54aba976481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a580faf7-04e9-4f03-9672-aaf3c8f61119",
        "cursor": {
          "ref": "fd5f5a4c-98b6-4084-8ee0-39e1197ef90f",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "34bcc8a9-95c4-43e6-ad74-d3a6ec3b17c4"
        },
        "item": {
          "id": "a580faf7-04e9-4f03-9672-aaf3c8f61119",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9898a518-8d7d-4029-8771-757d8d409c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc0447-16f0-4eb4-aeab-2585c6f0a69a",
        "cursor": {
          "ref": "d144271b-ba72-46e4-8fd5-d231db51951e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3c2dd256-3115-4857-9961-4065d667f3b2"
        },
        "item": {
          "id": "2dfc0447-16f0-4eb4-aeab-2585c6f0a69a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "395087bb-7746-47b8-840e-37dd0ba40d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ffe7a2-f603-4c42-8525-71c2a8fead81",
        "cursor": {
          "ref": "ad984033-43eb-44ab-b468-3ffe95832965",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4eacd765-38b4-4882-a09e-59dae07d284a"
        },
        "item": {
          "id": "91ffe7a2-f603-4c42-8525-71c2a8fead81",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2b47ae34-e30a-4afe-9927-ee73bdecd3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f755ffef-1640-47a6-9792-e2717fd91221",
        "cursor": {
          "ref": "a16abf7a-aa40-4936-b229-20442a2fca6e",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3c0855a1-8827-4852-87bf-a348b9b8bd45"
        },
        "item": {
          "id": "f755ffef-1640-47a6-9792-e2717fd91221",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b4c81f15-4105-4ebd-b664-47461b6fd4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0e83e2-cc6f-4763-b8e8-13256e0925dc",
        "cursor": {
          "ref": "44d9d0c3-8e3d-4ad2-a012-4c8e4c9a94f0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "685eb972-ffbd-4bb6-97b5-1c0a60732e7c"
        },
        "item": {
          "id": "ec0e83e2-cc6f-4763-b8e8-13256e0925dc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8778ad7d-6a32-4daa-b4d5-fb0d3a034d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf2cc9-5446-43cb-97aa-d5cc9a922045",
        "cursor": {
          "ref": "0b32f791-2695-435e-aca1-6df58265c546",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2a0d9688-f208-45a2-a9d8-76e08c8fb096"
        },
        "item": {
          "id": "22cf2cc9-5446-43cb-97aa-d5cc9a922045",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e1b647c-2e33-4d9c-bd5f-b9232f89ecf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238ab322-e158-4208-b726-6f8226c1f058",
        "cursor": {
          "ref": "93afb7ff-a152-4095-9117-e4aeb76a48cc",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "82204bfe-2008-455e-b7b6-d58f6a89eec0"
        },
        "item": {
          "id": "238ab322-e158-4208-b726-6f8226c1f058",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5c6304f4-fc14-4cb8-8a37-4552b32b9677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e327cd8-7e77-4032-8579-e698fa4c1229",
        "cursor": {
          "ref": "34291126-b8ca-4b95-8ac2-3ee9f1d100d7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6b297bb9-a04c-4821-ab51-61d2e7099ffb"
        },
        "item": {
          "id": "2e327cd8-7e77-4032-8579-e698fa4c1229",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cc8ddb3f-9d77-4f19-9d9c-ee8dc4510f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b522c9-2ee6-4e49-b190-20080c98ca6b",
        "cursor": {
          "ref": "8db5d9d1-8603-4e88-af89-896d5315b682",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "840c1885-2419-45d1-b7a8-b10fa0069a9e"
        },
        "item": {
          "id": "99b522c9-2ee6-4e49-b190-20080c98ca6b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "35b73552-ec3c-4111-9fbc-0ae6aebd140f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abb6de0-9d35-4d5d-83f9-6db501065902",
        "cursor": {
          "ref": "33e28611-726a-4fd1-a069-2ee9104027f4",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2c4d1a6e-d52e-4be1-80b6-1b1c8e81b47e"
        },
        "item": {
          "id": "9abb6de0-9d35-4d5d-83f9-6db501065902",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2a69a3a5-b31c-4eff-9e44-f45109e7a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704966ea-69eb-4b12-a36b-d872d5794b3d",
        "cursor": {
          "ref": "6ea5b0fd-c077-42ae-8129-242390289e77",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e41bbc9c-50cc-4c0f-9aa5-2aa7c873e37a"
        },
        "item": {
          "id": "704966ea-69eb-4b12-a36b-d872d5794b3d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fabf1e11-45e1-4a56-ad27-9b8f7e49d65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7323b9d4-8c7f-4d2c-9980-5a6918404af6",
        "cursor": {
          "ref": "e19099fc-19e5-4284-bb84-dbd78ab7af05",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c87f7e77-2570-4ece-8b33-f831c2779068"
        },
        "item": {
          "id": "7323b9d4-8c7f-4d2c-9980-5a6918404af6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "93609325-bacb-425a-9561-13b244724513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42004cf-05e5-46af-8f95-61cb557bfc48",
        "cursor": {
          "ref": "d897ce57-43e5-401b-a30c-28d0dd437c4d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6e55c5b3-fa03-434c-8e9c-6667956df8f8"
        },
        "item": {
          "id": "f42004cf-05e5-46af-8f95-61cb557bfc48",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dc555967-25bf-456b-adcd-8f95f0536d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4747421f-7577-424b-80a4-84353a8415db",
        "cursor": {
          "ref": "00930fd2-4249-40f4-a6db-d171f297d586",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7528c2af-4bc1-45aa-9dcb-7946bc26bdfa"
        },
        "item": {
          "id": "4747421f-7577-424b-80a4-84353a8415db",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e02a958e-4a5e-4447-86d9-8c951416a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5f3d0d-b91f-4bd8-8127-d6d918c060f1",
        "cursor": {
          "ref": "2250cbeb-a0b9-4abb-be16-4a295d099a7e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b3df55b5-4882-49cf-8387-8803cdabc88b"
        },
        "item": {
          "id": "8a5f3d0d-b91f-4bd8-8127-d6d918c060f1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a6ba3fa4-b4e7-47ec-b8bf-a4f9784bcc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d983b18-5e52-441a-bf25-59f34556be96",
        "cursor": {
          "ref": "90acf874-ce23-44a1-93ea-a372d1dadc56",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "82f37fe4-41e9-4a50-bc17-f87596e33dfa"
        },
        "item": {
          "id": "0d983b18-5e52-441a-bf25-59f34556be96",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a6d1d85e-8361-42ca-b322-5428f449f60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0179d8e-688c-44cd-b867-029d70c53512",
        "cursor": {
          "ref": "0be0ea9e-6f5d-4237-809a-d73dc1597077",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d43fdabf-4d8b-4765-932e-03999c1ef529"
        },
        "item": {
          "id": "d0179d8e-688c-44cd-b867-029d70c53512",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4a552558-a981-45d4-b959-606b37ed5346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e219f15-9703-4b43-8b44-94a4878322f8",
        "cursor": {
          "ref": "a22ac2b8-3314-4765-95f0-9d3346a54e73",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5fdca3af-6581-488e-be87-22f5b714cd9d"
        },
        "item": {
          "id": "4e219f15-9703-4b43-8b44-94a4878322f8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "48993e59-1b23-465a-bf8a-67ba9c94bbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a868723c-17e3-4f7b-a2b4-da3ca1160587",
        "cursor": {
          "ref": "f3bcc09d-b1e4-43ac-8a9d-ab28539d5afd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb7c65ec-c3cc-4eb1-aa4f-4537dd140c85"
        },
        "item": {
          "id": "a868723c-17e3-4f7b-a2b4-da3ca1160587",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "be1f0921-7aaa-4445-a73e-952e55eb39eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715966d5-5ce1-40d1-90a0-728da1bd9c3d",
        "cursor": {
          "ref": "650f7b54-a8a9-44c3-b0f3-e0959efa395f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "90c35a8c-db08-428d-ad87-fe14066106c8"
        },
        "item": {
          "id": "715966d5-5ce1-40d1-90a0-728da1bd9c3d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c9e5b38a-4dc5-469c-920d-27c3144d6f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b37974-7244-498e-bb8c-f068b231551d",
        "cursor": {
          "ref": "b0514344-d56f-43b9-8dff-c01697dfa4ec",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d625cdf2-550e-4bf0-a8bd-e9555fbaadbb"
        },
        "item": {
          "id": "40b37974-7244-498e-bb8c-f068b231551d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ac73a2d8-9f1b-4d2b-9d4e-d6992142932d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5d4285-63b9-48f7-ae8c-acdef193a6d2",
        "cursor": {
          "ref": "87e060c9-a4c7-4b98-826d-8cf4ed1ccdd5",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b68163e7-0b24-473a-9a41-945cf6dc5147"
        },
        "item": {
          "id": "1b5d4285-63b9-48f7-ae8c-acdef193a6d2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ca800fc3-68ff-4dcd-a87b-cfdd25595db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ef98a3-d722-4834-8e02-3f91adb6945c",
        "cursor": {
          "ref": "ae4e4e28-2765-4235-84d8-6ad246513d14",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa53ec36-34f9-4961-9d4c-40a88b8f271a"
        },
        "item": {
          "id": "13ef98a3-d722-4834-8e02-3f91adb6945c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "253e109b-993a-4334-ad4d-4f3b91041eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362ce1c4-12b0-46c4-9490-f549f7af9d8d",
        "cursor": {
          "ref": "9628d0fc-ff63-4349-afc9-7d70794263f7",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "91759012-1edf-4a8a-b903-84b210758186"
        },
        "item": {
          "id": "362ce1c4-12b0-46c4-9490-f549f7af9d8d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d56516ae-7695-4cc7-8b2c-5d58f6e8067f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e42fe44-cafc-463e-8ed5-771dbb6635fe",
        "cursor": {
          "ref": "ab14e672-e935-4a13-82c4-fc7644f57aca",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b07c8504-fb6b-4db4-8bdd-6806b06f3cd5"
        },
        "item": {
          "id": "7e42fe44-cafc-463e-8ed5-771dbb6635fe",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "be87e0e2-a682-44c5-83c3-a373ede0b64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220363bc-ad19-47bf-a6cd-6e54e4a949cc",
        "cursor": {
          "ref": "443ae5d6-9d01-46a9-bb75-d7ba854c258e",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca16b137-8976-4e1c-921d-5d09e6a98a6c"
        },
        "item": {
          "id": "220363bc-ad19-47bf-a6cd-6e54e4a949cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8dd345a8-4673-4e54-9712-311a186b0148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b118c67-e7bc-4e13-9a57-93b026ab7c04",
        "cursor": {
          "ref": "7a6f733d-5e12-4606-986a-bc136b4df178",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ac644cc9-3f01-43fe-b062-b518e8cf60fa"
        },
        "item": {
          "id": "1b118c67-e7bc-4e13-9a57-93b026ab7c04",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4b6917d2-9275-4404-9b0c-449218a837d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef55b58-517d-4f1d-9ac8-66fc2ee68acc",
        "cursor": {
          "ref": "982ee5a7-8431-4996-9227-2214f83d2eeb",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "10e5d99f-6db1-452b-b8d9-46e3eecb5d96"
        },
        "item": {
          "id": "5ef55b58-517d-4f1d-9ac8-66fc2ee68acc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "83287e1c-10df-4804-9fd3-aedfe97f0a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4836bb24-76b4-4efb-982d-4c2756307dcd",
        "cursor": {
          "ref": "23e3663c-6568-4442-bc0b-49cedd9b6f6b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "086166ac-34a3-473f-9403-92708662afdd"
        },
        "item": {
          "id": "4836bb24-76b4-4efb-982d-4c2756307dcd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3173e522-b4ed-477d-a9d9-cf1deb9aa6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b85a76-ecd7-47ea-9ecf-90a9e9bc2e1b",
        "cursor": {
          "ref": "51efd77e-6857-48c2-a419-32fe6024c77e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e6c39264-2b59-48f1-8438-2606ff9be330"
        },
        "item": {
          "id": "81b85a76-ecd7-47ea-9ecf-90a9e9bc2e1b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c05c5a9b-0372-48e9-ba91-bb2c0de6841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3148a845-6dcf-442b-847e-169ceb351287",
        "cursor": {
          "ref": "d5cae37d-703e-49c4-9c92-8ce974ca61bc",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "565324c4-7320-4c94-aeb4-5510cf92e654"
        },
        "item": {
          "id": "3148a845-6dcf-442b-847e-169ceb351287",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "29f15677-1170-4925-8606-7e81b937f731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c0c733-01cc-4a7b-9a14-f0c21ec2cfa2",
        "cursor": {
          "ref": "e8984c57-aaac-440a-8411-d071681c8d82",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "035fd698-e603-4931-b58e-d5a6ad802c33"
        },
        "item": {
          "id": "95c0c733-01cc-4a7b-9a14-f0c21ec2cfa2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "497b8a22-8551-4a0d-9710-d09c3dcc8598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd5b120-f932-43b5-8363-359be87ba49f",
        "cursor": {
          "ref": "cc7bcf5b-694e-4364-9363-07eb7a35eecf",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "87fa7917-c24a-4f4e-b023-6d9da125186d"
        },
        "item": {
          "id": "3cd5b120-f932-43b5-8363-359be87ba49f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b72f3246-d401-48fc-b459-6b1b864b3eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ec3b2-d05b-4b47-aaaa-5b49b2534f04",
        "cursor": {
          "ref": "a9396771-9ee9-4c73-a996-4052d9dc53fd",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fd3c64ba-4f2e-45c4-bca9-bf3c12c5f1f3"
        },
        "item": {
          "id": "b10ec3b2-d05b-4b47-aaaa-5b49b2534f04",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "191e59d4-ccc9-43ce-ad20-3ca771e1dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e8c151-f87d-4ad6-864e-94aea89c74c1",
        "cursor": {
          "ref": "094b55be-eb83-4d2c-850b-d0c0c8256513",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "955500d5-3bd6-4f37-ac81-89d6eb10bef8"
        },
        "item": {
          "id": "39e8c151-f87d-4ad6-864e-94aea89c74c1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3dbd3dbc-88e9-4529-a727-b0308e79ac00",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6723b6e2-b7a2-42ba-b55a-3f77aef65e37",
        "cursor": {
          "ref": "827ab78e-3e6a-462b-abcb-9d9f2d964e07",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8f336319-760b-49bc-822a-d81b247efdbf"
        },
        "item": {
          "id": "6723b6e2-b7a2-42ba-b55a-3f77aef65e37",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "96eb35ad-ca46-47f0-a433-4bf6ee8f1eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b69ef6-e3da-44ba-88d2-f3a85bca57b2",
        "cursor": {
          "ref": "2a898d5c-34f0-4f84-996c-36892b63cff2",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eacb4c18-2bd7-4a37-87f7-aafd169d3632"
        },
        "item": {
          "id": "68b69ef6-e3da-44ba-88d2-f3a85bca57b2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8230f680-2c9e-4c04-abe7-f2f0e0b905a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e4cbcb-6222-47eb-989d-4cd76ce3a1e8",
        "cursor": {
          "ref": "dfd750ba-dad1-4069-b7a8-3de13e118c95",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "95b07cd2-e1b0-4152-8822-d08d49fc7088"
        },
        "item": {
          "id": "b0e4cbcb-6222-47eb-989d-4cd76ce3a1e8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f4221884-7f3c-4d53-a743-85abfedd28b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cf2498-9b8c-4e82-8c6c-a93f45aa1612",
        "cursor": {
          "ref": "72af8e03-b8f8-4700-8fb1-626e671b596b",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f37fa40a-a4cd-46d9-bc92-4e7a7a470036"
        },
        "item": {
          "id": "16cf2498-9b8c-4e82-8c6c-a93f45aa1612",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d6b9e6f-edcc-44f6-9653-bb9ad1c86b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bf93c4-1677-4fad-9156-a251309ebcee",
        "cursor": {
          "ref": "9b540fb0-9867-4abb-b3b5-834f1e8e6644",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "16c2c2b2-a43f-49dc-bce4-0e4f10ef21fe"
        },
        "item": {
          "id": "a4bf93c4-1677-4fad-9156-a251309ebcee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6901a7cd-ea8d-47b7-bbf9-643d5156b613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdd108e-5b7d-42a1-bea8-be1f79654e14",
        "cursor": {
          "ref": "6bac0562-c581-4f07-82dd-52dec2800b32",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8b7ca321-8b42-4d5e-be90-1bfeca572f08"
        },
        "item": {
          "id": "dcdd108e-5b7d-42a1-bea8-be1f79654e14",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8881eea8-c233-4fc6-9340-83de7f1aef87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8b49c0-eb80-415b-8c90-be26a5294f1c",
        "cursor": {
          "ref": "ebf6bea3-94fa-4db7-b82b-98b6d8590dbe",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6a57927c-49b4-465a-99a6-96bc692a4ce8"
        },
        "item": {
          "id": "1d8b49c0-eb80-415b-8c90-be26a5294f1c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a1f8c2a8-fa67-43c4-a9c5-706eef28465e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c1eb36-9ec4-4ee8-8efe-2606bf6fc2b2",
        "cursor": {
          "ref": "c62b32b3-7540-4869-b302-23b298faacfb",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0e2645d9-92a3-4e04-8f15-76e837568889"
        },
        "item": {
          "id": "98c1eb36-9ec4-4ee8-8efe-2606bf6fc2b2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8f2d411b-7f6c-46db-80cc-8f2df3c18431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5337e16-2639-4ca4-aea7-ff15cf9555f2",
        "cursor": {
          "ref": "b1ef9500-53c6-44a6-a410-daf8b8958060",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8cb6417f-253c-459d-8a20-1035a3364e32"
        },
        "item": {
          "id": "e5337e16-2639-4ca4-aea7-ff15cf9555f2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cbde853e-b59d-4647-ad08-ff6920291a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96ddd1-a276-4b60-8f46-1ffe774e7629",
        "cursor": {
          "ref": "7a18b006-1805-455a-bbd7-3f954499f497",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4cce1457-6fbc-4a8c-aaad-7e3be3c0ce87"
        },
        "item": {
          "id": "6f96ddd1-a276-4b60-8f46-1ffe774e7629",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6c761e55-b250-437d-af8a-d53465349e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83af291-c980-4edd-9c69-e37b1b6623ae",
        "cursor": {
          "ref": "26ffd5cb-8a8e-4c1b-8023-6479b708be97",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8533ae26-4343-4311-b6ca-c323ccf6a954"
        },
        "item": {
          "id": "b83af291-c980-4edd-9c69-e37b1b6623ae",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "55e9536e-e539-47a6-bcba-5aacad426bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512b029a-33ae-451a-8aa0-22d15db2f463",
        "cursor": {
          "ref": "4df7600a-ae93-4e38-91e4-a8fe5f014d77",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f8e8d7c2-c01a-4ebe-a5a3-328e244b6180"
        },
        "item": {
          "id": "512b029a-33ae-451a-8aa0-22d15db2f463",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0f2a152c-2ce4-4730-8457-863b4f617c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9359e4-7809-4a9d-a902-f6d1645487eb",
        "cursor": {
          "ref": "6117b0a3-3f36-4f69-9e6d-024024aba394",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "743aebaf-3c6b-4e9b-b827-fde8943d6458"
        },
        "item": {
          "id": "fa9359e4-7809-4a9d-a902-f6d1645487eb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "83850cfc-bcb8-4cab-9dd0-d8f123d38b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45bdafb-4b5b-4422-b839-29db343e5905",
        "cursor": {
          "ref": "cb82319c-7744-422c-b839-a6680390a18b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3ddce57a-a3a4-4e81-bfc3-37ed32970963"
        },
        "item": {
          "id": "c45bdafb-4b5b-4422-b839-29db343e5905",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9598a676-22ac-4670-963a-6b0c5688d697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4fdfbf-a2ba-4829-8558-e59ac1273428",
        "cursor": {
          "ref": "c347c5ef-df43-4a29-890e-dd1beeca9a39",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "71cbce3d-a548-4f4e-97ea-1907571901f9"
        },
        "item": {
          "id": "7a4fdfbf-a2ba-4829-8558-e59ac1273428",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ecbbd54f-d1b3-4c33-b6ec-f3040deefe65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2828f115-d92c-4200-98d0-7cac3887b136",
        "cursor": {
          "ref": "ba38c6b9-67a2-4af2-9b73-f509a56834b9",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3b2e334b-c773-48c0-a93d-fc99a0f90bea"
        },
        "item": {
          "id": "2828f115-d92c-4200-98d0-7cac3887b136",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "23f395be-544d-42c3-b6ec-6df91b1c929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060f0a35-1d8b-4980-935c-45dc780d816f",
        "cursor": {
          "ref": "83d0e62d-07c7-4d7a-8e90-db2a99e8757a",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8e4b86d7-d8c5-49f1-8459-093bc2db0ab5"
        },
        "item": {
          "id": "060f0a35-1d8b-4980-935c-45dc780d816f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d5e7d061-863f-401a-ab55-a0d77e944401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e0d067-4aab-4bc6-a42b-850cb88cd576",
        "cursor": {
          "ref": "ca5f94c2-8bf9-4cec-8fab-e6da8b00e794",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ebe537b3-08cd-4fe8-a768-145dd8e86c6d"
        },
        "item": {
          "id": "97e0d067-4aab-4bc6-a42b-850cb88cd576",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fae0f410-ecac-40a1-99d7-31a582b1df51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2265fc03-639d-4af8-8ca6-2cedb31289b0",
        "cursor": {
          "ref": "660d9190-fdd3-4eab-ac8f-fea6d31ecda6",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c5b32fa5-398e-4757-8942-0c8eb309ca71"
        },
        "item": {
          "id": "2265fc03-639d-4af8-8ca6-2cedb31289b0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "01021d3c-71fe-4580-95b9-74088bf6fdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d690bcd-9441-4322-ae4e-27396ea315c7",
        "cursor": {
          "ref": "fbb068fa-15a9-4b8b-b319-0d2dc11a2fe9",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8899eadf-5659-48b3-abc8-2fd3741470d7"
        },
        "item": {
          "id": "4d690bcd-9441-4322-ae4e-27396ea315c7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7ec637cc-aad2-4c34-a58c-8afbd13b6c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23122cc-cdc5-4d5f-892b-29cf44362386",
        "cursor": {
          "ref": "ae679110-539f-4a10-8b6d-8559d697ade9",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "04fdeb4c-d739-43b9-823a-e4e42dcc934a"
        },
        "item": {
          "id": "f23122cc-cdc5-4d5f-892b-29cf44362386",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "300f0d5a-3ebb-438e-83fe-4e79d65b105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c223c31e-5126-4a9d-92bd-8060536170aa",
        "cursor": {
          "ref": "2549fa87-9e7a-4bed-93c5-6be4136efce4",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a74fe146-228e-42f9-96d0-9b033529f7cc"
        },
        "item": {
          "id": "c223c31e-5126-4a9d-92bd-8060536170aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9969b553-93b5-4fa8-b747-63815c31f379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d2f0ea-9f4d-4cab-80d1-3811777acb86",
        "cursor": {
          "ref": "6194d5a3-b683-4e34-9e7c-a109bb8947cb",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bd42fdf7-e0c9-4186-bfa2-da1f1e5ea487"
        },
        "item": {
          "id": "a7d2f0ea-9f4d-4cab-80d1-3811777acb86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "878b7a5d-e25b-49a5-ba70-e94cc43a738b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a212d4-d957-4391-af93-44c999b9cbc2",
        "cursor": {
          "ref": "b9f534cd-805a-492b-a153-50b49b5ccc3e",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1cd06120-8884-4496-979c-f71e56f3f351"
        },
        "item": {
          "id": "50a212d4-d957-4391-af93-44c999b9cbc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e2603e11-a8b5-49f2-820d-6e22fe29a10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdfadff-f5ba-4bc1-ac46-6d62163c10be",
        "cursor": {
          "ref": "7422e9ac-e131-4066-84ee-d6f1e7355c1c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5bb4020e-a848-4acb-9d4a-aa8205701d26"
        },
        "item": {
          "id": "9fdfadff-f5ba-4bc1-ac46-6d62163c10be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7951c687-42da-41f9-933a-fbc1d2236090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecd3941-90c3-4b90-bdba-2641018b4cdc",
        "cursor": {
          "ref": "5bed71e5-e23b-426a-aadd-dc3619983411",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "55ae7deb-b6d2-4e11-9945-6e98dddce192"
        },
        "item": {
          "id": "0ecd3941-90c3-4b90-bdba-2641018b4cdc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fe737ba1-b8d5-405d-ae11-fd194218aa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bbaeb4-9cb3-49bc-8dd3-93f94a5de185",
        "cursor": {
          "ref": "6372edc3-2628-4f6b-81eb-3ac2d14ab54b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "380a33b0-dbca-497c-b0cb-f37ea8e72f16"
        },
        "item": {
          "id": "65bbaeb4-9cb3-49bc-8dd3-93f94a5de185",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7cb26413-d714-4256-90dc-0bb425513f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae323ac-eb58-4e6b-8b82-61d5607685c9",
        "cursor": {
          "ref": "0d9b537e-7af7-4d63-abf8-f6427791c1fa",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "79416720-b2c1-4bd6-b56a-e51fa2aba756"
        },
        "item": {
          "id": "4ae323ac-eb58-4e6b-8b82-61d5607685c9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d1d2da57-47f9-43a6-854e-2dafebf03be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fbdc66-4c8b-4c64-95e1-8a07be39b021",
        "cursor": {
          "ref": "3c81704e-dba6-402c-bdf6-1ce768efa918",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "60ed1307-4b08-4216-961d-8c009d0d5432"
        },
        "item": {
          "id": "05fbdc66-4c8b-4c64-95e1-8a07be39b021",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "41914e95-82cc-4ba8-99b2-4ebe9ceaa252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d208d332-7593-4b75-b712-45ac0d42c2f8",
        "cursor": {
          "ref": "53b8842b-4ba1-4801-8be1-aede8473d612",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "04462c45-9582-4a32-b342-f1d555e66d2f"
        },
        "item": {
          "id": "d208d332-7593-4b75-b712-45ac0d42c2f8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9e05bede-b672-455c-af20-9593ec707b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791af98b-241a-430d-9d56-faa95e166982",
        "cursor": {
          "ref": "9d3a3d06-7ea3-47be-a944-8b252266c660",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2fc57bba-91cf-4a97-ab5a-5acf033f497f"
        },
        "item": {
          "id": "791af98b-241a-430d-9d56-faa95e166982",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c3638012-de7b-48ca-8c51-12eca6f35482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6687877c-dfe7-41a1-9267-71edd6c347cb",
        "cursor": {
          "ref": "f179b131-459a-4759-beed-2c54dc5c13fc",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7828e116-9ecd-4f07-b4d8-584bfb12ca99"
        },
        "item": {
          "id": "6687877c-dfe7-41a1-9267-71edd6c347cb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "08d65142-0476-4ad2-9c5d-031466950315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841f5c73-3664-4a0d-901d-4552c36633df",
        "cursor": {
          "ref": "3336fe0f-9dbf-4847-bffc-31af80fe9006",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0823fdf4-c2ec-4324-abeb-c11b7c2117a9"
        },
        "item": {
          "id": "841f5c73-3664-4a0d-901d-4552c36633df",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d565abdb-5655-494d-b6e4-a1c5e58dee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e688b858-c4f0-42aa-bb1a-0abf92789140",
        "cursor": {
          "ref": "d9a6a11c-4a0e-40ca-bab0-5cc95f8b6813",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5df86a88-342f-43f9-91e0-f65f8897432b"
        },
        "item": {
          "id": "e688b858-c4f0-42aa-bb1a-0abf92789140",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "150ea718-570b-4eee-a34f-8f32cf3ddd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e7ec41-bd2f-4fd7-a2b3-2aaeb80591cb",
        "cursor": {
          "ref": "9f1a0a3a-65fc-4199-b85d-b1a7569ac1b4",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ba2c4b06-49f7-4e30-8a6f-d282bd617c82"
        },
        "item": {
          "id": "77e7ec41-bd2f-4fd7-a2b3-2aaeb80591cb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3296ba22-3390-44da-a230-5946e530b499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3509d89-b459-458e-8b90-f1ee54ae0505",
        "cursor": {
          "ref": "2caf2971-71f6-4d30-802f-cba29a2836e4",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c9bf0d38-9910-480e-8fa0-7f4d29800266"
        },
        "item": {
          "id": "a3509d89-b459-458e-8b90-f1ee54ae0505",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a3a7b78b-4acf-49d2-8101-c44f7c3e7621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53e79be-ef64-4f34-add5-a18fca20b00e",
        "cursor": {
          "ref": "7d50c314-0c97-4630-9b97-b79db053a1b5",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3d45779d-0d75-45cf-896a-3dd09460cc19"
        },
        "item": {
          "id": "b53e79be-ef64-4f34-add5-a18fca20b00e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "285fefb2-6974-4cb4-9980-f92b64edba89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c424d9a-6c41-40d9-8dec-b372a3e559f7",
        "cursor": {
          "ref": "5063b0de-6130-44c6-8502-0a592539dda5",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "062d561c-1188-49dd-836f-ef68c76784d4"
        },
        "item": {
          "id": "4c424d9a-6c41-40d9-8dec-b372a3e559f7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1b5d6dd1-c258-4ce3-a4df-dc028320291d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bfcb77-fc72-4f0f-8b79-4342fa84bbd1",
        "cursor": {
          "ref": "4809391d-455c-4eed-bdc9-b5ab7c934cef",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5b829d36-db5b-4df9-81f0-fc955c2057f4"
        },
        "item": {
          "id": "75bfcb77-fc72-4f0f-8b79-4342fa84bbd1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a60c8a85-b431-4843-b3ab-5c787f5ee9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b8a31d-b75b-4a22-8191-84fc6d4a13ee",
        "cursor": {
          "ref": "a7d4ee07-4e7c-4fb9-9b81-cc61a2abbbf8",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c5fcb33a-0ffc-4d22-be9e-519717692550"
        },
        "item": {
          "id": "33b8a31d-b75b-4a22-8191-84fc6d4a13ee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1e8e473a-a68b-492b-bba0-af8362ba35e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad713ee-5c38-484f-988e-bc55bc7842f1",
        "cursor": {
          "ref": "33ce1ffd-09ca-45e7-8dee-6d0021c8b60f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f88ab5c2-f6dd-49bf-97c2-0b914a4ef9dc"
        },
        "item": {
          "id": "0ad713ee-5c38-484f-988e-bc55bc7842f1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "58fa6155-dcc6-42f5-bca5-ae3dff975766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4681e0-4b1d-4566-9ca3-bdedb280677b",
        "cursor": {
          "ref": "f5aeab85-4017-4996-bc79-d00828e395a2",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "53f1ab1a-0a25-4c43-9861-4fb370bdc9e3"
        },
        "item": {
          "id": "bd4681e0-4b1d-4566-9ca3-bdedb280677b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "69fff35d-cd22-4baa-9788-8e196ce2b830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0795be1c-3481-4840-bb99-8173f42bcf20",
        "cursor": {
          "ref": "a21d57f0-78ab-4cbe-89cb-55f7fd734003",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "01ab256f-bd62-44d3-89c2-85b1cf871f19"
        },
        "item": {
          "id": "0795be1c-3481-4840-bb99-8173f42bcf20",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8539593d-ab4e-489d-b919-81ad1edc9ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99985ad8-75da-4551-9244-9fec3faac27d",
        "cursor": {
          "ref": "ae980edf-4341-42d4-93dc-df907f78aed5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9ee2bf09-bfdd-4425-b8d4-78b5d2db53a0"
        },
        "item": {
          "id": "99985ad8-75da-4551-9244-9fec3faac27d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e560e32a-823d-41c6-84f7-3f3fbbec0048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3eef116-d468-4748-bf3a-56d62284a904",
        "cursor": {
          "ref": "d4f3e093-6bde-4241-92ca-81bfe10bdc15",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d60a0aae-f7ae-4dbd-b79f-0fd32a12e10e"
        },
        "item": {
          "id": "e3eef116-d468-4748-bf3a-56d62284a904",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "11881875-45c9-4ecd-bca5-f51753b35682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583c7ca4-c33a-487a-a9c7-04457d5809e3",
        "cursor": {
          "ref": "78eff69c-d77b-4b10-a9c9-462849f59cf6",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "84c25b63-5416-4af5-8500-0fca6afdc441"
        },
        "item": {
          "id": "583c7ca4-c33a-487a-a9c7-04457d5809e3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "83a26352-023f-4481-ac56-84905a9a2aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca313c6c-5ec3-4cc7-ac35-f2f12f6c81e2",
        "cursor": {
          "ref": "bff04c86-c81f-4fb3-a615-19681abf333e",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "11777c23-bb52-41af-9551-1353d941f789"
        },
        "item": {
          "id": "ca313c6c-5ec3-4cc7-ac35-f2f12f6c81e2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f7e3f5c3-ad3e-4dd5-9518-4678ec8111b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ab4800-3c02-4d5c-b29c-c9eb1dcbe9a8",
        "cursor": {
          "ref": "efd1558c-239e-4000-9b7d-85afdcb7d2e1",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9ac3fbe4-4a66-4606-9700-760d52f7a325"
        },
        "item": {
          "id": "24ab4800-3c02-4d5c-b29c-c9eb1dcbe9a8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "111fd50a-b5d2-42dc-bb47-7996e0e9ca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a193ad-02f1-4f25-95b8-de8035bc6b2b",
        "cursor": {
          "ref": "af5d0a64-120a-4f07-8127-efd38cfc69e9",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "34b29764-b501-43a1-ae1b-a0831852b182"
        },
        "item": {
          "id": "f2a193ad-02f1-4f25-95b8-de8035bc6b2b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1a06116d-6594-436b-890a-6c65e3b5d689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b572d728-6880-410a-9dc5-be951bb70de4",
        "cursor": {
          "ref": "f3a26a89-e4ab-4a54-bc44-74e3f6b855a4",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d743b39e-16ce-4c90-9265-82f41acf6e2c"
        },
        "item": {
          "id": "b572d728-6880-410a-9dc5-be951bb70de4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "71b4fbbf-170e-4775-84c3-7d10d035d1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a25a967-bed2-4149-a96f-d892c1d71e0c",
        "cursor": {
          "ref": "7e6168e3-60f7-41c6-a9bf-24748edd17dc",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8593770d-0e39-4ae2-a47a-1ed9eb7d9c35"
        },
        "item": {
          "id": "6a25a967-bed2-4149-a96f-d892c1d71e0c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9f5a7496-a433-4b65-88be-b16dad62232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07c475f-6c9d-4c83-a821-feb0a1075306",
        "cursor": {
          "ref": "f24695de-4518-44c0-9bbe-c2f3616d3350",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9f507453-d15a-41ce-b8fc-f6766e378de4"
        },
        "item": {
          "id": "a07c475f-6c9d-4c83-a821-feb0a1075306",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "330f1370-bf59-4380-b8b0-5b9b838e33ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52f6038-e0e6-4014-83de-0b792fef4b75",
        "cursor": {
          "ref": "0559b19b-928e-4e1a-ad56-4c9b096f7520",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "475b4d4d-b69e-4a23-959e-2cfd7140b047"
        },
        "item": {
          "id": "e52f6038-e0e6-4014-83de-0b792fef4b75",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "04fcb43d-8c20-49f6-8c17-833cbbd81220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f5d179-829e-4354-a4b8-ebe5a671e346",
        "cursor": {
          "ref": "d737b956-7ee5-48bb-a6bc-ea50b862649a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6bac2156-a3fc-4cfa-ac77-1ac66e04a7c9"
        },
        "item": {
          "id": "07f5d179-829e-4354-a4b8-ebe5a671e346",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5d3d0a0a-e3a5-48ac-adfb-56362d8fcdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ae07a6-d3ad-4028-86c5-b5f33840480d",
        "cursor": {
          "ref": "2bfcee7a-d8c6-4a32-9259-5ec2909b5660",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3431c300-baa6-4820-9e94-132285ebd070"
        },
        "item": {
          "id": "08ae07a6-d3ad-4028-86c5-b5f33840480d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7f2bbd42-eae3-4ac2-bb5f-5956949c51ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e0d4ed-f300-4f31-b6ba-30b6f1963e2e",
        "cursor": {
          "ref": "fcaf08fe-42d3-4e9e-ac5c-24d86471701b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b4a4a847-b601-403d-923a-374d4a1cf902"
        },
        "item": {
          "id": "47e0d4ed-f300-4f31-b6ba-30b6f1963e2e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "94eca9a3-b114-4b9a-9adf-176e6150aa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d47707-1ad6-4ef5-8953-dac577237982",
        "cursor": {
          "ref": "afbae86b-0c88-4a8c-bcef-04ea8d05e2ec",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1b8882ff-1830-43fa-96d6-1d8fb691da9d"
        },
        "item": {
          "id": "f7d47707-1ad6-4ef5-8953-dac577237982",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d678ecfd-83b1-49e5-a8cc-87b444298075",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc52352-6202-4090-a0d0-08a5d60a31ca",
        "cursor": {
          "ref": "440ccdd2-7d98-4b29-92dc-324361fdc188",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b4c9d947-9773-48e9-954e-dbf3f84bc37d"
        },
        "item": {
          "id": "7bc52352-6202-4090-a0d0-08a5d60a31ca",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "027b15f1-3778-4da1-8411-58ed66443411",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 204,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4972383-b307-47ab-b089-cb56f364f5dd",
        "cursor": {
          "ref": "dc514fbf-830c-45f2-9602-9111a97f6f41",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "64f57fb5-eeff-41e9-a4df-17a648bcbecd"
        },
        "item": {
          "id": "b4972383-b307-47ab-b089-cb56f364f5dd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0c64a329-3038-46c1-a477-50288a2bc4a3",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9f462f-b3c0-49b7-9c80-3f0184e07761",
        "cursor": {
          "ref": "5f5b1476-e00d-418b-ab05-40438b689a31",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "681cf668-1da3-4cae-abfc-494bf40fd751"
        },
        "item": {
          "id": "dd9f462f-b3c0-49b7-9c80-3f0184e07761",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "763048bb-6091-49a2-9dff-84276d4ca96f",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0522d3be-9a48-4277-942b-516cbefc002d",
        "cursor": {
          "ref": "63d5e9da-b599-4f0a-b197-c48291cf84e8",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ae3ab111-59c2-4e8d-b686-e0ea16070575"
        },
        "item": {
          "id": "0522d3be-9a48-4277-942b-516cbefc002d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9a08ddaf-3db5-4b78-a53a-6be9a9e70dd7",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e60f4e-b584-4bbb-8672-675ce3a92c3f",
        "cursor": {
          "ref": "6d77b2ba-fe0d-4350-a3ea-2ffd5276df05",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ecdc48cd-57cc-46e1-acd5-1287e2f29a65"
        },
        "item": {
          "id": "64e60f4e-b584-4bbb-8672-675ce3a92c3f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "413ebe07-7f32-4944-8f71-bfc54fbcc4c7",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47b143c-451c-4d4b-8843-d6b69ce288bb",
        "cursor": {
          "ref": "c31aae8a-1531-45c3-b9cb-8ea905e23b35",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "58ce4e21-bc38-4bd4-bf44-2adf5b246c88"
        },
        "item": {
          "id": "b47b143c-451c-4d4b-8843-d6b69ce288bb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0b816856-b72b-4bec-a370-5035451e1cc3",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21c41cf-26a4-4647-9fb0-2f07dfa4e7a2",
        "cursor": {
          "ref": "4858357f-ad96-4c6c-989d-f647cc865199",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "23c6dd3e-8ccc-45c0-b515-218e051f1cb7"
        },
        "item": {
          "id": "e21c41cf-26a4-4647-9fb0-2f07dfa4e7a2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fae2cc51-8ae8-417a-95cb-c1253fcb1c9b",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482bbcb1-66f7-4adc-8eed-601d3d0b63d0",
        "cursor": {
          "ref": "16a7bee9-2da5-4ff1-a06f-2c38f5299d3d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77a606f6-998a-462f-82b3-a3c14c879bde"
        },
        "item": {
          "id": "482bbcb1-66f7-4adc-8eed-601d3d0b63d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7aa0e0de-d80c-4b9a-8f35-999aef0858fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482bbcb1-66f7-4adc-8eed-601d3d0b63d0",
        "cursor": {
          "ref": "16a7bee9-2da5-4ff1-a06f-2c38f5299d3d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77a606f6-998a-462f-82b3-a3c14c879bde"
        },
        "item": {
          "id": "482bbcb1-66f7-4adc-8eed-601d3d0b63d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7aa0e0de-d80c-4b9a-8f35-999aef0858fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ede8b1-e484-4f91-8dc2-39b24a7ff363",
        "cursor": {
          "ref": "7853ba20-b9a1-43fd-8286-df6ef421b68c",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "682d8e05-89ae-4af0-9569-494d35f5dbb2"
        },
        "item": {
          "id": "d1ede8b1-e484-4f91-8dc2-39b24a7ff363",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "106aec25-84a6-484c-b199-c59f0e62df99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6346b47-0aa0-41b3-a890-256bbb717909",
        "cursor": {
          "ref": "dc6b120c-d777-4ced-bb16-d6b1b04cc690",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6810678e-de25-4009-be8f-7b1afaadce7c"
        },
        "item": {
          "id": "d6346b47-0aa0-41b3-a890-256bbb717909",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e502f908-5f88-4221-97cd-6f33cb4ea2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d406831a-4029-463d-b246-c8489b6a59b5",
        "cursor": {
          "ref": "dacd90ac-4d77-4337-8b80-8b35b88c9263",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a5ed792d-1026-4f1b-b004-d1ffa3996194"
        },
        "item": {
          "id": "d406831a-4029-463d-b246-c8489b6a59b5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f9005c65-05a3-4260-bc59-345dad9868b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6fdd22-6adf-49a8-8cd7-a524f430aa96",
        "cursor": {
          "ref": "b6b64e37-15a1-426d-8e79-829d68134168",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2e97bcd4-c87d-4a09-8097-0e6da3d48e3d"
        },
        "item": {
          "id": "7a6fdd22-6adf-49a8-8cd7-a524f430aa96",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5da3809b-d72f-4f84-8a62-baa6957b4a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eb49ae-c773-41fc-8ebc-bae6b2bd7c92",
        "cursor": {
          "ref": "b8e12803-fcec-401c-a853-da116287faee",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "63e7a892-4877-48bc-b9ab-1c04d3c71a9c"
        },
        "item": {
          "id": "c5eb49ae-c773-41fc-8ebc-bae6b2bd7c92",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dfde4bf6-d05a-40d3-97ac-f86c15bc2ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9e66b0-0f94-43fc-8607-6619cca6ba33",
        "cursor": {
          "ref": "cb7372be-b655-4467-96c4-255ea7ec30ac",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9fe35610-b7ac-48ac-a69c-2a74407f039e"
        },
        "item": {
          "id": "0f9e66b0-0f94-43fc-8607-6619cca6ba33",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c005ae92-8480-4fad-b0dd-cef76740f943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4def3214-2048-4e9f-b3ff-cce3e17a65ac",
        "cursor": {
          "ref": "0ea86a22-8ebc-45db-9034-7e8c0e1e4538",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4cd52ce2-bd30-44d7-9680-9c99ba5dae81"
        },
        "item": {
          "id": "4def3214-2048-4e9f-b3ff-cce3e17a65ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "33897e75-72ce-46f4-a9ca-a3c2b737358c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9fc3c9-120c-41df-8211-8a1d090de41f",
        "cursor": {
          "ref": "ebcde13b-1925-4768-8967-79b533b745b4",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f116cdaa-f9db-4474-9e25-3b2af69e5acf"
        },
        "item": {
          "id": "8a9fc3c9-120c-41df-8211-8a1d090de41f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb4038bd-0696-4861-947d-29e0ffa52771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa2bf85-74c5-4e5f-9493-69d2dc67db45",
        "cursor": {
          "ref": "f424b8ac-3bb1-483e-b5dc-5c8d0659e1af",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "523bf826-1f98-45fa-afef-d7be16fb6e46"
        },
        "item": {
          "id": "0aa2bf85-74c5-4e5f-9493-69d2dc67db45",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d500b4e-7c97-4ae7-a3bc-2607f61821cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca08e2a-faa9-49d2-b007-f554ce24d9b1",
        "cursor": {
          "ref": "ddf1e1b8-d1c3-4fe0-92d4-21b4c276c154",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4e085d6d-011a-4fd2-8f5d-564c56da1058"
        },
        "item": {
          "id": "4ca08e2a-faa9-49d2-b007-f554ce24d9b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8a83f1bc-e649-436d-bd74-6fb7b1fba967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4db346-4ce1-45b1-8f8b-00271c346641",
        "cursor": {
          "ref": "86f81247-7d3c-407c-834a-001af0bccf1d",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f7a54bbf-a2fd-41ee-9673-239beef55ca8"
        },
        "item": {
          "id": "5a4db346-4ce1-45b1-8f8b-00271c346641",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "355d9b85-e9bb-41e9-a94b-caaa5302802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5ed3fc-f5e7-4618-8cc1-a71226de2131",
        "cursor": {
          "ref": "9d2fb423-e348-4bba-a9b5-04ea2d768184",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9588300f-af63-4f6b-b99d-81a75b2826cd"
        },
        "item": {
          "id": "1c5ed3fc-f5e7-4618-8cc1-a71226de2131",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2cbe2801-d044-4518-b5aa-7eaf284a5f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b859fcea-378b-46b8-9226-33d659a0dea9",
        "cursor": {
          "ref": "ba4d40e6-2706-439f-8ad2-4f1a40cdbbfb",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0fc72b74-9941-4a1a-bd60-e710a5b0d399"
        },
        "item": {
          "id": "b859fcea-378b-46b8-9226-33d659a0dea9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa1b1b77-fad0-47ec-b421-1f6c6d0a77c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d169cb67-3869-4f01-8d88-0edf31112782",
        "cursor": {
          "ref": "772192fe-f880-4b45-8469-166fd4174384",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "500f814e-374c-410a-a969-e1a9fc1f98e3"
        },
        "item": {
          "id": "d169cb67-3869-4f01-8d88-0edf31112782",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b1d892d0-2be0-4344-9b1e-b09b50e1f221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f0d151-1c63-4a6e-a226-e44641416160",
        "cursor": {
          "ref": "d4de2bf0-7be6-4ef6-8b3f-19f9e9bb14e7",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8de7b781-a976-4d15-b396-caba6f247434"
        },
        "item": {
          "id": "85f0d151-1c63-4a6e-a226-e44641416160",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8c7d2f0e-7317-4514-a965-fd2c75496f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4932af1-786d-4d3e-8cda-f9cc7bc3bb1b",
        "cursor": {
          "ref": "15ec9529-688f-451f-852b-7c76bc7dd0f8",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "91e87e7c-fcaa-4cef-a406-092cfc6dcfdb"
        },
        "item": {
          "id": "b4932af1-786d-4d3e-8cda-f9cc7bc3bb1b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3a825d36-0ca9-471b-942c-4b499c0e93fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc74c4-52f7-48cf-89f6-3d3cd38f04f4",
        "cursor": {
          "ref": "ba55693a-6e59-48b0-a510-616160d2e2d2",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5297cc2c-7b83-4f5d-8129-fd69e896a0d7"
        },
        "item": {
          "id": "ffbc74c4-52f7-48cf-89f6-3d3cd38f04f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6799612-a2cb-4ce3-bc20-dea957933b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e8de37-e827-40a2-9bc4-d5fb9e453c13",
        "cursor": {
          "ref": "ca000fed-5808-428a-8548-9f2bb6b8decc",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eb3f51d3-293e-4ceb-b30f-5c1ae237d1aa"
        },
        "item": {
          "id": "d5e8de37-e827-40a2-9bc4-d5fb9e453c13",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b5820ae-3919-4fe8-965f-5fdebaf28388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71624e7f-e45a-4f2c-990a-111a31d5ff9a",
        "cursor": {
          "ref": "4de29ab7-aed0-4e69-886b-a646e693a962",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c0a11a8e-3754-49b3-8f0a-c59e7c46c9fd"
        },
        "item": {
          "id": "71624e7f-e45a-4f2c-990a-111a31d5ff9a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a0f4cd48-54ed-4abc-bc94-67180253fab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88feba4b-ae20-4815-8245-1ea2bcdf4723",
        "cursor": {
          "ref": "a215ef3d-36c1-477d-b07d-2e426ec58830",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0a9b15ad-6119-4460-89a9-717931e51e30"
        },
        "item": {
          "id": "88feba4b-ae20-4815-8245-1ea2bcdf4723",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3afe62f2-5fd1-454d-bb6f-9248d6f0ab8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa4b8a6-786f-4dde-876a-3e55d2b1a673",
        "cursor": {
          "ref": "48f38da5-fa48-43b0-a039-f686fa6fa858",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c0281ad9-c055-46d8-97d5-cecf4b5d2a50"
        },
        "item": {
          "id": "1fa4b8a6-786f-4dde-876a-3e55d2b1a673",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e9d37d9c-8d2a-4d3c-a576-8991fbbda256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd1090c-0d06-467a-8e44-c8fee19254f0",
        "cursor": {
          "ref": "5595a271-a321-427f-b409-40c7dcb677eb",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d55d8a8f-0243-445c-a0f8-91b9a429f39f"
        },
        "item": {
          "id": "9cd1090c-0d06-467a-8e44-c8fee19254f0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aa442ba1-4c60-41d4-bd7d-a18c9709ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0772e4-ee55-49d7-8a97-d21d6671ae8a",
        "cursor": {
          "ref": "1d24610d-9e80-44a4-babd-ad9fcefde9bc",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "072012c4-20a2-4851-829c-335dda21ecde"
        },
        "item": {
          "id": "0c0772e4-ee55-49d7-8a97-d21d6671ae8a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "05d43606-ac1a-49c4-a676-2fc8815f6a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcccafb-24af-4264-ad81-649ba8dbecb8",
        "cursor": {
          "ref": "191252ea-0067-4196-8c5c-04eb37227c83",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5d82c32a-8b80-485f-92e4-9ce41ea6773a"
        },
        "item": {
          "id": "0fcccafb-24af-4264-ad81-649ba8dbecb8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fbe52583-f1fe-4164-ab18-cbfd6ff8995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd878a-3078-4098-9c08-ccf175745f48",
        "cursor": {
          "ref": "a2088e22-ce77-48ab-959a-f61afb2363ef",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6cbccf30-441c-4492-b6c1-cedfc2c1cee0"
        },
        "item": {
          "id": "f2cd878a-3078-4098-9c08-ccf175745f48",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ed03730c-9df8-44d7-b03f-73de7c9b96b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d63150f-ed70-4096-ace7-0dc3269ca872",
        "cursor": {
          "ref": "f01eeb8e-edb0-49f5-8f6f-f0e661571d94",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7a026a06-f5d5-4455-a776-677386ccf078"
        },
        "item": {
          "id": "5d63150f-ed70-4096-ace7-0dc3269ca872",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8d19c4fe-2a0c-4f69-89e1-7e4fe01b405b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39177755-1729-4562-9e38-f2280aae7575",
        "cursor": {
          "ref": "fabfe3e4-da04-4218-8351-ad76ecb87590",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "66e734f9-7135-4102-9964-f8b1ed3feec6"
        },
        "item": {
          "id": "39177755-1729-4562-9e38-f2280aae7575",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b344c6c-2792-4e57-bbdf-dce75c82700d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0835a61-7805-4ea4-94bf-ed9cbd964d03",
        "cursor": {
          "ref": "550377b7-e041-4a2d-bcbb-d2284fb0a440",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f60e4a0-7755-40bc-9203-eb36ac4442ef"
        },
        "item": {
          "id": "d0835a61-7805-4ea4-94bf-ed9cbd964d03",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "931d25e4-92d5-4518-9c0e-4e5db4bbb443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343e71e6-6d02-420a-8059-996dfd71494c",
        "cursor": {
          "ref": "c356864a-4247-476b-9583-1c541a3f3396",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "49999390-0ef9-4bfa-84b5-f08c182ee25e"
        },
        "item": {
          "id": "343e71e6-6d02-420a-8059-996dfd71494c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ff85e5fc-5e85-41bb-a481-9a304a7714af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e32cdd6-fe4d-42f8-a9dd-ce2b8050c159",
        "cursor": {
          "ref": "8dc6adf6-c93a-42ad-b987-3864ac5176a1",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "17450157-83ed-46e9-a6df-cb8250e9d842"
        },
        "item": {
          "id": "2e32cdd6-fe4d-42f8-a9dd-ce2b8050c159",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "924debd8-f265-4d56-bc08-e77e91bc3c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbe6ec4-5d75-4ba0-ae3d-6e66113c5a3b",
        "cursor": {
          "ref": "8ea7c7bf-d41b-4578-8a67-d42ca395602c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "17d46c71-6434-4446-a949-8468ba3db00a"
        },
        "item": {
          "id": "2bbe6ec4-5d75-4ba0-ae3d-6e66113c5a3b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5a6ac663-9c41-47e2-8442-37105825cb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab4f57a-7ad9-45f4-a42f-42ae5d47f05c",
        "cursor": {
          "ref": "ae8ccc38-4b0e-4aa9-ad82-399cb97103e3",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "07e5cb65-b946-4592-8fc8-6d5e35270d0e"
        },
        "item": {
          "id": "4ab4f57a-7ad9-45f4-a42f-42ae5d47f05c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "50c8a650-a0fb-485b-ae05-213206c62aab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60e442e-f413-464b-926b-51d015cf289d",
        "cursor": {
          "ref": "d2014a37-06ed-449e-928f-e6b2f17fdae9",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a744ac31-43ee-4292-9b4d-ecaeff7b6f9a"
        },
        "item": {
          "id": "f60e442e-f413-464b-926b-51d015cf289d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7058aad9-0f14-417f-9ace-2f444fac61cd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb555f50-af27-4bae-abcf-7b75d8dd96f0",
        "cursor": {
          "ref": "76b04fac-c946-4be2-af75-d22e9051809b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4d26edaf-c1c2-4a3d-911f-dc1425974885"
        },
        "item": {
          "id": "bb555f50-af27-4bae-abcf-7b75d8dd96f0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2ac9281f-a1c0-4068-864d-7e4e35e1a560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb555f50-af27-4bae-abcf-7b75d8dd96f0",
        "cursor": {
          "ref": "76b04fac-c946-4be2-af75-d22e9051809b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4d26edaf-c1c2-4a3d-911f-dc1425974885"
        },
        "item": {
          "id": "bb555f50-af27-4bae-abcf-7b75d8dd96f0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2ac9281f-a1c0-4068-864d-7e4e35e1a560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47afeda-588c-4e58-b255-33c0b0c61d0c",
        "cursor": {
          "ref": "4083a91c-334c-4423-98ed-de78f7ba7c4b",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bf60d0d4-f8db-4698-a23a-a8f75dd6cb10"
        },
        "item": {
          "id": "d47afeda-588c-4e58-b255-33c0b0c61d0c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "65d342d7-f7f0-4917-86d7-98539de3868c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33de4bb5-48be-48e4-944a-7031165562b3",
        "cursor": {
          "ref": "1fe7b7b3-18a8-4cc5-906b-a5febb13d465",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "79873eac-e3de-4c58-8d50-1aef19a49a20"
        },
        "item": {
          "id": "33de4bb5-48be-48e4-944a-7031165562b3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "45e74a20-2c86-4bc1-9c79-461f3da4ab18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b194d90e-142b-405c-9237-7f2d5b62e457",
        "cursor": {
          "ref": "63c80d6c-fcef-47ec-bc7a-5773912e90f8",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "42efd8bb-167f-4be2-9f3f-0153188834c3"
        },
        "item": {
          "id": "b194d90e-142b-405c-9237-7f2d5b62e457",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4cda9d52-deca-49b0-be88-92ba10f6fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57877abb-49f7-4ceb-9242-37acbd18c998",
        "cursor": {
          "ref": "6fa85b1e-e78e-4f02-ac7b-f2e3fbeb88e3",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f31e8311-9b86-444b-be2d-ed3ddc836e4b"
        },
        "item": {
          "id": "57877abb-49f7-4ceb-9242-37acbd18c998",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3cbf4653-e4d2-4c8f-aaad-7d9d99316883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa34069-9f78-44dd-ad6e-fb4b60d0e1f4",
        "cursor": {
          "ref": "1d086311-1747-4b6b-8789-122d26f50eda",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4eefa883-a9b8-47e8-a949-75f48df3b7eb"
        },
        "item": {
          "id": "8fa34069-9f78-44dd-ad6e-fb4b60d0e1f4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d8cabfc4-1aaa-49bb-a70e-b952210f28eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d5bc84-e569-4d1e-96d9-28cab443deee",
        "cursor": {
          "ref": "3d228a87-e987-45cf-947a-ef127437f47a",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f44443e5-590f-430f-a274-f4fc6a22972b"
        },
        "item": {
          "id": "41d5bc84-e569-4d1e-96d9-28cab443deee",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aa703404-c19d-43d3-833f-b7447a4a3558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc47dd6-0e66-4ef8-b142-a2fec556d09d",
        "cursor": {
          "ref": "f769b3d9-b1e8-40a3-b261-3994bb9dcb67",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a0787699-71a7-49be-9298-6b0521485e97"
        },
        "item": {
          "id": "4fc47dd6-0e66-4ef8-b142-a2fec556d09d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b4ff1a9c-e9eb-4126-b6b8-11caf3930b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f5ef76-e520-4e25-9535-27b40efb6598",
        "cursor": {
          "ref": "580d6090-fedd-45b3-bebe-f6e839b0e491",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e881d295-7acf-4e7e-88b6-e0750441532e"
        },
        "item": {
          "id": "b4f5ef76-e520-4e25-9535-27b40efb6598",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8a241fb4-0e5e-4462-9697-60a0820ed8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6c3336-469e-4d26-a967-921f47f3eeae",
        "cursor": {
          "ref": "0e4b9a8f-8b58-4e62-82fe-24c68eafd336",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c5fa4664-c0c9-4859-bde7-c9acbe71f48e"
        },
        "item": {
          "id": "cc6c3336-469e-4d26-a967-921f47f3eeae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "89928519-c30d-4b51-8e5e-18f6c8299a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b64469a-9dc3-4897-93be-1a1349b80afb",
        "cursor": {
          "ref": "b53c0fb2-3259-4c23-bd4d-6b208994d458",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b0872634-f59b-4697-9eda-6921ceda711f"
        },
        "item": {
          "id": "4b64469a-9dc3-4897-93be-1a1349b80afb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0ae7b5ee-b1a6-49dc-92a9-8fb713a86c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a27c69e-549c-47bc-bbb4-1732732bc914",
        "cursor": {
          "ref": "622306aa-13c7-43ed-a17f-b67c0e3e24b0",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2c7ffabb-76ec-4b2e-bfdd-c6e3e008d636"
        },
        "item": {
          "id": "2a27c69e-549c-47bc-bbb4-1732732bc914",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2c6ca7fc-df33-4bb6-9e08-aed4a5400fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2396cb82-a0c0-4930-99ea-0c4a1143898f",
        "cursor": {
          "ref": "ccb8f0c3-23a7-4f91-ab9d-4d827f10699d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bfeb73db-5632-4593-a5a6-d79c97c70d02"
        },
        "item": {
          "id": "2396cb82-a0c0-4930-99ea-0c4a1143898f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c2ca43fc-35a1-40f2-a954-3e977df18817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf01cee-38fd-415c-9ea4-f3f15e7069ba",
        "cursor": {
          "ref": "039b58f7-04c1-4126-ad78-4e474f5635dd",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a3525ebc-a317-4386-9964-76335372df79"
        },
        "item": {
          "id": "5bf01cee-38fd-415c-9ea4-f3f15e7069ba",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bea70684-a516-427e-847a-37991d35b5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbbb0a6-9d84-46df-8aee-2206a45429a4",
        "cursor": {
          "ref": "e28ba3e7-c158-4c46-9b4a-c487dba4f404",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "28ea2f81-cce0-4df3-9bba-d49a698fd1e5"
        },
        "item": {
          "id": "ecbbb0a6-9d84-46df-8aee-2206a45429a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "342104d1-e83b-4b9e-8956-0bde7cfdd94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6722b3-16ec-4717-8d94-76701e5569c6",
        "cursor": {
          "ref": "2f5dcf33-4503-4a10-942e-a899a9e30ccc",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f4cda0e6-39f7-4414-83bf-68acab6e5225"
        },
        "item": {
          "id": "ee6722b3-16ec-4717-8d94-76701e5569c6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e9891926-b6a4-4ae5-bda9-8daee6aeecc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35253f16-1bf6-4c36-a8b4-30de557d9c7b",
        "cursor": {
          "ref": "e12650f3-18d4-4b6f-bc92-3021d40e8813",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3b535e44-33b6-4c5d-b0ce-74556c23d77b"
        },
        "item": {
          "id": "35253f16-1bf6-4c36-a8b4-30de557d9c7b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c5294c78-6e5a-4b17-8605-6c28d8856ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dffd522-1881-43a8-8735-48f19e9e0070",
        "cursor": {
          "ref": "82a0ad5a-2f51-4d92-b20d-3fb203f2c3da",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9970b9cd-ce7b-43fa-9a21-e1976d5f6fb0"
        },
        "item": {
          "id": "1dffd522-1881-43a8-8735-48f19e9e0070",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "359fc9da-9e32-4892-8fd5-8dd76eb7720c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da5d21-8673-4e68-818d-ca4cba428469",
        "cursor": {
          "ref": "b8515dfb-c7d2-49b1-ac6f-2c51806a5ec4",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0001f894-de67-4fee-9ec9-451b1fc6b488"
        },
        "item": {
          "id": "68da5d21-8673-4e68-818d-ca4cba428469",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fb9e533f-4a9c-4e2b-b3dc-e33e54386902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5005042-ac94-47e8-9ff3-89c3a7b11c56",
        "cursor": {
          "ref": "ce0dc038-0f3c-4686-9208-d1bde05cdfeb",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eb73e677-59c5-4110-a718-0308aa6e0f6b"
        },
        "item": {
          "id": "a5005042-ac94-47e8-9ff3-89c3a7b11c56",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e2e6f495-9d4f-4a7e-ad6d-addb49f8f891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d72b21-85d7-49b9-b339-12b5c8d5ea75",
        "cursor": {
          "ref": "b35286ce-02fc-4e52-9afa-358bcc8d98e0",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ced1381f-41e7-4b55-9a05-681999da7814"
        },
        "item": {
          "id": "40d72b21-85d7-49b9-b339-12b5c8d5ea75",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "34373c0c-be62-4e80-94a5-a20549b56cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd53ad9-46bb-46e3-b519-962254be09ad",
        "cursor": {
          "ref": "1d6881e5-a26d-4a81-84dd-de3a1668326d",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "52d31cb8-027b-4399-bc3b-a6995c977586"
        },
        "item": {
          "id": "3fd53ad9-46bb-46e3-b519-962254be09ad",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "61230c66-858b-445a-b91f-df610ed2bf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f95597b-1ec0-4253-b3cf-a1026fc93fa1",
        "cursor": {
          "ref": "3f4e38b4-3dc2-4346-855e-8fc3513965b2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ff0a4d87-ae51-4a63-9fa1-cb641214a924"
        },
        "item": {
          "id": "0f95597b-1ec0-4253-b3cf-a1026fc93fa1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "561bdd46-713f-4d72-aaaf-33bda90ea657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21c7f03-998d-4502-9151-33784b005009",
        "cursor": {
          "ref": "b6a26e60-b737-4c29-84ca-94731854df02",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "965f2e18-78c3-4a55-bac9-11f36690180c"
        },
        "item": {
          "id": "f21c7f03-998d-4502-9151-33784b005009",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a70305b2-9ffb-4e54-abe9-617f38fc25e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9443dd5-dec7-42de-a5ee-198952b0e971",
        "cursor": {
          "ref": "8d2de7ab-859c-4cbc-8467-889fbaf434c6",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1b795c6b-8cf9-4bb0-a00f-47e9ece4a892"
        },
        "item": {
          "id": "c9443dd5-dec7-42de-a5ee-198952b0e971",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a1260465-3016-420a-8845-9a5e58a2b387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f30e86f-22bb-407b-ae9e-5de74bf60864",
        "cursor": {
          "ref": "1c0d29ff-600d-47e5-8cbf-f1044f6ce04a",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7cd89543-3004-4afa-b0a0-0c9a73263002"
        },
        "item": {
          "id": "4f30e86f-22bb-407b-ae9e-5de74bf60864",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "21c902f3-3a7c-4d42-ba87-0523583bf622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9678c598-8ec8-4734-86ba-e4bee90723b9",
        "cursor": {
          "ref": "64567a0a-2fda-475a-9502-ea5a29a8283b",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b93f6155-7348-4793-90bb-703675e8db62"
        },
        "item": {
          "id": "9678c598-8ec8-4734-86ba-e4bee90723b9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5acc8dd5-7753-4b70-9600-9aa69fe26752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accd9b5a-3fad-4998-b18c-46508fa862c5",
        "cursor": {
          "ref": "811f1a92-129f-450f-8114-5ff4cbfdfdc5",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a5582e52-bb74-4a40-938c-79afb57b2e96"
        },
        "item": {
          "id": "accd9b5a-3fad-4998-b18c-46508fa862c5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "14db665b-bc7a-4bd6-a27c-619063620426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfce2ab-6225-4a89-a268-dadebe78eb5f",
        "cursor": {
          "ref": "8dd3ec8d-0531-4673-a2ae-75670502a322",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c325b518-283b-46a9-9000-50cde90db5aa"
        },
        "item": {
          "id": "2dfce2ab-6225-4a89-a268-dadebe78eb5f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "964ef79f-0d4f-47ac-b77c-5299f973b2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c51748-a9f2-4e26-9634-d527ea4bd5e6",
        "cursor": {
          "ref": "ac140a99-d571-4856-974b-a7ad2f8822ef",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7b1c19d6-6fa6-4467-a2a6-d33c9a63d536"
        },
        "item": {
          "id": "c2c51748-a9f2-4e26-9634-d527ea4bd5e6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e57f13e5-2395-4001-af0c-d27eadd8d43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d4ae10-65b3-4851-9c22-50a21906b274",
        "cursor": {
          "ref": "3be20005-1b51-4e0c-995c-da0a4f6748c7",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c023f832-1ed3-4476-8b92-e25d20d73127"
        },
        "item": {
          "id": "85d4ae10-65b3-4851-9c22-50a21906b274",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f18a57f9-61d7-4a92-9afb-c0499d04a50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7ee0d6-3812-41b6-a996-c2b08e82dcdb",
        "cursor": {
          "ref": "1ebfbfd6-59cd-41ef-9c8f-a137aa93a94a",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "202090d0-6318-4615-bd48-d0720d51d2d2"
        },
        "item": {
          "id": "8f7ee0d6-3812-41b6-a996-c2b08e82dcdb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "827fdfaa-fea9-4adb-bdb9-87a3d9df540f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6088b8bd-5697-4b51-b7e3-93afeb8a1572",
        "cursor": {
          "ref": "9438694a-1b4c-4f93-b91c-4a01001fb50c",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bf6c53cf-831c-4f74-8156-40790011992a"
        },
        "item": {
          "id": "6088b8bd-5697-4b51-b7e3-93afeb8a1572",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7bc59dd1-cab3-4c2f-960a-330dd6b3e3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8d4fa7-c4cd-4b99-b340-a1fc6eea928c",
        "cursor": {
          "ref": "6acbc5a9-b943-48e6-b7a3-70d0232c3979",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f73a895b-b286-4b74-aef1-a0dc33d48b5a"
        },
        "item": {
          "id": "8d8d4fa7-c4cd-4b99-b340-a1fc6eea928c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ded04d90-8222-4ae5-9047-34dface82a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cf6c7b-8ccb-413e-853f-cd0c21c0a801",
        "cursor": {
          "ref": "12635c2b-c851-4017-9367-8da45120e1b2",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "42e4edb7-aeb2-475b-b7a5-43c6e5cec1f6"
        },
        "item": {
          "id": "d2cf6c7b-8ccb-413e-853f-cd0c21c0a801",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2e4a58ae-5df6-486d-a363-e7f65aa67392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6110d22-650d-4a94-8abb-dc1d4b90e4c1",
        "cursor": {
          "ref": "f04682a5-0dda-403e-8135-227807ad47fc",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "69ef0763-5cea-4090-8167-ecc0d35807a2"
        },
        "item": {
          "id": "a6110d22-650d-4a94-8abb-dc1d4b90e4c1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8752d961-58d7-4fb8-bee2-c19960e2d2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33df0c4-9b8e-400f-be82-18f59b282999",
        "cursor": {
          "ref": "5a1a0321-d0e6-4405-a5cb-f5dac4bb33b9",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ca422113-a541-47e5-bb46-599a3c05af1c"
        },
        "item": {
          "id": "a33df0c4-9b8e-400f-be82-18f59b282999",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "17204f20-a063-4d9c-aefe-abbe0218de39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2defd7-aeb4-4f9f-88d8-577eb8426703",
        "cursor": {
          "ref": "c59cbc59-c996-4a56-b113-d6b7f498e7c7",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "61d6cf21-5f1f-42fb-a8a7-ad1d1f349fb7"
        },
        "item": {
          "id": "8c2defd7-aeb4-4f9f-88d8-577eb8426703",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "74bdd63d-ac4b-472f-a4c4-e420b4a082d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132e5dfc-1267-476e-9421-40113b204dbb",
        "cursor": {
          "ref": "123762f7-19c5-4f0f-86c5-b7eeacac34e9",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8f33674b-d158-4846-a95b-08f73c929238"
        },
        "item": {
          "id": "132e5dfc-1267-476e-9421-40113b204dbb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c13bf27e-dcbb-48e6-8ea8-bda8ca923fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc4840c-0eeb-4dcb-bc21-5291c06ae57f",
        "cursor": {
          "ref": "b7bc2a7c-88f3-4c54-9693-8cb0512e65b7",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "611bb05b-8443-4dd4-8e0c-355618a0950c"
        },
        "item": {
          "id": "3dc4840c-0eeb-4dcb-bc21-5291c06ae57f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "43f0c81c-3155-4a7b-a7e1-63498df08957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3763b68-6cd7-4e1d-a55a-4f737c4cd6c3",
        "cursor": {
          "ref": "4431ca0e-bb36-4e95-ab52-72c42395769d",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e4c3b96c-e666-47fb-a500-bb8b71b854ad"
        },
        "item": {
          "id": "b3763b68-6cd7-4e1d-a55a-4f737c4cd6c3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f7a3b31-6d8a-4138-a699-055e8ccfcdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05126879-e3ce-450b-97ff-c20700580bdf",
        "cursor": {
          "ref": "af314f5d-7a7e-4a39-90af-1209afefd5fa",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6014999c-df6e-48b0-a885-b9f6ee847971"
        },
        "item": {
          "id": "05126879-e3ce-450b-97ff-c20700580bdf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c2c7ceca-9f1d-442b-a926-416aab230a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eac886-8afe-4c9b-bf8b-31e269dacd56",
        "cursor": {
          "ref": "93ad9392-1cd4-419c-a4a0-aead3faf4d30",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2be339c2-b336-4a85-8559-1ac1eaa2e52a"
        },
        "item": {
          "id": "06eac886-8afe-4c9b-bf8b-31e269dacd56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "57e142f0-b9b5-4882-878b-3d478690b6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97febe64-f1cb-4e88-b432-d6d34577d878",
        "cursor": {
          "ref": "60a108cd-36c5-45b4-842c-23adf634acd3",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4cb4dac8-1208-40b1-aaab-86b09ae057a7"
        },
        "item": {
          "id": "97febe64-f1cb-4e88-b432-d6d34577d878",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9549707c-70ea-4caf-ab5e-8e8e01d3dc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b826686b-7bd5-4cde-8f68-f5f373abe8e9",
        "cursor": {
          "ref": "4609f3fe-8782-4c58-abf0-8e97f50341e6",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "67e7846c-7212-428f-a87b-48db246b1146"
        },
        "item": {
          "id": "b826686b-7bd5-4cde-8f68-f5f373abe8e9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9c2d6120-c047-48ff-8438-eecb2d569e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e9c212-02d6-4b87-b30c-70299d570c9f",
        "cursor": {
          "ref": "cdfb77fb-54e4-4a91-a37a-dc84910dd026",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "af32b542-851f-4d1f-9a34-c41d5ce686b0"
        },
        "item": {
          "id": "18e9c212-02d6-4b87-b30c-70299d570c9f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9eb71f59-a798-490e-9898-081eb9492827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82597b26-50c0-4210-8de7-d56b02bd838c",
        "cursor": {
          "ref": "2889a1f9-6dbc-4328-84d9-c31c643cbba2",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3b49e655-6380-41e8-a1ef-5476e7475ad8"
        },
        "item": {
          "id": "82597b26-50c0-4210-8de7-d56b02bd838c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "08a06b3e-2689-4a11-942f-9c0566ca522c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3869ea7-e496-45d9-aa1d-9d817efb54bf",
        "cursor": {
          "ref": "45b475b9-ec37-45c3-a804-b9d15d904b89",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ac354854-da3d-457a-9124-098a18712868"
        },
        "item": {
          "id": "a3869ea7-e496-45d9-aa1d-9d817efb54bf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "823784fd-b16f-4ba6-b7b5-f1ea10baf8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f057f26e-50cf-459c-a0c8-0974375d316e",
        "cursor": {
          "ref": "27b15664-a1b9-404a-9dfd-cdc19811aedf",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f7829a21-d29a-480e-b360-32fba7604419"
        },
        "item": {
          "id": "f057f26e-50cf-459c-a0c8-0974375d316e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c45436e9-d72a-4a76-9824-8b3acd77afbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffb85cc-3c56-4cf8-8789-3a48ae4031ca",
        "cursor": {
          "ref": "444c4073-5ad9-44e7-9223-9f8f3d24e1b1",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "71b1650f-951b-4e3b-b5ca-64b20f5989b9"
        },
        "item": {
          "id": "2ffb85cc-3c56-4cf8-8789-3a48ae4031ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "947ac5fa-b84a-4f03-80ae-6ba4d1dc9e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd69dc8-76f6-4f8c-956f-a45220a2c9fe",
        "cursor": {
          "ref": "ba6fd2cc-473d-4bbf-9037-69bac2f9ae96",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e5f59bc1-2a67-4660-8875-edab183b5474"
        },
        "item": {
          "id": "ecd69dc8-76f6-4f8c-956f-a45220a2c9fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "094c2cde-fd66-44eb-afc6-a66a211f2b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba997f77-f27e-4e9a-90cf-a1241645f490",
        "cursor": {
          "ref": "b524f840-ee0c-4165-b51b-766fa50b35ec",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bceaca7e-0703-42bf-8769-c11671e3c4f7"
        },
        "item": {
          "id": "ba997f77-f27e-4e9a-90cf-a1241645f490",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c5db0a42-5319-4a03-93c1-520e2cdeb0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e567e-e1c7-4ccf-b908-aa9b93bb4464",
        "cursor": {
          "ref": "5d2eb865-daaf-4b76-91ea-80d51f2a0381",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "21398dfa-6952-4755-9593-9f3a51b67709"
        },
        "item": {
          "id": "8c5e567e-e1c7-4ccf-b908-aa9b93bb4464",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1ac0a476-39d8-4148-9aa4-418707f62740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08b8cb9-fb95-4c4c-a3d0-ce090cec1c3c",
        "cursor": {
          "ref": "8c7fd5f9-153c-49b9-bcc1-8c25d65643eb",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b4391bda-ad95-49fa-a7bd-e8a3c2796c23"
        },
        "item": {
          "id": "e08b8cb9-fb95-4c4c-a3d0-ce090cec1c3c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "54091bd7-28c7-4c45-89a1-1bd4165fcaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b08476-7c99-4869-9e5e-bf0c23a4ac4a",
        "cursor": {
          "ref": "54416478-add5-496d-bcc5-a695e8873b6d",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "67050cc8-16e7-4d29-8ce3-953b710f01de"
        },
        "item": {
          "id": "41b08476-7c99-4869-9e5e-bf0c23a4ac4a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bdf4f844-0fde-4beb-8bef-27ecd5c5af23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e6fee4-4ed3-448d-aec4-99030d634c57",
        "cursor": {
          "ref": "deb876e0-9615-4ff6-b270-f0cd4f34d4db",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "05e52510-28b0-43ba-9b59-ce13ff83c8df"
        },
        "item": {
          "id": "98e6fee4-4ed3-448d-aec4-99030d634c57",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cacde02a-97ed-47e6-a43b-ad2a66e09dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba147efb-538e-4c9b-975c-d009e961f612",
        "cursor": {
          "ref": "c97170e3-53f1-4792-a556-5406e98c3d52",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1eef0c7e-70ea-4b7b-adc0-02f071351e2a"
        },
        "item": {
          "id": "ba147efb-538e-4c9b-975c-d009e961f612",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7ab7b2e6-b664-4970-a41a-6dd87e79a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb0153b-55aa-4d94-b153-6aced4721f0b",
        "cursor": {
          "ref": "0b74bac5-b5eb-4411-a10b-79603d95a66e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5570450a-43a3-4a98-be16-2ad4810a37a8"
        },
        "item": {
          "id": "3eb0153b-55aa-4d94-b153-6aced4721f0b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aa57b33e-b4fb-4b47-b66f-26afbf12551f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b571a8c-f68a-4e57-aa84-f159aeca24bd",
        "cursor": {
          "ref": "a57de6fc-8f7b-40cd-a7bc-989d74e49e47",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c5db6e9e-89fe-4a72-a9f4-ddfd4b71606d"
        },
        "item": {
          "id": "6b571a8c-f68a-4e57-aa84-f159aeca24bd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "04bb7830-5df6-47e3-b7ce-32345b0071a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ceb774-e6fa-44b2-b18b-a2bf6f236a41",
        "cursor": {
          "ref": "d2fa3932-1da6-4697-8735-039c530caacf",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fbaee331-a046-4171-8e6d-a8f2a637ccc9"
        },
        "item": {
          "id": "d5ceb774-e6fa-44b2-b18b-a2bf6f236a41",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fd7f96ea-a3a7-4ef7-a965-0811af5984a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962c8676-444a-4d41-bb32-98812fd8dbee",
        "cursor": {
          "ref": "e532c580-2296-4370-9f2c-b32f15f2b985",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "67f55909-802e-4bfb-95a3-dce9977e4e48"
        },
        "item": {
          "id": "962c8676-444a-4d41-bb32-98812fd8dbee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "51a757b1-fcd9-441c-bc8b-d16e275e2f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64724b28-2280-416f-bbe5-090d924a3ca8",
        "cursor": {
          "ref": "e0393eb8-daf8-4611-bcc2-e3d9293501f3",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1195be32-870a-414d-a5ff-a0d6887892d5"
        },
        "item": {
          "id": "64724b28-2280-416f-bbe5-090d924a3ca8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e5b2f4a3-e56b-46e3-8527-e49d6cc27efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e009a3d-a844-4650-bfc7-70e4db83b939",
        "cursor": {
          "ref": "7b97ce5d-85a2-4be7-9341-e8e4d9491d75",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "db2d721b-b78d-48f3-960e-35bfb70153dc"
        },
        "item": {
          "id": "0e009a3d-a844-4650-bfc7-70e4db83b939",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "65ea1db0-1a90-43a9-ba36-6dab6b6803d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938348ce-ba56-4085-9371-986a863625da",
        "cursor": {
          "ref": "8eff2441-1d7a-4d90-972f-74afc8598cca",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "097156c0-eb87-4f65-99e1-a9f2b5fe5e9e"
        },
        "item": {
          "id": "938348ce-ba56-4085-9371-986a863625da",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b27a071c-f8cf-43d3-91d1-bcd95a0d51d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6b1b32-609c-4462-b6da-045946f4bd6b",
        "cursor": {
          "ref": "dc222849-c74a-42d1-a777-484c1da1d28c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ca3afe4f-d9aa-477d-a0c7-7a0bf19c622d"
        },
        "item": {
          "id": "fd6b1b32-609c-4462-b6da-045946f4bd6b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ef1f619a-a9c3-42da-831c-abc395345734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e88ad-9ab8-4fc7-8ca0-cc5202bb455a",
        "cursor": {
          "ref": "31376492-1df5-4eef-9d50-4a0b662c4228",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "086da4eb-8c6f-484c-b5e9-733597b960c0"
        },
        "item": {
          "id": "0e5e88ad-9ab8-4fc7-8ca0-cc5202bb455a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f2a7f4c6-4b60-4c85-ba48-e122a8febfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c1d440-583b-43dd-8659-dd00356acedc",
        "cursor": {
          "ref": "8d6dfcc9-0c2b-4b88-81f5-5910d77deaf0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d5d360e0-0ad1-4b5d-8fd2-63b637915a2a"
        },
        "item": {
          "id": "98c1d440-583b-43dd-8659-dd00356acedc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5b4cac92-71cf-4ec4-9771-8b676c3c6723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc83622-3eaf-4f23-89aa-9e334b87c819",
        "cursor": {
          "ref": "56e73b25-334c-4e0c-aebe-9dfb47c73714",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fb61893e-7bd4-4313-bb7b-90821d89658f"
        },
        "item": {
          "id": "bbc83622-3eaf-4f23-89aa-9e334b87c819",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "53f38c32-e658-4a02-b618-d867671d3c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1773f14-c9a0-49b6-9c81-8abccc05d439",
        "cursor": {
          "ref": "b29c6ed2-d17e-493c-8500-8087209f5ae9",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9e323482-c928-4ca4-b989-8814ae9210a6"
        },
        "item": {
          "id": "f1773f14-c9a0-49b6-9c81-8abccc05d439",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "24869fd5-bee7-4dcd-98e5-70048f79a1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249bae26-608b-4496-a13a-b6d1b981af6e",
        "cursor": {
          "ref": "055c6c1c-eb7f-40f0-8d69-01886ec101a3",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3701e56f-8948-4aa8-8bb7-0baa44fb2dfd"
        },
        "item": {
          "id": "249bae26-608b-4496-a13a-b6d1b981af6e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ec01e1f3-e821-460b-a5f8-ad81e98ef36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56ac7f9-caf6-453e-b74d-e65fa5c23b63",
        "cursor": {
          "ref": "62f0c080-6388-4153-9582-22d27cd20b66",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "15bc505f-bbc0-458d-9c78-2072b2ff6ff2"
        },
        "item": {
          "id": "f56ac7f9-caf6-453e-b74d-e65fa5c23b63",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ddb7bdf1-7fa6-4b71-9b38-e3cd5601dce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96de1aee-4f2b-4f67-91da-faca7d270172",
        "cursor": {
          "ref": "1c56ee03-235a-4214-95d6-e9f834714aa0",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a01ecaa-f365-457b-ba16-6533c4a813b2"
        },
        "item": {
          "id": "96de1aee-4f2b-4f67-91da-faca7d270172",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cf6af09f-f193-4a84-97af-14907dfac487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb0e317-4c31-42b9-a76d-740e2e0e9953",
        "cursor": {
          "ref": "6e67899e-d600-4aab-bb54-b98e669aa74e",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6e5535a0-cf92-4d8d-8bce-2b5579fc5dd3"
        },
        "item": {
          "id": "ffb0e317-4c31-42b9-a76d-740e2e0e9953",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8f7b0980-e877-4d69-92bf-cb5bafb704f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f66aedf-0791-4ae4-b58e-891f6a03290c",
        "cursor": {
          "ref": "e504ae83-ed81-49b6-9965-79de986b7266",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5923d169-3688-4bf6-9aac-b2b8ef9e6bea"
        },
        "item": {
          "id": "2f66aedf-0791-4ae4-b58e-891f6a03290c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e59bd3a2-7627-4408-9a75-953b92ca1147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11407def-1d8f-48f0-85dd-8aa51daa2d11",
        "cursor": {
          "ref": "ac1866ba-d5c4-4266-b999-8a8dc87c775d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b9ab568b-d3b8-4ccb-b206-c05665eeb8a2"
        },
        "item": {
          "id": "11407def-1d8f-48f0-85dd-8aa51daa2d11",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ba2edc23-b579-4953-8670-1292221da9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be5d377-3e38-47c1-a347-5557e9f4c85b",
        "cursor": {
          "ref": "9ed865b2-b33a-4c9f-945c-269a2a82d3c9",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "da2b5d0a-a5f3-41b8-82a2-9e26834b61bc"
        },
        "item": {
          "id": "0be5d377-3e38-47c1-a347-5557e9f4c85b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eb88fedf-1dee-4742-8b1f-81caa0b30c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff2f960-933f-4dd5-8fde-98c6900b71a5",
        "cursor": {
          "ref": "8d320816-b5f9-44dc-9de1-acdeaa4ff92e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e544d94a-712f-45a2-b089-89fe777517f4"
        },
        "item": {
          "id": "3ff2f960-933f-4dd5-8fde-98c6900b71a5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ab9e42f2-a545-4898-9d97-df0d57957e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af46363-2948-4eed-a061-46e6a64308d9",
        "cursor": {
          "ref": "3c761d56-d8d2-4b0f-92d7-cc24c1ef18c5",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "87f393d0-de74-4eef-9a30-ea9f139ed5ad"
        },
        "item": {
          "id": "4af46363-2948-4eed-a061-46e6a64308d9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9ac8a1e7-05a5-457e-8579-c4be3100ee01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e102e760-5e3b-4fc3-b427-8005fbf23519",
        "cursor": {
          "ref": "e5ed2607-eb86-4ed7-9790-73d6ccbe709f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a1a36cb6-96da-4e79-b133-881f0715a9b0"
        },
        "item": {
          "id": "e102e760-5e3b-4fc3-b427-8005fbf23519",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b5bc0d06-725b-4685-9b38-c1c49889b734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dcf2ca-67a7-4e0e-88de-46fae033bbb3",
        "cursor": {
          "ref": "df532cee-a304-4bf9-8aba-949202e62ad6",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ae888165-0ebf-4fa2-b5b3-f8092f37dc5f"
        },
        "item": {
          "id": "08dcf2ca-67a7-4e0e-88de-46fae033bbb3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9fe21a53-00e0-4976-8e70-be4be765cc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b7d5b0-acc0-4cdf-84fb-2795dca4318c",
        "cursor": {
          "ref": "7724217c-3e30-4875-9fee-bab0b5a0cde3",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "194c280d-6072-4c87-a252-a0155458f24f"
        },
        "item": {
          "id": "20b7d5b0-acc0-4cdf-84fb-2795dca4318c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cf797637-9779-49c9-969e-0047188dcde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed7828b-eba0-46de-92e7-b45a688e7ecf",
        "cursor": {
          "ref": "1779b8ab-9224-48a2-a6cb-776bf790609c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "780341d6-93a3-4bae-93b9-4558d85c8294"
        },
        "item": {
          "id": "9ed7828b-eba0-46de-92e7-b45a688e7ecf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4fbcc509-5e1f-458a-83db-f5c97db133e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c530e3-b234-4432-b03e-86e51531ed7e",
        "cursor": {
          "ref": "105e395c-8787-4ab3-bc43-8df252441a89",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b9112b7f-ea7e-40c6-beb7-55bac3431752"
        },
        "item": {
          "id": "00c530e3-b234-4432-b03e-86e51531ed7e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a96d2edd-75df-445b-a483-d4ad723b6cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729b820c-a3a7-46ee-9d98-627807c2d2bb",
        "cursor": {
          "ref": "40c32e44-c5ab-4336-9c88-28f9e645299b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a7ae2de1-7551-4b0c-a627-f8c1a2956392"
        },
        "item": {
          "id": "729b820c-a3a7-46ee-9d98-627807c2d2bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2a9b7dfc-99e3-4c79-b564-d785d2b8e8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c122ef-cdba-481a-94bb-a4a7c02f5eb0",
        "cursor": {
          "ref": "dca6cefc-3fc3-46d1-867a-6bd4a6bd92b3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f87a3255-2795-48a6-add0-4fcdb19fc84b"
        },
        "item": {
          "id": "87c122ef-cdba-481a-94bb-a4a7c02f5eb0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d22ba53b-d5f8-4217-bcc6-e70fa2051dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accee1a0-c4ea-40db-8448-74c6b1b4f919",
        "cursor": {
          "ref": "4f511297-dd9b-490d-824f-2177d9c8bb47",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "402532ba-a349-48aa-9bc0-ea58d9180b99"
        },
        "item": {
          "id": "accee1a0-c4ea-40db-8448-74c6b1b4f919",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "aa8a94c4-e789-46e2-aed4-d244b60631f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cc1598-e283-4e46-86c3-54347976476e",
        "cursor": {
          "ref": "757a5719-2f55-4551-858b-ee755b490722",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d463edc4-c136-48ab-9d0a-4b2e5f175bb1"
        },
        "item": {
          "id": "44cc1598-e283-4e46-86c3-54347976476e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "79274f03-673a-4573-b275-6b2301d9db92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc78132-9ab8-4d13-bf1e-ce9df6aed225",
        "cursor": {
          "ref": "1472f645-41d5-4fc5-b463-8fb08a827e23",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bba5ec52-fa68-4c63-9742-35ba7a2ef6a4"
        },
        "item": {
          "id": "1dc78132-9ab8-4d13-bf1e-ce9df6aed225",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0f5d39a9-f4a3-4086-9707-21d666c29c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c8fb1f-6f7e-459a-b17d-c99a625ecad0",
        "cursor": {
          "ref": "26a8ab0f-ef9f-400a-ac39-b167e6d2ae9c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "60c1a566-4b70-44b4-bc0f-368b025a2652"
        },
        "item": {
          "id": "59c8fb1f-6f7e-459a-b17d-c99a625ecad0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f8d377c-87bf-41ff-b9c4-7d54dfeda5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db337e4c-b609-4be8-93c1-e87e01d24cb9",
        "cursor": {
          "ref": "44a15a7a-6f1d-477a-b602-35d921164fbc",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6ce37783-045f-4668-85db-bd08728f52e1"
        },
        "item": {
          "id": "db337e4c-b609-4be8-93c1-e87e01d24cb9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7a50711c-23b8-4579-845b-b203249d994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef75edf5-7f09-48c6-8980-6d9d269d31b9",
        "cursor": {
          "ref": "70426fb8-df6c-4be9-9a34-3665ad778b43",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "42358ccb-92eb-451b-96a2-2d12729f7616"
        },
        "item": {
          "id": "ef75edf5-7f09-48c6-8980-6d9d269d31b9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2eb9e69d-f8c6-4f31-bedf-319fbfb970bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e87d51-df03-4a3f-aa43-6f9d0013cbb1",
        "cursor": {
          "ref": "c71a340c-6898-46c7-b0fd-1fda10af15cf",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "155ab622-85bf-4cc8-b9b6-764e97cb5b56"
        },
        "item": {
          "id": "87e87d51-df03-4a3f-aa43-6f9d0013cbb1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c084f316-2779-4a12-a2f6-70f5fb0f4577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1b0e12-9f72-468f-b417-14d9e835794a",
        "cursor": {
          "ref": "c39c8955-5534-42b0-9688-20fab9486f87",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5864e3cc-cd4f-42aa-901d-318fa284debf"
        },
        "item": {
          "id": "dc1b0e12-9f72-468f-b417-14d9e835794a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "05d70d68-7c1a-4007-8831-051e2f8a3379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e73d8a-d129-47d9-9ad8-a0640da7c7e4",
        "cursor": {
          "ref": "ee75fe22-52bc-48aa-9fd0-ba51a6e5b65e",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00a92ead-b188-4fcb-8fe6-143463db2f7c"
        },
        "item": {
          "id": "53e73d8a-d129-47d9-9ad8-a0640da7c7e4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a9a56aac-94cf-4f88-8228-4c6ef9269eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c25def1-30c3-4ba0-8818-32d1bfeef7a0",
        "cursor": {
          "ref": "fe4473d0-9119-4225-a798-416dfe415917",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b0390992-505e-4398-b841-4cc6d2230980"
        },
        "item": {
          "id": "7c25def1-30c3-4ba0-8818-32d1bfeef7a0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3d71a222-586f-4a7c-99ba-eec80a899bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a76b685-0bb1-4109-ae90-4cf43b2a5b54",
        "cursor": {
          "ref": "f6e811f7-30ea-43f9-b019-568fd3a6e421",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9c3b97eb-8511-40b8-b2d0-99a6ba736e33"
        },
        "item": {
          "id": "7a76b685-0bb1-4109-ae90-4cf43b2a5b54",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a7f3119f-bf89-4812-b341-d3c8165f1b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934260fa-9ab1-4801-86e8-b0097c3d68c1",
        "cursor": {
          "ref": "b1c0a72f-ee95-46d3-bce1-7adee27536bb",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "395682cf-f739-4feb-8d64-ebe146e4bbe9"
        },
        "item": {
          "id": "934260fa-9ab1-4801-86e8-b0097c3d68c1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ce6d6f1b-96bd-4f03-bf0f-fdf8d4433c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b1fcd1-b808-458f-be56-c817ab33b03f",
        "cursor": {
          "ref": "1a172960-a33f-452f-b4f2-2711ef82d1d3",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4181acfe-96e1-48d6-96bf-0a72055ae28c"
        },
        "item": {
          "id": "03b1fcd1-b808-458f-be56-c817ab33b03f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a1256815-d14b-4020-ac3c-4a9090993078",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba8590c-6830-4902-9071-61e128af0c24",
        "cursor": {
          "ref": "8e34867a-df93-4e5f-b066-8ede46aa69e6",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5736d4e1-5358-484b-b94d-bcc955c3769c"
        },
        "item": {
          "id": "6ba8590c-6830-4902-9071-61e128af0c24",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "36179d68-4749-4c58-be91-6c761bbc6157",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66658b76-0926-45aa-a181-fca162cbcf9b",
        "cursor": {
          "ref": "e1b6b56f-e332-43fb-a900-4208ed23e1ec",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "70ab8bca-acf3-4d8c-9c80-4621765c63e5"
        },
        "item": {
          "id": "66658b76-0926-45aa-a181-fca162cbcf9b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d338ae73-22fb-4b98-aae9-6fb6bf15acd4",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a47125-af68-4c2b-8e0b-fb89cc2d42ea",
        "cursor": {
          "ref": "2842e451-a890-4815-bd23-bc9e0fd42ec4",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "15cb5099-39bb-4aca-bb1d-c5ae0167ced8"
        },
        "item": {
          "id": "76a47125-af68-4c2b-8e0b-fb89cc2d42ea",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a6cba61d-271e-4d27-96f3-e488952eb6ed",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e54d6bd-2dd2-4119-8b7a-a5698acf8a26",
        "cursor": {
          "ref": "0d3334ac-287b-41c0-a8af-cb3b27d02900",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4b8635a-6b5f-438c-9d46-33e624e6e5f0"
        },
        "item": {
          "id": "6e54d6bd-2dd2-4119-8b7a-a5698acf8a26",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5592fde0-86bf-4d15-97cd-7747d0cd3ee2",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8367d45d-0a02-47ad-9571-f04db2c83120",
        "cursor": {
          "ref": "5665899b-69e4-4647-ba8e-5f5dc522ee20",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "062de9e2-062e-4182-a109-85080416ea80"
        },
        "item": {
          "id": "8367d45d-0a02-47ad-9571-f04db2c83120",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e38747e-9eb6-4ca7-91da-6a7c89b37599",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8367d45d-0a02-47ad-9571-f04db2c83120",
        "cursor": {
          "ref": "5665899b-69e4-4647-ba8e-5f5dc522ee20",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "062de9e2-062e-4182-a109-85080416ea80"
        },
        "item": {
          "id": "8367d45d-0a02-47ad-9571-f04db2c83120",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e38747e-9eb6-4ca7-91da-6a7c89b37599",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8367d45d-0a02-47ad-9571-f04db2c83120",
        "cursor": {
          "ref": "5665899b-69e4-4647-ba8e-5f5dc522ee20",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "062de9e2-062e-4182-a109-85080416ea80"
        },
        "item": {
          "id": "8367d45d-0a02-47ad-9571-f04db2c83120",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e38747e-9eb6-4ca7-91da-6a7c89b37599",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa4b076-97a1-4cb4-bca0-fe189c5a9287",
        "cursor": {
          "ref": "18793c26-649a-41bd-ab9d-7394e002ddfb",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b3ded8f7-3dc6-454c-a663-d10bafa8879d"
        },
        "item": {
          "id": "8aa4b076-97a1-4cb4-bca0-fe189c5a9287",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a6934636-4fc0-4e96-8651-78f02cc98b2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92bf5f-ce62-4c6f-8b80-e3894c93c2ed",
        "cursor": {
          "ref": "31776be3-9a22-4bab-bac6-74efb3ef5472",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e847e2c5-0025-45e4-9340-f65a7a9f2070"
        },
        "item": {
          "id": "5f92bf5f-ce62-4c6f-8b80-e3894c93c2ed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "adde47a2-e69a-4b2d-aa47-1729627cc8e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92bf5f-ce62-4c6f-8b80-e3894c93c2ed",
        "cursor": {
          "ref": "31776be3-9a22-4bab-bac6-74efb3ef5472",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e847e2c5-0025-45e4-9340-f65a7a9f2070"
        },
        "item": {
          "id": "5f92bf5f-ce62-4c6f-8b80-e3894c93c2ed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "adde47a2-e69a-4b2d-aa47-1729627cc8e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9cef3c-4333-47a3-8cbe-37618d59450f",
        "cursor": {
          "ref": "3e18b5a6-fac9-49a0-a2a7-24013653836c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aae12bab-a65b-4d92-90f4-7e65da4fb31e"
        },
        "item": {
          "id": "5a9cef3c-4333-47a3-8cbe-37618d59450f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a54032b0-5806-4dd9-b6f5-5baa1bba2b23",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e3c2bf-7412-4c54-966a-7662f3c648bd",
        "cursor": {
          "ref": "c8334853-36e0-44e3-915f-751d46b86397",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "85d141ba-3170-4728-8fc4-3817ae541781"
        },
        "item": {
          "id": "d8e3c2bf-7412-4c54-966a-7662f3c648bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd68ab54-363b-474f-a28e-2c5cba6b1bbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e3c2bf-7412-4c54-966a-7662f3c648bd",
        "cursor": {
          "ref": "c8334853-36e0-44e3-915f-751d46b86397",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "85d141ba-3170-4728-8fc4-3817ae541781"
        },
        "item": {
          "id": "d8e3c2bf-7412-4c54-966a-7662f3c648bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd68ab54-363b-474f-a28e-2c5cba6b1bbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9e1aed-9369-43c2-8660-947488f24eff",
        "cursor": {
          "ref": "cf691897-f8e1-484f-8282-28230c682c6f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8aba4f6e-2a18-4957-9421-71555a263b5d"
        },
        "item": {
          "id": "4b9e1aed-9369-43c2-8660-947488f24eff",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bc21af32-eb15-429d-9f55-0773bb057b89",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}