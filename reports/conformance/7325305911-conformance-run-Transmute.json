{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0447ac09-b24c-4758-86a6-4a19e655a241",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7e14a3c3-0720-4823-9e1a-7620bbe3c170",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c0e6298-5208-42b9-aeab-b1434a8eea09",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d5c5687-eabb-4867-b6c0-fcb4401f487b"
                }
              }
            ]
          },
          {
            "id": "0d4c87cc-24e9-485f-bba6-ce6c19290822",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f355561d-f71e-49b5-b7d7-f37885918996",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e6597d5-41ea-4948-9060-8171f7a8f270"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5e5031b3-3914-4b97-9087-4acd2d84a350",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2e2eece0-e68b-4061-bf64-51a9ed44bea2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b92dbcc2-070f-4b36-a09a-fa43d6c6417f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d72221-dbdb-433d-987a-b661f7cbf2ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d2a0dce-7a01-42a1-9462-700e3677616a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a34cbce8-6289-4dd1-8787-3551e33e19e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "675f78d1-2de7-414a-829b-21ee5649b4ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1e936631-cb49-44cd-8067-23b8c218befd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2487dbb6-391a-4a79-a916-7038a6e0845c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10818951-ec07-4a33-85ed-dd838c97822f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5330f6f0-d53c-4d20-804b-c4c6be80f71e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f1ea604-0b6e-4800-8806-0c8ce0868adf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae610864-981c-4115-8d94-1da8e4609051"
            }
          }
        ]
      },
      {
        "id": "3dc55305-d400-4387-9e49-9781e69a5894",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "260f456d-65d0-43dd-80b1-c1e70478a9a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "157216b0-2b3d-4d10-8992-730ed49ad554",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3364233-5708-4c73-ae30-3ff60200672f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5595c9-ce5b-4e79-afc7-c685e92e1d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80ef27c4-d2d2-4291-b305-1cd8bbafc6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5927c3-8ef9-4dc8-a6ea-69b1f1d1b091",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebe6499-d811-4998-a561-236a84af45d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4661364-9a00-4e57-8f03-b12fcf2263a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b30d79-cdc2-4791-a6fc-ddb5bb39b9f1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f182c700-84b9-40ad-85f9-7e04fe898137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b6b4d66-fc22-4523-8228-e64001420699"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8830494-a176-42e7-9e9b-8911a8914a15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9370c00-2ee9-4822-88c8-d468f8d8a4c3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c3d6f6-6db1-4ce6-a828-66696fa2cc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcdac76c-4278-44ad-8d09-36618c11e242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6d78df-5fd5-4b60-b9a9-34c479e895ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54eb3be-c017-45e0-809f-6e91d1b2a9ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d53a8b36-3499-49ff-8ce8-bf42f0a81774",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a729cea-c5af-417e-98d9-6a3cea2ad59a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea0a8ae-4791-4cdc-b83b-2916bf94db54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c45f0f7e-838d-4b23-86bd-f7192b8b4514"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d74b0d0-c3bc-4901-a4f6-e9a9b7e46a6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f9fb432f-6cde-4dfb-be80-3bb1ad582196"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7f20a2f-0c75-40ed-9f17-37886e8b8824",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4886d4e-0a46-4655-a087-51021951edce"
            }
          }
        ]
      },
      {
        "id": "b4ad5d5e-45ba-46bc-9f37-fd372deb0972",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "152d2f3f-8484-463b-aa8a-789595030b81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e03bbe24-71db-40b1-a4a4-0d94dbd545c2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac4f5b82-8cfc-4603-b948-77f9e699091c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741538fe-5d30-437c-9738-86c359693b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0f6244-2e4d-4f56-a819-78479a2e34e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5662ad4b-35ab-458e-be4c-6d44af35e0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84c060f8-c026-4e7e-aa27-a859d4eb03bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e9414d-db40-451e-99c6-1cc9a4333d2f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401bd034-5010-4ad1-86bb-a9210b930a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c111f6b8-9965-473e-9b1f-89129fb08ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f9a030-d244-488d-a893-8788de2c9d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10503103-eee5-45f9-b225-08db57353be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ded5367-e67a-4c6f-a514-1e98ab04fd0a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca6257f-209a-42f8-a76a-84f4d3d6e3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b339af-9aa9-4e73-b8ee-f12c595d29e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3a0d21-5a7f-430b-9ed3-22f8e56ab134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe528a67-d2ce-4fbe-a3ee-ae7a07e99ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fb9156-cc30-4c06-a0a8-3eeb57386fec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76dd06c-c958-48ba-928d-6890e95706d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b38ba4-8056-48b9-ab2e-fe309ccd0c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69246219-ab3d-4790-a2b7-40deeb8fb4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34ed167e-317c-4da8-9d09-466f6b5e6ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fb3e75-3615-41a7-9572-fd7a0e66a98c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754ee898-671e-4c6c-980c-671b29072e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236cfee6-50c9-4e5a-9de3-0cc9a1bf2010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb0b8e2-d487-481b-98d2-056e5957d237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a91886-f57f-4a7d-a6c0-ff81bf94867a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9140b59-1fe4-458c-9ef6-036a49faf897",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86924e9-694e-4746-893b-462dddc41e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2b0789-7a2b-461b-b042-a3475ce9b8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e151e49-7084-415b-86aa-2ec97ca84678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcd67346-b235-411a-ab75-c2e625f848b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32848fd9-eccd-401f-b1e1-6c4354b5b424",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41954d3-d6c6-4117-a8d6-539ae7114546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cf1c79-606a-46cf-9604-f4dc22375f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c80bb7-fbf0-4b5d-b77c-93b0d39fd663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d8f2b6d-c616-49c3-9c49-598cb28cc5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f22e6-bbae-4415-b653-7a3d859bae4c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98261738-6dd3-4906-a858-08cba60fd859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802fde0a-754e-4d98-8c2a-3baf78ba35a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c773c5-b0e8-4a3b-b57f-6099f0150dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e16268a8-4320-43fb-9ea4-3ba28b1d2ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6836b4c8-9da8-4194-b351-a71ec50853a1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa67921-fa36-4011-bac7-df30ec91e52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2810611c-9030-4611-83fb-c86ab2fb3a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbcb59e-7783-4975-aa22-31d53056e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe71bdfb-c96b-4520-9c13-4c890600bd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb92aeb8-66e9-4445-97ff-796fa7e6b5ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1888fe92-0be0-44a1-a5b0-d0d6ceedd9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e73806-00d1-40ea-9e51-12969c59996b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f711480f-144d-4e37-9321-3906affabdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "980ad4ba-8977-4c05-91b6-5a9de5023cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e9f8bc-2658-478f-92bd-af555434fd69",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0224bc3c-540f-4e0a-a1da-c39b7ab97897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b22ded-ce0c-4541-91f1-bbccfb397f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3de79de-dc29-4ee8-aa1c-b888212af498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59167f1d-ae71-4ef0-870e-d3e60e7042b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d271c94c-84fc-41fc-a29a-d05f0dc327b0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb5fcff-0a37-498c-8074-53de02666b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43af1f4-f074-4ca3-aab7-da8f00902f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab7b271-1587-47fc-81ad-f8e2ce01cc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "388054c4-ab6b-4007-8ac0-6ab21b222a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f2aef4-c57d-431c-a63a-6734414b82d6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325401e9-f53a-4afe-bd00-4d0ae8284a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a061568-6d64-41f9-9900-fe3527648029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a84f36-d432-4c8e-97aa-fb69899e1eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f77d2835-fa53-4330-bcf0-5b2f02ac3b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3418e117-29b2-4058-b9b7-a00dd0084291",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a5ecf0-ad54-4576-8d2b-2a902b4c0df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c9517a-62b4-45be-bfe7-a8c51a7f48fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c455362-e8b4-4b25-8000-123cc4b630ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dd778d6-cd3a-49ed-b75c-890ac78f1f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb1a8d8-9213-41b8-9e77-cdbe2383286f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f36e01f-154a-4317-a3d6-c11e178d591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544a30b2-c295-419a-b3cf-89176ab23321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336dd5f5-a991-49ed-9678-f99bfaf15f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ed8e3d-5985-45aa-a269-aea4cfad6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f04cc6-33fc-4d5b-9084-5e1907cf1dd6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28391552-6126-4a6a-aa13-13e83f2e9297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0507f0b-93fb-4e3f-b418-8fb8512d21d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa44043-69b9-4357-9d1a-cc857e1089ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "897e8a3c-6ba7-4c46-9e71-bc8e80b3907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d6ad56-d500-43c9-8786-9e093399139e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2af90b-289a-4cbb-a58a-26e600352e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c61c8b-b8b0-4920-81d5-dc908dbe4f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2490d332-47a2-40be-a305-de14d8884469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db4c79d5-fef7-41ed-82b5-c6f79437fe7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514ecc0d-654e-441e-8c91-0a658be4174e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580a623-f71f-48d4-bb57-fea27fd3ae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b982ee-02dd-4f53-85bc-b2b3f75064a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5700a7f7-372a-4419-95f2-ede4dfb59f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ca1920-06c8-48f1-b756-5dc71c13ea52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff87264-45f0-4c7f-a0dd-74182d7609b4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd63211-3b57-4239-8604-888c0e151ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67de8ba1-51e6-4d38-a7c8-a2a1b8ec7259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587f8546-5e47-49ab-9ce6-3ca95a3fc17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a5525f-6f26-41d9-b224-69686989f2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c291967-4911-4455-986a-069d27a8b25b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27dec18-dba5-4563-b9f2-90f26e20d6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee31473-d1d6-4769-b65a-b6f372ca5852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383ce34d-b8c8-4c99-9ad5-ea4d891a6430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "043ea703-a5bc-4190-b665-9b4c105eeaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ee0424-86d2-421d-8069-da5add290e83",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2f215e-e601-40b6-a3e3-cb458f912397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4eaacb4-e0f4-4c38-b138-31fd13b567c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365e6706-0757-45fc-9a90-9ae4be2da53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05bdc61b-4362-47c0-a9fb-380b90dd710a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2c2551-8bb7-4e11-acc6-823c994bb4d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bd4358-c96c-4b31-85f9-9898599a0b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd29f37-f5e9-4110-9475-8621244236ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e918829a-5427-4e87-b5d9-ddecf88e0640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1de56c-faf4-4ae5-85c1-d8cd5f68cf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3113fa58-a981-462b-a958-4eb9281b28c2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7785c24e-6aaa-4dca-8649-306a2bc9427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c456169d-6101-44ec-a168-f4cabd085a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a3ff01-9fb5-4a83-99b2-e3f7bb3a7fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c468ab8-16db-4a07-b1ce-d12d8520ac24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49bb426-c567-4a3f-bec5-dbc71b7a176b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbaab0f-3e99-4f3a-a26e-477e866ff828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aec867b-5afe-4a81-bac3-b5b2e512ddf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29b35ca-1965-45ce-9b39-2a0986f199f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdd22d2-62ca-4bd2-83ed-918a77ec9316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472a9bc2-fc28-4376-bc89-7579c2bbc3d9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bb423f-0c59-4919-85cb-ade348dee9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59887a9-ce34-409a-9337-df01ae8d1619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dc8ff2-b336-4a6a-8276-0f88e471bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf32e7d9-c41c-473c-9196-06f14c40c72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410050ad-0225-4a00-8da7-c69bd003c255",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422f3e37-4728-4e71-bd2e-56beb1cb9425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8beaaad-d781-41b6-879b-4dab693c8949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccb0956-85cc-4d3a-9939-4b9356f2f10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bde9ec-31bf-4376-8d7a-c93fcd40699d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ca835e-9a4d-4401-8557-cd48546c237e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b86521e-00de-41a5-9b0c-1269c8e897ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f931e4-0137-4cf5-ba05-497fa6abc5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac18c15-55ae-4c1c-8a84-04ef33c7e947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70635bc4-1bbe-4ca5-ae73-5ed5998ee387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1e67d0-b636-4832-aa2f-6a379c58f8a5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77b916d-a55c-4e3d-beb3-3d951a64d592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19de57a0-0c75-46aa-ae6e-c5c3f4c6b127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace13872-d8bb-41f6-a007-b11c72f22b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c824b1a-5ebb-4619-8963-6e234afb4064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94693662-e1ef-4530-b1c4-d2eb87f3735a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a653e907-f6b4-4d3d-8e51-4c2d7a33b930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f16767-82da-4f47-8689-dc7439d4c8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd21f4d6-ae71-4c06-8f20-9c677483da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e7814c-ef98-45db-8797-4b4f7159c42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9350720-083c-4af7-909f-0c7098e072b9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0617c86-9d08-4fd7-81a6-0d412b635942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc0d277-dd9d-4115-bccf-4c728ff65f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf456027-a948-41b5-979e-7640db033893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "867ca7ce-29e2-42f0-b6e6-ec814c7216fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f840c78-496a-43cf-9505-2933e9ca26a2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd82258-2d3a-4f05-8984-2515480bebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bde2a03-784e-4b17-970e-434ec50671f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a9a574-d95a-4890-a190-2e17d1191315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2818c800-508d-4560-a32c-6a0ebf4bce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c0e4d-da19-4be1-b96b-260153ba5258",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a9570e-642a-4237-9797-4152b5bb9e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b67cfb8-d63f-4c4a-9566-f96e735312f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23653131-bb38-48c3-9c37-58cfc69583f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c0ef38-4d0d-4765-9e1a-6fa2089753df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7476f1ee-8d26-4ebe-8d45-012d2c70b5ef",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07be916-8c86-496b-bd14-2428601c0791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9542d070-7780-40f8-b1db-c03c6a42f5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3975f7ab-e9bd-4212-bdda-a60ac86a3f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2ce638-f4fc-4657-8dbc-72165d7adffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10ffc92-f47c-46f5-be50-6db47f72c2d9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0282f5e0-0c52-433c-8632-d767ac531755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6c5052-1c8d-4f25-861d-61842b9124e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1512bf-d37a-4712-a74d-a2f8c834ee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "825d5824-945b-4e4a-b1c8-83fb8c2dda35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ce2443-4c0d-4682-b944-e03bf7cd9cd5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600b6baf-0ef0-40eb-a26c-8df88f3262a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5127ee13-8a79-411f-9388-a7d286123501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdf4054-4e1d-49dd-b16e-816ee4082255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "15ccf7d6-71f3-4ef3-9b8b-bc80b128aaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cad4a0c-9d1b-4d3c-aea6-f1fa4215ecbc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af13c121-a605-44b2-b7e0-7d1581592e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a855444f-6565-4920-b6b5-8859c36777c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb6664e-7bb8-4302-aaa1-c26da5d21d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e25f73b-8064-45bd-b2d6-88b6eb7a03c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eeba2d-1beb-479e-90e7-93bf504602b0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6f71f0-474a-4775-bfd4-de8449e8d046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504b25f4-6e8e-47ee-a262-6423ce6330e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2169787e-939a-4940-9a23-dd77de2b9481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13302818-c31b-4854-9c42-e8084775b4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44a672a-5474-4b05-92a8-38a462ff065d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9431ffd8-0728-4cbf-a906-2f5218d8e920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfe6e81-349d-4029-acb9-25b2f169620b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c33e2e-2f6e-4a57-9d6b-2b66a74aee3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e263f194-8125-4e0a-ba76-cd6fb7692c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465d4e36-dd09-4ca1-bbfb-29ba8036dcde",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cb6091-4cf0-4861-ae8f-27d31fc638f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537b4fa1-48d9-4f8b-be82-b9ddd2687c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd292e9-c3f8-4573-bc9a-e7e8afc3f3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3778e17-2cbd-4c14-92b5-5b0d711fe9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f80450d-0c50-4bec-8a77-a4599b54ece8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceeb72ce-376b-4e68-8bc2-8c9f1a2bfe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c578a8-ac1a-4401-bde4-15ee702a6715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffbe847-c714-4b3c-82f9-ad68c8c63006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b515b5d-f5be-4e31-a3f0-a22485ffd471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2df4fe-5f69-403c-8a9c-3e3e08c1d30d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a8bde7-7705-44ac-86e7-ae535a330897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d063bb10-42ff-4d68-ac2d-e9bac27ea992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ddd8b4-10df-4e10-873a-53fd9bb57ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77fb06da-9170-441f-9a6e-8cb7edaec2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b1be8b-c74e-4b3d-a36f-16f7bcd0cc26",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96df66d-59d7-4e1a-ac52-dc3844a1effb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48377588-b1e0-4061-ada2-eb3e86eb265d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792839cf-da43-444e-8c87-58fd5689fc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0889db-37d2-4e5f-8465-c31f7dd9fbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecc679a-3a1e-4466-ab86-862416c15d3c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2284cd66-1839-4ebb-b0d4-cfc724b4fce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b29fe9d-10c9-4b1c-91bf-47a9587b9200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c827fb2-d054-477b-b1f7-cf2d9c6abaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "61f9d2cd-45c1-42c6-b9a4-46ce42e06e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dd9f05-3a33-4740-8f7c-bb69fc597cbf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8465cf-b756-4341-a622-cb3d6a5d8100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8aa9701-2264-474f-a7a3-56e40a75e300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d611126c-b5d0-43b9-9167-9d0c7a9316b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a60eb2d-f9db-4748-8076-f7910895a601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68765a91-7555-46d8-8663-8a4d2eff7bb1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664deeea-bb7d-4c46-9287-998c0a277268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de4c236-ebc0-42fe-95f4-183a972e6318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feff01c-7b41-491b-b5aa-ac92d7658faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb84a19-58d6-432c-b514-9617f309110f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d97d4d-242d-401c-abe7-4276893bbd29",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8ad8bc-7c5e-40ec-8eb7-029846fdbb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda49137-c5a0-40c9-ba57-4a28b9c83f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e69e39-6c0a-465e-8795-98ede2cd0d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "512532b5-a925-4967-a0ce-bd1ef30e387a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993340fa-5b7a-42e4-bf40-ecc2dcc3f244",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385b0cbf-894a-4c49-b179-fa1d50323655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b24d7e-2db4-42dc-937a-a80ad8430c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b90d23-b1ce-4a86-ac22-a1800bf070c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3819cf90-e02a-4f41-a7ce-3b0851039b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb3998b-b6af-4ff3-83c4-3deaec33be92",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef900dd-044f-49a2-aca6-86a568370d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f831fff5-81b0-4d76-a850-68acc7050e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abfe61b-ceb4-4a66-9334-c8eeb34410f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0e8c2c-f459-4f40-a81e-119e9e2b7d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e6ff94-2f43-4db2-8162-ec965b59d2d9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6653774-3c50-4ddc-827b-5436992db335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a185fa16-7d14-4a28-82c9-15f20d641f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce93785a-049c-4d60-ae71-f1c13fc6cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3429044a-c5d8-492f-a39b-889abddd6871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c37d9f-c529-43be-a004-3b5f32699bfe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c548ee-a9bb-4fdd-88c7-20462671f4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ffc5c2-b2de-41ce-88ab-2d7af6c9c929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8bd937-27f3-4e6d-8f95-6a7c1736d284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb412124-2c6d-4253-93b9-3a6bfa33fa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87e3c3a-7b22-470e-8ade-730a51f6d413",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7898150-7136-45b8-8ec3-e250b5881c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d95af58-b2ac-4951-9179-0373f86e845e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd66418-5882-4133-a2fe-547c597392ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b6632f-67b3-4d63-88a6-9968f09c182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff83089-525e-4763-9223-414504de5663",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6b050d-96cb-45f2-92dd-2e80de8de3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1cb581-45a8-4cee-ab04-fe537eb7df3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b17481-6a4b-46aa-b7db-ade3e72575d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "336018af-1649-4011-94ad-92022862162d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53124243-4f8e-43af-93bf-1541f10a4fbc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb69280-55c4-4d5a-918a-a8070168032e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b501027-405f-4629-bf54-4cf3c65e2d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c1cce4-8ea7-4a1b-8410-580dc5115df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f3a71c-b19e-43e2-a78b-0f5390a470a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812db8ad-91f8-4a71-9c50-24a93473327c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45441fd8-ac78-4772-ad13-ce579143a795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9fc36b-62a2-45e3-aea4-968bed173a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129f95f6-cba1-4c20-b288-d9f8f61a5a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b0ed9f-4f16-4c8e-a574-fdd5eb985d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf52576-d9c5-4fb7-a3e3-3782ec6f0bbf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff844ee4-e52a-4762-b29f-20c186f76847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778be7bb-7f63-49a9-8224-f4e7cfa0bba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec8e803-b582-4c09-bf6b-435133d612d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d878213b-cd6d-4aa1-b99a-5e393f71fe6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443b719a-19e8-4ff6-8cf3-c689bb7cf52d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f097194-a61b-46b4-858a-dcdcee5cd7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6698bf-188d-4a79-ae44-a815c104ed86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60583a97-3f0a-433b-a20c-8e6d4483b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e81eb3-5a76-4182-8189-667446bbca8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d1ce63-de57-4212-bbfb-9b05651cf415",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a877b4fb-c9c9-4946-8cb4-144a10f3ce78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58912ed-e3da-4745-8c58-502f63c40a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d530ac27-a255-4a9b-9d61-6bc6df882683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66fed83f-4071-4fe4-85ec-6f3ca76bd19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7c43a9-ec9a-4b4d-90ce-8a35db3353c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a55f4d-d13e-4761-84c3-c19db3a9d30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed989eab-6c6f-4652-971f-85ca71615b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a390309-7972-437d-9635-234848a8585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18c7a27d-ad30-4afe-b9f4-125bf32bae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282aa1a7-1cd1-44c7-8f7c-1447771cbf5a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26f9e1b-91db-40e9-a609-598b7eed514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063fa9af-e1d3-47e2-8244-56f3952ef9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3ea977-8a9b-47eb-a662-5f12d1e23048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "722f23b6-7d26-4a22-8f2c-e2c5ffb2bbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e47959d-efd9-4a77-b85e-4e16132b1304",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f5a598-efbe-4e1a-9bf5-e63bb951fbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb75b43-b32d-403b-8a0a-a521927b4ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca86fc1-01f1-4bb9-9b73-58bbb030bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16a6449c-d458-462d-ae23-dfeba831f30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f2d184-063a-4b31-b398-9e21c4d634f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9a436b-0f68-4f26-a667-23609a4d4821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a371d8-9ba0-4291-b26d-9ed30f9cc23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6c8601-25b7-4199-899a-03e94d17ab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "53641136-60af-428c-99bb-cdcf1f78072a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f205e69-ad33-4b01-aae0-d07a48b192d3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2621290d-4344-442d-b569-5660f7ee2c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4182e5-104f-4e72-9dcd-089dea82bafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc90ec17-295d-4bd3-a4b2-8d17e0066e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "954f44c4-76fe-4e44-8975-7e55720d611d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d360722-de8b-4d61-9051-dc3302fb148e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9614d6ac-b430-4d03-8eff-b5827ab03d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3729cad-b32c-4bb4-b7bc-392207c0cdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a60b6e-357e-4950-9b81-3bf7e43ad0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d708ce5-7e28-418a-b6c2-80061ffabc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c8bd93-71d8-4f52-a98c-b8277b577d90",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f42548-39da-4273-8e43-e944405d3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b18388-d842-45e6-81ef-7f559c93042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bba90-f0c2-446b-b06a-c963d9feced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b13b77-f07e-4add-a5c3-f157c90659b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443ead86-ddf4-42ae-ba02-fa1034c1aaf2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85758c1c-7f89-4eb0-855b-eb5e7ee147c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0d4fca-22b1-444f-bc32-bcde5e603a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4b4d6c-bcfe-41e5-9152-2c9dd180ea95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8d1bf0-6676-4b8b-89c6-c0c27e43187c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2deae4e-fa42-46a2-9ebf-e1f440394fd3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b70ac55-523e-4def-8ee7-7c9768d52451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c041a9f6-6f7d-4791-b61b-d19d1c5bb0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fde230c-54bb-4ac8-a034-11610bdc5d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea98d67c-57f9-4242-b367-70d57c0c8b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e203cd-30f8-4fa8-b193-cbc1f5742da0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26202a80-a3b5-487c-b4ef-d820856e11d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472ec7d-21b9-4d4f-b3cb-9344e2fff391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10589d5-49f3-4410-a9be-b20349598a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c24ae05e-6053-436e-8610-8e29a8b95f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9fa979-004e-4d51-a0a9-2dfcdaacfa90",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e7781a-ad26-49ac-93b1-db1c442661bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da681b0c-5f21-41f2-9785-9c3359ef78d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e57cd2-d466-467b-a132-4dbb9d30f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbb71c1-8451-4f7a-be75-71834642b005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4f4d8c-27e7-4c71-9fb9-b149dcf77074",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64da26-059e-44bc-a350-bcab9e87801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a4a064-9a51-4514-b3e2-e81b4c092316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffd32f5-4f43-4ba2-8b9b-b3707bb46cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3ccf07-f1f1-4efb-af65-54235d0473d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255c488b-7847-4285-9a6d-7ce5fd33ed70",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a94e82-f81b-455f-8c87-4574f226fbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9102ca53-6f5e-4a89-9441-a650cefbab79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1d1586-de75-440a-890a-da390d68122e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5b9528-5fcc-4eb1-b5cd-763c3ad0c28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc01521-b986-4997-b588-0b17bb4a5dcf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19465dba-866f-43d5-91e7-bf7591746bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8225a7ba-7b66-4c2b-ade3-86179501c6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b781b17-651d-4ed5-a873-197dc9842875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bf5a31-a74a-408d-b9b4-30bb3b105319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b09d425-8b52-4018-b018-6cda384505c3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd6584c-8033-432d-8b9f-d59cbc879e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb94b691-243c-4733-bf5d-011ccab471bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a72f63-51f8-4cd6-8e04-3a3246b88a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d00c67f-1864-4e87-80a2-58a80661bf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dacd00-ba85-484a-ac9c-25aeece5813d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4651325-cc77-41bf-b080-22b7c2709319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23faff7-8795-4217-81d6-2436fc9e55d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57504cf3-2bfd-4e39-9189-8d234f10850a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6737484-539e-4f34-8f57-d746904e8644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5541549-9007-4d41-9e5e-5f9bba76c029",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56206c9b-4dff-42d2-ac9f-ec5f28d8b311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3210a30b-be1c-4718-b346-599a7088b3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba2c60a-d366-40f2-aded-ce5816a27c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd22378-8443-41dd-9340-52f388b146b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce5c77a-9d84-46b6-9046-ec2494477581",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc1213d-ebf5-47f2-8947-4cbf47a922fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc74386-ad27-4fa7-bc57-f0ca321b208e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be86184-3057-4ff7-a4ac-07245649dce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f00bebb-4136-4e81-9f69-761305d2989a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9ae4c9-e941-4cfe-a7bb-3ed105912f98",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a179f1-a5ef-411f-92a2-f76744b5626c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc93d28-80b5-48c1-aec2-ff3b9ef60ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825506aa-c28b-4142-b71f-4b9b6572920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1536debb-e9c4-438f-919b-fd99b5d451fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ff4810-19ea-4de4-a164-3a34ed879bfe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf7c341-ff23-4a33-be91-2346d5a8d06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c178d80e-6797-4f4e-bc15-fcba9753ab1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ed5d21-a619-4e9c-a3b3-73d5ef79ba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25bfc11-9709-46f0-b2a0-688029b9714b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6697ee29-7a7a-46a2-bc0d-fa79550cac16",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d42f108-9568-428a-9b56-824ebe13f52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5dc449-5794-4b8a-82ee-957d751222d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7238766c-9c29-4c17-848a-d15f88e7ef4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db23849-0e80-43cc-ab0c-ce1a0c54c53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad04ae2-cc78-42cd-b1d7-f62324bbd923",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7acd6ce-2cc0-4573-8a5f-df80651ca0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d490c5f2-3d7d-496e-ae55-832c43b8d4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b010305-c64c-4fd1-9d95-bb0e0471e5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc1c99b-825c-4e90-8042-d32d908b439e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8087ba1b-ddbc-4329-ac9f-0f87fd4e4f88",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22880240-a10f-4bea-8a12-1c704dd7410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50291e15-b418-414c-b57b-bbcc4f05e49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab89e573-fcec-42bc-90b3-269f47616c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3b6e57-71c1-4e57-8ad5-232167ee0684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f934a15-ede5-4b0d-b8f3-3968b8d7afe4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587919e4-be81-4e65-82e6-a6f0b6f3d399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c41e889-0150-4dc8-a060-10d152080f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1942112b-8d2a-4760-a23c-a396621dac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ecf29c-5d2e-4a6e-aacb-832ad46532ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10d880b-6d4b-4ec2-a7fd-6749261dd4f3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae08e317-82e7-4c76-8e79-9068cb5de4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edaf691-8dab-4e78-97d6-d21e1b696209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10014571-48c3-4501-9f90-4045a87a1ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d213ebf-d69f-44cf-b3ae-bfaf14981530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd2df9b-815b-4b1b-9a8a-78ea8801f1e8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af7f893-422f-4613-b5c6-19e789c9d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0d586b-a6e4-413f-8ec4-96eca0fa059b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acac55f-0e4b-4e7c-b027-f6bf69536666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a77c6f-516f-4ba9-a03b-b8796aaf994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fce7d6-d04f-4db5-99e6-a9b61974cbbf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7a5233-9a9f-401d-8c5a-4647a2e9faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4313c63-6ac5-4315-ae67-0fc69826d75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7922f3b1-c233-46df-a7bd-ae5a632d1691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d789aff5-89d7-46b2-9e11-9487074a9fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38edcc4d-a630-4e9e-af92-c77dbf6c13c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0039fb-1839-4ae5-9b13-5c4b25ed2191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8a438d-aba7-42e8-af7e-4f051ccd368d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36183232-9a6a-405b-95f4-6362f00ce494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7902c273-a5ab-46ef-a4f8-e0a188bc779b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d73e38-4a2d-4bf2-8328-5e2f691bb78d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a4d34-a072-47cb-b089-11b81a96fe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bedb57-801e-4a0a-87ae-7de3f542ce0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42563a85-7b78-422b-b144-36671142f3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb05d528-06e6-4199-ae66-01c30790ef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4238016-c472-4089-8ce1-c697f41909f8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df95db83-ab71-4eaf-9f47-bfa34c372720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64efcd65-0521-4010-898c-e0e95babeb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f156a9-516a-40c5-90a0-a570efb0b8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11be751d-ba45-4385-bfb9-108b4283b835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13402d31-15f2-4df5-b63a-35e07d8c7ba9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1434922e-fcb8-4d2f-b6ea-2433e7f76d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ceba4d-85f8-443b-9a35-44a4c44a14c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f76e71e-fb95-4a1b-8289-01ea1b0afdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27d1060b-4dc4-4ab3-9608-228fb856aeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fea4df-4941-47f2-b470-b258c912ec61",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6108cd40-0619-4969-bf9e-6c69dabccb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3842f2c-1fed-400b-a020-1e31fcc512dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32ab54d-037c-4ab9-8c22-963c27474fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0369664e-98d1-4635-b5d3-7f3de9af72cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84574756-42c5-4a77-b84e-30f87283a6a4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d78b9f0-5769-43b8-9cc2-5b220463e1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2adae74-1358-4554-ae55-c1713326503e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fb1298-9233-41c1-b2d9-9200c49b0a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61cd73cc-e833-43fe-b30f-e686d7a53191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e47c16-dbb4-4238-b755-5c120d1b687d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8c68c4-e9a0-4183-945a-fa27530b2dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a3cf0d-dfdf-4775-a1f5-29fae0a59bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aa6dd6-b3c6-49c5-abe1-95922a3de426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba2314d-c047-44e0-a9b5-7a006ea2cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cbb5cc-28e6-45aa-ac37-2d644020d035",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8c635c-2c3c-4bdb-85c0-80a4e929f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8acaa0b2-5799-492f-9807-bd87a3cf4292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33716d2c-05e3-46cf-bcf6-5ca5c0b8b0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1122ff9-921e-4462-ae6c-b5cfdfcd3e46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e30b5d0-1d36-42c7-a924-8057ed85eb96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa607b63-bc4f-4c38-8768-8eb71fcfb7a4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d8a11b-6bbe-40cf-8779-03059fd11bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "357ca850-6dfd-40a1-a8f8-b6769d3567d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598488e0-fb54-43cb-8028-71685d80234d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53fcfff9-2efb-4efe-9e47-09fcaffdab10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dcfd575-223b-4bd5-a074-9b72b59b5d26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51b5ca95-6e7c-4a1a-ac61-94a9f079d349"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13e1db17-73e1-49a0-b235-5fdc02f42436",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "951dbcb0-117e-4ab8-8aa8-7234d584c461"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0aeb7242-d572-489c-854b-a8d9574a365d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "394af16d-0823-4cef-b321-31ab96655ef7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0efa0f3-180d-4aa7-9c2f-e2030297973a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eaeca94-f2b8-4179-8224-e42439e95843"
                }
              }
            ]
          },
          {
            "id": "bbc6b2a4-4f73-427a-b6bc-1343ae0bf052",
            "name": "Positive Testing",
            "item": [
              {
                "id": "002f07ad-c504-4169-90fb-e526de2f7d50",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "15a96335-8326-4e49-820a-6b7025f19d8c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1a079f-1400-4c06-9e65-3e7aa375a60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae23e18f-0b96-4f14-bd58-10c80c886053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1da2a38-2691-4318-bd25-d5f861ea4738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84adae0f-f66f-4809-a3a3-c0a993306d97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3864b210-4f43-4f38-a238-d334fcddcb71",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b193068-487a-4234-af74-4af8f25641a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a45b27dc-c7e4-4aad-bf24-220fe5e1c3d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7a3f915-f092-4a5b-a1ad-2eca6f2570cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71aa40bd-5f32-4a8c-82b1-f464d89188c0"
                    }
                  }
                ]
              },
              {
                "id": "4a4a9d64-ff06-4595-b239-e79e29947563",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac3ce933-f60f-4f5c-b82d-51cc64327713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb0c12cd-fc10-456c-afd1-5d50be1ac6c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fd0304e-c9f4-43a0-8708-dc7e7cd13133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "895e7aa1-4b57-43aa-8a51-bb65fc83ac8a"
                    }
                  }
                ]
              },
              {
                "id": "9acc6a5b-7e94-46a0-a6e0-dd7dd3c38b68",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3335d2b-bb7c-4d94-ac96-1ad28dac1f52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bb9b52b-e258-41e1-8e49-1f85bf12b510"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db8a6042-d38d-49ad-bd57-eed1ad7ecb90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb81a273-d472-457a-acd6-dd4311cdffdf"
                    }
                  }
                ]
              },
              {
                "id": "f359855a-5d04-49d2-89d6-4c8d96a5238b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb61b723-b882-45d4-840f-047f96d5fe86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "739a7a34-070a-46af-a136-b86d1c52f90f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c743515c-3341-47c5-99ca-1a20fcfe6d5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "796708eb-55e1-4ad2-8391-ab25adfc4bf0"
                    }
                  }
                ]
              },
              {
                "id": "6d51d08d-2597-426d-b55b-5b05f0c79817",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5180000c-ab59-4252-9498-a580973d5a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b46972cd-112a-4c51-9b41-718a19d2e0e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a920da09-ab8b-4edb-ad9d-01aef30860b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a15eb8ea-05de-4c49-855b-d3803e537997"
                    }
                  }
                ]
              },
              {
                "id": "cac5ab0a-ad0b-44e9-8ab9-e5c1e74d624f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36760d04-920a-4edd-8424-ca4339755f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2529e3aa-dc90-429e-b3ca-3beb9843f026"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36348a4b-5768-4421-97ba-2ab8a589bb74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9dbcd94-a7ab-4cc3-a1e3-66b0cb4a9bf6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fdd57217-401c-4226-aa6e-9d283809f53a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b5b0e7b-aa51-4849-9993-c9eabdb6897a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd1ebb8c-5d96-4630-a90e-d0004365a063",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8526357a-8d11-421e-a23a-1e96c0f7499b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b929cd9-7879-41fb-8e5c-9278cb689588",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b711b67d-7d87-44a3-9d1d-dd309fc93c8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "582b15d7-e8f5-4d63-9588-f1eabeae6658",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0758d91-41e3-4550-9246-6c25977725b9"
            }
          }
        ]
      },
      {
        "id": "2892954c-e8cb-4068-93cc-a724ecb75aa8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7a711328-9563-4c1f-9b80-963dd74ecd59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "102474ce-6906-40bf-8b04-c67770232ea5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e203bfec-c788-4cde-a9a0-df90c9844303",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d930dd05-60ee-4215-b4dd-a9b3b4aa1f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee542111-1d23-49fc-9b56-aebb3e5b35e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0f7d31-33ca-4e4e-bcf0-6a62aad995c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b728c0e-7659-4d44-8d30-d79fd470ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aa155e-884c-478f-90b1-b414e2777d27",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f55e25-b331-4360-b431-e2cc998c5895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f3a9e3-2df3-45ef-a7a2-9816cc0b1fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5227b432-9704-4bb2-b2a8-8db390190c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fec354-8859-408b-9a33-f4e4e78d0c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45498512-1921-4630-9b1b-293eb8eff3c6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b87353-d73b-4d8b-b487-a68a8e521cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7fc2fb-5141-4ccc-b09d-abd707443dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbb730c-1269-4411-90ba-12d2e69a3c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "109f2991-d22b-4ff9-a480-4f0f9e2323ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2d9f10-3601-49e6-b460-65ccd1687105",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122b0b25-7e34-450d-b68d-0379b91cc144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2fa955-6b93-430b-9def-06943f2e554c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa73979c-46f8-4c75-a124-a25bccd57c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f8eb82-5ea3-4139-b099-a9368e42a46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e909889b-2acb-4717-af04-d2ff7b48fc44",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f998a46d-014b-411b-8f52-0f5b947d5dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c3d9aa-6863-4d29-a856-c2cbb7d6766d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06876261-e940-419d-98d4-b580ca09b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af75c7f-ef2e-43dd-a5cb-75e970c77520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b3d4a0-b6a0-42d6-96ad-85e4ce65be4c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efee339-e9dc-48e6-81ad-d9fb45196ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a71219-adf0-45cc-87d2-be87fe0755b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38903a0e-0480-4093-bf41-74d79b6e93a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edce2b31-1017-4e48-b9e4-f75ad7f41e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a295c8-a6b1-4bdd-b56c-6a2b26635f40",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3fbf4b-9b9e-47b7-b83d-996ca180698c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914a0675-c247-43ac-941c-791ffa700073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73d8822-28d3-4b4f-bad1-3198ec6b0f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff4e58f-b9cc-43cc-9e00-6844e3272211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872e778c-307d-42f6-a30f-796fe83a6328",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c33ec2-68de-40a7-afd1-68d9a3d4e3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb86d5a-fcef-49a0-a945-484763a14e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4033440b-e385-4ebd-8212-c8391db644df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad4e714-4fe9-4452-b9fd-436a0a5b0baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b902b3cf-908f-444a-8f9b-63b6a6209e9d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d55b107-b011-4955-a3e5-cbad804ae2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96103ff8-4665-4d65-b3a4-375bbbead5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f35b23-725d-4d82-a7cc-88ca67f62a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8aa6f84-4217-40b1-ab84-1543a4e8fef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea2beec-35b7-4d7c-9148-cbe1073e6e20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697426c9-b057-4fd5-b2a6-c763eefb09fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9928866e-aad1-4fa3-8663-0fbaa9b97fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffcdaf9-1665-4b34-9029-ea2748668b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e69b77-e104-4a2f-92cd-1ee052a551cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e2affb-9753-4b33-b1bb-f2768086369f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1240517a-10a5-46b0-82ac-8200e3cbcb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde70d61-ef77-4ab1-83fe-6fcc934e7dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdbbbb9-7297-4ec1-adc9-bbedf3bb6b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed3c2b4-74de-4735-8131-77c34b0947ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe26eb-e34d-4d2f-a48b-9abfe2a35e70",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5f6ce0-f975-4214-bce8-4578ff6935bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e42b7d-5863-48a8-b163-2c0b070d31bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e249b9d9-a155-4175-92cc-3ad462b513f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cce2c2e-8a87-438a-a200-a20ac06ff621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ffcdc3-f16c-49a3-8d64-b4b74a0bbb44",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ab4a9-34ee-4f2f-9b1b-f07f48f67ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc884fe-95e1-4ad0-8eff-d89240bf3500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38b7741-8a0b-49f3-bb25-c7091bcd2209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21eace0e-4f9d-4bf6-aff5-53e55ee20c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d220c8b-61fc-4bc0-89cc-021ad1038087",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48043df7-0438-4ad8-b60b-6bb4b10e9f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa90e1c2-1bac-44fa-b02d-3fa1e9524dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6feed07-2528-46c1-b807-129d7e30ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9abcc15-c226-4c19-bd0c-8c9e8c7615e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df42fe8-74f6-4954-b2d2-de2c157e6c5c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ced689-71ab-440a-9d47-ff19d5abf47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e522b978-a758-4070-93e7-5e17f11872b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73158f3b-539e-4a88-a4be-b586f4b119eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f60ad9-c74d-4d63-9cfa-24ec9588376b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f68df2-c761-4677-a98a-5443ab0d978c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e45d4b-32c0-40a6-b667-c3084d85065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40a7bf0-a562-421c-8fe0-cbb1a19d4932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ce2252-bb9f-4279-ba35-f27b24059e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "539e5eff-1c37-41b6-ac7c-df8fd882a790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987f1306-6eba-415e-9db3-77b768e2989e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de7523c-02e9-4145-bfb4-91e4d75997ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73617b3d-9c17-41ff-acc4-a1617dd06487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cbf7f0-7626-426f-ab41-a576ae7b7ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c068ee-598b-4cac-988c-96f0a4c4a6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c304f5c-0487-48d7-8d25-56311bd218ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff670f52-cacd-4726-a90a-890335d8dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320e35ba-37bc-4ce4-8a6f-d0713d1d21f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e30678a-cc4f-4bd3-b4b6-8c0b3edd3a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e39aa03-a400-41b8-942d-788325b75794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6820e7-7e38-4532-8ef8-f0f2abdd1c5e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0102c56-1be2-4356-8714-fee74cafa33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0be2db-0cf4-4c3d-a17b-b3ea6d7c453a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1bbd35-5e6c-4768-8235-c9b66bd2bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08db7e7f-07e9-4958-adea-da3f727c2722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2ddf19-fd0e-49e5-934c-68f3ade8099f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74e3752-a464-4dfd-adbb-e577ef9d11c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bcb4c2-3b98-49f4-944c-9c969e5dbb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff4709d-9c84-4677-9583-ff1da6829fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c6bff5-b2e2-4923-9177-80de40fe1bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b2c741-40b5-4b8b-970a-b5ceeba61731",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b884be73-fd6e-442b-97a0-39415eda9e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429e70ba-dc5f-41dc-a652-5860461305f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b2218c-1cb4-4e86-972a-6bb03b1afe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9eb6aff-e2e2-485d-8d3a-34136febf171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7232ff7a-7eb5-4bd8-b38e-17d975b7af88",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce076819-4997-448d-bc11-d1017e370f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59b7468-1bf3-4ff9-8afb-f5de28293542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eda193-b10f-4393-a2d7-598b29b9feb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ace926-0065-4d62-aea0-61d77538e201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b862d3d0-b0da-4c89-9197-bb41124d0cac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6540501-f96b-4b4a-bc45-390f6de13d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7763011d-ac92-42d2-86c2-34e8d74eb0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaadc57-957f-411b-b839-a5f0f33694d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5eae72-5529-440d-9468-1aac56273a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6708916-ca1f-40ff-9cd9-bc75f9e9a609",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b85a36b-589a-4d3c-963e-a39c539462fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8ff55b-bc69-4aea-b96d-f9477afb73c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe447b3-52a8-4371-9198-3ea32972eb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa43296-56b8-4c26-b0d4-f60e41b3c128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0c8e89-1382-41cc-8413-e76726451f39",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46e4872-eec8-4949-96ae-aca59b173bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a2a111-0ce5-400d-a4e6-9e0fc0c64557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2676758d-0735-4558-b357-759c1e628215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1efbbf40-9ca7-4585-97da-307a0b60c852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb64921-d030-4e12-af4d-c545b8c54ea9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d2fff3-eef3-473c-99f9-cd3c2db51fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abc7ce2-e966-4ac8-8614-e7a307c06079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2708ba-c917-41c8-8933-78b4f71a9443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "125da583-e642-46e6-be15-4a2b1a1df8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269f3f50-9c45-4dec-b43d-f9c0dba7365f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e26f58a-9a2c-40fa-aa1f-8ae4775e9f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b36fc8-f1c1-441a-8d0c-454bdb93ea6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b1f5ce-fbd9-4629-84b0-33593864ff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d509cff-ac29-436d-81ee-3a2e718b6bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b80221-a84f-4577-8406-90cdac8176aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ddd349-78f0-459a-a425-6e0af3bd4192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ec5d17-4fa1-422f-8ac2-c89ae049a3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47dfff4-3b2a-449e-b934-f8604a89fec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c47ee7-8d9b-44a0-a3c2-b1ef3f2ff00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c25bc36-586d-47e2-b737-e3daefb43389",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1e5e42-2f4f-4605-becf-8c2b05f7b37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161d08db-1dc9-4265-84bb-182088cf79f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2074d8-f0c7-4b24-904c-069cfe581815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29f2341-f030-42af-b8da-cf26ed465bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94630e1b-f3f5-4cde-8a9f-58c1bc3314cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78097849-b167-426e-9bcf-5660b4908887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366a5474-643c-4ad9-93f1-d4297c0cbe79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f496157b-7afe-42a9-8f1c-e75d582cf815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed9e724-84b0-498c-b78f-28124f3c95a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09889f4-83e6-45b3-b57e-14dc1508d9cf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2ad3c9-1c03-478a-b14a-ff90dd2964cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f4392f-e34f-41cb-8891-bdbc51a7e5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cd4c52-9b13-4251-ad95-049bf7e5182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b26372-36bf-4e87-bdc9-d9d21c54e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9fa9b7-d23f-4655-bd2c-10ed23fb46e9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c52eb6e-ce7f-4a01-9b8f-f064f836352c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39ab3be-42b4-4a78-82e2-44136ae1e7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f670218-d341-43d6-ae00-4602b98ce7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9123a5b2-591a-4e0c-a18b-3f1b94376641"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f379362-72df-41ca-9a95-dbff65c975e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23a13c75-6692-48c6-b769-a4fcb2f8fce9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab679c5-f3e7-4592-b1df-1f8d4ad10b62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7541e5-23e0-49e2-83c0-350ec7a60c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d63c7a0-69c8-4fce-8d1b-58f9ec9e2700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3008dc4-9d0a-4dd5-b25d-d7c933c70bdb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbfd42b6-af06-43df-b80a-f4ff647a24de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75f8c2d9-67d9-4d7c-b4ee-6836bafed0f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc771122-314e-407c-a85f-973a9db44682",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70b76554-7f1f-49c1-b3c0-30a99b01d814"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0290bc0-85d1-43e3-8610-6d51ec208750",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "049eaf69-3037-4548-8cf4-84bc17cb3256"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ad96403-df14-4110-b863-f24e30096a35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "711fbbdf-f2eb-4650-8576-8c605b391228"
            }
          }
        ]
      },
      {
        "id": "99eb46e5-0e26-499c-98da-1e310cb51eb3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "431263ed-645e-4ab4-a7a1-0f72f29e9014",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38942da3-1eb2-4246-8b91-94bba872542c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "693b53d0-b70b-4820-a0eb-84620a49a867",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3b1511-a96a-449c-82e0-15444112b2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01535c1-8e97-4f10-9ffb-d8234a090c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e61999-4103-45f7-a611-09e6b40bdbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0321d547-9b0f-4ebf-936d-8b7871b941f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99363310-08eb-439d-9105-0378db97105e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887edcff-0f4f-40bc-a043-674c06ceaa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda7a510-07db-4efc-8282-4c1b33b850b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bf2cba-343e-4c92-aa2a-43a74dad1b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47588db-d6b5-405f-9e38-35e2facc6898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0817bbef-9b6b-480d-8186-8ec690b84e8a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ba5a01-af80-492c-9a4a-884c70336e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edd0210-2ca4-40ca-ba60-de0657a616fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f85f15b-c174-4c5c-bf58-f142a0dcd1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebbe602-0ae1-4e87-8ac2-0cc77a02170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7078a228-3234-44f0-9c4b-90e4fc4380f1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2b0878-496a-4c46-8357-694a29ab20a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b2aabe-94c4-432c-8213-e0afccf3abe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45852645-6db9-4b08-85d6-8d46aa20d097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80b4f701-b5c5-4fc5-8ac4-83dbfc23ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8830ac66-9019-4114-8771-b4f1adcecc1c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c779c0b-b3ae-4ef4-b891-42e28afbbc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945790a5-9296-4e1e-a8d8-c19296816752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716453db-5ebc-488a-940b-6f4912421013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "607499c9-3edc-4f24-b884-7d4af1b7979d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c23a97-39c5-4b0b-b127-2a12a1b94dca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e08e883-fa43-41b2-b042-f849e6bec296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53899674-695f-49b3-b08d-c08b45346839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c922eb-d409-42cd-b8f1-65fce7cb3d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4496a9ca-662f-4ef7-bf04-ee48ee75543c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935acbe5-10a6-44b6-b97a-c4c7fd5ca2d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366e266b-8796-46de-8acf-61371cb17dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d991b4-ac73-41e4-a0c5-391cbf5f4f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06d7372-3c1a-42bf-b954-15b14eef9233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "94e91b05-7b0a-4d10-b720-c1d887bb171b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177bc28c-6005-430f-9285-3799e65945a0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ffb9ae-6922-41f3-8a25-d4993d03b613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960ae6db-1938-4de1-b91f-46b8aac97402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9f3c75-c7a4-4fe9-a02a-eec725bb870c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "233bf510-5130-4a42-864b-2ead786bbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc860bf-b4ea-426c-a33c-cf4bf1535808",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aa095c-3fbb-497c-9436-fabdba16aa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1259a91-00df-4f75-81f1-fad434ddde86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761bdbc7-7f54-4ce9-8887-39c0fec6ff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9716d258-e6b2-495b-bd63-3695808ab81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e230d-1f35-4ead-91d9-aec4945784e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0560a0ff-8cf1-44fa-b130-70e406aa9dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bffaf2b-6498-47da-b7a2-4f4042928ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54626829-e89a-4991-baa6-875b59536d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc86ed41-4543-4289-8886-670f7ea27f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b68b772-100a-48b8-ac55-96318731203f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f387e03-29b0-4028-8347-b9e002453a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ab5481-5523-4221-affa-f68f1b72ec7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d62fcf-07e3-414d-8e08-a7c05691d595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e50f28bb-c801-40d3-89ec-6d9db6452159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cadb51c-b6da-41f8-86b3-c839b9a96463",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486f0d94-2d72-4ccc-bb04-ea2b6812a42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ab6c7a-3abb-4d87-a762-9e05065bd819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decab64a-9136-4aa4-88bd-52c03f66a5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6326559-b357-4a75-b1a6-00ac16ddf683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb2e4dd-fca0-451d-a0f8-4785f48b9054",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea332f5-58ee-4b70-b0a6-1571a9a183b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2feb408c-79fc-4151-a66f-a513a73c2bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb95b9b-2632-49fb-b93c-75953b7b85da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a801efae-9ec7-4912-ac47-7d1628018a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1a5f06-2889-469d-a106-da6f934a17bf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8a2cbf-84cf-47a1-b162-f71c2302edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce801b6-1608-440b-8a55-5ea6aa927bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8185d5-419c-4ffc-8f77-0da7629bd949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7110e852-0968-407e-967d-7cf14e4925a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66b10b0-f6af-4f18-a159-a5c9b8b2eb82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b282ecff-05bf-4921-baed-f5f811972433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ebd85d-35e7-4890-8bee-5f950084acdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf556406-62d0-4732-860b-57f82151e774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "412aeb6a-88f1-49ed-becc-427e7f5b3554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f000af2-f691-4cf5-b5c4-9563dc8cbd38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bf1f89-d266-4b73-bb76-969b1256ee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250b096c-dbb8-4fc6-a126-a164011dd835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec3e95d-c8a5-4a8a-8a22-5ec6945290fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a23c32-dd99-4faf-9043-e95bf8385e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b1f750-9cf2-45be-b5c6-4a8e64bb7281",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419c6512-f77f-48dc-9e35-4e26baaa3995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f522e9-bcbe-46f4-bc40-2eaa7492df44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5f3aa6-fc78-4cd8-a039-3ef92281bc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6185e6e9-be6e-440a-a156-16dbac428d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd299e9-6761-464a-9290-22399d7b79f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b0c501-1388-4f0f-9b57-325240dbc9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa2d2b6-d763-48bb-abee-b2bcc8c4c4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9939a51-487a-45ad-b3e8-ba48693f6b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64f05c4f-bd53-4876-940c-7af7390ae12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c94db6c-e1b8-436d-9a24-f9395b8b456b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc80cd24-8f97-4524-99df-dc1ed50ecef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ebeecf-fd5b-4a0a-b84c-ceed0cea148f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e562fd-d6ac-4232-be4a-ea28bec157e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9785481-a1e7-4458-b637-e6cfa092b51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e265d50-a763-4905-906e-eab05715c938",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57ad3c6-612c-4c2a-bb33-50f75de6964d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894ce435-8a08-4c6a-bbe9-b4262d384b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d752893a-e7b2-41b7-90d8-fbfdae1c8d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c66304-2e6b-4fab-a9ec-4fd870fe9611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9a1e11-3bc7-4397-9fd3-d26443eb3ee7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb86efd-b536-4664-8c59-85ef743a4789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95175d9a-7b7b-448e-b28d-9a527cafab9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc64b02-6f9a-4cec-bfc0-4ab813d44a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d40cd156-4ad3-46d2-9e72-a047e048c18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0eddb6-fa04-4490-84d7-5990cb037aa3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911ce2a1-ec71-47ff-931e-accd6980f16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1d87e1-d56b-4f18-b71b-0d9324811be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0789a609-dc6c-4ac6-ab49-b2e983e40114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c31af6a-7515-4614-9dd3-c18d810aca85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68994a06-0400-4879-b445-76e93084de01",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ba4875-1f2b-4561-86f3-7d229f3171f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7129194-7c3c-434b-90ed-375d0f08a431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccb9977-b165-4cce-b09a-356c85c04971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bf5b17-7013-4cad-a849-2501adff6557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e297ee82-4f29-46e7-949f-a5ed9193a168",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ba2f2d-b494-4414-87ab-efb39fd13654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b335f9-a90b-4bfb-bbfe-f5e6399414c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d171fe1-f87b-4487-bd8f-e04468e037a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7234f00-fbec-4c56-a781-3b795cf9d21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942a2208-1552-4c30-8d22-8c9640deec31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ba3d6d-7a81-421d-bc33-90574990f1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e886ff-0869-4993-bbf9-c63d2e09ed63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8965b3-9f6c-4304-964d-5331ac449f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094b1163-7fe4-453b-a363-4bc09bfdd06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef32b6f8-0d5b-45bd-862a-971fad99e10b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259fda23-be1f-44f0-8082-5f1f1e9a6990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f971d53-8149-4647-990a-80b7b0828f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37484d2-30eb-4d3a-98c3-393be6195c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb0a952-1155-4275-bdeb-cca113c1718f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a167cf-aa07-4ef8-bec1-37a3c6b0a552",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec6d954-48d6-4d4a-ad1a-45a1d397c789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7698c31a-f44a-41ce-a863-72c000a82549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b290052a-3869-4631-a9ba-92b531ec94a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98ad7cf1-abdc-4a36-aed0-922b28c82452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aa2b51-260f-4a8a-97e8-3b40547994c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c21ab61-f3f0-4b2d-9415-41c655961f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52a2c1d-90bf-4ac6-8e9b-61eaab0334c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23db48ec-9ff1-4477-9e95-2ff5607a35ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d772deae-470a-4a2e-9776-cc7ffeca01f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e6da71-1d09-4e12-9443-09fdc772f509",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03631171-0fdb-4944-b645-0f9dc5658eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bea60aa-b342-4292-8f09-d925a151ddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faabe83-4525-446c-a68e-f333269fdb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41af2d41-2c6f-41c1-ac61-c9da613799fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487bdf58-57f1-40f2-8dce-ae3ad379eab8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c1ec04-9031-499d-8575-404bf1782781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af9b62b-dd3c-492e-854d-4446b8c11b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1055c5b7-6425-46a2-9502-0fbefd80d386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b97120-8b73-4219-a82e-19d60a7f0752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9474dd8-86b2-495a-af22-73aadf2e1451",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b30aea1-6ae1-4571-bcc3-c78e14e3aa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438a622c-b3af-473a-b1b4-590a98e38804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc564303-8385-49f5-b29e-1ce57538ab40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2973325b-72ac-4b5c-be8d-42c6d1853e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7535fa-ace6-437a-bfd1-7e6a3529a25a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c96490-0abf-4b23-b5c0-f35ebaee52dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953e2385-939e-45e2-b988-7189087e58ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a223fbb4-5df1-4a63-a971-ef594bf4830c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2e41cd-7011-40ac-9393-7ec7defc0807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8430c423-7fe9-4178-acba-e07af21dcabb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df37f15e-c333-4444-8d56-f5ea203e41ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504a6ec3-8610-4c84-9e54-11d8640f2f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb2c831-ad4d-457e-a909-70c0c5908a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda4717b-40e3-4ded-a8f9-67dc65d48802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5ac982-c110-46d9-8bae-17a500773a9a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955059ff-1598-463f-ad03-2dea2723ab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d20a059-2808-4a30-a25c-831ff2ef81dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f64898b-89e8-4dcc-a456-88f5fa456288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c2247c-4572-4f82-8cff-92942f11a44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9463be37-fd62-4ec5-a3b0-50e0e5235185",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479e7617-bdc5-4c5e-949a-db97063f27a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2722da-7982-437d-8643-f59650eaec62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbd25c2-ad69-4772-b22f-b99e0b39363f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08fc5f18-9761-40a4-b6ea-8741ca66919d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032db8e3-53a5-433e-ac1c-90f0ae8c3930",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fa8986-c4e1-4da1-b3e8-2db499cf1ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea95ece7-6e09-4ce3-95c4-4ea7b81d1dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfb3a76-5972-4146-ad2a-b55ef1d818b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c278306b-1f14-4776-b2a2-2b87684763aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affaf458-26fa-455f-abb6-2d3274ea3c84",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdc3d10-8af4-4b03-bd5d-a791be1fe27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779a7d33-8b78-4bdf-a7ff-7c0b29f45c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee6c4f0-14e0-420a-9f48-d7271a804878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a04ce2ae-6509-41b2-a7e5-69445913c336"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d4e81ae-c366-4031-9169-332bc3a1e7e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b9eaa1f-3279-457d-9bd2-4241481d3e4c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84d225b-d6c0-4a08-a5e2-9c29b422bdb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb69218-66db-4061-a258-4e22c031ab0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eebbd10-fe6a-4054-b46d-c5f544646e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c953b46c-6412-4b02-8d93-2d6417512d42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92df75f8-9bf1-48a8-b07b-a3f87dfe82c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f0714c-c604-40b5-a290-8edf16af18c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea1a07b2-efc7-4198-ac7c-6ee629cb9539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1327a0c1-de07-47a0-bf99-5bf7e3dc73d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5aaece51-6ba6-4c9f-a36c-8a8d8f6785cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f40ef6fc-8ee9-44f4-aedf-1b2f887dc4b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5643163e-01aa-464f-b442-9874a6aaf0a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cf5e7e1-dc38-4904-98c7-a84af36181c1"
            }
          }
        ]
      },
      {
        "id": "faea3c5f-84cc-4825-b051-ea229145f7fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c503f172-29a5-4849-96ef-23b68e31e74f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc932fe5-3bbb-4726-ae06-f9e48e6249df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e91f87e4-dfe3-4522-9bf8-fdfa02dd211d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863f304c-2cae-4e02-8fa7-13e23be8bc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba26c48-e7a1-4102-8b2a-a177f14a394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f3d9a6-5e1a-41ca-8057-e18cbc1dd29d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096fb427-cf05-427f-9b43-09a16f40cad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446d7b04-a350-4e04-8c5b-600068d67e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e337256d-e196-49a2-8656-772190804bba",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da13d5b3-29e6-4037-9f34-580103c4c430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7a2deb-c192-4e09-b379-eeeb02ad07d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e6990c-e2d2-4f60-afb5-116e1033f310",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382734b1-a7a3-4ed2-ac6e-2e07f76053dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3402e52-5bab-41e4-9962-188de7d6817d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d4c95e-1cd6-4391-9450-79dce074d3d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71f40f2-9b11-41d1-a74b-2c8cebfbcdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fedd518-ed96-40ec-a898-dcf45c590987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f60cc-370a-4b9b-8fe1-3dd1f421c815",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29978ac-c21c-4eaa-9aed-59624de8932e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c1b0dd-ab17-45bb-a5fe-e4d2c0b4bbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadef80f-0f91-432b-b0a4-fee2c22d2ed7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4915bcc-51fb-48c2-97d0-c0140e385938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9718c2-15e8-4cba-9523-4f917f7f990c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbe8620-6791-496f-8265-60d0a1b6e060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6276a5-9c43-4008-a21d-f66db6eca021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070eac33-e6bf-4ec6-8e16-ab912f716e1f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c4b52a-57aa-4418-b7fc-1c7c4de4603b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af18d29-5b6d-4ce3-bbde-2699c7186504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9f1dca-b145-4496-b9ce-47cdecc1d5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5587fef-2600-47dc-9bb0-001aea500d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f5cb8e-bd20-404b-a191-71de93e26b15",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5deb15-88ef-4a3e-a528-f45080bd44df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf96c0d-e04e-4e0e-aadf-fe2132b77193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc277569-2c9a-4dd8-9bc3-27449e58edb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65a7d83-b6ac-42d4-80da-4a07e078941f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24038c4f-1c72-44a5-833a-b6f9601635e6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c72115-d6bf-4ece-87d4-38cb63221336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938cd928-5d6e-427a-bb4e-55c3a4504925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d46ff5-74c0-4f5f-9900-decd73aeb45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65595a0e-6956-46a4-9fdb-ceb66fa4952b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae9ec26-f0de-4492-a4a1-bccdd0216c5c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b89381-f84e-4162-b4c8-0aa9ce43f746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c26c0b5-ba16-442a-acc5-12d1afb1ee84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf644d48-b2f2-4621-8af4-f6986690d4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85882c69-235e-465e-b675-73783be80e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f556f758-0fcb-4a3e-88cd-38dfac773906",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c30395-3b2b-499c-ac92-826ddc1f507d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679bdace-7440-46e3-ac50-f62c95d12504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e15fa-6cb6-47c1-90ad-cb6b6dbd48b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5158b4-a36f-40c8-beb7-4c52e7f83eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046fb959-ecfb-4127-8553-d93741653138",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d3ef50-74f1-4091-a958-efca7225a382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5435587d-8f25-4d51-9710-44f9ddcbd971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde81303-5133-49a9-846b-b7deb90fc79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965c2db6-47f5-4b94-abeb-2882fcb8cd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb0773-73c3-4555-880e-c9f3d9b212dc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c725ecd-9de1-4098-821c-ba717947993a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9430139f-30f9-4c30-91b6-2e538380c9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcab423-75b3-4e72-b835-0aa256f0ba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa6a178-9ef9-4a11-b618-414d91024e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95e2053-625b-4790-acb4-38e585816f63",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce8f2f9-d3c5-42b0-ae11-7af06e164edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b5e21b-9a10-41d9-8de5-33f387534e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5debd26-e0e1-4542-9def-c22f892cfcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47659022-c3c5-4a42-8159-9196ed665156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f881510d-d0d7-4c43-afc7-82192aa63f5d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa4dfbe-5678-4bc2-b314-6a195741ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb77ad24-9c91-4f29-ae88-c32fbf5ee70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef50db4-7b1e-40ea-9110-427f5f69a016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6761679d-c92f-4bd7-a1a7-efeb7a5e37dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f184ec-62c0-4da4-91ff-64af99ee8aa3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf8bf0f-b766-4349-b6c7-6e072943113a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6e08dd-39d2-4f93-895c-1b26d4eeaf75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc584bf-ff2b-4bd7-b9dc-a2dba6fbd92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbb8e50-cac9-4bee-b4ef-26ac7abe1d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79083271-a919-4a7a-b7dd-42ad886d4282",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8694f1-4066-4656-9185-02e357d6a30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c3eaa1-6ab5-4460-b054-f74f688fb309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e1b01e-74c3-4ce3-8376-551bfbd7550c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8094b8a9-9ac0-4da1-9568-5c55ec13b0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bbf683-2576-4263-a857-103874967b9d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6618a8af-a373-4fd9-b7f6-49d735bbb45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec39de90-fe36-4134-9414-01c1c8c343a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef3372f-9cd8-41a4-bfc2-7d5ec5965615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff1c2b0-08d3-43b9-a12e-33429e21f956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe88b32e-c1b7-409b-9857-ff0c2e1de3c0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65319ed7-290c-4e6f-b6e3-54bf11e61b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81cb8e4-a167-4a90-ba28-28fc10b845b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92e062b-e9bb-47f1-9823-7f7580c0d8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d8db33-dafb-4bb5-9205-ac82c65a263e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a53fa4-b631-474a-afce-238380a855af",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9a6642-31a6-4ab2-b599-757c1a427b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bb3a96-597b-4bdd-a911-54179314152d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2060866-e5b3-4a62-8e95-d0e41f19fbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89688719-8c1f-4c02-a23a-f4d67a8c15b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1707f57f-cdbd-4b65-b2ad-21d95746a4ee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aa1e9e-11d4-44e9-be7e-f4682b2b0b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e77afa9-b8c8-4eb2-b03b-794bc4607cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68faee2c-fb10-4fbd-8388-80b304e17684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa202e7-d049-455d-98a1-1c82b8a9e060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b85cdf-dd2b-40bb-8d31-1a028f5bb702",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a81ed94-49c2-4c63-9ce8-95f2791a2de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2adef45-fdfe-4eda-aa66-ff2686f1bb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f101e2-bbd0-4b5f-85d3-8e26bfef5150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d25d70-dd37-42fa-8caf-55514574cb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827ea6a4-fde3-4fed-a28e-fe1b9e889e53",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9b20f-571f-40d2-92fb-9e99c39adb2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44279a77-9728-4bda-bf89-84c97e9d6984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d5a74d-1f0e-4147-af35-4f2573fa9331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578410c8-b30e-4f65-95f5-ebdebd8c1984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14635a2-6136-42e6-8c32-18717da2b93d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ae1826-52aa-4f4b-85cd-6452b0a8a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90045259-723f-4109-ab51-75b7062eada4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e16c54f-60fb-4eeb-9b6c-033c88ac8f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a70c96c-59e6-4d35-965a-08899567abe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35349519-070d-4534-bccc-08386297ad22",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b836016-3b34-44cd-9106-f0daae71666e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "949ebeee-c95e-4821-bd3b-058287272ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9776ac5-32b2-4ce6-a847-9adde20af0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095d00d9-1db5-43b0-9a17-6107f4bd9cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2f720c-8619-46f7-9c15-f5f20b3f465c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e47cbe5-9875-4409-ab62-96104fa6e201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260977d2-0844-4a3d-8b69-2fce84345e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc3abbd-6443-477a-9d72-34c158953d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310d04bc-3603-48cb-b9ab-624e130abb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e659c0a3-2db5-4170-83dd-cd80f0a3e125",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c2bd77-10a6-49ac-a22d-0ddbe042f622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6b6d1c-35d6-429e-a6c4-b4fbe3bfdf45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf5ad25-9b2d-4f07-8a3f-6338d7a65e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9288509-b7cd-4946-8d80-5f3a97df5124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3e89eb-22a0-4dec-990c-731b18a87f92",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9c603b-731f-4802-9249-dadc45eb5c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4184eefd-4dee-40d1-ac13-b679557ff5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e022bd0f-f6d6-403a-874d-f5d2a8a82c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec94689-27d9-49d9-89b2-1380acbf5765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e9fff9-9d74-44f0-b56d-ec270ad4eceb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacef178-096b-4cb2-b8e6-1bf65233bb05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f5d437-ee1e-4d94-abd5-8df3ded38e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7e895e-2e8c-499f-9d47-0f549a7df499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5539e5b6-f148-44b0-af14-0a7e81ce8a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84af9c14-4b45-43aa-ac70-09a39f78ee4a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b5a9fa-5304-47ba-842e-ce9ba085201c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "120c16a5-ee4e-453e-9ce0-79c30f75f1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d82c6c9-04fc-4ee6-8650-578c4fd4eaf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e83ccef-ae81-4cf7-9d76-71df7c372bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894dcaab-31cd-459e-b4c8-c1d0dfea0ff6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fb4532-b12b-4ed8-920f-506c9e3364d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f44cee06-19a9-4f87-a310-e062f713a77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f033070-dd96-4c46-b004-45b68aac89d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b88720-12d9-48bc-bf99-a382187ef8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707997c4-f488-4aa8-8e9a-07d3f696029f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c402b158-a6fb-4f0a-af9b-be72713fcec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2293e753-8f51-42c5-9430-e013f1c5a7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdb7074-2f8d-4691-a065-a307cbed732f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8413f0-198c-4986-8b91-f6738853f7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581aa303-96f1-4b17-a7e7-a8239d76245a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e7ad01-8ec9-4d31-98dc-295d097575f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5da94e-2670-4de1-83bd-e928432b1670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dd1473-cb99-46a2-b425-41fb6545be01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce21468-bd54-428f-825f-e06f90c4074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d30524e-a14e-4590-b6ea-9e4f02c65ca4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36662833-5e88-4f90-b4d1-ed05e24f0f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1640a0b0-9226-4c3b-ac9c-862f9f3addb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20103d1a-b7c6-40a4-afe3-4cae0ef997bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514aa19b-46d9-433e-8bbd-1b9d993e1afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84d89bc-af7f-436a-ab2b-d739a23e7171",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef0a6b-8ae9-4485-99dd-a55bb8aaa4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc14e485-c986-4bd8-a81e-03141f37e544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e01a2d-33d3-4103-99b3-92b8aba59651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54e54e4-46cc-4055-8237-526dcc208ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f142336-673c-4c23-a81a-6a8541f55d7b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd7136b-9625-4d73-89c4-abf4b71ed6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb51b3c4-59f2-4c08-8798-6983a331f65e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa64ab5-69a1-48e7-b7be-5d2c7732dd0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8824b1b2-06d3-429d-b5a3-b6d74a4d4a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d786c4-d208-4488-99e4-b61b7f4ab0b2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dbd1c6-ac22-4d0e-be09-a023d0531a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8262b6e-1262-4ee0-bbe0-b1b18635be6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a2c622-1e89-453b-9596-affc6c75865e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5b16a4-1854-4153-9b9a-549054a0a3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7da0c40-6233-4ad7-ad16-79ec1ed0f869",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d139a473-5119-4b21-aad1-41683c48d520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbd9246-48b0-494b-a997-c9b6e49a02c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f466878-b52f-4627-889b-4c365be908a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de5876c-bc9c-4159-9e45-64eb28c15b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4f1f6d-e0f7-469b-87c9-220e09733d34",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a411a297-f795-4d21-b597-d298f29003fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a3f23d-800b-4e3a-8d71-b77c0b5d12e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7c660c-26a9-4feb-9a9e-ce122b644da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc72328a-59f3-4854-bd41-c52e325c4277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a325d8-d12c-4c81-b6da-ace00e062925",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d14c155-9ca2-4d9f-88db-be1c928d2856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608bb477-f081-4d8f-826e-a594293697f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e17184-00a8-4fcd-83fb-5e5cc23f8fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3302a30b-4d1f-4ec5-8825-05583327660f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40560e7c-6d7f-443f-8765-1c9e18978399",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f028df-8549-4831-94fc-2c298f477d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18331403-86cc-43b4-8341-dd78e7c5dbe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ebf6d0-61b9-49a7-ae2f-3ddece334ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66495c1c-5ef3-4888-ba82-06cf5236787b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ce5fcb-08d0-4e8a-8776-9b4dbea1601d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097f5fed-e066-4a27-91ef-e60e62a5a4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f79c72-f7f2-488c-93d9-24edbad47dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfab91ee-bddf-464b-8551-33a4263988fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789195b5-f94b-4b7b-8fdf-85201672959b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb642d2f-14dc-4e5b-8957-4fcb08e56a7a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c27973-5a59-4d26-867b-eec0eb700482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdb9f6e-ee8c-44f0-922a-c22ab510c017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10f1026-0dcb-46a9-affe-47f989867f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28be97dd-e31f-4104-918e-c84a4501a4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d28aa55-a0f2-41c6-9070-43d39269f5d2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a3b9c8-82f6-474e-83d1-ff74146b5f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788bef6c-eba3-4fbf-a516-1a2388bc60cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab2ddb4-9aca-465e-9794-f57e3b3a63a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49612996-3bd1-4640-8926-59b8e2cc4a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5381d3b2-08ae-442e-a1c3-0f56430f9742",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1164aeb3-e171-4b62-8c04-974b89a539c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41d4ca0-4857-45d6-902a-49807707369d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf817f5-8f4e-4427-81ef-9e772833f9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710d9a3c-f2c0-4605-a7b0-dc9360c63ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d25491d-02e8-4b86-9efb-13cd649bf583",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8e27f4-aa5f-4b34-95d1-4573874d1d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09301545-e463-4e76-a67f-479b204cf932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f411b19e-3bb0-4f3a-81b2-32caf3129a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f5f0a9-1596-45df-835e-1764e6ac9dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28c63d4-56be-4263-bf23-e527ae6dea6b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b138a45d-0bec-420f-a044-5dd6a18dba45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d5725d-58d6-4639-9207-0c41044e1b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0681ca97-cfd8-40c1-a7c4-ae6e8b726481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa18a4f-1acb-4c7e-9b8f-eec47cbd5cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820fcc47-ad02-4c7c-a6aa-5b14309252b0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439c986-4b8c-4f36-8529-45a128e8e791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6981752c-545b-4177-b8e7-a9b9aca01233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0309aab-52b3-4626-b831-542096653ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09d8b17-becf-4db6-8076-22665d6fe3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9415546d-1579-44f5-9b35-9af08ac2a5ea",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9147680b-18e9-49b6-915a-39e3e209c171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fdc413-5d49-4363-8cd6-9991733a5672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7246145f-0ecf-4594-8e15-410c80184db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f0853f-ad61-4e34-bc5b-fc4c75b848cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a817e882-b118-410f-a786-9a6d6d305ef4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2237fd-e241-44bd-8f3f-c8ccff4c513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4350ef45-b6ca-41c2-8edd-c17f8f246637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d0426d-1d70-48d9-a50a-9b284be499ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9099738f-6cb0-4214-b5af-2d302612ca98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2141cd-da30-448b-891f-0bb5cb7e3828",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3597699-e8b8-45cb-af72-f60ab5ca0d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c27e3f8-d46f-4369-956b-b0b0d37c2a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f07589f-f42f-475a-a1b7-41f48826203d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae0fffe-447d-46cc-86ea-7a0a806e74f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ca01a7-ca6d-412c-a66e-c39cfb9966b3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04c3049-2eed-41f1-8e89-2be2e81973e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7180b8a-c082-4276-b648-dd86b941b541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b6b748-2e99-413e-8914-352842868da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787330c2-3fab-4825-8af7-4e5b140ea4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8521374c-f05f-43bb-b2f6-0e007059d93b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e200d1-519f-4ee8-863b-1c5e75812722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c951c0-a72a-4b55-a470-a3beb6af6abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde82727-9b62-4aaa-a6d4-a381ce09ab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895b458f-3ad7-48f0-9132-499ddecfc5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b913ced7-81d5-402f-98e5-408c2296d703",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f14d1b-64ce-4e56-8bb6-c86106394e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985b8b96-6492-44b0-a3ce-b48accbc0761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6d9d2c-01a1-447c-9633-122a1f9169fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bb7a95-735b-4948-ab70-71e863e957a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa111b7-d4f8-4f24-9137-a95af7e8d4b0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f75d054-dd78-4fe0-8638-934a482fca13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e984539e-0458-4ebe-b324-c976b05b6691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2087097f-3cc6-4f0a-8e77-daf998a7d78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88010f8d-855f-4f46-b6cc-b79f38ebe6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174f66a4-e92c-403d-be80-fc583583175b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f57e926-cd85-47da-97f1-68b6de8b610f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac265491-501d-44ba-9d3f-68ca27de1fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544214cd-bb64-420f-b9c9-5375f83837ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ea375c-e4f7-468f-9eca-57368bc704d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6c1657-214b-4782-b521-8c0669e50d5a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3137a1-2335-433a-b884-58fcd89a4d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c6008c-d24c-4823-ba78-23d4d5c10e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df8f5c9-bedf-4ac0-9fb7-703dd669fd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6247573-a58c-4162-aa78-5a9e02bc58ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b3feee-cc44-4caf-9be9-b6dfa8e0ccee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca644596-37c0-4147-8da9-6e029781e5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb968d1-84ee-4ee6-aa1b-09c36a4a3884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0542a078-c3e0-4ae4-a89e-bf7f6486e868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bcad62-21b2-4449-a20c-98d35e2a74cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d4ad01-933c-4e10-8e67-80729f803bba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40b1564-7ca6-4621-a460-33c3d7cd927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8aaff09-b51c-4dbd-8801-b3e2d0e1d8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143f45f2-c7e1-485e-aa6b-8cf457e624a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfccacd-94cd-4dca-9867-6d3d6c29f4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bb0657-66b4-4c0f-a6a7-bfeec777d7b7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65416cd3-15b5-45b2-a879-876be58acbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c932c298-88db-4327-98ae-f6d7e5a8fe51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad847ef8-b943-420d-af31-b5308de3ea11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fe7bea-f9b8-4dea-a955-d2c1094b3be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc6577e-ab3e-44d3-8042-3d9c30a9b1e2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89d5972-8a15-4c62-87d5-bbd398181eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186fd16d-7233-4776-a88e-d476994dfa1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44d8b2d-5257-4b47-ac03-9fc57c67af77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062e57e1-42e3-4ce8-8b88-a3508c77b7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ba66c8-eb41-41a6-ac02-bb3f9b667f81",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ed016d-b14e-44a5-8ffe-ca57299e1cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcac080-3032-4415-9812-19d280432a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ac1a46-e42a-4388-9609-b4c2c2d1f441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd49f0c5-5bd6-49ad-ae68-13c0a262a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b129b7be-a167-41df-901f-02f05008fca4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeb3a25-4e93-47da-bb88-107467eeb4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be094ff8-11ee-48d7-8c3a-1b7cfedb9e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a4d14-7259-4929-bfdf-97d00ff0578a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fa25d9-4c4d-4f84-a5dc-d5f2e6ffd441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d5b92c-006c-4053-b041-cbb200569407",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a55402c-ef8c-4dbe-9030-8f270d56ae3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b150a6a-40e8-4706-9e4d-a02ddbb2fc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540adb5c-64d4-442b-9175-fbd7b93ba913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4aa6ec-3662-4ee4-a8ec-e1e79b728bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fefc79a-9050-4cb2-b414-bc2c8e6a8e37",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531efcd2-1cb9-4254-9376-fd57146e2432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64addba-aec2-443a-ae51-f34d1c079c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33809f75-0a36-44fe-a778-93f58b70d93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0a14c6-fc9c-4cca-92fa-75071d6a8a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e00bdf-df01-4328-9082-e3f250188e64",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c590f433-2a84-48b4-b4d2-f6b2f14335ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f134b27-d775-45d4-8099-88cf5b8b1c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fed25d-bfce-4311-b3f2-cf2300cc4a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95ae553-b960-4a18-906a-58f4df6c9a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55076f32-3e5a-4b46-8475-7b40ce1d49a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3a575f-d422-44a5-a678-6b614f4e28c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a71249-cd67-4bcf-80aa-c7e78f2ff702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3bca3e-0030-478f-bdfe-0234b94bc54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d3959c-5716-4e95-94bc-2ccd9eb81495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6c736f-b634-4e15-9c11-9af007bfe03b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc66388-2688-4588-a750-440f4a63b881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c67270-de84-4acd-830d-6eea09b16801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7f7acb-e5a3-466e-8a4b-85817475fd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6805f7d0-14ed-41a3-b0a0-d1ed2614f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88848e2c-d76a-4a9c-96de-f58e961a0c30",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52995732-a717-440f-b4b9-93e525057143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2005dc6-feba-4540-bcce-489e41175998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282f2b4c-8797-432f-89b2-91e0e20db205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3628602-95ad-46a8-9e4f-fdf860f0cddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec19cc8d-c22a-4417-ac9f-81266b197df8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adfbd94-7a50-474d-ab47-5b437cb31602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9519810c-fc5c-4e4f-a9f9-deb53a6180f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515b50ab-f656-4f73-9870-931fb329058b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edb7e40-47fc-4661-a5a4-a7516f5d45f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca76886-b64c-4eba-bc4a-d26f4fe5d4f8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f825536b-e7ae-40c8-ab69-23fb835de98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1788a272-8840-4682-aead-e063c73ff749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f829fc-94bc-488e-877c-8884a41927b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10997447-c91d-4fae-80a8-735d866b78c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb043861-88f4-48a0-b9b2-df6d94876f62",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e07c395-e011-4eb1-8874-057854304f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4786ac0-05fd-460a-8e22-635d3da57082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e25cc78-440d-45b0-99a8-2e617330b649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1d1af8-5b17-4307-bc2a-5d8d544e4fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2ad81a-cb73-4d21-a00b-439250abc5b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d505c942-d0b4-4537-a438-ca6640257a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac6d50c-776c-4c7b-bab9-3f1d92ae7968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce144d6-d041-4a02-86da-2120bf30d254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d76e796-b574-46b7-93d8-f017b96cecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa37a95-2616-4811-9d3a-555106edcc1b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c01d38-07ef-4601-ad2e-f42aeaa12dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aef5b76-4a13-43bb-91ae-89ce732694cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e284096f-09f1-46cf-8420-aa829164fbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5e3e6c-b961-4402-afc9-f6ed2c5a835c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f03770-e068-457b-bb3a-4956eb52a0cd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50f07fc-605f-4a82-9d46-38352e5450e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17732634-cec8-4d0c-a61a-fff7508e23ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1246af3e-54c6-4f7f-8ecd-df415c056cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e46fa57-6b7c-4650-889f-b25975ea852c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d996cde-d416-4130-ae7c-bda0bac15c40",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ca14d1-cab3-4be9-8ff3-cdca659547c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7dd4c7b-c78c-4eda-a918-f8201d30653a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3da09a-6103-4f7f-ae1b-39245cf594d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925d3ca9-4456-4f44-b0df-0ff2e54bdc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0634c748-c011-422d-a58e-6287367d243e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d54a3a-ac3f-4459-b51d-7b641c986812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b54fad7-0358-46d9-a913-14b27fc326fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c153c4-345d-435a-9568-891e9668c27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc682035-e301-4b20-aa0d-25b9854b8165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c955390-10f4-43d5-8e2b-ac68356484aa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73448f48-76b0-4c13-8cd4-03cbe9e1cdf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce64d2f-f40a-423d-be8f-44c0a6c49223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ba64d2-8ded-4fed-9ebb-3bd357cc3ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fc6dde-a541-4fc5-9445-7a8333fb5b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d68ff6-06a1-4942-bda1-383cfdea61af",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4826b0db-290c-4d4e-b5b5-4af84307b813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d67006-6d7f-403c-9494-0bf5ffb81db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6ec123-aeac-4b63-808c-4b4de21e137c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfbd4a37-5d40-424e-a023-b9f25d6eeb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d857d639-f0d2-49e6-b7f3-b3af07251797",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00087f7-00d1-4508-813b-d0abc5cf684b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d902533-ef63-4c17-9481-4a1e2cbbc350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43917c8-596a-40d0-a43d-fb7dcdd85698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5634fd97-6b13-4d95-98be-3ca28bb07d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057a51c8-eea4-4e7b-b679-013a483ef63c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e25797-b4b8-4042-822c-b39e7f2f3eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3248b4c4-e7e4-4743-b50e-e03ccafa5c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c2f605-be46-4c0e-b8a0-0d791d765487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5e988f-d9aa-4202-b932-c222648d7ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2296ff6-0fae-4114-bf78-802a72e9e19a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86466a2d-3721-41dd-a71d-c6bea67c7730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef000ca-6ac3-4d53-8d08-2ca1fbde6a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae03095-a8fa-46a1-9a9e-e480654252fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5517aaa7-c32f-4a78-a236-7dc5485329f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb261a3-2ad9-4dcb-9128-e0e96faaf740",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f082d0-1ab1-40a6-85fb-160e0674a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72b4dd2-8e3a-484f-99b5-ae7b7cc798b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de03d88-bd7a-4961-bc7d-88e985355d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fbe8af-0e23-4a04-bf55-d4bd69de8fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbc2e3b-1c94-4f4a-baae-ebf6a9d330d5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29540a90-88b4-4e6f-a4cf-eaa2e3f50cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ace9f6-9715-49cc-a6fe-428a0525e91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47a6543-332d-4fd5-b0d0-c1376cf5cb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105b771e-dac3-4e81-a7da-f6330b0edddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadb656b-963f-407d-88c1-a03495b1bfd9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6fc18f-0003-45f5-a445-3a98f40437fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d76bcfaa-ad38-42f8-bf6e-4512207b238a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31947a48-a1d1-4274-9934-cf49b6ea539f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b221e2f4-32a3-4e29-ae98-50e2bfd62281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069b2246-7b51-4987-b82a-c6d8f2106e0d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f93ad9a-affc-4bc2-977b-9f68c480da5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73c0209-b0d1-4884-944a-9676f2001502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a744f1f-1c98-4b65-a896-371845b3df44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac4656e-a2b4-41f7-88d3-f8dbb842bd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ba7951-d8e6-47b1-a776-063564a451c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c19137e-9b29-4f72-9d08-95c0af99fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4673fb15-af80-4e56-b71c-0bde9727f4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664c56b8-55a2-4161-86c8-f5fa382e765f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5d37ed-0348-4929-9b10-01b8dd655c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ecaae9-522b-4acb-8541-181328b463b4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e3a888-5442-44c4-aff6-cec6602befcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7bd63b7-99a8-4b6d-92b1-db2242930a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adb2437-5810-4531-9732-1837793b5512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e6e195-736b-4f74-8898-76370f329b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa55c48b-a351-43ac-b2b2-3cf756df2fb7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8f47ff-1882-41ee-b56d-d953781680e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00827570-0565-471d-b9d9-fe09f242fe9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c688a86b-a3d9-48dc-b7a4-3fb1a7ba3b72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0444ec55-0af3-47f9-b81b-b55086bce1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbacd62-24b5-446a-bd0e-11ede8415ddc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cc9447-bf9b-4f9d-b1b6-f4c6418d0b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b3d216-a724-4051-a973-85b0eade7273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ceda23-b272-46d9-9b7a-5bf16983bebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867a202c-8549-485e-b967-8c11a415ac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be9438c-f723-4ec0-a6a0-6f37a5fd82ba",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb8c297-4731-4034-81d8-5b93e1d66f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2496ff4-0a2d-44bd-8718-9f0c45411bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c23890b-4e82-4532-a6ec-1319d865b4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a964597d-8c36-414b-94b7-24eb0f045cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae22127-58f3-4c16-ad28-72a5173f60d6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c63657-a2c7-4e91-b177-46b70c130866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368d182d-7bea-4261-b778-ab00024b2e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ba0c66-bbd4-4cd5-86d0-b1d3ff228c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a82f41-1a4b-4d37-9e2c-b86ba58f63b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa977ad0-50c3-4b26-8efa-ccc7ee4ff281",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35590e29-4469-4b33-a77a-5c1924575453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44978c3-8c14-40d8-a410-2907eb42817e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61515f9-3ddf-46c3-9b92-f5940890c52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ee3a26-6341-4f8b-8442-67bf4f2b348f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2489ea95-6e4f-4b23-8cad-6d20b6f2b37e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79bdd50-88db-4d9a-907e-044a561d9d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de5c4427-cbbc-44cb-8b75-3cb6961bbf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405438f4-f1d3-4849-ba9d-41aee0fc4f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dada3a-ea83-4796-afde-670505b55066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf23dba-afda-4d4c-a5f7-148e5e9ab4b9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e9700-0d2e-43fc-a78f-dc2a4e6434a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf56f72-d762-4dc0-b532-8d205d8650ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b707afcd-e8a1-4151-9056-9dd52495201a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c871579e-4a3a-4699-8240-7a32ec6a500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51479823-4340-463a-9f64-a3e9d553ff7c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de063d73-10c1-432c-a911-f206aab3c72f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7e48e8-36d2-4416-8b6c-929b2dd60e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e045c5b4-0d3b-46f8-986e-ce14d20f9a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16726c08-e4fc-48f2-a884-25708a86c65e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc87216e-9590-4273-b7ae-f9ffc2b0cd10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b846d54d-1a91-42e1-974c-9f5a501f8967"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07983027-dd17-46d3-9521-b32868ce6176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b46833e3-33d0-49a6-a2c5-563902255ec4"
                    }
                  }
                ]
              },
              {
                "id": "fefd7fce-c92d-4e0f-a9d6-8b90b1f13e31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51193a02-61b5-4541-9070-c91882410176",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b688e45c-3388-4259-ba24-c45bca2024f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "645b5dbe-80cf-4a46-b447-547d08872f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b281de-968f-4c2a-8201-e99d82fc6393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4d5b597-7caf-43a8-847a-3dbb05c6b57b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c98c1e21-62d1-48fb-a6f1-2c20ebb413f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "760eb41b-529a-4f3e-aeff-2dd88f24af12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9433fb5c-fc70-4ab5-8e51-b670cb893503",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "038e5670-1bf0-49ee-bfa8-602f1c7b5699"
                    }
                  }
                ]
              },
              {
                "id": "48ecdace-04bf-4fe1-b976-f75aebe37740",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2e07bf66-638b-495c-a126-b09c6ea6f438",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8943f118-4a46-4d22-b4be-8f6af0cdee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d6bec152-8834-4ec2-be1d-3d4dfcb558cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9342b3-78a6-4c74-b48a-b70c4b461334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5672ecd6-4db8-4c4c-aedc-3aa98ba0ee2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e8e7d1ea-9d0a-4d59-af13-de541602a0bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cf83f93-534d-44a5-bbbf-a273ac7562c7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32fc3b91-1cd5-44ae-92ef-a3d252552563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8e630532-0491-4709-b5b6-7e2e123786f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "499e7979-18ae-4497-8163-865f64beaf86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01dfe71d-bfe2-44b9-a486-8c61157a4c30"
                    }
                  }
                ]
              },
              {
                "id": "5c6b1abe-ff64-416c-9d9c-f6a0e05e8a60",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc85b5a3-bf1a-45ae-9d20-f16dae6b9cd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa57e1af-c6e5-4eb0-bde8-80f95b3956e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abc3d145-8ca9-470c-8679-88e2915f75cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "368bdc51-a98b-4746-9f78-58d550b78d14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "210f1fa3-8eb4-4646-8085-3f8371d457fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b94569c7-17a1-4866-a70c-2609e335bd3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68c4ecad-9d30-4928-8585-71a102d9b759",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a07ff74-5e4b-4e8c-89df-1ac80c007818"
            }
          }
        ]
      },
      {
        "id": "18a4939b-01fd-4e3a-9a7f-7b83aa664d97",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f1c99e19-1491-49e5-a7e1-710d7a5e0fea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "168f8ddc-c100-4881-a21b-1c1dab738b08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8e195f3-8a65-41f2-b9a0-5ed3626cb1a9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55f6e4e-84bf-4ca5-99c9-11adf2ec2cfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "355631d5-8c60-4423-9ee2-aa289131fa2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40e3ab8-6b0d-4f54-b90f-681601153107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbedb379-3fb1-4501-8a71-fa5251774e08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c38336d-d72e-429e-b446-ac4f996b2544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3ed0a32-be16-45d3-9c8e-52580f174676"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05a187c8-21ad-494d-a77a-dbb36d9c1692",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe737a75-6341-4da1-9d85-6d34d904d04c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b82d1a0-772d-4c12-9cad-7a30fa94027e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "76e18ab7-9a6f-4c64-a1c8-4b3b7943e402"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da96fdea-8b57-49d9-a4a6-d60f05f79f2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49d25cff-e981-4298-8209-96504bdb95ac"
            }
          }
        ]
      },
      {
        "id": "017b2e87-3200-4f28-acd4-d8c256f5ba44",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0674c731-9ea7-49b2-be32-87eb9164038b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c41bb3a2-d5e0-4510-ba7d-7900f778f28a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f01cce61-b897-45b7-a073-3c9ea960506f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18234e8d-c514-43fc-957d-4f398d8e6edf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d6ee168-9d13-4c25-bc25-b7d79ce4a2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6e86da-432d-4247-bd9b-8ad4e2cf38bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db02d4c0-ba2b-4a9e-82be-8ebb24442da1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cde49ef-1f4c-4aa9-af7c-f099635e21fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb1cc54a-e73f-49be-aa11-717ea0d45520"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea604eaf-6f89-47ad-853b-3fb8aaf74593",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "163c2065-dca2-4a91-9ff1-81c78a5b23e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3211c00-86c6-4145-b6d1-0d1ac43a6515",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc10aa35-d6ce-4d94-b85d-b132b4d45cab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f810e333-098a-4a39-8749-3d609b7018ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5304c33-2f0f-4ce3-845d-679e93afe93e"
            }
          }
        ]
      },
      {
        "id": "a8f96ecf-6628-4545-af7f-1349aa8b0538",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3c1122e6-93ce-45c8-a100-5061089ad8b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f99ae529-671c-43bb-afb8-fb7db4f96ac0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9778ea30-2f51-4920-bb46-bdbcc6ae391a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9396f52c-4462-4c81-a8ae-411308312d65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0728132b-b8ba-4033-be46-d0bb97b34ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7c3d1f-d653-439b-874c-72a1741a1c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f6f0c83-e0e6-4c1f-a294-6ec3c22d1ccc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a677d90a-bb5c-4dd5-af4b-87ff559d8739",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb10fceb-f438-476a-9feb-cc2e5c25d4d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92935658-3aed-4261-b0e7-36398fca90d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9def251-a11f-49ec-90a1-fe1555f5fd83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52aa434d-5d53-4d79-9227-e9b54a266146",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2596728-0391-45ef-8f7f-77bd552fb5db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b8deaf5-d1ed-460c-b91e-d97ce50fe7dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbd4cc59-c319-4aa3-be0a-6832648f21fe"
            }
          }
        ]
      },
      {
        "id": "f98e20be-a5a6-4d0e-829e-7af06beaf91a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba1b8f4a-9e54-4b27-92a7-590373e48f4d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9dcd434-4a22-42cc-bfd7-8fddafe3a3c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "991a97e7-5330-4347-b743-9f364e17503e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e197e56-c5e2-45e9-af0b-1c00e97292d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e017648f-641b-4cc9-b5cd-dc9388f4d45d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 142.98596491228065,
      "responseMin": 20,
      "responseMax": 2847,
      "responseSd": 333.13085750808045,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703550873532,
      "completed": 1703550923911
    },
    "executions": [
      {
        "id": "7e14a3c3-0720-4823-9e1a-7620bbe3c170",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a202bd06-2de9-4704-91c9-6a0a95eb85a1",
          "httpRequestId": "bcabde2d-71d6-4f83-9d58-320f35bbd975"
        },
        "item": {
          "id": "7e14a3c3-0720-4823-9e1a-7620bbe3c170",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09a6481e-8da2-43bc-8f53-96069c11d559",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "0d4c87cc-24e9-485f-bba6-ce6c19290822",
        "cursor": {
          "ref": "8d307b69-7964-4226-bd72-3642d1d33aba",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9f1e0fba-4780-4af9-ad34-05007accaa09"
        },
        "item": {
          "id": "0d4c87cc-24e9-485f-bba6-ce6c19290822",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d658191f-28ee-45ce-97e7-56e6d8389242",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "b92dbcc2-070f-4b36-a09a-fa43d6c6417f",
        "cursor": {
          "ref": "e5c5412f-bb92-4729-9a97-3e959d7cb20d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6e7ee687-78de-49bf-a5de-8c12e82f5c5d"
        },
        "item": {
          "id": "b92dbcc2-070f-4b36-a09a-fa43d6c6417f",
          "name": "did_json"
        },
        "response": {
          "id": "41349ed0-e646-4242-86e7-a73ea6f7e2b8",
          "status": "OK",
          "code": 200,
          "responseTime": 462,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3364233-5708-4c73-ae30-3ff60200672f",
        "cursor": {
          "ref": "a9dff9f4-aa5f-4f67-b2ad-862038de9191",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06209a67-4218-4233-99cb-64739e574f22"
        },
        "item": {
          "id": "b3364233-5708-4c73-ae30-3ff60200672f",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b42c20b-878a-494e-b394-01a2b6423457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3364233-5708-4c73-ae30-3ff60200672f",
        "cursor": {
          "ref": "a9dff9f4-aa5f-4f67-b2ad-862038de9191",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06209a67-4218-4233-99cb-64739e574f22"
        },
        "item": {
          "id": "b3364233-5708-4c73-ae30-3ff60200672f",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b42c20b-878a-494e-b394-01a2b6423457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5927c3-8ef9-4dc8-a6ea-69b1f1d1b091",
        "cursor": {
          "ref": "0f473e89-dcda-4ea2-9409-47efa91b033a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2792a894-1e10-4de6-ac47-6768d92b7e3a"
        },
        "item": {
          "id": "bb5927c3-8ef9-4dc8-a6ea-69b1f1d1b091",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1c76f56e-8043-421f-a34c-75986159bd9a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 183,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b30d79-cdc2-4791-a6fc-ddb5bb39b9f1",
        "cursor": {
          "ref": "960d3696-aa55-4579-ae8c-1c3950da30a2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3a7f9ab6-a115-4777-902b-5556aefd6c72"
        },
        "item": {
          "id": "d2b30d79-cdc2-4791-a6fc-ddb5bb39b9f1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "65ed4128-0070-4a91-8532-f9ac154b0581",
          "status": "Not Found",
          "code": 404,
          "responseTime": 87,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9370c00-2ee9-4822-88c8-d468f8d8a4c3",
        "cursor": {
          "ref": "e860fc23-0d3a-4030-ad70-2e20245707f2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f8ccda16-9af4-4dae-9022-f9898ec25af1"
        },
        "item": {
          "id": "b9370c00-2ee9-4822-88c8-d468f8d8a4c3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7b1f6217-05fb-4d47-818b-c42e4fc3c609",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a729cea-c5af-417e-98d9-6a3cea2ad59a",
        "cursor": {
          "ref": "8d519972-aefa-4c85-b83c-5f49d7dea173",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f165a79b-65ae-4482-8120-7643ad47a28e"
        },
        "item": {
          "id": "7a729cea-c5af-417e-98d9-6a3cea2ad59a",
          "name": "identifiers"
        },
        "response": {
          "id": "3df17e12-2958-41ac-8c60-b796993c796c",
          "status": "OK",
          "code": 200,
          "responseTime": 337,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4f5b82-8cfc-4603-b948-77f9e699091c",
        "cursor": {
          "ref": "f61575f1-84fd-4332-9b77-84b3474b4607",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d1e5690d-2633-42e8-93f4-a70d1e188211"
        },
        "item": {
          "id": "ac4f5b82-8cfc-4603-b948-77f9e699091c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cb23bb87-4e1a-4f83-87e8-2c4039c00c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e9414d-db40-451e-99c6-1cc9a4333d2f",
        "cursor": {
          "ref": "4472ab8e-da2c-408d-8c42-3aff92717830",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5a5af4b6-0caf-4487-8975-5fb449d09a84"
        },
        "item": {
          "id": "10e9414d-db40-451e-99c6-1cc9a4333d2f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fc28f830-0b27-429d-8395-7f736faa82a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ded5367-e67a-4c6f-a514-1e98ab04fd0a",
        "cursor": {
          "ref": "99c317fa-0e5d-4cb3-a10a-3f115c821c37",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "229452aa-258e-445c-ab13-b59c7c8fed25"
        },
        "item": {
          "id": "9ded5367-e67a-4c6f-a514-1e98ab04fd0a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f6612fdf-0cdb-43a6-b9e5-1517a84a7650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fb9156-cc30-4c06-a0a8-3eeb57386fec",
        "cursor": {
          "ref": "90e0a1f2-a0b1-419e-8061-50d4e9ed74bf",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af686c16-3936-4eeb-b485-4138b2b0e61c"
        },
        "item": {
          "id": "38fb9156-cc30-4c06-a0a8-3eeb57386fec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "36300a68-9a67-47c7-803d-a4e818ac2c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fb3e75-3615-41a7-9572-fd7a0e66a98c",
        "cursor": {
          "ref": "19764063-f935-4813-a13e-c9312a1beb52",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "afe4515d-d208-4a54-842e-a32d942153ff"
        },
        "item": {
          "id": "09fb3e75-3615-41a7-9572-fd7a0e66a98c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ec537649-d7b4-4726-b1a8-e923f6e8f3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9140b59-1fe4-458c-9ef6-036a49faf897",
        "cursor": {
          "ref": "1dd07dd8-b1d5-4e47-8bb3-0c6f69174dd8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e90aad58-e0e7-45fe-af7c-c80e8505d8fd"
        },
        "item": {
          "id": "b9140b59-1fe4-458c-9ef6-036a49faf897",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "670579c9-f03c-478f-aaf3-2c965c830809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32848fd9-eccd-401f-b1e1-6c4354b5b424",
        "cursor": {
          "ref": "c91218b0-79dd-4cb4-949a-619aa4594d78",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1e96f246-8dac-4dac-9e93-02bf5ac1a287"
        },
        "item": {
          "id": "32848fd9-eccd-401f-b1e1-6c4354b5b424",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "131a4111-575c-4a96-93e5-7949b9f64a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f22e6-bbae-4415-b653-7a3d859bae4c",
        "cursor": {
          "ref": "46d1dc80-3a64-4409-a6f8-e1cfed0261ed",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d82198d4-f454-4e89-9454-201f4b3b6c90"
        },
        "item": {
          "id": "dd6f22e6-bbae-4415-b653-7a3d859bae4c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "02525907-b5dc-4cb9-84f8-d8c929fb7a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6836b4c8-9da8-4194-b351-a71ec50853a1",
        "cursor": {
          "ref": "3c6a80d2-5155-4ba7-8fa9-5cb44844da71",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4516f8a0-ef41-49ab-87f2-fb02eb194ba7"
        },
        "item": {
          "id": "6836b4c8-9da8-4194-b351-a71ec50853a1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5c16cdb4-9b10-46bd-82c1-4d82d7ca9406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb92aeb8-66e9-4445-97ff-796fa7e6b5ef",
        "cursor": {
          "ref": "81ec206e-4cae-4e33-ba88-955e5ee6245c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14a31c22-0e68-4214-92c3-cbe4e6123bdf"
        },
        "item": {
          "id": "cb92aeb8-66e9-4445-97ff-796fa7e6b5ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "27f81663-0f20-4cff-9490-c4c713c88cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e9f8bc-2658-478f-92bd-af555434fd69",
        "cursor": {
          "ref": "e4e9b0e2-152b-4a3b-ad86-42451b4ca386",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6da01b76-d185-4069-a0e9-93cb3b05531e"
        },
        "item": {
          "id": "50e9f8bc-2658-478f-92bd-af555434fd69",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "843ad559-9585-47a4-b1f7-68e0ec1baa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d271c94c-84fc-41fc-a29a-d05f0dc327b0",
        "cursor": {
          "ref": "f9bfa6a1-a504-4fb2-9a23-3bce200fce81",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "40b07155-d29e-4b53-805d-68628d429334"
        },
        "item": {
          "id": "d271c94c-84fc-41fc-a29a-d05f0dc327b0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3567341-3390-4b05-8457-78056ee7770c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f2aef4-c57d-431c-a63a-6734414b82d6",
        "cursor": {
          "ref": "73eda3d5-193b-42cc-91f1-29b221368ded",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de572f3f-2be2-4ac9-bfac-8fe0ff809376"
        },
        "item": {
          "id": "d7f2aef4-c57d-431c-a63a-6734414b82d6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "73fce3eb-5470-4cb1-9bda-8284a6530e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3418e117-29b2-4058-b9b7-a00dd0084291",
        "cursor": {
          "ref": "e0716c61-776e-4270-a3e4-7cdf3a947c4b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8c7b17bc-595f-4606-9392-bd49dd96430a"
        },
        "item": {
          "id": "3418e117-29b2-4058-b9b7-a00dd0084291",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1597e349-b178-49c6-8d6d-b8c6df9b86de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb1a8d8-9213-41b8-9e77-cdbe2383286f",
        "cursor": {
          "ref": "cb9e4bb8-1a6a-42e6-9948-e21c188f3c51",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f12435e1-c641-4f3b-979b-3b5c12236cc5"
        },
        "item": {
          "id": "1eb1a8d8-9213-41b8-9e77-cdbe2383286f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c6d8e3af-5ec3-4e6f-8d76-126d7fa9707c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f04cc6-33fc-4d5b-9084-5e1907cf1dd6",
        "cursor": {
          "ref": "2f2e20c7-ee03-4683-ba71-2b0acc9ee75a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3bf80adf-5541-437f-b655-2b8e2fc31ac8"
        },
        "item": {
          "id": "d9f04cc6-33fc-4d5b-9084-5e1907cf1dd6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fbba7831-07a2-487f-8f7c-1ec7734c8e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d6ad56-d500-43c9-8786-9e093399139e",
        "cursor": {
          "ref": "59a7b283-0f1e-44c9-8dc6-6c559b2dc9a1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "43930047-8dcb-4889-b5bb-57a8c0327361"
        },
        "item": {
          "id": "94d6ad56-d500-43c9-8786-9e093399139e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0d6caa09-15f8-4798-ba40-d689dae41972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514ecc0d-654e-441e-8c91-0a658be4174e",
        "cursor": {
          "ref": "e28507d1-97a7-43df-925d-1e3e3b4e6b68",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "851681ad-caee-4031-a201-fbf728f4e6f2"
        },
        "item": {
          "id": "514ecc0d-654e-441e-8c91-0a658be4174e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f32c983d-d7e2-4865-a59e-d796a457818a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff87264-45f0-4c7f-a0dd-74182d7609b4",
        "cursor": {
          "ref": "bed24637-a3cd-4d6e-a02c-973d7fc36c83",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "89a446ae-3421-4edb-b73f-deba7ebc5e61"
        },
        "item": {
          "id": "cff87264-45f0-4c7f-a0dd-74182d7609b4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b1a70cf0-18ba-45a1-a65a-9552e94bce71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c291967-4911-4455-986a-069d27a8b25b",
        "cursor": {
          "ref": "c8b01dd2-1a04-4e3f-9f42-8430f1d00185",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "90dfa5eb-084e-4ebc-843d-2bc39ce896d5"
        },
        "item": {
          "id": "5c291967-4911-4455-986a-069d27a8b25b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aa7277f4-c5f8-4018-9a3a-8c1ddb836b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ee0424-86d2-421d-8069-da5add290e83",
        "cursor": {
          "ref": "ecfd7d7c-88bb-4857-aba4-3b9bceb71763",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6f4fa619-648e-412a-9987-3d82ad7665cb"
        },
        "item": {
          "id": "90ee0424-86d2-421d-8069-da5add290e83",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7022dd03-032b-4bc2-ac13-711fd2ffbd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2c2551-8bb7-4e11-acc6-823c994bb4d7",
        "cursor": {
          "ref": "79511b1b-fa68-43fc-8448-92cefd3fbfd5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "67916b27-f15a-4a7f-acdc-66d2c0985cff"
        },
        "item": {
          "id": "2f2c2551-8bb7-4e11-acc6-823c994bb4d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "823f7e54-9629-44e6-8241-117de792d992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3113fa58-a981-462b-a958-4eb9281b28c2",
        "cursor": {
          "ref": "e62ca610-16b8-4c83-9172-25fad15453a9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "84504dbb-9be2-431f-b51d-0e1bb898a757"
        },
        "item": {
          "id": "3113fa58-a981-462b-a958-4eb9281b28c2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "98f05c84-c241-4cc6-a59a-92874ab3cc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49bb426-c567-4a3f-bec5-dbc71b7a176b",
        "cursor": {
          "ref": "fe5ea68a-90f5-4faa-8a24-497112cbda21",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7515a477-3abe-4323-9ca5-9bcc5bc7e0a1"
        },
        "item": {
          "id": "b49bb426-c567-4a3f-bec5-dbc71b7a176b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "98fac283-bcdc-45cf-8675-30e19070dd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472a9bc2-fc28-4376-bc89-7579c2bbc3d9",
        "cursor": {
          "ref": "d1d2d306-f228-4b69-9189-d84e8b292060",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "03fac645-c23d-4202-b900-757a995dcae9"
        },
        "item": {
          "id": "472a9bc2-fc28-4376-bc89-7579c2bbc3d9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "799d9cf1-3a2f-4f77-92bd-19ceaafe4eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410050ad-0225-4a00-8da7-c69bd003c255",
        "cursor": {
          "ref": "0ad9c03d-c552-42f2-bed7-81b9d2a21fca",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cc8e2751-0c17-4e25-bbc9-5964413d58db"
        },
        "item": {
          "id": "410050ad-0225-4a00-8da7-c69bd003c255",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0fe14b86-a2a3-4ef9-baf3-fb6175c6928e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ca835e-9a4d-4401-8557-cd48546c237e",
        "cursor": {
          "ref": "69f3e2ae-1a0b-4145-ba89-7424b7a52180",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "38ad77e0-903f-478f-980d-4cdb64ec8f25"
        },
        "item": {
          "id": "f8ca835e-9a4d-4401-8557-cd48546c237e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2aff956a-b303-4ee3-80b3-a13b786f0166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1e67d0-b636-4832-aa2f-6a379c58f8a5",
        "cursor": {
          "ref": "4f3156d9-278a-42ee-b364-250d1e62f517",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6d4f0d5c-3384-4cca-b48f-d1faba059d56"
        },
        "item": {
          "id": "0d1e67d0-b636-4832-aa2f-6a379c58f8a5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c78b19c8-a15a-4cd8-8d90-d10fbf9d165d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94693662-e1ef-4530-b1c4-d2eb87f3735a",
        "cursor": {
          "ref": "f3d8624e-b1d4-46f7-a184-da8bcce50f99",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "02570f88-f04f-445f-8a54-578790c4c2c1"
        },
        "item": {
          "id": "94693662-e1ef-4530-b1c4-d2eb87f3735a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f4a0b785-cb65-49c0-aa18-513769ff619f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9350720-083c-4af7-909f-0c7098e072b9",
        "cursor": {
          "ref": "c0413fe4-3fc7-4d90-8ee6-fb0ff515717c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b6f493b7-d6c2-40e2-bc06-352cf6960c97"
        },
        "item": {
          "id": "e9350720-083c-4af7-909f-0c7098e072b9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f855d7c3-7f5a-4f70-9dee-6d2496597751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f840c78-496a-43cf-9505-2933e9ca26a2",
        "cursor": {
          "ref": "83d1b325-a2e8-4c0a-b691-eeeaff365275",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b6c3fc1c-4095-41f7-9c42-5f65f169a41e"
        },
        "item": {
          "id": "7f840c78-496a-43cf-9505-2933e9ca26a2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "80c2a7ef-c33a-4254-b7ba-0b60596eae98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c0e4d-da19-4be1-b96b-260153ba5258",
        "cursor": {
          "ref": "dddd70d9-b625-4109-8e2b-310db4ffa728",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6c0fd4ff-b4f2-4f00-a566-8cd39c996322"
        },
        "item": {
          "id": "654c0e4d-da19-4be1-b96b-260153ba5258",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a9d0a4d-a0a4-415f-b4b6-8913e7706496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7476f1ee-8d26-4ebe-8d45-012d2c70b5ef",
        "cursor": {
          "ref": "68d678c3-2346-46bb-b418-482ac6ef60dc",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6ba714cd-b8ae-4fa8-9e89-83dcfb5ddf24"
        },
        "item": {
          "id": "7476f1ee-8d26-4ebe-8d45-012d2c70b5ef",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2a656ab3-b193-4f79-9fe4-3045aea3db05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10ffc92-f47c-46f5-be50-6db47f72c2d9",
        "cursor": {
          "ref": "b928351b-af73-4016-b6f1-1a17be9f0df7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e605e07d-6082-4777-89d7-f5ebedea68f7"
        },
        "item": {
          "id": "f10ffc92-f47c-46f5-be50-6db47f72c2d9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1a3e0890-e0b4-44bc-8fde-1dcd1435fdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ce2443-4c0d-4682-b944-e03bf7cd9cd5",
        "cursor": {
          "ref": "324cbc58-d680-4b60-bdca-9ea676be4b27",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b3dfa8e3-f384-47d6-84c2-a99a3a246577"
        },
        "item": {
          "id": "42ce2443-4c0d-4682-b944-e03bf7cd9cd5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2f3eced2-4400-4674-96b6-3262674fb811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cad4a0c-9d1b-4d3c-aea6-f1fa4215ecbc",
        "cursor": {
          "ref": "f3c17f35-0ae1-461e-a24c-8d761a206da5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "99b6b16f-87b7-48ab-89fb-2afa8eadd44e"
        },
        "item": {
          "id": "3cad4a0c-9d1b-4d3c-aea6-f1fa4215ecbc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b8eb9e73-dbae-4209-9d7b-0fe313b53a20",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 358,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eeba2d-1beb-479e-90e7-93bf504602b0",
        "cursor": {
          "ref": "132d18fe-28e0-450d-961c-ec3aabc52ac1",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5bc0ea7d-7fef-4d3e-aeb1-7be9d6d2d985"
        },
        "item": {
          "id": "57eeba2d-1beb-479e-90e7-93bf504602b0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c63b347d-a1d6-42e9-b41f-6be14784405b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44a672a-5474-4b05-92a8-38a462ff065d",
        "cursor": {
          "ref": "c4a57ea4-995e-4c63-aff3-5b5034454b16",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bd44fde2-6a51-4f03-b032-63736b1ab925"
        },
        "item": {
          "id": "e44a672a-5474-4b05-92a8-38a462ff065d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "afa24154-5589-4c1c-9ff9-cc5372c6bee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465d4e36-dd09-4ca1-bbfb-29ba8036dcde",
        "cursor": {
          "ref": "06a35743-d641-42c3-94dd-1116cd064c87",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3c53074c-57e1-47c6-b16b-fd354819099b"
        },
        "item": {
          "id": "465d4e36-dd09-4ca1-bbfb-29ba8036dcde",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "09c13716-4d76-478d-8399-6b9201b6fea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f80450d-0c50-4bec-8a77-a4599b54ece8",
        "cursor": {
          "ref": "896753d7-d67c-484a-a85b-c3e086b98ea2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ca7d05a3-41e6-4806-8229-2f4b1012ae10"
        },
        "item": {
          "id": "2f80450d-0c50-4bec-8a77-a4599b54ece8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aedc3ffa-4f7a-4a9c-9b33-8def29843efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2df4fe-5f69-403c-8a9c-3e3e08c1d30d",
        "cursor": {
          "ref": "ed4eb4b5-907e-4d5e-8e10-fff31a58a585",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7081e127-0c41-42fb-a028-39ac087ec4b7"
        },
        "item": {
          "id": "6a2df4fe-5f69-403c-8a9c-3e3e08c1d30d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ee8c8920-d180-4865-b68f-705df6f260ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b1be8b-c74e-4b3d-a36f-16f7bcd0cc26",
        "cursor": {
          "ref": "cac3da18-5eb5-4ae1-a21c-5ae6cc8e1b77",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "68bb99a4-ba34-4d89-a901-ee543602fd68"
        },
        "item": {
          "id": "31b1be8b-c74e-4b3d-a36f-16f7bcd0cc26",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "59a5829f-13e3-41a1-9e4d-15c915745748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecc679a-3a1e-4466-ab86-862416c15d3c",
        "cursor": {
          "ref": "fd5e7b33-2627-43ee-88ad-b6b0cb7e8cdf",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4951f016-8e31-43a7-9a9f-be93a192eabe"
        },
        "item": {
          "id": "fecc679a-3a1e-4466-ab86-862416c15d3c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "13e13ded-65c8-4973-b02f-0297c89a28e3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 356,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dd9f05-3a33-4740-8f7c-bb69fc597cbf",
        "cursor": {
          "ref": "0002cbbb-1c8f-4d61-ad48-2da06a90d203",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ad59dc38-b26e-4055-ad4c-5ae524ba311c"
        },
        "item": {
          "id": "38dd9f05-3a33-4740-8f7c-bb69fc597cbf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "26921fe0-63d9-41f8-aeed-3c149511f03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68765a91-7555-46d8-8663-8a4d2eff7bb1",
        "cursor": {
          "ref": "756b3351-38f2-45a0-9dc7-7f28baa4da14",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4a1aa510-a7ec-4202-bc27-b0fac8e8f6fe"
        },
        "item": {
          "id": "68765a91-7555-46d8-8663-8a4d2eff7bb1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e9f8c06d-6df7-4749-9e18-8b03eb0b25ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d97d4d-242d-401c-abe7-4276893bbd29",
        "cursor": {
          "ref": "af9cda57-ad08-46fc-bea9-3bcca6434927",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dc40f7a1-c404-4372-80bd-babd3525d553"
        },
        "item": {
          "id": "18d97d4d-242d-401c-abe7-4276893bbd29",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1d5d7487-02d6-4e9d-9980-52aefed208c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993340fa-5b7a-42e4-bf40-ecc2dcc3f244",
        "cursor": {
          "ref": "7540196b-708c-4bed-8f48-6ba2ee1809e4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bdc2fd17-8eca-4088-b108-46da0b4d32b2"
        },
        "item": {
          "id": "993340fa-5b7a-42e4-bf40-ecc2dcc3f244",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "437581cd-47c5-40c9-8041-1e3ad159d440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb3998b-b6af-4ff3-83c4-3deaec33be92",
        "cursor": {
          "ref": "8558ad69-47b9-4815-bfd4-251d7e6de104",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "20108996-4a5f-4de2-8994-a2af4cd666d0"
        },
        "item": {
          "id": "3bb3998b-b6af-4ff3-83c4-3deaec33be92",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a388fee6-0d88-4c77-8620-6ba3584ce99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e6ff94-2f43-4db2-8162-ec965b59d2d9",
        "cursor": {
          "ref": "8ba0ef4c-ae27-427d-93d4-3251ffb6bc91",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a6f1be2-8ed1-49f4-93bc-45ccedd1d444"
        },
        "item": {
          "id": "60e6ff94-2f43-4db2-8162-ec965b59d2d9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f995dd5c-32f4-40ad-8ffe-3da4ae02977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c37d9f-c529-43be-a004-3b5f32699bfe",
        "cursor": {
          "ref": "6166c2b8-c094-485c-8e2a-1bbd8f16f663",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7717a0ab-2875-49e5-9862-a87139a47e8b"
        },
        "item": {
          "id": "f2c37d9f-c529-43be-a004-3b5f32699bfe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1c146c0e-f093-4b89-a6df-25eb79c87ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87e3c3a-7b22-470e-8ade-730a51f6d413",
        "cursor": {
          "ref": "10debbea-438b-4bc1-a570-3a19ea19fb4a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dfbc1c10-f055-4a63-8c4d-e2fd6846577a"
        },
        "item": {
          "id": "a87e3c3a-7b22-470e-8ade-730a51f6d413",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b419609f-9c4c-4bda-b299-f10fefd097bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff83089-525e-4763-9223-414504de5663",
        "cursor": {
          "ref": "84d2932f-3737-49cd-8e49-03a2bd288511",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7266516c-907c-471c-bc7c-4b192bb69908"
        },
        "item": {
          "id": "1ff83089-525e-4763-9223-414504de5663",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "21849091-8f00-45e2-b8ce-f4ff23134f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53124243-4f8e-43af-93bf-1541f10a4fbc",
        "cursor": {
          "ref": "05f11227-f6e8-4029-9aed-987d877beecb",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7c3a4993-5ae6-49aa-b44e-b99258aae44e"
        },
        "item": {
          "id": "53124243-4f8e-43af-93bf-1541f10a4fbc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7b2a4a29-add8-4edc-9e59-63e6bc2a7d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812db8ad-91f8-4a71-9c50-24a93473327c",
        "cursor": {
          "ref": "77057360-be65-4f5b-acdc-3c848962c552",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aa3ed387-5b20-4424-aaab-93cbfc429665"
        },
        "item": {
          "id": "812db8ad-91f8-4a71-9c50-24a93473327c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a742e82-6905-4cd1-bf71-a4f7f5a69971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf52576-d9c5-4fb7-a3e3-3782ec6f0bbf",
        "cursor": {
          "ref": "8b151fb2-4e94-4f50-9c19-66e0ce992c8d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ce90eb36-81b6-4125-9c0b-b832be16a384"
        },
        "item": {
          "id": "2bf52576-d9c5-4fb7-a3e3-3782ec6f0bbf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e2055df7-e865-4bfd-af2c-e75c3ff7efb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443b719a-19e8-4ff6-8cf3-c689bb7cf52d",
        "cursor": {
          "ref": "ee35ad62-abac-4a03-8f8e-f398739ed789",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74a03cf3-cee0-4f83-bc3f-0e61e21d53bf"
        },
        "item": {
          "id": "443b719a-19e8-4ff6-8cf3-c689bb7cf52d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2f28966b-62f0-4a7b-b4c8-fd70bf013530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d1ce63-de57-4212-bbfb-9b05651cf415",
        "cursor": {
          "ref": "f94f7e4d-7f5e-49a2-b01b-2e9e71cdc346",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d83d3852-c89e-4dfe-b66c-c1662630e0c0"
        },
        "item": {
          "id": "f2d1ce63-de57-4212-bbfb-9b05651cf415",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "49a410b2-420c-454d-b78c-6cb3c513c9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7c43a9-ec9a-4b4d-90ce-8a35db3353c6",
        "cursor": {
          "ref": "a491a607-b133-456f-8210-eb6155dd9ad1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "84c14bb9-68c4-4036-b6c9-1ddfcda8295a"
        },
        "item": {
          "id": "4a7c43a9-ec9a-4b4d-90ce-8a35db3353c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b99fb3e6-6033-4369-b8fc-8072bf11645a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282aa1a7-1cd1-44c7-8f7c-1447771cbf5a",
        "cursor": {
          "ref": "79a7b02f-63e7-428e-b5ae-bfdb7e337664",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0fd17672-a934-4b89-8297-038cfb481bee"
        },
        "item": {
          "id": "282aa1a7-1cd1-44c7-8f7c-1447771cbf5a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "39eaa4b8-a275-4b6b-917e-32b8d6cbd323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e47959d-efd9-4a77-b85e-4e16132b1304",
        "cursor": {
          "ref": "40dfb1f4-c65c-4b07-af09-1060b1f5fd47",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b78bf127-170d-4ea3-b419-b2661c0b7a4f"
        },
        "item": {
          "id": "4e47959d-efd9-4a77-b85e-4e16132b1304",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2e7022c0-701a-419e-a16d-7f0b8468ed02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f2d184-063a-4b31-b398-9e21c4d634f1",
        "cursor": {
          "ref": "5f8b4e10-3575-448b-906b-8712e8794142",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9acfcac9-d61b-4836-9f2c-971225fced21"
        },
        "item": {
          "id": "f1f2d184-063a-4b31-b398-9e21c4d634f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b8258dae-3a27-4467-90d7-dc8703a84c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f205e69-ad33-4b01-aae0-d07a48b192d3",
        "cursor": {
          "ref": "a9807f7d-4481-41ad-a223-cb2aa9e820a8",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88ed59a1-b6f9-413e-b461-1b15191934c5"
        },
        "item": {
          "id": "9f205e69-ad33-4b01-aae0-d07a48b192d3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "01f0dadb-e023-41d6-b6ee-2f70088beec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d360722-de8b-4d61-9051-dc3302fb148e",
        "cursor": {
          "ref": "458fe06f-0893-4f89-95a9-a956f1dbf535",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a37b9fa7-8bba-4789-9234-f2d89fc538a1"
        },
        "item": {
          "id": "4d360722-de8b-4d61-9051-dc3302fb148e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4f78f625-217c-424e-b871-ccf4585dd2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c8bd93-71d8-4f52-a98c-b8277b577d90",
        "cursor": {
          "ref": "ce826eba-bc61-4d62-a714-7afad95f8dbb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1a0ce7af-b474-49d9-8778-218ba947a801"
        },
        "item": {
          "id": "b4c8bd93-71d8-4f52-a98c-b8277b577d90",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5e46efb7-98f5-44f1-b8f4-ff36f4109cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443ead86-ddf4-42ae-ba02-fa1034c1aaf2",
        "cursor": {
          "ref": "f6e56f2e-aafc-4a72-a0b1-e3604d657931",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a9eb8d79-861b-46bd-a196-0e2af800fdee"
        },
        "item": {
          "id": "443ead86-ddf4-42ae-ba02-fa1034c1aaf2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "84405a7a-2e68-4e23-9b55-0adce6cef7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2deae4e-fa42-46a2-9ebf-e1f440394fd3",
        "cursor": {
          "ref": "0e2db58a-5145-4bf4-a3d0-e43c3702e298",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1d2f14f0-7574-4723-aed1-bf313de1050e"
        },
        "item": {
          "id": "a2deae4e-fa42-46a2-9ebf-e1f440394fd3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4423db97-3c1c-46bd-87b6-781332c1d47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e203cd-30f8-4fa8-b193-cbc1f5742da0",
        "cursor": {
          "ref": "e3331687-8cd8-4f16-8b26-d9f235649285",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b4b65be6-c318-494f-80a8-3a4556e0af72"
        },
        "item": {
          "id": "d2e203cd-30f8-4fa8-b193-cbc1f5742da0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ad93f5ac-557f-4bd7-89bb-5b5831019251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9fa979-004e-4d51-a0a9-2dfcdaacfa90",
        "cursor": {
          "ref": "16a4ef5c-e451-4e13-8e1c-2d9d46dc5800",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d4bba510-05cb-4ea1-9ff2-7c56289fe180"
        },
        "item": {
          "id": "cd9fa979-004e-4d51-a0a9-2dfcdaacfa90",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8b0df496-da13-4f33-b249-4831e599a769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4f4d8c-27e7-4c71-9fb9-b149dcf77074",
        "cursor": {
          "ref": "5b15456d-f30f-41e6-b58a-89f8ad981b95",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4ed549a5-241e-4a79-8298-6822ec5b5c0a"
        },
        "item": {
          "id": "6d4f4d8c-27e7-4c71-9fb9-b149dcf77074",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "09b4ba23-ef57-4e3a-b8b1-c2b715e76120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255c488b-7847-4285-9a6d-7ce5fd33ed70",
        "cursor": {
          "ref": "36aee721-37e2-4b75-a9fa-e3eb191cd094",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "021cbead-9a8f-47e4-9e44-f7a081a6f961"
        },
        "item": {
          "id": "255c488b-7847-4285-9a6d-7ce5fd33ed70",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "345e4e4d-09f9-4d86-a98d-a852d4d6e366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc01521-b986-4997-b588-0b17bb4a5dcf",
        "cursor": {
          "ref": "bb706f0b-6393-4c47-b7fa-bb34c4cfe018",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f9c60beb-7594-44e8-93b2-27182d2cc1bc"
        },
        "item": {
          "id": "1bc01521-b986-4997-b588-0b17bb4a5dcf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "34e6bbc9-61c6-4649-af1e-4c66e49c8675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b09d425-8b52-4018-b018-6cda384505c3",
        "cursor": {
          "ref": "fdffc3b8-5d44-48ea-bcf0-2ed62c259a03",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "27454a81-dd48-42dc-af08-d8dbf53c7f21"
        },
        "item": {
          "id": "7b09d425-8b52-4018-b018-6cda384505c3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b5a8cbe4-61bd-480f-b713-933e5eab4d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dacd00-ba85-484a-ac9c-25aeece5813d",
        "cursor": {
          "ref": "e39bd94b-5b29-4b14-849c-655d87167883",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7ce1c1b0-1c13-4274-befc-c287e3bed2b4"
        },
        "item": {
          "id": "20dacd00-ba85-484a-ac9c-25aeece5813d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "90dd398d-b538-44d8-b9f1-a43839a3f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5541549-9007-4d41-9e5e-5f9bba76c029",
        "cursor": {
          "ref": "2a523dfd-b381-4545-9c83-bf7233dbb014",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ce6b7353-8fde-4504-844c-cb6c3b7e5f87"
        },
        "item": {
          "id": "e5541549-9007-4d41-9e5e-5f9bba76c029",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a2d82f0c-7ba8-4828-bf1e-4134578a48db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce5c77a-9d84-46b6-9046-ec2494477581",
        "cursor": {
          "ref": "15084d33-6a32-42b7-a052-865cd31dd1a2",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "80ce7487-3f57-4e2a-8bc7-b3fc70147ce0"
        },
        "item": {
          "id": "fce5c77a-9d84-46b6-9046-ec2494477581",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2e4ab3d4-a2de-4fc6-9174-253f561c0a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ae4c9-e941-4cfe-a7bb-3ed105912f98",
        "cursor": {
          "ref": "0d62ec76-9482-4af6-8119-58a54f144350",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "14638f7b-9022-470f-b450-39a91128df94"
        },
        "item": {
          "id": "5b9ae4c9-e941-4cfe-a7bb-3ed105912f98",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "22ca48d2-395c-417f-90e9-2faf2cbcc153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ff4810-19ea-4de4-a164-3a34ed879bfe",
        "cursor": {
          "ref": "e8507432-c669-4701-9c53-eece05584266",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8c30fa0e-1168-4e3e-b858-573ca538dd4e"
        },
        "item": {
          "id": "42ff4810-19ea-4de4-a164-3a34ed879bfe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "aee77713-7ee0-49d5-be23-9b80c2bc470a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6697ee29-7a7a-46a2-bc0d-fa79550cac16",
        "cursor": {
          "ref": "19b350b7-3ff4-4015-abd2-0c4aa923a599",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "632eed93-0db2-4790-bcfb-5f4b0237ce8a"
        },
        "item": {
          "id": "6697ee29-7a7a-46a2-bc0d-fa79550cac16",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7677af5c-f3e3-4367-b9ea-609b130f327b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad04ae2-cc78-42cd-b1d7-f62324bbd923",
        "cursor": {
          "ref": "4cea9a74-690d-455a-a390-70e3136c721a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "48426060-990c-4b3e-8163-d94c6ec9deda"
        },
        "item": {
          "id": "bad04ae2-cc78-42cd-b1d7-f62324bbd923",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cecc0a4a-0ee5-4a08-80a3-579c065c4c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8087ba1b-ddbc-4329-ac9f-0f87fd4e4f88",
        "cursor": {
          "ref": "b477c9dc-d170-47c6-8edb-fe03eac7df6b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "272734b7-0cea-41fc-9ce1-97e07225f6ed"
        },
        "item": {
          "id": "8087ba1b-ddbc-4329-ac9f-0f87fd4e4f88",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "32668e64-3342-4605-a04b-828ecfabfeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f934a15-ede5-4b0d-b8f3-3968b8d7afe4",
        "cursor": {
          "ref": "a8af6dd0-a542-4957-8f0b-eddfb7bb0cb3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f3660097-b85b-49c3-add5-0070db15d1ed"
        },
        "item": {
          "id": "4f934a15-ede5-4b0d-b8f3-3968b8d7afe4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "12e0adb3-9128-4fab-9adf-9f94adb01009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d880b-6d4b-4ec2-a7fd-6749261dd4f3",
        "cursor": {
          "ref": "1348663b-2243-4132-829b-3253043ca4b5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "20091410-aca8-4fe1-99a2-4914e8aa0f0c"
        },
        "item": {
          "id": "c10d880b-6d4b-4ec2-a7fd-6749261dd4f3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "13ed4ef1-cd55-4d40-8b66-947a6e3c26f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd2df9b-815b-4b1b-9a8a-78ea8801f1e8",
        "cursor": {
          "ref": "909736fa-b931-4962-9f81-79087852e229",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8d002e56-24a3-44c0-96f7-8eb62d3dcb9f"
        },
        "item": {
          "id": "3dd2df9b-815b-4b1b-9a8a-78ea8801f1e8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "69be9b9c-f2c7-4f94-83c1-d4937247c52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fce7d6-d04f-4db5-99e6-a9b61974cbbf",
        "cursor": {
          "ref": "3ad705d9-7519-4da1-8915-f9921ea48ba7",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dfb87696-08e1-4b4c-a677-72bbfc22c351"
        },
        "item": {
          "id": "49fce7d6-d04f-4db5-99e6-a9b61974cbbf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4dbedd76-2aee-4e95-ad46-bac87b14098f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38edcc4d-a630-4e9e-af92-c77dbf6c13c5",
        "cursor": {
          "ref": "a84c6930-fda9-48f9-9946-a5ad10babe02",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b562d323-cdec-46ff-b211-fd71af173f5d"
        },
        "item": {
          "id": "38edcc4d-a630-4e9e-af92-c77dbf6c13c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "370ff626-c10a-4f1d-a280-843da708ab19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d73e38-4a2d-4bf2-8328-5e2f691bb78d",
        "cursor": {
          "ref": "1236c70d-5162-44e4-adca-e47827d09d6c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "82d5ab01-f12a-4bfe-821b-d8bb655c7c4d"
        },
        "item": {
          "id": "49d73e38-4a2d-4bf2-8328-5e2f691bb78d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d5dbe88e-f0aa-4723-9528-7cbdec7e6538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4238016-c472-4089-8ce1-c697f41909f8",
        "cursor": {
          "ref": "ec2825aa-a74c-475c-a3b4-b8282802249e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "66f96c91-25a9-463d-9608-cec2f8d0c53a"
        },
        "item": {
          "id": "f4238016-c472-4089-8ce1-c697f41909f8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dd29ae52-945f-4029-9089-9e97b1306e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13402d31-15f2-4df5-b63a-35e07d8c7ba9",
        "cursor": {
          "ref": "6d99c62d-88f6-47db-84ef-c90ee9f7e226",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0630ce7c-5d51-42b8-8576-92facf124f18"
        },
        "item": {
          "id": "13402d31-15f2-4df5-b63a-35e07d8c7ba9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e07e9234-548e-4aa9-a49b-614246b13af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fea4df-4941-47f2-b470-b258c912ec61",
        "cursor": {
          "ref": "8b331df8-003b-47bb-8016-ea078fe37d63",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9c4995a4-da14-47c5-8485-a2392e13cf67"
        },
        "item": {
          "id": "a7fea4df-4941-47f2-b470-b258c912ec61",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b687d11e-ed1a-4961-95f4-4c86c0c79160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84574756-42c5-4a77-b84e-30f87283a6a4",
        "cursor": {
          "ref": "15526c03-7d58-4dfa-ac74-78a00c2ec30b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "09e959eb-5b5a-44d8-b0ab-1b48c030ec74"
        },
        "item": {
          "id": "84574756-42c5-4a77-b84e-30f87283a6a4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "131c3663-9f80-497d-b751-721733bdd925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e47c16-dbb4-4238-b755-5c120d1b687d",
        "cursor": {
          "ref": "ebc40c08-6c07-4c1e-9067-f3a1bafc6824",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "34e7867f-f160-4aae-b062-d95e39036120"
        },
        "item": {
          "id": "d6e47c16-dbb4-4238-b755-5c120d1b687d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "228c893e-48c0-4e70-b334-2cc68f339e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cbb5cc-28e6-45aa-ac37-2d644020d035",
        "cursor": {
          "ref": "526f702c-915e-44c2-ab0e-224b34662e46",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff6160f3-2fc1-4d79-85eb-99b7d42ef157"
        },
        "item": {
          "id": "24cbb5cc-28e6-45aa-ac37-2d644020d035",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3f9f5cbb-ffc6-444f-92f1-c7ab7e698bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa607b63-bc4f-4c38-8768-8eb71fcfb7a4",
        "cursor": {
          "ref": "88073731-f85b-44f6-91b6-da05806cdc8f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b24f993d-1c7b-407c-942f-d8f96c4c7423"
        },
        "item": {
          "id": "aa607b63-bc4f-4c38-8768-8eb71fcfb7a4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ebb927ac-cbd8-4cb4-a524-da07a081f44b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a96335-8326-4e49-820a-6b7025f19d8c",
        "cursor": {
          "ref": "f22eab0c-6cab-49e3-87c6-84486291dfdb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6a382b70-6f89-4ae4-bad3-e940e13b8b76"
        },
        "item": {
          "id": "15a96335-8326-4e49-820a-6b7025f19d8c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "893ef663-30fb-4639-a3f1-51b1550b4365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3864b210-4f43-4f38-a238-d334fcddcb71",
        "cursor": {
          "ref": "7a3b328a-0d84-4b1e-b9c9-0e0d189d9394",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6d734b60-23c1-4d6d-83d6-16f152fd5dc4"
        },
        "item": {
          "id": "3864b210-4f43-4f38-a238-d334fcddcb71",
          "name": "credentials_issue"
        },
        "response": {
          "id": "034984fe-69f7-413e-adc6-f359b4c0567e",
          "status": "Created",
          "code": 201,
          "responseTime": 2847,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4a9d64-ff06-4595-b239-e79e29947563",
        "cursor": {
          "ref": "3323c6be-ae69-4b37-a0e8-c8214790f8e6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8e8a71a1-6f21-4165-894d-419fe29d815b"
        },
        "item": {
          "id": "4a4a9d64-ff06-4595-b239-e79e29947563",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5e7d600e-37ce-433e-a590-83f07bbd520b",
          "status": "Created",
          "code": 201,
          "responseTime": 2304,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acc6a5b-7e94-46a0-a6e0-dd7dd3c38b68",
        "cursor": {
          "ref": "499bad91-b0eb-452d-8025-75537a563437",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a951a141-7e74-4639-b4ff-e6132f9c5528"
        },
        "item": {
          "id": "9acc6a5b-7e94-46a0-a6e0-dd7dd3c38b68",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6695cd71-0f99-4a00-9b5b-1a18af2e6634",
          "status": "Created",
          "code": 201,
          "responseTime": 2193,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f359855a-5d04-49d2-89d6-4c8d96a5238b",
        "cursor": {
          "ref": "54671802-7a7d-407c-aab8-ab06bc17d7ee",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "67265e33-739a-43e5-bc44-f55b21c04f11"
        },
        "item": {
          "id": "f359855a-5d04-49d2-89d6-4c8d96a5238b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "af50ea96-28c1-43b5-a048-c368d7c31857",
          "status": "Created",
          "code": 201,
          "responseTime": 2318,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d51d08d-2597-426d-b55b-5b05f0c79817",
        "cursor": {
          "ref": "dd245090-da86-4ed9-844a-3eb8c32ab8ca",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f753bd74-52b6-4ed1-8292-a6e86ebfe576"
        },
        "item": {
          "id": "6d51d08d-2597-426d-b55b-5b05f0c79817",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4a65879d-56af-4b93-be9f-c13b936217a9",
          "status": "Created",
          "code": 201,
          "responseTime": 2348,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac5ab0a-ad0b-44e9-8ab9-e5c1e74d624f",
        "cursor": {
          "ref": "ad3e5012-0ad5-4adc-b584-e187d7fe0a6e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "65e45b60-0bd5-4349-8032-5c60facf0a45"
        },
        "item": {
          "id": "cac5ab0a-ad0b-44e9-8ab9-e5c1e74d624f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8cc5a667-4956-4f91-82fb-0574eae21a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e203bfec-c788-4cde-a9a0-df90c9844303",
        "cursor": {
          "ref": "8bc272fa-5a6c-4bed-a7f0-a2ddb3880f57",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3a3ca299-78a2-49f8-bfb5-831ef3bd00b2"
        },
        "item": {
          "id": "e203bfec-c788-4cde-a9a0-df90c9844303",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cd4f773b-94a9-4a6c-a55e-0a335f566643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa155e-884c-478f-90b1-b414e2777d27",
        "cursor": {
          "ref": "c43dc8d0-d1ba-4712-8e6c-9d9a8a097281",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "de3c2c72-6743-4bfe-ad94-1714876ed922"
        },
        "item": {
          "id": "d4aa155e-884c-478f-90b1-b414e2777d27",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0406f3ff-50f4-452b-8a87-a0d137379293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45498512-1921-4630-9b1b-293eb8eff3c6",
        "cursor": {
          "ref": "ed562618-0332-407c-8a74-aa64fbd2d3a1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7a35be04-a1c0-485d-b884-e298360e35d3"
        },
        "item": {
          "id": "45498512-1921-4630-9b1b-293eb8eff3c6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96b0eb55-f04c-422d-8428-53f503b76151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2d9f10-3601-49e6-b460-65ccd1687105",
        "cursor": {
          "ref": "0834b064-3fb4-4d5e-9dbb-17c610012fba",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f998e3ca-407f-4b2b-ba08-e1033136c26e"
        },
        "item": {
          "id": "6a2d9f10-3601-49e6-b460-65ccd1687105",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cd56a6d0-f6cb-41a7-998f-0a82e7eeaf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e909889b-2acb-4717-af04-d2ff7b48fc44",
        "cursor": {
          "ref": "82b75f84-fb1a-4451-86d0-fba5aec5f53b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3258f89b-4ec5-4976-aaa3-431fce3c69e3"
        },
        "item": {
          "id": "e909889b-2acb-4717-af04-d2ff7b48fc44",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0b6c9557-755c-40c9-bd59-52000d0ce647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b3d4a0-b6a0-42d6-96ad-85e4ce65be4c",
        "cursor": {
          "ref": "796945e7-45d1-4c7f-ad32-6f0d7c62b314",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3c61838d-c531-4f01-aa2a-767ab8ae2ff2"
        },
        "item": {
          "id": "83b3d4a0-b6a0-42d6-96ad-85e4ce65be4c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "90e0a5ad-1d3f-4851-a276-1d960d5b9b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a295c8-a6b1-4bdd-b56c-6a2b26635f40",
        "cursor": {
          "ref": "23c106d2-ce69-42dc-a519-026f88ae51b9",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fb29891e-8dd3-465a-b156-39f0a71b5675"
        },
        "item": {
          "id": "f9a295c8-a6b1-4bdd-b56c-6a2b26635f40",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "42ea2473-1831-4b15-bd58-c29a49713401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872e778c-307d-42f6-a30f-796fe83a6328",
        "cursor": {
          "ref": "a8331c5b-0e7f-4e68-b2c0-b7088d203e34",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "454d9c9a-dcb0-4d09-b3e4-40f394514d73"
        },
        "item": {
          "id": "872e778c-307d-42f6-a30f-796fe83a6328",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "24951848-7eed-468b-aa70-838611d2de8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b902b3cf-908f-444a-8f9b-63b6a6209e9d",
        "cursor": {
          "ref": "38f05cb2-2312-4a43-aee5-a13ecbea27c2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "abefdfb1-9894-420d-b72b-80c54f369ad6"
        },
        "item": {
          "id": "b902b3cf-908f-444a-8f9b-63b6a6209e9d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d478a812-1e21-4f24-b993-99165d937aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea2beec-35b7-4d7c-9148-cbe1073e6e20",
        "cursor": {
          "ref": "998a92e1-2d49-4fbf-97ec-6863dfc27972",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "52394952-9685-4c2b-926d-50d25216a549"
        },
        "item": {
          "id": "0ea2beec-35b7-4d7c-9148-cbe1073e6e20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7af00425-5c61-483e-8dfc-f5019683eeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e2affb-9753-4b33-b1bb-f2768086369f",
        "cursor": {
          "ref": "909635bd-a9b8-458b-8f6a-13ce916f98ee",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5580923c-9cd1-4e9f-9a26-dab44bb8093f"
        },
        "item": {
          "id": "24e2affb-9753-4b33-b1bb-f2768086369f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9158f7a5-b39d-400c-ba25-6af35fe60fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe26eb-e34d-4d2f-a48b-9abfe2a35e70",
        "cursor": {
          "ref": "306a4237-f411-48d8-9642-6c92650112ff",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e906aa0c-df01-414e-a129-f44a4e961081"
        },
        "item": {
          "id": "c4fe26eb-e34d-4d2f-a48b-9abfe2a35e70",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b115f11b-79d8-47f9-b8c6-7819a4ad5370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ffcdc3-f16c-49a3-8d64-b4b74a0bbb44",
        "cursor": {
          "ref": "7aba337f-d8fc-41ad-bb00-5e1b7e605f5c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f3417baf-da9e-4a47-a855-c092e018f8ad"
        },
        "item": {
          "id": "c9ffcdc3-f16c-49a3-8d64-b4b74a0bbb44",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "82da217d-812f-4aaa-8f8c-e40079dd8b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d220c8b-61fc-4bc0-89cc-021ad1038087",
        "cursor": {
          "ref": "1c1581f9-21ba-497e-a6da-59bbb8b26558",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "48e65fd0-6e0e-439c-b647-d327ec8fbfd5"
        },
        "item": {
          "id": "1d220c8b-61fc-4bc0-89cc-021ad1038087",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3fdac1c5-b2b2-424d-b8ff-9b46c42b965a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df42fe8-74f6-4954-b2d2-de2c157e6c5c",
        "cursor": {
          "ref": "29fe12a8-d2cd-4464-a5ad-0922a935ce25",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5a8ae42a-6292-442e-af24-21c41515046e"
        },
        "item": {
          "id": "9df42fe8-74f6-4954-b2d2-de2c157e6c5c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c34b0df2-da18-46d7-8051-045cfb5255b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f68df2-c761-4677-a98a-5443ab0d978c",
        "cursor": {
          "ref": "000b7b80-85b5-4120-98ca-23fe4d758220",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c330c695-f339-4b16-ab49-e82d86a42e27"
        },
        "item": {
          "id": "74f68df2-c761-4677-a98a-5443ab0d978c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8cebc8c-672e-454e-ad76-9963f5ed203b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987f1306-6eba-415e-9db3-77b768e2989e",
        "cursor": {
          "ref": "b4f7c357-5c2a-4238-80de-acd1415cbfec",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "33bd39e6-1238-4d09-955e-1333750f1e70"
        },
        "item": {
          "id": "987f1306-6eba-415e-9db3-77b768e2989e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c8b13aaa-2fa8-464d-92d1-8548c33e4695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c304f5c-0487-48d7-8d25-56311bd218ed",
        "cursor": {
          "ref": "6e47d36d-ec00-4404-b67b-ffe21ae84d26",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3e369123-5c0e-473a-8552-1a780089f567"
        },
        "item": {
          "id": "0c304f5c-0487-48d7-8d25-56311bd218ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "98f9fcc4-5694-49f2-9021-7f7f7595a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6820e7-7e38-4532-8ef8-f0f2abdd1c5e",
        "cursor": {
          "ref": "aa1463bd-e30e-47ce-b8b5-9aa8764b1409",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "880e2d52-7b05-460b-8283-05b7f4d3f1a2"
        },
        "item": {
          "id": "5c6820e7-7e38-4532-8ef8-f0f2abdd1c5e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bfbdbb81-f5eb-462b-bb5f-d1effc74b71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2ddf19-fd0e-49e5-934c-68f3ade8099f",
        "cursor": {
          "ref": "6a55da28-4d94-4590-9e5d-818f9c34073c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9f2ae8c3-54c0-4132-827a-4fc1520db2b8"
        },
        "item": {
          "id": "3f2ddf19-fd0e-49e5-934c-68f3ade8099f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8885f862-afed-420d-b1e1-8a36bf56b4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b2c741-40b5-4b8b-970a-b5ceeba61731",
        "cursor": {
          "ref": "e72afb68-16c6-4200-a3bb-309aef2677c4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "43a635b7-746b-41fb-9e3a-d12c84c4472e"
        },
        "item": {
          "id": "d6b2c741-40b5-4b8b-970a-b5ceeba61731",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0071c92d-7995-4bcf-9a93-dfe190e02b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7232ff7a-7eb5-4bd8-b38e-17d975b7af88",
        "cursor": {
          "ref": "29f04f34-6670-4e45-818a-4c125be547a9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aa8e04ab-5bce-4ba5-9a4f-f578f63186f3"
        },
        "item": {
          "id": "7232ff7a-7eb5-4bd8-b38e-17d975b7af88",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a041c57-e270-4efb-9301-479136698ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b862d3d0-b0da-4c89-9197-bb41124d0cac",
        "cursor": {
          "ref": "3b3c9eae-8785-4e3b-8fb6-ac44a54851d8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e35bcd8e-d903-4ead-b15d-b1af4a475aee"
        },
        "item": {
          "id": "b862d3d0-b0da-4c89-9197-bb41124d0cac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5e4c1a2-b465-445d-8429-69bb29ac2365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6708916-ca1f-40ff-9cd9-bc75f9e9a609",
        "cursor": {
          "ref": "9fdead74-605c-4a84-bc60-51d6552b963d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5fddc665-9baf-4e7b-81ec-0c48e18f87df"
        },
        "item": {
          "id": "b6708916-ca1f-40ff-9cd9-bc75f9e9a609",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "223d64da-d933-4359-b94b-561d7210248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0c8e89-1382-41cc-8413-e76726451f39",
        "cursor": {
          "ref": "ceab0bb3-5866-447e-b5df-46cf0be25aa0",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9bdec90c-da9c-43eb-af2b-9a79a9c564c6"
        },
        "item": {
          "id": "4c0c8e89-1382-41cc-8413-e76726451f39",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8be3034a-9986-489f-852a-c6e31d94c097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb64921-d030-4e12-af4d-c545b8c54ea9",
        "cursor": {
          "ref": "47865914-3d39-4398-9599-c806e31657ac",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0761d67f-0bef-452e-9a2b-34465872e667"
        },
        "item": {
          "id": "1cb64921-d030-4e12-af4d-c545b8c54ea9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "062e6494-5b2e-4c51-9374-ef17207b5e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f3f50-9c45-4dec-b43d-f9c0dba7365f",
        "cursor": {
          "ref": "ce38bba6-5391-4d22-9752-83f12ce4451b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e7690d5a-1543-4598-965b-b0c8a056704a"
        },
        "item": {
          "id": "269f3f50-9c45-4dec-b43d-f9c0dba7365f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2afb4183-d987-4402-b9ab-9918caffb707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b80221-a84f-4577-8406-90cdac8176aa",
        "cursor": {
          "ref": "067ff42b-c207-4513-b306-66425c48abd0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "af28ba62-f10e-40ce-b38f-53ed8ca75fc8"
        },
        "item": {
          "id": "37b80221-a84f-4577-8406-90cdac8176aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7ed65214-b00d-484e-8908-b6d011708b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c25bc36-586d-47e2-b737-e3daefb43389",
        "cursor": {
          "ref": "6344bcb3-a209-48d2-bc18-67f45d2b6ada",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "72d9cddf-fe51-4da2-a64d-8bb6dccf008a"
        },
        "item": {
          "id": "6c25bc36-586d-47e2-b737-e3daefb43389",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9be9012f-90e1-4e17-8114-a0980fdf2989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94630e1b-f3f5-4cde-8a9f-58c1bc3314cd",
        "cursor": {
          "ref": "09dc99e0-6ae1-4253-b1ed-fee434577b6c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "df248544-ba60-46e6-8196-df4d654a11f7"
        },
        "item": {
          "id": "94630e1b-f3f5-4cde-8a9f-58c1bc3314cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf9dc5c5-e50f-430d-9bad-dbd27e11141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09889f4-83e6-45b3-b57e-14dc1508d9cf",
        "cursor": {
          "ref": "b36100e7-360d-4b18-8976-ad3c9c471d9c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "81033075-e5c5-4933-89b5-78bd62c94f8d"
        },
        "item": {
          "id": "a09889f4-83e6-45b3-b57e-14dc1508d9cf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3959985b-72c6-4b66-ba7a-a0d53ea856d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9fa9b7-d23f-4655-bd2c-10ed23fb46e9",
        "cursor": {
          "ref": "f365ee22-d467-45b0-ac99-606546d05b8c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aad3ff0b-4b1e-41f4-b28d-4d8386d9dbaa"
        },
        "item": {
          "id": "8a9fa9b7-d23f-4655-bd2c-10ed23fb46e9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "31f5c523-1509-4de1-a707-aabf55def526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a13c75-6692-48c6-b769-a4fcb2f8fce9",
        "cursor": {
          "ref": "786f50c8-d383-4d35-b9f2-938a0e09eaec",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "059a0383-f86a-43fd-a8ca-3b77c6c9f91f"
        },
        "item": {
          "id": "23a13c75-6692-48c6-b769-a4fcb2f8fce9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "69df5b30-1f51-4917-918d-02fde779b132",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693b53d0-b70b-4820-a0eb-84620a49a867",
        "cursor": {
          "ref": "008c865e-08c8-4c58-9bb1-efe5f17b8575",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cdcf5fa6-c158-4bee-a3da-80c0c62d55d2"
        },
        "item": {
          "id": "693b53d0-b70b-4820-a0eb-84620a49a867",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fc2fcb07-1110-4070-850f-3e48379dd465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99363310-08eb-439d-9105-0378db97105e",
        "cursor": {
          "ref": "4bd8646b-7741-4d87-b15f-d60db79d3a97",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d1a9939e-fc66-4285-ad5a-7c73b08d4dd0"
        },
        "item": {
          "id": "99363310-08eb-439d-9105-0378db97105e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2770bcd3-bc0f-4dc9-be54-f028d0fc31c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0817bbef-9b6b-480d-8186-8ec690b84e8a",
        "cursor": {
          "ref": "ca643326-81dc-459f-a0e9-b25aef0d071e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6d8f3a29-d748-4af5-b9d3-f640ebd9d572"
        },
        "item": {
          "id": "0817bbef-9b6b-480d-8186-8ec690b84e8a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2b4fdea4-bcd8-4cd5-8b0e-57c7ae7791ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7078a228-3234-44f0-9c4b-90e4fc4380f1",
        "cursor": {
          "ref": "a28eb6f6-fd50-4d72-89a2-651c47f32748",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "15d1d49b-5207-4af3-a795-cc0d8f5e7a09"
        },
        "item": {
          "id": "7078a228-3234-44f0-9c4b-90e4fc4380f1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d0e5d221-12ac-4ca3-bb5f-86df8f888fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8830ac66-9019-4114-8771-b4f1adcecc1c",
        "cursor": {
          "ref": "a7c67cb5-ccd0-464a-8f48-4f216da385bd",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1e527178-9d1a-44ca-bbcd-807966265280"
        },
        "item": {
          "id": "8830ac66-9019-4114-8771-b4f1adcecc1c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bbf838c6-2705-4939-9629-744b47ce8cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c23a97-39c5-4b0b-b127-2a12a1b94dca",
        "cursor": {
          "ref": "496156d7-b480-4a86-a165-b17bda0f50e3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "55a120eb-d92a-480a-a29c-e5ad636ed184"
        },
        "item": {
          "id": "e4c23a97-39c5-4b0b-b127-2a12a1b94dca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "43ae8dd3-4272-47a9-8dd7-7392dd2894cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935acbe5-10a6-44b6-b97a-c4c7fd5ca2d4",
        "cursor": {
          "ref": "80b4aa0c-07b8-46cd-8c71-d36c9b29dd3d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d8a35450-9169-4aff-9299-eddc26740d72"
        },
        "item": {
          "id": "935acbe5-10a6-44b6-b97a-c4c7fd5ca2d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "55d90e57-ef2b-4f01-986b-33610642e5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177bc28c-6005-430f-9285-3799e65945a0",
        "cursor": {
          "ref": "dc282c3c-7f9c-476a-a809-cec20e04cf71",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a90719aa-235e-4628-9413-51d283af12a3"
        },
        "item": {
          "id": "177bc28c-6005-430f-9285-3799e65945a0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "67dfd905-66e7-49e1-828d-010075db3398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc860bf-b4ea-426c-a33c-cf4bf1535808",
        "cursor": {
          "ref": "531b7409-ee06-48a0-a8a2-74081086674d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "91b9772c-6e8b-4b9a-ad67-c4a456bc9b0e"
        },
        "item": {
          "id": "9dc860bf-b4ea-426c-a33c-cf4bf1535808",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b4c73bbb-509e-4fc8-b902-b697cdedcff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e230d-1f35-4ead-91d9-aec4945784e4",
        "cursor": {
          "ref": "61e81f5a-9246-4a7a-a13c-4c322543f19c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1453c3ab-d739-45db-87a2-a69a665a1ecb"
        },
        "item": {
          "id": "e24e230d-1f35-4ead-91d9-aec4945784e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5479f16d-b432-4808-a584-ed37f52e901c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b68b772-100a-48b8-ac55-96318731203f",
        "cursor": {
          "ref": "fb08b15b-e5f1-42b3-9605-991b56950496",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e3fcd5a5-e1b6-4509-9fbe-29c661ea52e2"
        },
        "item": {
          "id": "5b68b772-100a-48b8-ac55-96318731203f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "55c7d005-1824-4f0d-83ee-bb9a971f7612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cadb51c-b6da-41f8-86b3-c839b9a96463",
        "cursor": {
          "ref": "3fddb08b-2a8c-4d4c-b669-98d4769e3baf",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c0dd3a63-de6f-47a5-817c-b221a3afdaa8"
        },
        "item": {
          "id": "6cadb51c-b6da-41f8-86b3-c839b9a96463",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fd78cbe5-7bbc-45ae-95a5-02c3433abb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb2e4dd-fca0-451d-a0f8-4785f48b9054",
        "cursor": {
          "ref": "b57e8ded-bd21-4e74-8f28-146732054965",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ca482314-b34a-45a3-9f32-c6709a592413"
        },
        "item": {
          "id": "3bb2e4dd-fca0-451d-a0f8-4785f48b9054",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b476c99a-0e84-4ff6-b0d1-9c8580faf3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1a5f06-2889-469d-a106-da6f934a17bf",
        "cursor": {
          "ref": "57f30715-13c4-495d-adea-cd3b46fa4b27",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5b3f880e-33bb-48c5-8e99-6e79cbee9a33"
        },
        "item": {
          "id": "ce1a5f06-2889-469d-a106-da6f934a17bf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "225bd9c4-56f3-4854-a804-6dda26c08acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66b10b0-f6af-4f18-a159-a5c9b8b2eb82",
        "cursor": {
          "ref": "aba12fc7-c17b-4680-a822-7dc1d8e98e9a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "af038de1-4a8e-4e64-9da5-dfd41faf35ee"
        },
        "item": {
          "id": "c66b10b0-f6af-4f18-a159-a5c9b8b2eb82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4f5b31bb-5665-4af1-bba1-af3faaf0ec41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f000af2-f691-4cf5-b5c4-9563dc8cbd38",
        "cursor": {
          "ref": "c6ea9cea-6255-4d21-91b7-036c51644752",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3dd245d0-1345-45f4-8db4-11ad098d98e6"
        },
        "item": {
          "id": "1f000af2-f691-4cf5-b5c4-9563dc8cbd38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4d3f1415-cd09-4677-aeb3-b85873366057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b1f750-9cf2-45be-b5c6-4a8e64bb7281",
        "cursor": {
          "ref": "071cd59c-7c0d-4f75-8264-c6496f755dd7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bbea415f-6e86-48d1-abfe-f1436b930927"
        },
        "item": {
          "id": "d6b1f750-9cf2-45be-b5c6-4a8e64bb7281",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eb021238-1c7f-42a4-b1b2-903d2eb3889f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd299e9-6761-464a-9290-22399d7b79f4",
        "cursor": {
          "ref": "6b49861f-815f-48af-a182-10bc539a9e20",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a05dc579-35ce-4b5e-a40a-547f7fb9fd10"
        },
        "item": {
          "id": "ecd299e9-6761-464a-9290-22399d7b79f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "72ac858b-c07c-4869-ae14-0798f8a13e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c94db6c-e1b8-436d-9a24-f9395b8b456b",
        "cursor": {
          "ref": "b66bc2e0-c014-40c5-b950-03cefb832336",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0512a93e-6c6c-4cf7-a3c0-0d3a900c7540"
        },
        "item": {
          "id": "1c94db6c-e1b8-436d-9a24-f9395b8b456b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6cf79982-acbc-4cc5-8353-80b3b2fa91c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e265d50-a763-4905-906e-eab05715c938",
        "cursor": {
          "ref": "2e6d34f1-8334-4efb-91b8-8c7a6060fc3a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6dc06744-be28-406c-b164-90ae013b0f1a"
        },
        "item": {
          "id": "2e265d50-a763-4905-906e-eab05715c938",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "021f25f7-02ad-4486-9840-7133b59d75f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9a1e11-3bc7-4397-9fd3-d26443eb3ee7",
        "cursor": {
          "ref": "bf2cfd0d-eee3-479f-b59f-4908052e8a84",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca0861f0-3069-4b9f-928f-fc9a6a5b951e"
        },
        "item": {
          "id": "1b9a1e11-3bc7-4397-9fd3-d26443eb3ee7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "51c0def3-4f22-4269-8506-abfcf94e9fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0eddb6-fa04-4490-84d7-5990cb037aa3",
        "cursor": {
          "ref": "116c590f-80d1-44d8-a5f4-ca8ba1d79652",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fe12a2a6-8e46-445f-aca5-c0483be01518"
        },
        "item": {
          "id": "dc0eddb6-fa04-4490-84d7-5990cb037aa3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ea679165-4957-41d1-965c-9f25c5c1ec57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68994a06-0400-4879-b445-76e93084de01",
        "cursor": {
          "ref": "635166cd-c602-4645-8a45-0d70a61b1b2e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2178d323-8c62-4b9c-8eb1-1658a92be363"
        },
        "item": {
          "id": "68994a06-0400-4879-b445-76e93084de01",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c8803444-4be1-4363-8959-b51bdbfe4820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e297ee82-4f29-46e7-949f-a5ed9193a168",
        "cursor": {
          "ref": "ada37007-630c-4971-80f4-9714fcab9e97",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "95ff5e47-8dff-4246-83c0-e07ff2205e12"
        },
        "item": {
          "id": "e297ee82-4f29-46e7-949f-a5ed9193a168",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ebb28aae-ded1-4386-adc1-6fbd77dbad47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942a2208-1552-4c30-8d22-8c9640deec31",
        "cursor": {
          "ref": "903d2273-5fae-4fa6-b0b6-d03652fe7dae",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8484d142-7757-48b5-b204-2b8d25a2da4a"
        },
        "item": {
          "id": "942a2208-1552-4c30-8d22-8c9640deec31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6e15be71-42ea-4a6d-8199-e074425e64d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef32b6f8-0d5b-45bd-862a-971fad99e10b",
        "cursor": {
          "ref": "fca20d24-9217-49dc-b9a8-6757013a09e5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "551d9ba5-c7bb-4a1c-9413-cf4e26a7e8cb"
        },
        "item": {
          "id": "ef32b6f8-0d5b-45bd-862a-971fad99e10b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "29799822-9851-41f6-87af-0f406fec62a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a167cf-aa07-4ef8-bec1-37a3c6b0a552",
        "cursor": {
          "ref": "debf382d-f068-4923-a227-5740b78c1b33",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a0ef1f23-73a5-4483-a41a-8593a0651629"
        },
        "item": {
          "id": "c1a167cf-aa07-4ef8-bec1-37a3c6b0a552",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "463740bb-aa89-4eeb-9148-0fad350ec62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aa2b51-260f-4a8a-97e8-3b40547994c3",
        "cursor": {
          "ref": "702d9fc9-8ecd-4b46-ad72-6c223dba2529",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c8b2609a-25fc-4906-a31b-a92c61eee802"
        },
        "item": {
          "id": "e4aa2b51-260f-4a8a-97e8-3b40547994c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b19835d0-586f-48f4-ad20-ecf306a3fce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e6da71-1d09-4e12-9443-09fdc772f509",
        "cursor": {
          "ref": "9386fddc-1f04-455f-9b74-676db3651620",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9109de8d-fd1d-44ca-8685-e217d66dff47"
        },
        "item": {
          "id": "f0e6da71-1d09-4e12-9443-09fdc772f509",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0edab1e0-8d68-4560-8fd5-dd3bac59660d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487bdf58-57f1-40f2-8dce-ae3ad379eab8",
        "cursor": {
          "ref": "6f287d4d-1fbb-4273-b8cd-16c7048b98c1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f874beda-2961-43e3-8f6f-dd7a1abf2acd"
        },
        "item": {
          "id": "487bdf58-57f1-40f2-8dce-ae3ad379eab8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2a329c07-5d57-424f-a52d-4ac274a51905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9474dd8-86b2-495a-af22-73aadf2e1451",
        "cursor": {
          "ref": "221d8931-38b5-4a6e-8aa0-e6234a62d8b6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d65c42be-916b-4a65-9890-f232300f256a"
        },
        "item": {
          "id": "e9474dd8-86b2-495a-af22-73aadf2e1451",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "197c4bd7-e340-48ef-a382-17999f70cc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7535fa-ace6-437a-bfd1-7e6a3529a25a",
        "cursor": {
          "ref": "192fb94f-b030-45eb-8418-04255bcb6c7e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ec6c4fe5-7cad-4c2a-938c-b2a3a3a2a0fc"
        },
        "item": {
          "id": "2a7535fa-ace6-437a-bfd1-7e6a3529a25a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d9bfab65-db6b-46c9-bf8b-b424249768eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8430c423-7fe9-4178-acba-e07af21dcabb",
        "cursor": {
          "ref": "095b940c-9f2d-4d64-811d-6702560106dd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7f42974f-142a-4e2d-982b-a959f08fcd09"
        },
        "item": {
          "id": "8430c423-7fe9-4178-acba-e07af21dcabb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "67b75812-bfd5-4fb8-967e-d42ee5cf5a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5ac982-c110-46d9-8bae-17a500773a9a",
        "cursor": {
          "ref": "af546e41-1b4e-48c2-b216-623158174a61",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ed22d53c-3960-4522-a748-8f6f4bd20389"
        },
        "item": {
          "id": "4a5ac982-c110-46d9-8bae-17a500773a9a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b08091d3-ccc8-4815-b1da-2fabb8670b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9463be37-fd62-4ec5-a3b0-50e0e5235185",
        "cursor": {
          "ref": "78f8986f-1390-44fe-96a0-f5f22461aed9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "191e3306-7047-4b33-8d4c-4330fe8c8132"
        },
        "item": {
          "id": "9463be37-fd62-4ec5-a3b0-50e0e5235185",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2610b0e7-fc6b-4ee2-afcd-0016c886be2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032db8e3-53a5-433e-ac1c-90f0ae8c3930",
        "cursor": {
          "ref": "3aabed7d-8b6e-4bf0-9721-e6871a5dcfe3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba5960c1-9a9f-440d-ba05-a3d365ae74bf"
        },
        "item": {
          "id": "032db8e3-53a5-433e-ac1c-90f0ae8c3930",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bf256f71-e235-485a-840d-0a0e6ca16092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affaf458-26fa-455f-abb6-2d3274ea3c84",
        "cursor": {
          "ref": "791d2559-f540-4c09-83e0-33bcaca7ded1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "259f39f6-97f2-451d-8a62-7a14f1b94589"
        },
        "item": {
          "id": "affaf458-26fa-455f-abb6-2d3274ea3c84",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3fa75e45-2e4a-42f9-bb85-713a48e173d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9eaa1f-3279-457d-9bd2-4241481d3e4c",
        "cursor": {
          "ref": "9c0c0163-ff87-4bf7-a5e9-6fba13ffb36e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b28f4c12-f96a-4850-8426-235004fe0efd"
        },
        "item": {
          "id": "8b9eaa1f-3279-457d-9bd2-4241481d3e4c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d4530141-2994-4c70-8211-6e4a93eca93d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91f87e4-dfe3-4522-9bf8-fdfa02dd211d",
        "cursor": {
          "ref": "18a24188-09cd-4cb2-b536-45f46adab096",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b8145eef-e6a7-4005-b9d9-fad3c12070d6"
        },
        "item": {
          "id": "e91f87e4-dfe3-4522-9bf8-fdfa02dd211d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "22e9a862-51ba-4740-87a3-b713f1579a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f3d9a6-5e1a-41ca-8057-e18cbc1dd29d",
        "cursor": {
          "ref": "84483019-2b84-4646-a09a-d3ec69c76744",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b5d423e7-0527-45cb-9093-7f75a704cc59"
        },
        "item": {
          "id": "d1f3d9a6-5e1a-41ca-8057-e18cbc1dd29d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0f2918ce-329f-4f36-b8a7-3cf6ad597f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e337256d-e196-49a2-8656-772190804bba",
        "cursor": {
          "ref": "6c4bf91d-2273-4096-b9ff-673b09b8adb1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b34f2057-2850-4b42-98ef-0eadf0c98a81"
        },
        "item": {
          "id": "e337256d-e196-49a2-8656-772190804bba",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a1cfdf55-cd12-4011-8612-4f6f9ea2b1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e6990c-e2d2-4f60-afb5-116e1033f310",
        "cursor": {
          "ref": "9697e578-9b97-43f0-b2ec-6a80dcc578f2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8e2bbb4f-9cdb-48a0-930e-8256a844593d"
        },
        "item": {
          "id": "66e6990c-e2d2-4f60-afb5-116e1033f310",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a80c53de-2236-40e8-af52-1f72aa7fd52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d4c95e-1cd6-4391-9450-79dce074d3d6",
        "cursor": {
          "ref": "8ba9a106-fc41-456d-86b8-7cb80ea272fd",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7c458289-c4ef-4a77-8ce7-686cf1819293"
        },
        "item": {
          "id": "97d4c95e-1cd6-4391-9450-79dce074d3d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4d94f2ef-afc0-48e3-a029-520a7bca5c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f60cc-370a-4b9b-8fe1-3dd1f421c815",
        "cursor": {
          "ref": "20f7a82e-d1da-4f54-bcb9-dc0062dba1c4",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "12da3739-09cf-4e02-a13a-f53b911cc4e1"
        },
        "item": {
          "id": "c53f60cc-370a-4b9b-8fe1-3dd1f421c815",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f7bae002-2b19-44bd-9292-c848e4f76167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadef80f-0f91-432b-b0a4-fee2c22d2ed7",
        "cursor": {
          "ref": "a7de9f23-6bcd-432f-bb73-10e0fe2dc4b4",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "abeb65ae-7b23-41ce-bb50-81d4bcbe2621"
        },
        "item": {
          "id": "fadef80f-0f91-432b-b0a4-fee2c22d2ed7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "766173b5-4cc8-4f1a-9af3-2ec0b8c3cd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070eac33-e6bf-4ec6-8e16-ab912f716e1f",
        "cursor": {
          "ref": "a0cc87ee-b03f-49ae-b61e-59513699dccf",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "71a47724-b270-4cb0-b7e0-552b0ed4963f"
        },
        "item": {
          "id": "070eac33-e6bf-4ec6-8e16-ab912f716e1f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d0b6a0b3-67cb-4a7e-a644-aa9ed4c1a23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f5cb8e-bd20-404b-a191-71de93e26b15",
        "cursor": {
          "ref": "0a0feb68-9f62-4e7a-be61-2b71f48cb545",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ad56ae25-acca-4b72-a51b-7c93b04966aa"
        },
        "item": {
          "id": "f3f5cb8e-bd20-404b-a191-71de93e26b15",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f128a9a8-ca8b-46e5-90d7-563ce55edfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24038c4f-1c72-44a5-833a-b6f9601635e6",
        "cursor": {
          "ref": "60b34415-6562-4778-8f26-a96256fe0ae5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "96731b33-f9f2-4e51-bf9d-7d597ea84388"
        },
        "item": {
          "id": "24038c4f-1c72-44a5-833a-b6f9601635e6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "57ec4b11-72b6-4589-bf42-dd1b34a821a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae9ec26-f0de-4492-a4a1-bccdd0216c5c",
        "cursor": {
          "ref": "44170ef7-a095-4baa-bc9d-c9e242dc3831",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a8cad174-29ec-4e1d-9f9b-66f8698dab53"
        },
        "item": {
          "id": "0ae9ec26-f0de-4492-a4a1-bccdd0216c5c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "15e628b5-c388-4285-b5d5-ff124767ea92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f556f758-0fcb-4a3e-88cd-38dfac773906",
        "cursor": {
          "ref": "ef2ac0e4-0911-454a-b502-f289e9538e70",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "96afe750-0df0-4ae6-873f-60070156d022"
        },
        "item": {
          "id": "f556f758-0fcb-4a3e-88cd-38dfac773906",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fb7d0f1a-1f73-4969-8fec-26d1f75e755e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046fb959-ecfb-4127-8553-d93741653138",
        "cursor": {
          "ref": "84fe8c7e-c418-4f9b-a08b-8d388b33a012",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d5630dc3-9282-4ac1-93df-731f2350ae94"
        },
        "item": {
          "id": "046fb959-ecfb-4127-8553-d93741653138",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "236315ff-534b-4f09-a9aa-4a54921e25d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb0773-73c3-4555-880e-c9f3d9b212dc",
        "cursor": {
          "ref": "8caeb48e-c59e-4e94-b46a-62afb57303be",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "413b291f-4b89-47bf-80d6-71e854aa4c71"
        },
        "item": {
          "id": "b7bb0773-73c3-4555-880e-c9f3d9b212dc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a8aa90cb-68aa-4024-abfa-0a2f495b42fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95e2053-625b-4790-acb4-38e585816f63",
        "cursor": {
          "ref": "c4aa6a3f-eda4-467d-a3f0-c17238eb3d29",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9804e463-0b3e-4adc-bb42-82195b8fb727"
        },
        "item": {
          "id": "e95e2053-625b-4790-acb4-38e585816f63",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1e2a6882-f761-46ac-9521-726ad541d496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f881510d-d0d7-4c43-afc7-82192aa63f5d",
        "cursor": {
          "ref": "69189c93-5d72-4ab3-b664-65aabfb622cd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e6330bdc-3f2a-4999-8f47-6a2a56ac88a8"
        },
        "item": {
          "id": "f881510d-d0d7-4c43-afc7-82192aa63f5d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d7f80078-f1ba-4653-967c-966fcf533bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f184ec-62c0-4da4-91ff-64af99ee8aa3",
        "cursor": {
          "ref": "6816db6c-3bf5-4c6b-8a4f-6f6c1d7edd4c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "87864a5c-976c-4fa4-bd73-ef9789e9de5d"
        },
        "item": {
          "id": "b1f184ec-62c0-4da4-91ff-64af99ee8aa3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d0f88192-dfb2-484d-ad54-ba487fe9e76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79083271-a919-4a7a-b7dd-42ad886d4282",
        "cursor": {
          "ref": "79874d42-3fc4-43e8-b32b-ac53a1dd0f78",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3429161a-3184-4c5c-bfa4-d8d946f884d7"
        },
        "item": {
          "id": "79083271-a919-4a7a-b7dd-42ad886d4282",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "07fed00d-87e7-4e98-925e-6c5c1bb973d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bbf683-2576-4263-a857-103874967b9d",
        "cursor": {
          "ref": "454053e1-5870-4946-8596-1e61257b9217",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3cbcdff9-75d7-4d86-acc3-6d1b7b69a44a"
        },
        "item": {
          "id": "31bbf683-2576-4263-a857-103874967b9d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "38495542-4632-4a24-910d-ac795277d42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe88b32e-c1b7-409b-9857-ff0c2e1de3c0",
        "cursor": {
          "ref": "787d73cf-a0a3-402b-913e-e9ff0e4eea53",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3ac09e90-0761-4b98-bd9a-0cb01e79b6ad"
        },
        "item": {
          "id": "fe88b32e-c1b7-409b-9857-ff0c2e1de3c0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "35bc4d51-a13e-4873-a65f-bcc0bc2830b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a53fa4-b631-474a-afce-238380a855af",
        "cursor": {
          "ref": "69f2e325-c395-4c72-8358-a2305eb83edf",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6558d59c-de82-4072-b057-494fe3904950"
        },
        "item": {
          "id": "a9a53fa4-b631-474a-afce-238380a855af",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6a6f30d6-509b-4920-8f6c-f6cf1d25fc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1707f57f-cdbd-4b65-b2ad-21d95746a4ee",
        "cursor": {
          "ref": "6df140d3-ed20-4bbe-8ab0-9c5e19e4c04c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4f0621ea-c40c-447e-9807-60c86f8d56e8"
        },
        "item": {
          "id": "1707f57f-cdbd-4b65-b2ad-21d95746a4ee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bd543927-d011-4073-bd4f-00169afa5d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b85cdf-dd2b-40bb-8d31-1a028f5bb702",
        "cursor": {
          "ref": "8f8923df-804e-4e22-a2be-7214d7c98a75",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3761fab6-6fc8-4f0f-b933-2146f053d7fb"
        },
        "item": {
          "id": "75b85cdf-dd2b-40bb-8d31-1a028f5bb702",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4c94fb80-4dc0-43a4-9a0e-15fe828c851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827ea6a4-fde3-4fed-a28e-fe1b9e889e53",
        "cursor": {
          "ref": "873227b1-90d0-4258-8088-ce23aa8f2760",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7f25e749-b899-4e48-91d8-ef498ecaba36"
        },
        "item": {
          "id": "827ea6a4-fde3-4fed-a28e-fe1b9e889e53",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0530ba14-a0a2-47de-90d9-a58bd9642794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14635a2-6136-42e6-8c32-18717da2b93d",
        "cursor": {
          "ref": "c76b3dab-f036-4d80-9023-5658160f9eb2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d9ec47a2-ea91-4fcd-8682-9927661d7d7e"
        },
        "item": {
          "id": "c14635a2-6136-42e6-8c32-18717da2b93d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6704b97c-d065-4ee2-8425-d4c43d606e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35349519-070d-4534-bccc-08386297ad22",
        "cursor": {
          "ref": "dd0aec3f-2684-4c9e-9ca2-06d8cd02ef4e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "181c0337-5d5b-42fa-be46-8e0595930801"
        },
        "item": {
          "id": "35349519-070d-4534-bccc-08386297ad22",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c11abd7b-b072-45b4-8276-4fc47adf6a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2f720c-8619-46f7-9c15-f5f20b3f465c",
        "cursor": {
          "ref": "68613a19-6d0d-42e1-9c29-23e7cba2b6a3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9ca31fa9-d031-4b44-b8cb-be14e321c035"
        },
        "item": {
          "id": "8f2f720c-8619-46f7-9c15-f5f20b3f465c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "13e904a1-34d3-4858-b275-dced849cd0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e659c0a3-2db5-4170-83dd-cd80f0a3e125",
        "cursor": {
          "ref": "018cd6f3-9ab0-47e1-b274-78b24e99e44d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d363f681-1a52-403b-8b22-a13273ad55e5"
        },
        "item": {
          "id": "e659c0a3-2db5-4170-83dd-cd80f0a3e125",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20174caf-bc17-47b6-bcd3-892f639c362a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e89eb-22a0-4dec-990c-731b18a87f92",
        "cursor": {
          "ref": "e1561694-9255-409d-ae03-fd9080ff8b6d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e0608c8c-763f-410f-9757-3946985c432e"
        },
        "item": {
          "id": "cd3e89eb-22a0-4dec-990c-731b18a87f92",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0239b1fb-bc9a-4949-a8d6-4ebf3a062491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e9fff9-9d74-44f0-b56d-ec270ad4eceb",
        "cursor": {
          "ref": "55df13a6-603f-4758-8ae7-98af44d8493c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "172e7329-2d62-45b3-9a65-96495b44e827"
        },
        "item": {
          "id": "a5e9fff9-9d74-44f0-b56d-ec270ad4eceb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "78c6a906-1916-404d-a829-30da054f86b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84af9c14-4b45-43aa-ac70-09a39f78ee4a",
        "cursor": {
          "ref": "1179c0be-af8b-457c-8fcb-cf1140810527",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "59c4dac9-c80c-43f0-9807-88e4023c5f29"
        },
        "item": {
          "id": "84af9c14-4b45-43aa-ac70-09a39f78ee4a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a3609f64-ec4b-415e-b728-f2fa27c84553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894dcaab-31cd-459e-b4c8-c1d0dfea0ff6",
        "cursor": {
          "ref": "2d843472-3dd1-4200-9e59-9fa23384eec7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ccacb1ca-af73-45cf-bca5-a6a30431390b"
        },
        "item": {
          "id": "894dcaab-31cd-459e-b4c8-c1d0dfea0ff6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "81ec3282-34ab-4c9e-8a59-6fbf33e00005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707997c4-f488-4aa8-8e9a-07d3f696029f",
        "cursor": {
          "ref": "0e9dfee4-52a1-4e51-8ad2-769507ead1ca",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "abe067fe-0759-454c-9692-85c306ff8dee"
        },
        "item": {
          "id": "707997c4-f488-4aa8-8e9a-07d3f696029f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aa8f5937-d3ef-4f7d-a81b-ebab41d08186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581aa303-96f1-4b17-a7e7-a8239d76245a",
        "cursor": {
          "ref": "a034b994-d3b6-4c2f-a798-395db6ddfb6e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4bfde668-61d4-43b3-a4f3-73e3035b2d5d"
        },
        "item": {
          "id": "581aa303-96f1-4b17-a7e7-a8239d76245a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "90cbe67d-6a24-4c95-9344-871609ae6fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d30524e-a14e-4590-b6ea-9e4f02c65ca4",
        "cursor": {
          "ref": "7b4a46e0-b69d-435f-865e-1fd66293ce42",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "84e0b7e0-4c85-4a6d-a3f3-f605071d5488"
        },
        "item": {
          "id": "1d30524e-a14e-4590-b6ea-9e4f02c65ca4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d8c8004b-4527-46a2-a115-a174dd8723c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84d89bc-af7f-436a-ab2b-d739a23e7171",
        "cursor": {
          "ref": "2d4dfce6-e016-4716-8161-55ac036e97df",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "49305929-b737-45b9-9bc6-14caaed6d6c5"
        },
        "item": {
          "id": "c84d89bc-af7f-436a-ab2b-d739a23e7171",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7aacfbe4-5d61-4f56-8548-fdd8e783d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f142336-673c-4c23-a81a-6a8541f55d7b",
        "cursor": {
          "ref": "bd7609fc-fede-4952-a1b2-c4c7bb94984c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "580b5238-f3ea-4a83-be7f-5ff409472f78"
        },
        "item": {
          "id": "1f142336-673c-4c23-a81a-6a8541f55d7b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "98ef0f58-d72a-46cc-9ccb-d4025fba5fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d786c4-d208-4488-99e4-b61b7f4ab0b2",
        "cursor": {
          "ref": "6c4dde3d-9c3b-40a5-88fb-fd50ed50cf5e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4b39c5f4-f2f5-4893-a186-b11d58745764"
        },
        "item": {
          "id": "08d786c4-d208-4488-99e4-b61b7f4ab0b2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "06eecfa7-998e-45e0-82bb-86bc834ab0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7da0c40-6233-4ad7-ad16-79ec1ed0f869",
        "cursor": {
          "ref": "2f7d4608-ae62-4f53-a537-3a491ae8398b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "601b6b06-7afb-4345-8372-0cd112f805fa"
        },
        "item": {
          "id": "d7da0c40-6233-4ad7-ad16-79ec1ed0f869",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0a5e1f70-2bda-4c0e-b95d-1d975b5374bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4f1f6d-e0f7-469b-87c9-220e09733d34",
        "cursor": {
          "ref": "da989015-b15e-4f25-8900-e1715080dcce",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9e8c4fe2-41e7-4b5d-a583-ca2149747500"
        },
        "item": {
          "id": "4e4f1f6d-e0f7-469b-87c9-220e09733d34",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c7cb198-ad68-40d8-aa2b-29cba14c0b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a325d8-d12c-4c81-b6da-ace00e062925",
        "cursor": {
          "ref": "7b2a3eb1-c934-4a35-9620-c4da7d6427ad",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b7caa2da-01a9-4c71-b38d-2de8ddbbf80a"
        },
        "item": {
          "id": "07a325d8-d12c-4c81-b6da-ace00e062925",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "35a2493d-e1c0-4bc4-942b-c405f2d6eb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40560e7c-6d7f-443f-8765-1c9e18978399",
        "cursor": {
          "ref": "d7995f16-9315-457e-8411-916c38ef496d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3605cc40-4452-44c5-9f32-3e9278e97f19"
        },
        "item": {
          "id": "40560e7c-6d7f-443f-8765-1c9e18978399",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "10b90431-de9a-4b4e-9975-938c392aabe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ce5fcb-08d0-4e8a-8776-9b4dbea1601d",
        "cursor": {
          "ref": "6f30dbc2-1fac-486d-b745-711618f25ef7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "faa135d2-e6c7-4a8f-acc6-b74ef1b3cbef"
        },
        "item": {
          "id": "93ce5fcb-08d0-4e8a-8776-9b4dbea1601d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "02b49c5b-6cd1-454d-885f-1de63ff4be61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb642d2f-14dc-4e5b-8957-4fcb08e56a7a",
        "cursor": {
          "ref": "deca13ba-93f7-491f-ab38-1ce5a6a16877",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "365662bf-5605-46ae-b1a1-10733c4da1d0"
        },
        "item": {
          "id": "eb642d2f-14dc-4e5b-8957-4fcb08e56a7a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "08eeb966-f791-4dc4-9942-e910de17e23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d28aa55-a0f2-41c6-9070-43d39269f5d2",
        "cursor": {
          "ref": "0260dff6-1c26-402e-8fc3-4917967500c8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9ff2db39-930d-46d7-bf3f-677dbb23149e"
        },
        "item": {
          "id": "1d28aa55-a0f2-41c6-9070-43d39269f5d2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6eb03dd8-6d0c-4270-a7c4-4ecb11181f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5381d3b2-08ae-442e-a1c3-0f56430f9742",
        "cursor": {
          "ref": "773fd95f-1b3c-4f09-82a2-8c6d37f672ca",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e72eec10-481e-45e5-b34b-4e95abe302ee"
        },
        "item": {
          "id": "5381d3b2-08ae-442e-a1c3-0f56430f9742",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56f275c7-8369-41cc-ba0f-7f16cd707fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d25491d-02e8-4b86-9efb-13cd649bf583",
        "cursor": {
          "ref": "8bed80f9-2bc5-4093-9f15-3bb1ab6b3fc9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "65c0a487-baf8-4c6f-ac61-fcdb31afbb79"
        },
        "item": {
          "id": "6d25491d-02e8-4b86-9efb-13cd649bf583",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7103322d-b019-4f3a-80cd-4d7051d2aee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28c63d4-56be-4263-bf23-e527ae6dea6b",
        "cursor": {
          "ref": "98220a6e-7305-42b6-aec1-417e614d9f35",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "28fc9226-0ecd-4795-90e2-c7014bc49d4b"
        },
        "item": {
          "id": "a28c63d4-56be-4263-bf23-e527ae6dea6b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d6eb1a5c-f16c-4704-862b-1cd61cca4fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820fcc47-ad02-4c7c-a6aa-5b14309252b0",
        "cursor": {
          "ref": "552e4e49-ab48-4775-b402-34f8f91b8312",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "442c3982-938d-429e-b671-2cc07fee5f74"
        },
        "item": {
          "id": "820fcc47-ad02-4c7c-a6aa-5b14309252b0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "50033cca-7a48-474a-a90f-c13dbb826af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9415546d-1579-44f5-9b35-9af08ac2a5ea",
        "cursor": {
          "ref": "4502397c-7d18-45ff-88cf-0107b44b3781",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "99c42137-6d56-4968-9d2e-8fb216ced6e3"
        },
        "item": {
          "id": "9415546d-1579-44f5-9b35-9af08ac2a5ea",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7a45dfd4-575f-4e50-818a-553d71d1c024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a817e882-b118-410f-a786-9a6d6d305ef4",
        "cursor": {
          "ref": "5c6b5fc5-2e2b-444d-b7f3-95ae208d5877",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "87bd6e70-7518-4e16-a7b3-d7c9ba7b0583"
        },
        "item": {
          "id": "a817e882-b118-410f-a786-9a6d6d305ef4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2daf0ef0-81f9-4f8b-9ced-3a1e55626370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2141cd-da30-448b-891f-0bb5cb7e3828",
        "cursor": {
          "ref": "b25fd790-f9e9-4fd8-bdd6-7ab630db7527",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "574056ff-b07f-4d3f-89a5-cb260f30ea39"
        },
        "item": {
          "id": "3a2141cd-da30-448b-891f-0bb5cb7e3828",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7cb68252-3779-4a3f-bf2c-55447ec471e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ca01a7-ca6d-412c-a66e-c39cfb9966b3",
        "cursor": {
          "ref": "7a566074-3200-4e39-aec4-a8c0234d86f4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "487a2525-5ba7-463c-af92-f97cea5efebd"
        },
        "item": {
          "id": "f1ca01a7-ca6d-412c-a66e-c39cfb9966b3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d886c93c-6369-4079-a40d-aacc627645d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8521374c-f05f-43bb-b2f6-0e007059d93b",
        "cursor": {
          "ref": "989f5994-efa7-42d4-80a8-f7224867097c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b4f00e4f-2560-4803-a735-080b7fcd51b7"
        },
        "item": {
          "id": "8521374c-f05f-43bb-b2f6-0e007059d93b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "16c44080-0ef2-4a1e-ada0-f57d6d115b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b913ced7-81d5-402f-98e5-408c2296d703",
        "cursor": {
          "ref": "f8e2f8ad-1630-4446-a53b-ec9033213dad",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "458eb067-1a6d-4fac-90b5-6367d3be3d49"
        },
        "item": {
          "id": "b913ced7-81d5-402f-98e5-408c2296d703",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b3f521d-adf1-4252-bd08-0dc5562a5344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa111b7-d4f8-4f24-9137-a95af7e8d4b0",
        "cursor": {
          "ref": "8fdc78f6-82c3-4206-a68e-544e031922c0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "73519389-132e-4fa1-8ea8-59d9daf7fe77"
        },
        "item": {
          "id": "faa111b7-d4f8-4f24-9137-a95af7e8d4b0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5230dd82-5dae-40ee-8c29-5949f6cb863c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174f66a4-e92c-403d-be80-fc583583175b",
        "cursor": {
          "ref": "1e92eaf5-5d6b-4e4a-af62-4711e4576121",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1a13ec3d-6ba7-4268-b41b-2a05dd24d248"
        },
        "item": {
          "id": "174f66a4-e92c-403d-be80-fc583583175b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c352e257-e708-42ad-b5ef-df2b7b6fcd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6c1657-214b-4782-b521-8c0669e50d5a",
        "cursor": {
          "ref": "8e5e2e4d-03e9-459a-991b-4cca62e60d07",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8e465249-de06-4fb4-a458-f671bff46dbe"
        },
        "item": {
          "id": "ed6c1657-214b-4782-b521-8c0669e50d5a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ebac36e1-5c3d-49c0-adfe-7b932c1769a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b3feee-cc44-4caf-9be9-b6dfa8e0ccee",
        "cursor": {
          "ref": "670c4470-ee8e-440d-9768-82e70a09af8f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "00424429-3796-4c63-afca-bc7de67f3001"
        },
        "item": {
          "id": "74b3feee-cc44-4caf-9be9-b6dfa8e0ccee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5aa1378e-29e5-464a-9476-127ec1467a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d4ad01-933c-4e10-8e67-80729f803bba",
        "cursor": {
          "ref": "f52f50e4-f438-49e4-a292-59a9de4b8a10",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e812e41-3fba-477b-99bf-2b5900da416d"
        },
        "item": {
          "id": "46d4ad01-933c-4e10-8e67-80729f803bba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7218e638-bb48-4c31-9602-3bd89b00dbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bb0657-66b4-4c0f-a6a7-bfeec777d7b7",
        "cursor": {
          "ref": "bdf98a9a-ce5c-49a0-ab04-de343e1b59c9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7139a7f8-ee03-45c5-9576-332173e8f97d"
        },
        "item": {
          "id": "a0bb0657-66b4-4c0f-a6a7-bfeec777d7b7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ac9a3b4c-dcb0-4286-900d-7659f2051d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc6577e-ab3e-44d3-8042-3d9c30a9b1e2",
        "cursor": {
          "ref": "1bc23022-3140-4839-a318-bf7928fbfaa8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d322cd8a-7714-4bae-80e2-da2967a5afa3"
        },
        "item": {
          "id": "5bc6577e-ab3e-44d3-8042-3d9c30a9b1e2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9b3a3bcb-44ac-491d-8c84-b2286c528702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ba66c8-eb41-41a6-ac02-bb3f9b667f81",
        "cursor": {
          "ref": "23d99e91-1e56-47d8-a54b-2250f5d59176",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f5612300-e0fc-4ac4-9cfa-bba494a9b96e"
        },
        "item": {
          "id": "67ba66c8-eb41-41a6-ac02-bb3f9b667f81",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "018295e8-a7c6-494b-8fa5-2c39bf7dd411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b129b7be-a167-41df-901f-02f05008fca4",
        "cursor": {
          "ref": "52e3debe-942b-48a4-8b90-910160301b01",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "07804ce0-2fff-4db6-9f52-6f65adda49d5"
        },
        "item": {
          "id": "b129b7be-a167-41df-901f-02f05008fca4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1adb43bf-50dd-440a-b6f4-6c7ae40ba6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d5b92c-006c-4053-b041-cbb200569407",
        "cursor": {
          "ref": "81da9c98-6ad9-4bf2-9019-1db44f53182c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c70816c8-b6fd-4d10-a02d-352079038a6c"
        },
        "item": {
          "id": "e3d5b92c-006c-4053-b041-cbb200569407",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "396949f8-7895-401a-b1bd-2889892539cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fefc79a-9050-4cb2-b414-bc2c8e6a8e37",
        "cursor": {
          "ref": "0bb18577-7c82-4794-80aa-5b1a3eb83480",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6604cee7-f957-4e38-9519-7ae80b45c11f"
        },
        "item": {
          "id": "9fefc79a-9050-4cb2-b414-bc2c8e6a8e37",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2ba48d21-d60d-4ad8-8fd4-98595021296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e00bdf-df01-4328-9082-e3f250188e64",
        "cursor": {
          "ref": "2a279d23-f248-4a80-8075-8777b7484a48",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1194fa38-5236-42d6-bbbb-20748ced1df4"
        },
        "item": {
          "id": "31e00bdf-df01-4328-9082-e3f250188e64",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3743d838-e244-47c6-9fe0-ccc7e30e40a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55076f32-3e5a-4b46-8475-7b40ce1d49a1",
        "cursor": {
          "ref": "938a7c9c-ebe3-41ed-9ba3-9335c6d9fdd4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "17414d53-7768-4f59-bf23-19da8240673d"
        },
        "item": {
          "id": "55076f32-3e5a-4b46-8475-7b40ce1d49a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cb155232-ca64-43dd-aa92-7d7f89f46fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6c736f-b634-4e15-9c11-9af007bfe03b",
        "cursor": {
          "ref": "16991d75-794a-4c61-ae81-4f9964684a48",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dc290ac-2751-4a53-80e9-77d97a9e3f72"
        },
        "item": {
          "id": "3a6c736f-b634-4e15-9c11-9af007bfe03b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0ca98cf2-a28a-48ab-8b8d-a87ed48a76c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88848e2c-d76a-4a9c-96de-f58e961a0c30",
        "cursor": {
          "ref": "a617747c-4daf-4307-91b4-cf6b48002727",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4d2de1c8-085b-45c8-970e-be66bdebfd4e"
        },
        "item": {
          "id": "88848e2c-d76a-4a9c-96de-f58e961a0c30",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "13b14c3a-0e2b-4551-8231-27902b46255d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec19cc8d-c22a-4417-ac9f-81266b197df8",
        "cursor": {
          "ref": "ce656bf7-f907-4318-82f9-01129db5c441",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "82f36698-ee63-4463-b170-a656593d6cad"
        },
        "item": {
          "id": "ec19cc8d-c22a-4417-ac9f-81266b197df8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7746415a-8141-4f29-b5a7-b12b7799d697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca76886-b64c-4eba-bc4a-d26f4fe5d4f8",
        "cursor": {
          "ref": "8b1b7d61-e76b-4d32-98ea-0c470d9bb484",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ee22b37-b936-4573-9c32-d000fd7c4c67"
        },
        "item": {
          "id": "8ca76886-b64c-4eba-bc4a-d26f4fe5d4f8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1178e8dc-99b4-41ff-a3b2-31b3b3042e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb043861-88f4-48a0-b9b2-df6d94876f62",
        "cursor": {
          "ref": "b600f170-40e7-47ff-aeb1-3971b0c1b1f3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9ce13d79-ceab-46ac-b1c5-e0ce51e29706"
        },
        "item": {
          "id": "eb043861-88f4-48a0-b9b2-df6d94876f62",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f68e1215-3c20-4d3c-91d1-456b0d40bda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2ad81a-cb73-4d21-a00b-439250abc5b9",
        "cursor": {
          "ref": "0e07f88c-1e45-4483-933d-8597fc595075",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "19c718a9-d9bc-4950-8ad7-0f03822b2d96"
        },
        "item": {
          "id": "4d2ad81a-cb73-4d21-a00b-439250abc5b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8b979a7d-af19-420d-aa6e-75fb4f8e8fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa37a95-2616-4811-9d3a-555106edcc1b",
        "cursor": {
          "ref": "b4de3b66-b120-4401-94ec-618a4c727a1c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b418a272-446e-4688-847d-6350b8cecd17"
        },
        "item": {
          "id": "bfa37a95-2616-4811-9d3a-555106edcc1b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e236ae4c-5e0e-4bab-83e5-3ab14256321f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f03770-e068-457b-bb3a-4956eb52a0cd",
        "cursor": {
          "ref": "c4ebba02-fa58-4976-b6ae-ff33c6299095",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7f00e9de-a73a-4f07-b4ab-6035465d80da"
        },
        "item": {
          "id": "92f03770-e068-457b-bb3a-4956eb52a0cd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "798ab2d9-654b-4c42-93ce-3cd6f4e4c430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d996cde-d416-4130-ae7c-bda0bac15c40",
        "cursor": {
          "ref": "bb3e3327-8f21-4326-bbe1-9e22168f1956",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "716dec5c-b9f8-44ea-9092-ee4436314e9c"
        },
        "item": {
          "id": "9d996cde-d416-4130-ae7c-bda0bac15c40",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6263938f-85ca-41cd-bbdd-e3eefa0e75f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0634c748-c011-422d-a58e-6287367d243e",
        "cursor": {
          "ref": "b3cd66f7-c309-498b-8d05-c74ad506594c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bd56c83e-e2be-4cb2-a3b0-cf3e85dc87c8"
        },
        "item": {
          "id": "0634c748-c011-422d-a58e-6287367d243e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a480e0ce-6e25-42ed-87a3-bccb5ee4c41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c955390-10f4-43d5-8e2b-ac68356484aa",
        "cursor": {
          "ref": "9a25919a-e2e5-4225-a7bc-f673a8e19e6b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "58e12dd6-0b90-44ff-a672-bfdea24bc3a1"
        },
        "item": {
          "id": "8c955390-10f4-43d5-8e2b-ac68356484aa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0751ba52-4550-418c-b4b2-6c49225dd204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d68ff6-06a1-4942-bda1-383cfdea61af",
        "cursor": {
          "ref": "046980a7-0097-472f-bbc8-24dbb8c7363b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0b3171c9-15e4-4c16-9a04-25019c0d15bb"
        },
        "item": {
          "id": "d0d68ff6-06a1-4942-bda1-383cfdea61af",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "93402263-5efe-495b-820a-54b2c3d0118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d857d639-f0d2-49e6-b7f3-b3af07251797",
        "cursor": {
          "ref": "35be51d4-e0b5-4422-ab68-74beaff137b6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "75551b30-8a86-4e6e-8874-b84ca108101a"
        },
        "item": {
          "id": "d857d639-f0d2-49e6-b7f3-b3af07251797",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "04c123e4-03bc-4617-9295-67c87e7bd4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057a51c8-eea4-4e7b-b679-013a483ef63c",
        "cursor": {
          "ref": "1b1164ca-905b-4f0a-8067-bbeb95d565c3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "94bf4b64-b1f6-4692-8a18-c98034510d7b"
        },
        "item": {
          "id": "057a51c8-eea4-4e7b-b679-013a483ef63c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "db71f489-6bf0-4ef8-9acf-95efa1ff5cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2296ff6-0fae-4114-bf78-802a72e9e19a",
        "cursor": {
          "ref": "080db92a-fcf3-42f3-80cb-fc9d1b33f5ab",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a7c38b0a-c1c7-46d3-b07b-0de9147bcdd7"
        },
        "item": {
          "id": "d2296ff6-0fae-4114-bf78-802a72e9e19a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1cce8dc2-fd72-42d5-be9e-65d1368c6a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb261a3-2ad9-4dcb-9128-e0e96faaf740",
        "cursor": {
          "ref": "97966b50-0b26-4541-86ba-88b97076001c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "60c8ee11-2aba-4faa-9715-c6cd45ff7d1b"
        },
        "item": {
          "id": "7bb261a3-2ad9-4dcb-9128-e0e96faaf740",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2d39d74a-5114-4f96-a287-17633f28aae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbc2e3b-1c94-4f4a-baae-ebf6a9d330d5",
        "cursor": {
          "ref": "532d2a40-33dc-444c-980e-9c8bf0882089",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "797bc07b-1c70-461d-8782-6a6614678f3b"
        },
        "item": {
          "id": "2dbc2e3b-1c94-4f4a-baae-ebf6a9d330d5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c09860c7-6189-401f-a08e-2ed4da700f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadb656b-963f-407d-88c1-a03495b1bfd9",
        "cursor": {
          "ref": "4e1a9075-8b61-4929-92f9-13098b7eb004",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a58b14ed-4502-4f86-bf3a-0122b53fa4f6"
        },
        "item": {
          "id": "dadb656b-963f-407d-88c1-a03495b1bfd9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "70db4837-6e3c-406c-9f3f-024f90913a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069b2246-7b51-4987-b82a-c6d8f2106e0d",
        "cursor": {
          "ref": "9d75a809-b02b-478b-97ae-bf2f7ab3bc84",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5bbeb0c5-e10d-4888-ab0f-dd1cdc66f232"
        },
        "item": {
          "id": "069b2246-7b51-4987-b82a-c6d8f2106e0d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "daad62b5-07ea-46f6-8c02-c2235f576628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ba7951-d8e6-47b1-a776-063564a451c0",
        "cursor": {
          "ref": "78f18633-a050-4261-92cc-6f23b673ae03",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0d7ae5ce-479c-4d3e-a4dd-baa2ae667d22"
        },
        "item": {
          "id": "c6ba7951-d8e6-47b1-a776-063564a451c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e5c1a0c5-6749-4a09-bb89-f7dfe999d45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ecaae9-522b-4acb-8541-181328b463b4",
        "cursor": {
          "ref": "c2421a06-461b-4429-9a5a-5f40674bfd98",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "82d64165-7c8f-4992-96f9-4b132b3877c1"
        },
        "item": {
          "id": "c8ecaae9-522b-4acb-8541-181328b463b4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b4edb0c6-66bf-426a-a3fb-fe9aa1f3f580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa55c48b-a351-43ac-b2b2-3cf756df2fb7",
        "cursor": {
          "ref": "f5f0206b-1702-4baf-9c34-f56a17a77f17",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a502f0cc-ae45-4049-878a-9fa0057a1a50"
        },
        "item": {
          "id": "fa55c48b-a351-43ac-b2b2-3cf756df2fb7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "229c90b5-8bd6-4cfe-844a-5dac2b8face2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbacd62-24b5-446a-bd0e-11ede8415ddc",
        "cursor": {
          "ref": "2a99bff5-f143-4b42-96e6-ae6e0d3a1501",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e86bf975-1524-4664-b23b-a2ad50ceeb6a"
        },
        "item": {
          "id": "1cbacd62-24b5-446a-bd0e-11ede8415ddc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "46844e25-631a-4f31-b392-f81e5d431532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be9438c-f723-4ec0-a6a0-6f37a5fd82ba",
        "cursor": {
          "ref": "fccba908-24e9-4ac5-945f-dab468c01552",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aef9cff4-4d86-465c-99a3-45451d5b92a1"
        },
        "item": {
          "id": "3be9438c-f723-4ec0-a6a0-6f37a5fd82ba",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "24220bdc-b497-42c5-889b-73e453ff7d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae22127-58f3-4c16-ad28-72a5173f60d6",
        "cursor": {
          "ref": "cc0c6e41-0ba3-43ab-94f7-962abca43b14",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5c7cf2fd-23b1-4cbd-b037-76cbe51fe840"
        },
        "item": {
          "id": "0ae22127-58f3-4c16-ad28-72a5173f60d6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "786e846c-e087-46ba-b250-487203c78d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa977ad0-50c3-4b26-8efa-ccc7ee4ff281",
        "cursor": {
          "ref": "7c7d9d54-6216-4301-afa0-b3c714fa4fa7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1288ce1d-210e-4d4d-a20b-0cf79b5c37f9"
        },
        "item": {
          "id": "fa977ad0-50c3-4b26-8efa-ccc7ee4ff281",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "65ea85fa-ea51-49a0-8ba3-af53db84064b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2489ea95-6e4f-4b23-8cad-6d20b6f2b37e",
        "cursor": {
          "ref": "c0918674-2829-4ad4-ba52-d3975a11e27f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "47faa054-2260-41da-872f-2f0b0dfe835c"
        },
        "item": {
          "id": "2489ea95-6e4f-4b23-8cad-6d20b6f2b37e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "221d37c9-813e-417a-aefa-5a4b2b2efb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf23dba-afda-4d4c-a5f7-148e5e9ab4b9",
        "cursor": {
          "ref": "14b8d3ea-11c9-4418-8769-68b0908faf0d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ca5a1830-f4d7-4019-ba1a-d22b52dc0d9a"
        },
        "item": {
          "id": "3cf23dba-afda-4d4c-a5f7-148e5e9ab4b9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b4cde5db-c800-4608-8e56-fa1bbc9fbede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51479823-4340-463a-9f64-a3e9d553ff7c",
        "cursor": {
          "ref": "75502bad-ced6-4579-93e2-46ffe7200b6d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "da784ec1-6ac0-47af-b05f-53ed5654614c"
        },
        "item": {
          "id": "51479823-4340-463a-9f64-a3e9d553ff7c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "89f37e59-322e-43fb-a7fe-d4651f7b1843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51193a02-61b5-4541-9070-c91882410176",
        "cursor": {
          "ref": "be0dd41a-be69-4570-98eb-3aa39604b256",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c1c804de-266f-4a9d-b5ef-52ef3b724b73"
        },
        "item": {
          "id": "51193a02-61b5-4541-9070-c91882410176",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ce4cfaca-44f0-45a8-bd18-a46cff1239ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e07bf66-638b-495c-a126-b09c6ea6f438",
        "cursor": {
          "ref": "39003e01-e58c-4ef9-afce-5fba65fc95d5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c321ee3b-efa9-4136-800f-e77115e9996b"
        },
        "item": {
          "id": "2e07bf66-638b-495c-a126-b09c6ea6f438",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "666b0608-2a69-4eff-a275-ac1e18fa66d0",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf83f93-534d-44a5-bbbf-a273ac7562c7",
        "cursor": {
          "ref": "51b705ed-647e-4bbb-81b7-36b90b8e668a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2fed6481-ebe0-4209-b42d-92d9609a4324"
        },
        "item": {
          "id": "6cf83f93-534d-44a5-bbbf-a273ac7562c7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6856d485-8828-4c89-9914-d01fbf5ce046",
          "status": "OK",
          "code": 200,
          "responseTime": 1612,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6b1abe-ff64-416c-9d9c-f6a0e05e8a60",
        "cursor": {
          "ref": "86bf5446-b8c1-44c5-96c5-8c514331c92b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a27a7271-a8bd-4134-b8fa-f3a50ed6a26a"
        },
        "item": {
          "id": "5c6b1abe-ff64-416c-9d9c-f6a0e05e8a60",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "467a2794-acf4-4c1e-98e0-d1b4fc557664",
          "status": "OK",
          "code": 200,
          "responseTime": 1691,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e195f3-8a65-41f2-b9a0-5ed3626cb1a9",
        "cursor": {
          "ref": "a80fd344-69ee-4942-8b69-a77852f22c1c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fbdfb511-4612-489b-baff-80c608b400c5"
        },
        "item": {
          "id": "b8e195f3-8a65-41f2-b9a0-5ed3626cb1a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5f0e98b2-1881-4f59-a05c-4e652fef5937",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e195f3-8a65-41f2-b9a0-5ed3626cb1a9",
        "cursor": {
          "ref": "a80fd344-69ee-4942-8b69-a77852f22c1c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fbdfb511-4612-489b-baff-80c608b400c5"
        },
        "item": {
          "id": "b8e195f3-8a65-41f2-b9a0-5ed3626cb1a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5f0e98b2-1881-4f59-a05c-4e652fef5937",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01cce61-b897-45b7-a073-3c9ea960506f",
        "cursor": {
          "ref": "e9fe7b18-9de0-4c0c-85e9-8ef2bb2a38ce",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "01667b15-d0ec-45d1-a31d-5d2df8628732"
        },
        "item": {
          "id": "f01cce61-b897-45b7-a073-3c9ea960506f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f47a9d68-f889-4296-b248-757aa37f4940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9778ea30-2f51-4920-bb46-bdbcc6ae391a",
        "cursor": {
          "ref": "13151213-e3c0-43b6-b1c6-7d0cc21efe2f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "28074356-5b8f-4fe5-bd46-aae02979eff3"
        },
        "item": {
          "id": "9778ea30-2f51-4920-bb46-bdbcc6ae391a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0c7f7ca9-9eeb-4184-955f-43c57e568320",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}