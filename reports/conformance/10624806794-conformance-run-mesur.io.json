{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9546c716-21ad-41fc-8811-ce3a6c85cc18",
        "name": "Clear Cache",
        "item": [
          {
            "id": "89244a82-84c0-4ae5-92b3-58007c472e7b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97e897d0-353d-4670-8235-9b515adba71f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "92d25f16-506e-4b18-bbbe-c5500f7b12e2"
                }
              }
            ]
          },
          {
            "id": "422eab12-c879-4913-87a5-e4111159b3a9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e971479b-3294-4438-8048-311358839026",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e06978ed-87ab-472b-8d6e-526bca5859e2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6403c17b-5480-4a98-ab62-aea0435d1a78",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "09001085-5c84-43e1-a045-8b55521f7054",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97a72e8e-198e-49db-9c59-5e7e75eaa169",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "067549ee-3f78-4479-984c-9ac15d753b83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "708823b1-dbf0-4854-aca8-a4a8d9632153"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83e57c41-602a-427b-add9-771949add5d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bac40bfa-c50c-4606-be90-ebcb76368e29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "db975ddf-afad-466a-b121-56837c07b0e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fec107a8-855b-4221-9a84-78a793c91b82"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afc757de-0ebc-4b8c-bcdc-9b2d819cdb74",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fe432ef5-178e-4343-b8e3-d316e675c0d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daa94b99-282d-4381-9309-09e014b0fc29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb27801f-d0b8-4759-83da-b3d2e0b0a373"
            }
          }
        ]
      },
      {
        "id": "d274ad4a-a93e-4fc5-af91-1e7123006b8e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "990646bf-a995-4a4d-8797-b3074e70181e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df6e45e3-c491-4570-ae54-f935b6c05772",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cf90fc5-d6a2-490d-96f8-63ad8004b372",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bba8a8-368b-4f18-9dbe-7cc3d0e88a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c43db295-2072-401d-9f80-d62500ed8a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73973b2b-01a8-4786-bc56-358cbde2e552",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc04bb0-aaf3-4575-8e4e-d04ac06e6c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebc6ef91-b9b6-497c-ba97-971518c50fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7918a567-00f0-4c4f-b3d9-3d861d747430",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa6c19e-1547-45ad-992f-f36a42b36669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a417d656-495b-45a3-96d2-c938487a1291"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2c9f6f8d-ed7f-4259-89eb-487523210edb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f27a5175-8a90-48c5-9439-aef7e4d07818",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114c6b8a-5da2-431c-a4a7-e5c437547c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fee69825-5079-4b10-b9d2-97a235c65bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f7ba60-49a8-4334-9899-97722a6d9b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f8ebbd-ee22-4ed4-aa7d-012b84b7afda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9412a04d-8383-45f8-a63f-9a6e4a5335e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "efad2bcc-cd6b-4641-9105-2b52a604a957",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d6e98a9-d3e8-4256-b044-8753c205e1ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9c01e69d-06bf-4ccd-80ca-83e980164c6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98c1aad8-845f-475e-8247-73f07781722a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6bc94ea0-4f37-4c36-a9fc-a6dac7a83872"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "308d555e-ee0f-4801-9a46-d0cb81cc6ec8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62c0b352-1a17-4821-a845-0213e18fe263"
            }
          }
        ]
      },
      {
        "id": "3ea76fa9-34fe-488c-a186-b43fca412370",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4901af49-6a8f-42e3-a7b1-fc77be1b9eae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3e97dc1-1263-4062-9ed8-dca0734eb7bb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ef76608a-db90-4d35-bad1-2521eb352b06",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d894c49-da12-4213-b9fa-e26b61c111bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b56d47e-c7ea-4cb8-887e-b510f767f11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518372b5-85b3-45cf-a762-d92b79c53bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a25a812c-be71-40d5-8f04-ab4f2a18274f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8a314-5859-4c00-ad08-47903d89e0d7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752ade65-2386-4502-949e-54db87ef427d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12437839-5d58-4eb9-a8d7-3c3fc0707735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb67c09-0c93-49ed-a7e2-09b67f6a40cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02be9f02-3439-4293-9794-37e0d6203449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aba3e1a-725d-427e-81a2-1239f82df9e8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd216e28-31a1-4383-964b-9848629033b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263f7910-8184-47cc-999f-ef36d838bbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a86951-0cd7-4285-a4e2-06b2f4424093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f161f5d-56e3-4bed-894b-f307392ed7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fd0291-9c52-44c5-b8e5-452a53e410a7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8146b9-afb5-4950-ba87-533528913537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f9afd3-6a18-49c8-877d-86c452570f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5537006f-bdbc-4351-9406-95471f8e3e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5eb1987-51a7-4436-a556-6df362ac04d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03e1f91-5e37-43ed-aebe-fc790814e6aa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a7a0f0-74cd-4557-904d-fa25e281fce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ceccca-cbd4-4672-9357-27bc93be4f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faef4bb-a97e-438e-a674-4abf3a26b2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27624fc5-00c4-4d9d-bb80-1cadf7a8ca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51fd8b1-08de-42c8-8e0d-1d5686f86cf2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb65852-ef09-440e-a4a0-090472f1650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025983cb-0805-471a-af3a-5999a03ec08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038abd2c-08b4-4708-8b99-c4381ebfa7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3765624c-7ee3-4aa4-a4aa-ca215de2d4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91323010-94f5-41d4-b304-709d6d83ff6f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff53692-eee9-4fcc-9ae1-3f41cd766378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37c70da-ff9f-463c-a147-0d68a5674723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03640ef-907e-4d56-a725-a5aa91acd662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7df8b691-73ae-461b-b0be-9a6672b481ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4946db3-d4d9-46ab-8c51-4deaddd4e94d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f950e27c-8c46-41e4-9860-c67b5a8b13b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7805f52-5363-44cd-9e2d-823b84b41769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97000076-6a5c-4b59-ac84-9829ddde524a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54329843-c025-40eb-be0e-44aa16cda23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a67c39-e2dd-47a6-bd3c-11af2bc15226",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d41148-47f2-49e2-ad7b-5cfedf489af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7373cb-2c66-412e-a7e1-d13e8f2eef95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab71677e-ba84-41dc-8db0-916be8e4582c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14f806fc-bf02-4255-b081-304390dda83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d908cfa3-dce9-492e-80bf-aa6a629952ab",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e67c139-8bf2-4154-90ff-cc4c9d95052a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48247bb-c392-4ade-9167-2eade6f4252c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbed85f-a576-4a97-9e0e-1ffaf2c266e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "833f5767-3abc-42d9-b8e9-0e96000a1d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce660b0b-087a-4b32-bc05-157cf35df924",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5358038e-e2a8-4466-8fc5-38fcc50fe219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f272fe63-715f-4eaa-9cc9-a4fb3c1efdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3945ff2a-16e2-4f2e-b5af-d4b831474cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2877347-fd59-46f6-b11b-6d01d6903684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73067780-289c-4b64-bbd7-7b7f414f4927",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef250fdd-959e-4e93-be67-c4a97a65576e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcf89d9-0e6a-4146-94a8-62314c0a2268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e784713-4271-49b7-91e6-83fa64f8f812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "259f07e3-ec95-4f16-b6e5-0440b5ad1c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a62db58-03fa-4494-9c99-392fe78a19c8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6449be8e-c72c-48dd-a933-acd768c270f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f483c01-5237-4512-8875-beeede83d05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702fc3d6-c2da-4dec-a4c9-88cf2ad2ab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cd5aaf4-963e-4718-ba1c-153c3f04b36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752410c4-e205-44c0-be90-00a9c638af41",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1e2b38-8ddc-4fd4-8a34-b2979fd11865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13217da5-3dcf-43c8-b21c-6e90112222e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e58ec3-9ee1-4f6c-affe-56a914b5dcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81a83efe-0a42-46b6-bfdd-b81796d90558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46a2777-5f13-46bb-9bb4-25ea2e40a780",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c55a9b-9bee-467a-9ce9-c1c165cd8ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2997f0e0-5e36-49d4-b8d7-be1e4de23dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a21dca7-0ff3-4f92-9932-058dc6c6dd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "220f4f9f-b904-4f04-88cc-1510644d7b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa260096-2527-4de5-967e-15cbf987ff4e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1140f5e7-a524-4c4b-a8aa-a260f9dd0e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8d5b0c-fc93-42bf-883f-cc4caa474f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47bad6c-3685-44bb-b4e9-005b32c81e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "640efe06-ba2a-4109-b8f3-4888bf80fe32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb089894-81d4-405f-81f8-9794f8cd6f69",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0af187-acda-48f4-8b77-f85ce87ed7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42455d38-054f-470c-b4b2-824a86cd1d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e64451-062c-4405-9aa4-ec95f0a5670b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a5e76f1-4182-4f85-8591-f8c31d8ce2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbafefe8-efc3-4780-b4c7-005c12c1abb6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0279a1-b903-4f14-a0ab-f19de95e2c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9d3971-2b4e-4676-a04b-8f3c9a88340d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a53dd4-270c-4526-a91a-40ab16fee1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "052be6f9-9086-4182-9468-a71b64542556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eccac9a-ade5-464d-89cd-4da260969eef",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4067d4d8-167a-4fb7-8458-dbe46e8254c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74838a73-4d31-4947-a516-d67718c0fd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa24e63e-80eb-4943-b302-f2d84d95153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c8fa62-2062-4b9c-938a-19928972127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47c9136-1d29-48b5-bf2f-7b9f722a281a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b6d4a6-5cc3-496a-a849-6fb2969a6908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10f0283-954b-4cd4-8f75-673e3045c31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e46706-4373-4f73-87f2-c97606039133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc12fc25-94db-47b5-ba29-46b4e095eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a49e0e-dcff-4958-a215-14194e3c25cf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c9b50b-c0cc-4645-b6dc-299ffa2eac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f7b26a-4b5a-46db-8b13-d45b732b2c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea45dbdb-9bdb-4e80-bcc8-1dab58b9e0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa18136-459a-4b39-8e02-c275ca30a156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91cd321-518a-4e57-976a-bd5f8224f3d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25649e0-210d-40c2-92d0-1747f5dfdb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0f0aeb-60f2-4332-aef3-f4aaf1538a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cf9194-70c9-45b2-aa8a-f6a1d5c4b736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b98d169-4ccc-4324-9d73-152acd6f3170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50417c9-8cd2-48ad-bed7-68912f09e0ad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80149e84-795c-4a2b-90a1-9d4e0100f39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a2368f-8d34-4e24-9e37-f93ee0f70b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8300b0-3ece-45e7-80c5-7761fb253208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4b283d-a987-4cc2-be1f-e9d4fd3bf66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f685c604-e60b-48d8-96e9-023bd41e898f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a7329c-ff77-4276-acc6-5fb94fcd88cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22770fb-e240-481b-be72-e918629b6935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c954abc-01a5-44b3-aebf-8c384a2cc490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f4eec2-b342-4d6f-813c-5fba6542689e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e36999a-4191-4fdb-b944-1f63311ccd6b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19258d2d-8250-4bd7-b3e3-c2b0c8ba1585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2d0ae3-1533-451c-9d53-76e2aa91dcae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866c11b9-db70-4abb-9845-9d362945d5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e675ae3-1c86-4124-b765-bc31d7f666b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736d4bff-7417-46a0-ac8b-f876bcf63314",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d263147-3e5c-4733-88be-3e9f4138bb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfb11c1-617c-4b20-b4c0-e1e6ef02d01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c378e17-897b-4bf5-85bf-8354c6cbb47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bcabeb-78b3-4c07-90c3-91848fafbe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b8e19d-2052-4ed6-8a0f-d830f11d7c32",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e80f70-6f25-48aa-8740-c13238170241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6e2f56-40fa-402f-8c63-3b5f1f70caaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70877af3-5a44-4f76-a72c-8180cf35daac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "628847f8-a536-4f86-acd6-c29238407d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68e6d87-2a8b-4dae-8ae7-41cd011fd337",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f120caf-c4c8-4cac-940b-3caeccf9a97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc29a70-74c9-40a2-8d96-aa75b7353469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d8814f-50b2-49a9-8d19-568dcc82d66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f029e79-8b7c-4537-8614-7bf474046022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1cd9d6-a599-4740-a181-c576189f0a79",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07d049-22ef-4710-a2bc-6468811f110e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802ffc40-97c0-4bb0-aec4-3b1cd3dec3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbf7e96-b634-44b3-bad5-7bef0f8b3346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52a24ac-b4e5-4302-a4af-bf12c82bf1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b51d38-eb9a-49f0-840a-444990d4d066",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aece50a-f49f-4194-b75f-53b0ee505705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a5d05e-b40c-4c3e-908a-ce82510853d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9a4353-59d4-40e7-bd9f-e3bcd509d56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e144da-e1ed-4010-9551-8bf4d04a3956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67303822-6946-494a-8969-b7e22f30ea4c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38eeba7-51a3-48f4-85e6-777d40c209b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb69502c-f0a4-4d09-ae75-c18735461f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a4a341-2a05-4075-8f36-83c8022c3c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9f3335-2b5f-4f85-b79e-f0757e07b4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465952b3-0ca6-4fcc-ae95-22edae9304f5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e68057-1413-4262-8215-dd305f642b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab06235-cd23-4565-a8a3-909bf50a4812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae3761c-1cd9-4636-a627-32701ba42488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f619987d-de6d-48e1-bdfd-19b1c1f9e593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ee3f13-bcdb-413f-a9c8-988aa31697c5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5644b36-522d-4ef6-bdf7-a6882c187758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda5a75d-2569-4367-b20c-502efcaeea20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fb84bd-0649-45ab-b3f4-067d4effe576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e0416c-5a38-4cea-abbd-a32c24212246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441e36c2-f860-42fb-9608-010c65f039de",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caae159e-d0fd-4bac-b760-00c0f25433b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd9081e-e602-4d58-aa29-3367e8f63d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda557f0-4ab5-4ac0-951e-674b5cc58b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "310bc841-5efc-417b-bf3e-22848d53630f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb098ba-bf6c-4880-bca7-a1cb30b60f92",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76acf325-4bd2-4d40-9263-f730272dc21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3f41ef-3479-4630-8489-b6f08b28684f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8ac401-5a90-4231-bc0f-331f72a7e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e84aa2c8-ad91-4240-bef5-8a7c690f586b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301f48f1-89f8-4eb0-9da1-0d9fa764e095",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548a5b15-67cc-407a-bd63-61ee3a6ce7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6b3de1b-92f5-45c6-838d-468fedf9f0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b1298c-fb06-4768-a1e1-39fcb1632770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "322b7031-0397-4c67-ab2e-5eedc150c1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de630240-52ba-4c28-9f2d-218ddba91961",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4612f5c1-3f7d-4721-97bf-36c3112af134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e04481b-28fe-48d2-957d-db99ebf72d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1ea986-2245-4ec5-a3ee-a8c267a74f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94744da8-417b-446f-bbbf-665f132f7b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0ffa03-ade0-4000-aae1-263f1ca75d97",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e928311b-5a9f-45c8-b5f3-8b9d2db2f120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08229eae-fff4-4ba8-bed0-abe50303c9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0c2f26-7a6c-4d85-90f0-5b6408bcbe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96aee2fa-8ede-49c4-8811-950b3726db55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b47b9c-5329-4dab-b0df-5b4228a03bb2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7273e4-cf88-4595-8b14-8b6014164fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fc6cab-2928-4faa-91b0-24918f71caa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202e3163-a4b9-4e3c-b681-72c229ab437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a808795-0e61-41a0-9ed3-3cdf65f1389d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1042e55-5741-485e-b2a8-3d73fbd6d13e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581b2b0f-86d1-41f5-a280-6831c6a8f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f731a1-b751-460a-a2cd-fb386ea62932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d84dff6-4229-4513-99d5-5de542ba0792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2cce3f-e8db-43c8-9b95-217beee75b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e809659-53fd-4992-83e0-cf0fd83b9602",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893e212a-cd4d-4b11-9de1-77d5ebeb8bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99427600-5821-459e-9612-9453f22f2b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9a8630-37ed-4805-82a6-1f8afac4f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b061a8-76f6-4b13-8061-8ace3f38d278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd008f8-c39b-4b84-898a-ceda1c76554a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f94307-c8ac-4436-a43f-8f9d9377a2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48883559-df10-48d8-8706-8a2029417ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367bb5cf-c823-434a-ac5d-64bc066d4d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3b767d47-7508-459e-b039-18277a12d01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5c29f8-fdd6-4f72-9745-05680f0a4268",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50977b21-4814-4d43-8db2-ea237137d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21437e1-becd-4839-b09c-0a2dbc3f99b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b276e-9959-4d15-9ad8-11c9ea09903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e59945fa-4dc3-4861-aaad-f3a67c153b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c28280e-72cd-4b48-8a8f-6afdbb6c3e12",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b7b93f-7b73-4dcb-9a99-a2f120d4db22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0607de-773b-4a03-889d-eacd9cf5911c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34052407-6957-4f01-bcad-30d083e31b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aeb55ab-ca37-4c6c-a830-a182d213a8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d7ce78-dc19-4f87-9c26-7014e1d93242",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10473af-1865-4f2f-82a1-59bfbe734d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cca7736-971b-4530-9221-ae183912916b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aa8aaa-a5a0-48e8-9770-67b39672360c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1240a5d-9dbe-43da-866c-49c89e341098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd97b13-9d84-4beb-a305-631c925e48be",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5670d20e-acca-41a1-8a25-dbc27ef9b7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa600f3-e536-4a32-b453-5a60d48b00b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2eaf83-ff0e-4bca-9dff-ae1979013eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "113472e7-b966-4e6b-bc58-d70ffa5948a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4b0eeb-feee-4373-87ed-c74c1a904f17",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d638d0b-9868-4aa5-bad9-1cd4252b918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8b9ddb-3e74-44e2-8625-fdb63d61116c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70363bfc-c8e3-422b-b465-df629cb99bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e401c0d-ce1e-44ca-a2a5-18c8641fe384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cc0852-9185-4d0e-b026-8d5cfb5bdf5a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd81bd5a-6472-43e2-9477-1a569803f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ac3387-a073-4738-8998-dee7577b6707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa54cfa-92e5-4b8c-98b8-27648b1eb9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f16bf788-3275-4261-9417-38f7f2576bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b446a06a-783b-4b11-a208-a1ef0ff6ce07",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f5d15b-e955-4522-9b02-79af90269950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d79309-2a26-49f3-bc08-27fa22f67d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ab2b16-3b49-4c75-ae55-c44b1c662b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d691e29-baf2-4e90-85a8-7037e00a6c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfabe72-229e-48ba-9834-2582a9d4e648",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728b2c74-db22-43a9-b25b-ff87bb2d76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed65495-8588-4f5b-9577-8465047ffa3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f97daf8-b1dd-4e35-a834-6ecd3add9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9a9397-ee9b-48aa-a07b-ef2eced74231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641864e4-f838-4eea-9a63-0983089066e4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb15ccc2-6fe2-44c6-aad9-0014603b3943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c701fa2c-fa51-403f-8edf-6c765be7a984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160b9aaf-72ef-430c-a381-5c52dc409c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e710b19-3a76-42f9-b0d3-dd98223c2663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254582b1-85d6-4dda-a491-0d4cfd44a285",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fde9286-f265-4766-9a10-33fee2b7fd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c49412-362a-410d-9a4c-eb523d1da3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6294d284-49f9-423f-ba42-52e011e51526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "446b1ef9-b93c-4f11-b993-a55178af2069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1189d56e-e1d6-41b4-b5fa-dec3e1c6f73a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15a3265-88d2-4b8a-99b9-c1146494e740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d807f9-f45f-44cb-a95c-d70695c03d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2915f666-0d43-4053-aa56-b9a1773ef947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc0f0d4-c68c-473f-a805-599628c687fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1fbd89-e181-4a8f-af4b-1a19edf1ee72",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06d09ea-2a3f-4ef4-9823-7b9eba3d75d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62724958-17e9-4e30-bbbe-61a1c75b6975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c69a38e-78c9-455c-bb45-9d28c1ca2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb46030-49d1-4be4-9b00-05ae6b20f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6dcceb-8cab-4912-99ae-0a25e78bf015",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4b5149-b6ad-43db-96d7-ceb5027016cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cb2d44-8c50-492b-8642-7bcd7535db2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c9ea64-0a9d-45e8-969f-799f36c50adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe56a2d-caf1-4db1-9d69-d0efb27abad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27ffd6f-0cd2-477d-a774-febc9a7096a1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f8061b-8320-4169-bb5a-027cd78d2e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aabc360-8ed9-41d1-8861-f83580aa7e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd8cc5c-0082-42db-9b8c-97e2adc367cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fa258d-4f81-493a-b156-e6e506cfa226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321728f6-dcc8-49c5-8a0b-af145cabc9d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f2350e-1d5e-4b8f-b0bb-0f77c0ed5d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cafa12-594e-413f-b1d9-3ae5bbf8df49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa71e7-78c7-4fb8-9d5f-79425c8d670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "376f4460-411c-4402-bbf6-e1d7f10827fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe646548-4278-411f-8225-d99b9fc0e806",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69448af-e810-462b-bb14-afe9b9b91766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18e52aa-333a-42b1-8564-572694f0a923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba396dfc-9757-4e63-b4aa-e0eae6280a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4ec84c-d3a6-4737-a058-cdf62804319f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c1cb9e-a5a7-4001-93b2-007f194fcfd0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268d26ed-e394-4569-b006-2d37880821f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dde26e9-3e9a-4aac-835c-c070f768cb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6458518d-e483-4013-8328-ef73dcb1b883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f366e14-e03f-4512-bb1d-94b18e87ceea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946c4ff7-e15a-4e05-8272-215ff54ffb5c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb9091b-f9f5-447d-a737-b440bf15a5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f321426e-f13c-4919-ad7e-14788533b8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3320580-49b3-4046-8851-220b99e7cb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "654ca012-7ffb-4be1-9990-d8f73dfa0f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2576f3-2a5c-4c10-b484-e0184ae65e77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3bd1f9-a1fb-4015-b4e6-649717a25d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2713eb-f107-4de2-9e5e-04ac4275fc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5b8868-54b2-4005-a475-4d03b755672a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b08693b-a414-4a23-96f8-854e919b3fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56609256-fc68-497e-90d2-fa827ad846f0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6b2371-a7a4-4bd3-b8ee-2fdc5ca892da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1088adbb-dec3-4eb6-89fe-eb558b881833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55629d7-4716-4f8c-a06a-317a0d3456b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecbdbf0-25a6-4aba-8c1d-3209458eb7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a45a25-5cae-4216-a05d-8d23e60790f9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcb3f90-ce75-4ba3-aced-30d5475c2acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcef7a1-fc1f-4c03-82e9-1f406e4d21a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c054cd-782c-452c-a569-18b684188716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e98444b-2441-43b2-a505-980db26115bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25578c50-b701-4029-bb6c-9b4b3666c10e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3ab423-ebf9-4dbf-b9fd-363d54a6cd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebb21ce-74de-4b74-95b8-e3acca0e5111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9ece57-afde-4f50-a12f-b91caa04de10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c59f4e-31e1-4c90-8329-6172f3f56f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade2d0e4-5d6a-48a0-98e6-e8d9f885cfdc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a8442b-31c5-4a94-8186-c9b8c75e726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7989245-f6df-4cc3-b5bd-cc360eda3297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9537241-a460-4afa-9c4c-e1cf643110dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d76c45a-aa99-42e7-bcf9-d2afbb0293af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7d019d-9026-46d5-9a97-1ba025958475",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06de0de-584f-4cc8-84d4-4eb29031138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd7cf15-1fae-4ffa-b066-59a755ddfaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d2d5c1-e00d-4aeb-a8fc-67472569e6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31cb66f1-b7fb-4cd7-8cfd-e582bbe746bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be239b0c-2e5a-49ae-b52b-44434770da03",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459523c8-ef59-49ed-8855-8984075d6f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5554c70b-cfb0-45f8-9f1e-0669cd63f0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84d4193-d1ce-439b-8434-7f56d244e7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2c44fe-3036-4b0f-ba9b-f4cab5a6ea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da368510-a701-493b-ad5f-17170b19c99f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb90411-de42-44e3-91ac-049ae45f2bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a92f77-2d44-4625-9f18-2803c72b3ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf21ca-ea3b-4a48-ae58-b21c8ef2a217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6a69b3-5e92-42d9-81a7-17e4e50be003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36830475-6f8c-45c3-8f93-9089f4f93791",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d3f49c-3613-4ccb-bff3-da44fa261c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadd6715-0f84-4ce1-87c5-744d356a8cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d9d324-3df5-4b16-ae24-acec81914cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5a849a-1641-43f0-bfc1-6ca45cf55a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da34162-fd3e-45c1-88f1-3a51c713f626",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0a8248-562c-4079-a799-74021e9c6eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2750b4d0-349c-4918-8943-72cec68a2503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ccb643-25f8-41d7-85e7-999635a31721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a171ca99-2ccc-41c4-bea5-1a76aeb8b723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3215e2f1-3b45-4933-bcad-d90f1cafdaf6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3771170-e896-4c0f-8904-9c92e7064904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7901457d-4a14-4fc9-b31e-1e67249869c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfdf262-2418-43d9-b984-c9893350e6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1424803-b11d-4e79-9a47-833b957f783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58764ab-96d4-4dc9-a499-24a199ceef77",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d47f717-bd2d-4a7a-a6a0-ee115fc4222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc7bbdc-2de2-4a50-9b37-852b670dc3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c8ab69-38e7-4ce7-a07f-82b4d4bbb039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad060d9d-92d1-4793-837f-e6bde6dce47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aebb36-85a8-44fb-8b19-30f71da4b615",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35707adf-cf04-400d-a06b-65c0de10dfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140a2d80-ca1d-47ee-802d-c651882535c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1738fe6e-c5fb-4de3-a881-5c73a09b91c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74cb7a25-fc2e-466e-baa2-4da01202bc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e38a9a3-1696-4fb8-a888-82619ff10eec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd75081-01d6-416e-adbe-10224be514f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f454465-15b0-467c-912b-5799163cdac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306cb302-9ca1-4d59-a661-35e16fb9a0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdaf16c-bfc1-494c-a364-10eafe76e66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff2d239-5522-4930-8314-2280932833e1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94563289-b5e0-450e-9277-4f1beb62e251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecedb0e1-ca65-4b71-9cb7-b98e26f3bb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a69374-9551-48dd-ab17-582dbfd8e7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4f5323-4139-4d6c-a264-5688929e4574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090aa160-21c6-452b-a1a1-fd0e630a2c79",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f208b81f-0102-45ce-973d-7b0d228dc4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1aac92-4159-4ae2-a855-59b1156502ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694593e-44ed-408d-9610-afbb97bf35c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4089baac-f1dd-4019-aea0-57a7667d18eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca5eacb-55db-46c1-865c-afc13b3301c0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0990110-0d52-4fe7-bba8-cb0c6a90ead9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e1dda7-e445-4726-8b6e-a825c58b7106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f799de98-eb7c-4efb-a12a-b6bafb2d5523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e86668-9c8f-45ea-b6a8-e71a660b213e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1192f883-a520-4ecc-8777-b2f9051e570b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80f6052-62fd-43bd-ae70-41054313fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a72c80-0b15-46f2-b3d6-f1502cf8552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07badcf-a9cd-4bf3-b71f-5ab3f0fdc9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "860dd0e2-1ca6-4492-b281-923c99c44e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fc7181-d002-4113-a291-02b793cec6b5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763d16b1-5f17-45e0-a78c-e567bd463827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1155cb8d-18e7-493c-a2f5-4439d9066834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082747a6-3e8a-42b0-b1f7-785848389a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7521d939-5b6e-4b70-a921-51e983d0d57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2051ec-dc67-42a0-ac9f-ac442f68d1c9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c9c3ee-c357-4294-972f-2e401c339d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0777e560-1b6e-4bc3-80eb-badf0ab52668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deb0855-0a10-41be-8fdb-51ed7c82e765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab01570d-6d53-4569-8035-0cb25a54909a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f10dcb-442b-427e-97bd-3948a403ec5e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf5d144-ec42-4698-9788-b291729038c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a234630-ec1e-4714-9509-ab46d1a1bd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab93bb-20ca-46c0-9938-295c1f80982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c87bb04-59da-4342-8135-ad0e92f1a567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2401dd82-8f95-4e34-8f6c-5c51bc6482d0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706d8d57-9b26-42c6-a7b8-799ae965d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f5e6c5-ce92-49b9-a561-f71bdd89c7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca898c2c-aff7-48f4-9e5b-9662b8c2349e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e6bc9c-55c0-4480-967b-90ad751bc3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe2470e-6b02-4f94-881f-0b746c7439e7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daf71e9-3c37-4ca2-bcda-32d57cef3e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c273c319-7db0-4cf0-a1a0-d1111503c1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ef5ae9-fb3f-4d35-b4cc-37f6ceb404f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71f1da36-07dd-4f33-82ef-96fe152b4f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9eab1ff-becf-4e80-81d6-57202be96104",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b08508-14ad-4f1e-b9e2-3db7108c5735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb9260f-7da3-4899-a09c-9f2642067fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2448de0-3f9b-4ce9-a9cd-38a95f595f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8488719-b62c-4e3b-9dcc-89474b45babc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3103099-df25-4225-afad-7331f60657c6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5bf701-9c3a-42a8-8402-1c5c3cf81f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5a3076-d348-4fc8-b23e-c6f43cc00e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b3baa9-5340-4a4e-9e92-a421a4c37984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ece648b3-1f52-415d-bf2f-116914967603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac40092-7a60-4c9f-a6de-f895775f741e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc92809-11c3-436e-9b52-d9233ceb7a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ba9975-472f-4503-9cdc-c4e750905446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d5e60-3327-4988-bcfb-0c78184a2fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fa1f8e-25dd-47ec-a69f-72fd5b781d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31429dae-c82f-40aa-beb8-221b0b7677d1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34634117-63f0-49fd-9053-a46ae7b54de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefd7153-e221-4920-943c-617cc55eebd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efa8640-3dfb-43b6-a5c2-c3a105d230eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3fa43a-a377-46f5-8143-043f60a813c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb75e30-5fe5-4965-8a6b-01cfea5b508d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b3c30e-d366-446a-bbb0-2084c94e9a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385033c8-6919-4879-a802-c60aca02c2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c535e8-5144-43c4-a49a-8b7f1b9e2bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8bff47-8595-4de6-8541-97bc0e49e394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176b88c8-a56e-4777-a267-1572cf777135",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fbc451-033e-4e3a-ade5-87e2048fc60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d827c4a3-1758-47ad-bcc8-570e863ac9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7b5d56-486b-4c51-8ab6-a6d2d6cceea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d888761-87b8-40b7-8220-d0734db46f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0e5ad5-efc2-4efa-aa33-170a7982835e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fd9057-66fc-40ee-8734-8422dbae4a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4ddf1b-3ae4-4675-b7df-a71a02e14a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a7dc79-33b3-4212-9fb6-bc593d29a600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b083ec09-27c9-4ac7-a948-407d090b3541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1c8afb-dd50-4fb3-a245-c7fd23d038eb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada29b78-a997-41e7-9624-7dbce3df6384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2639b83-e2d0-40fa-8d86-9b197e73bb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710f1cb6-4544-4b4a-ae7e-ec01f14cc95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5914a531-13e4-43b2-b208-ecfcf392eda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4617864b-614f-4434-a66e-e3165abe3a0a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3acf49-0ee5-43e4-8fd7-5b3838d2d506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ba7ae74-e460-44a1-98b2-f812873fb07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaf8c77-b595-41a7-95d4-cdd583aa2613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "800b5285-5fb1-4f77-9312-471c53274634"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f0f354c-d9a3-414d-bd14-9f953ba84c0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d1d53eb-4688-40f0-8291-5ed3d7c43451",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb168fc-6ef2-4c10-8e7d-56ceed6517a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3d173e3-4ae4-430c-867c-b04250a26786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb91300-0398-4239-8192-41fed846f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "946be2e9-bede-49f4-bce1-d659439918d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12ed2a42-07a7-49ca-ace2-d5409bf8ad16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96e007f8-5d27-4da3-920e-4b15b9b846ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f58aff49-af50-4221-87b1-b027bdd69ad0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f772f02b-9db2-4931-b6d0-d7f09a9edf50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11376f4e-3fe3-425b-b9ba-9a4aa6bad823",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca701513-a9c3-4a2d-b452-fdfdbc3d86c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "262b45cd-efe4-4cf5-a076-9ad6fd5423fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a9af1b4-e693-4402-b28a-22ecfe83bdab"
                }
              }
            ]
          },
          {
            "id": "e4264fd8-0dfa-4d00-bf92-f9cb316e3428",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07d3ed16-5df7-4011-8753-0a01367eebb1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d6bdc42d-3d93-44f2-9231-e07a25c5b050",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82b8649-0097-480f-bf61-1b6e310dcdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9fbd9c7d-02ff-4ad5-9e2e-784c7f7530b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17b1384-bead-4ed6-83ac-de52614b16fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1dfad6-e081-4b93-99cf-7c0fb0d905b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2090d422-6347-4af9-b029-c41c8f12969f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d86453b-9005-4d60-a2f9-731eea257ec4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bed56dd-8efc-43d1-96ad-f898698249e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e31f46ff-8e8d-4d79-b316-9d2c8a19bf81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf9fd8de-51ea-4bdc-bdd3-df7cc2ae442b"
                    }
                  }
                ]
              },
              {
                "id": "4c1842f0-acb3-4bae-8ee1-6040f311fb27",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b3d7f9b-f8b3-4f01-a35c-bf3ec1b2d33a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8553b326-9469-40be-aed1-1b6b1a9c4e3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc7f3a87-7f01-477a-823b-7757f1a3bb30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52f08fe8-e568-4895-b6e9-1ad50ff4b36c"
                    }
                  }
                ]
              },
              {
                "id": "b12e1396-b75b-40fd-a177-67e1b9b2e146",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55473a1e-675a-40f6-94c8-20a2b41b1ab2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a73dee08-3af1-4cd4-89f2-c508407db9ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "516982cc-5bcf-42db-a0fa-8999296193a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0d27430-dc22-4835-945c-857f2d24ea74"
                    }
                  }
                ]
              },
              {
                "id": "4d229ba6-8926-4ded-a5d6-3804ae26f48c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "755a8406-35b5-46a4-b416-3d80e4fdd445",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f8d440a-b7ef-4baf-ad04-63e04ec31a19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f5fc95c-30f2-4492-bc57-ef9af9aad5aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e949eabc-c92f-43ba-9f55-bb2d3ef67905"
                    }
                  }
                ]
              },
              {
                "id": "6485054f-bcce-4053-87b7-a5cb09ac0046",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08597dc2-9270-41cd-a900-a26eacd53273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e269f572-44f1-459e-a708-836bd383da72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a587e6ad-6f89-493f-9903-a2bd9c469008",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b5648085-d0b1-48f4-b2cc-93d10bd174c4"
                    }
                  }
                ]
              },
              {
                "id": "23cb6c73-8792-4f6d-8dca-e72ea8a27459",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5183c469-bbbe-44e7-b4f4-b73573e478cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ae11a1f-ea9b-4736-aa9d-09ebd4c3ac0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbd207a0-1af0-4fda-a5b1-e9e6ffe0e159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab107197-36ac-4183-a280-47f7146f553f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae2d489a-c0bd-4859-beba-30b5376e7703",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "873e6cbd-45bc-4e5f-bf4f-d5ad025e8332"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4684fbc9-6524-45df-9ff4-e499de8a5c2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13e4ae17-5c75-438d-a036-0fb4cd4ce280"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a09e35e-fd5a-4d1a-9e5a-599eb4f56c2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "29980a9d-8c93-403e-8b48-a633b5473f45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8b8720e-ac8f-45bd-9ed4-f03fb21c0b6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8f88a91-eed1-447a-b35a-3d6552edd903"
            }
          }
        ]
      },
      {
        "id": "a74cc1a6-c4ba-4b93-b17d-b1ba7609c4dc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dc770a73-dd81-47fc-9c27-57a304653f28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca37826a-7bd7-4aea-82e6-1decfebc71fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d751d40a-66e0-4d11-bcd8-30fd1b2cf22f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58c56ad-6999-4a96-a79f-7e27119d06c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeebcfe9-fb07-42ab-a665-d7e5c6b8ed6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d160f84e-ba29-4e52-9606-8537c0b9add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbac9702-c0c2-49f2-b272-e28484349be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664d3d79-e1c7-4bd2-8f55-9758fb5646c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74b53d4-ea7f-4ce1-84c0-6b0a2614e699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83a69e4-766e-46fb-80eb-0fbfbd7d68ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6008893-3c11-47ca-9e03-8fc004ac89af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad19260-beb5-47da-8b87-8e40ec27e6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7418d6-b319-48e7-a648-2fa0d598b7fd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cc3c9b-a141-4ba1-a6c2-627379315d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdff6b6-472c-414c-befa-1a08f2620992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b172dc6a-66e1-405f-a51b-68b77d339835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6c2c62-18f4-48ec-a01a-4be10b01d36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9f8e64-df9e-45f4-bcaf-e3e064e27278",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51c1e55-dc47-48c0-93f2-5b54d7139725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e873e9ff-10ae-4595-bd7c-ae4155d1cfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5037e96e-d192-46e4-813a-dcc9e77275e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c683b369-00c1-4682-8e75-1a416ef479f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4718576-23b8-45f2-9714-c848677db64d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c15f1e-67b0-4580-95bc-9876104eca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7469dafb-d3b6-440e-ba83-84691d27d6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8607c243-fef6-4a5c-9b7c-3236ab5b9845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b50a873c-1606-40ac-968f-c6b43394a32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb6433e-45a1-4c00-9679-17e7eda34d5b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdee8b89-0da8-44a0-bb53-3bf2abfd4f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123c37af-1709-4af8-aae7-45e95ac31591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6def5d-9b53-4003-a31c-17fffec9820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10f941e4-51cc-421b-85af-e3a3354cfdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc2c91a-df18-4d45-ba13-ba6caab83d9c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3937bfa5-f506-43b5-b59e-189d790f6611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53e5703-728d-45ac-b7c8-c175912d8309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b1eec0-8a66-4d50-990c-508df95dbb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f91864-52c2-4d84-9611-5489bbb0d3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495cb922-9979-4ee9-9064-403c8400bda0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50707def-1fe5-4f55-9d01-62647d5672f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b4ba25-0541-4c00-9bec-ddf1e147d3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8976485-3e08-485c-a134-fcf812f79719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3547ff6-2a0a-4603-87bd-b4cfebe0372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c99199-3e91-442f-b3a7-57a5c6ad1153",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86c2daf-e03b-4cf9-8d75-e6242bc1d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87fe887f-f9c6-4631-ae8e-8732a76922f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437f68e4-65df-4fd6-b57b-bf7a6757c469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d65b635-8463-4b62-b4ca-37aefcc28b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594f0f8-152f-4499-8726-ba1a544a4028",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f22476f-f1d8-4d76-9e1a-8a13bda44658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e9ea14-1bc4-4c43-935f-724312901e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f52c939-7d00-4799-b0c4-1f24830675f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bedc12d2-c3fb-4465-b3aa-a7ef10bcf56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a76ce07-6919-4f43-84c5-f269ee11f536",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96d9730-5d6a-468a-9bbf-eb2c5093c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad51a838-00dd-4801-87e3-f95aabe62bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc73fe19-93e4-4221-8afe-9d869584ed8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad2304a-7a8d-42af-8f27-3b1937992199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3502da-4505-4a59-8411-f874ac3758e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15152d31-ebb4-45f9-bfb5-a22b70d297e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c1a459-9305-4a77-9d72-3d3c2ab35126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ddfa86-324a-4c49-9f3c-9fddd0d5b211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de7c6f65-055c-411a-972d-c1a4e7f679e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43ba4b5-e643-44fe-ac93-8d6a730f5649",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799e2db7-56cc-4207-b46e-5d78bcd5b06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4732c398-4eb6-4383-839a-efe8dfc1fd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439f2b3-3b9e-43cc-ba09-20b09d041511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "837755f4-2eb6-4685-b68c-de2990e3cc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e1472d-d682-4922-aa78-f8000729c18f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a69084-11e6-4802-9919-1a5f475b1c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2923a5-cb0e-4e5a-afde-525b23168259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edf1452-f7ff-48ff-ac38-d23fe8aea6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c1212a-ad7f-4742-8959-06afccfbca98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3c1de7-e8e5-438d-9410-132e38d1a805",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09abfd01-b058-47ca-95c4-321d34507c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab80887-1ed3-453a-b68e-9892a94a05a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321f2318-57c6-47f3-8233-19070bf8c3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "895e0a1e-8fb7-4fd5-9ed7-6dc0fcad882c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389fcaa7-d5d5-45ba-96e4-90a5b7930be9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6863dd4b-eb73-4492-94b1-3836250866a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dfb31e-e919-4137-9ee7-8f7b5d6c96f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b364358-2e95-4910-889f-09b640f86616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56662fa-5d03-4132-b1a7-25945ae14c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cf3ff7-77b4-4f3a-b045-4f1e9036ba21",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3077cd-9d9f-458b-95cc-0df9e128d72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5017cb-a4a7-4e2b-aa92-9ff895df8a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5af688-251b-4b7e-8a48-51237f581e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "09871e0d-4b10-49e4-8458-53ac09f65bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a71d7ba-75aa-488e-9e45-025f01d4f125",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a7483c-afb3-4e36-b747-cd9713c261a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf947f9-e63a-47f6-8a34-219d1882fdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb8a84-ed3e-4b61-ad82-f59b9c84c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "595f224c-3051-45eb-b4b5-9980e970479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b56b25-095d-4afb-8c33-46a24aa23362",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e7c61d-84f1-4780-8f06-099376590427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3015c7b7-c654-4a71-a4be-8c4e69e18b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162c851c-ce1a-40b2-a7a7-752149f96cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f34a32e-2cc7-41d0-a79d-5db6886a1c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e3411a-a316-4bf1-8a42-1032b40deb67",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0ad097-f2bc-45a1-9df9-cea1e2788e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2ad1bb-ce57-4685-9c84-22f3bbb6f42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6721d5c9-a64d-4e2a-83e6-f00961766302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7664b5d9-48ab-45bb-b86e-dbc5fdd9cc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3837748-1308-4b23-bf68-0ce59b2f0141",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2877cf-548d-4a51-8c96-d2ae18d81e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c2599b-f4a3-445f-91bb-496c54d7923f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be037a39-2944-4096-9a4c-7358bbaba586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53584efa-aaa6-4bd6-ade4-12f35729289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d1a972-f0ff-44c3-ae56-ad3e020d9b96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6158eba6-31ea-41fd-bbf5-a10763422453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e249361-5540-48c1-94cd-214bdae01e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2596a78-2b06-4a6f-b7e1-2ab488a5bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21954ba5-b2c6-4d2a-a6db-cdd60c9112c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f3f29b-14ff-4867-9906-feddfeff0100",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a05b0fa-c8f8-4bfe-b797-f05bffddacb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea75007-4c74-4f92-ad37-5b076fe75678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b58be3-e3ee-40e0-8a78-122400d11820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1e31b3-e298-456f-9cf8-f5205aef543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad19139f-ae81-47d5-aadf-d9cac3a981d7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce74173-298f-4731-b7bb-bd32ce032155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11e9b82-ab37-4361-92aa-ef7f8f62db58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c749cff-ec17-4bee-8901-2a97c0185792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c640ab1-ce12-47c4-b9d2-e21106666a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c45e3-28d4-40a0-82af-ac6572d02ee2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87ad4d4-b61b-4200-8179-5f6decb628ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401d38ec-1606-417a-b890-cde6877f89c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269e9ab-8f83-4a8d-832f-cc0300c37f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce33098-377a-40f0-aace-1c0149fe7b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d99862-e7cb-4f28-834d-9b21ab628ba6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce94a3b6-6656-4aae-95c5-2da9fec492b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2565061f-0101-4da4-b5b5-f20740935715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c52697-c765-440a-870a-c5e6406e9b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba201082-c02e-403d-ab64-1255e989fad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aff9bf6-fee5-4524-84c1-f7225b241f82",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bd5d5e-5d89-47b7-b4ab-2c42d9b1a043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae1648c-254e-4df1-b2de-fc3d3a92583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7477651-507e-49d6-8d2e-0f09da77ccdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7865ca3e-231f-4f5d-acbf-452d5aa5d4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5849588-e765-4959-bdae-8300e9a6f30e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139930e8-b7f7-464f-b64a-bf59d8e3f84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b43d2c0-17f5-40df-92d5-0dae8e078456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545d5ece-4bed-467e-a92b-e57b4051c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4f07a6-479a-4ab1-bc93-83ecee35c5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2427e05-8d04-4d21-af19-39bc9e21807d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0d5d4f-521f-4914-855e-b67cec56cabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e316a0cb-6a92-4478-b862-7557037285dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb06a3-d658-4c94-b2bc-1985e70b9df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a322e0f8-c971-4791-91c9-2096af0155d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18364dd6-15ec-466a-bd1d-1943df10ec6e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d01d8bd-7294-4241-93f2-84fb829054fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446c9f0c-b131-40a3-850b-5e3126fc3087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27bf5bb-016a-455c-8d09-cb8c8b19df3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "239f77d9-e0c9-4b44-b316-0a1870bf4504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdf6396-323b-4535-abb3-1cb608db0414",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5ce2cb-6330-4681-b08d-4bb76efe5346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edf8505-e04c-4a67-9840-76b77f8fe7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6ab9f5-d98e-4e87-9474-eb5d40eb283c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3de9b106-40a0-4d7b-b3dd-5b930df542f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6052d1-2c66-4759-83d6-c0c86e885523",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db93e87-d974-4827-93aa-ecd2a2044001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c093ff-3010-4064-b924-ec0b59109eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398ebdc3-f196-4f70-b995-f05fea68ed7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f10bda-05e3-425e-b255-7fcc693259c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96407b40-bc7f-4fbb-b80e-af66e76a41cd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bc9140-3fae-4e15-b80b-b7119ac665a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739e798d-816d-4746-b0c0-2aed7e60b325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8633d6-2aa7-4ab6-97f1-26504f586ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d874d49-1806-418b-aba3-3f9f10c43a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54bbe79-b501-42e3-90dc-03356d012cbb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff3c3cd-4403-405d-9f2e-910e78e2495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b64926-3209-4911-a584-8a2cda08d45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf7c2ea-ae0e-497c-a99c-67f99eef5c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e622e10-1661-445e-9bb5-271083bfca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10807d7f-011c-44a6-add1-db568f15267e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459f25a8-1ce7-4d5e-b2a7-9d093b4a2fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f21b2f6-89b8-43b9-a7ec-c051bf672b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b32c2b5-d741-4c41-a8ec-7a496eb4fb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583971d9-e792-429f-a988-57a58340e5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75d75bb-a648-4183-aa35-e2f7077de44d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879b425d-9761-4bf8-a9f1-ec6be135164e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e08c5f-9136-48ff-acc4-dfaa1b78dcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9945dd2-6f94-4f7c-b9d0-e8658da2705f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7749cc4-9ee9-44ef-b2ce-9f556b986cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a77bb5b-f8d8-4ab0-a8ca-ce631719f85f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01f441b-898c-4063-8ea5-a122a3981edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8819ccf5-669d-4e78-b91b-ea86c4780f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8ce219-ef35-41b8-a206-510f14b95c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f151754-1279-4ff1-8bea-1f8373e14f7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d578f299-5a7d-4566-9bdd-15e136baae0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73285365-b5f0-494b-85d1-b7cba953b595",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd899b8-075c-47a2-a095-d09b9e9113c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d9aed72e-ceab-433c-b7ef-1d684ae06ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e719f207-610e-477c-b010-9e186f226537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39f0b366-909f-41dc-b062-617c8af609df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6e40a20-9a01-466c-bb00-d17604741bd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f14031e-e8fc-4072-b7ad-83c156951873"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d8eec1-ee0f-4fc5-8329-aae97670c34e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46df18ff-5d8f-4ccf-9e97-cf35e82f32ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "849c463e-6f4b-4000-bed9-41b3f55a727e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f3055966-bfbd-4af2-a35f-dff93160d23a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42553b13-7024-4110-af17-fed8da011b9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3a07c4c-bfbc-4b71-8ccf-8118ab23a747"
            }
          }
        ]
      },
      {
        "id": "2290ba79-d45f-4c00-a9eb-d56a461f0698",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9f97bdf4-4ec1-4704-8151-dd450997c35d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50120592-b486-4911-a17f-81a770a5df28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f20aca9-26b0-4b59-a77c-690f5dcda94a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fc7d82-4ee1-4f72-a9f7-e1cb314a9078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467a252d-d914-4f21-bf0b-67b79b1a471e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b1b742-53f7-4494-a4a0-ad27a7b61d48",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f51ac6-a881-468d-aebb-76bd9f14cbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba7559a-8323-4618-baa7-e1182dd4f1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcd4cc7-2aa3-420d-8af5-f8d12a301130",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ada44c5-dbff-49ff-8c8b-d870ae00c429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48308445-ac37-40cd-bae4-48c4329f4631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ad3ff9-85a0-4c17-a039-40383d5a913a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d14f936-4744-4fd0-af08-573406f3ec29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19248a71-fe16-4f9f-9895-81591f08cd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429840a6-1ed6-4da7-974d-54642192ff90",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27bd990-b451-4fc9-a5c3-f698a0939a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda9a500-5a73-43c8-95a0-67b482fbe685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e02d548-99d5-48d9-b327-d26fb1e4aa6f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16872fe-8481-4223-bcc3-d5ed76922f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40894e0b-4738-412b-a4cf-659ababf8c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26506e62-0218-4861-89fe-5d996eb944fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fc1dc7-8ad0-4ed5-8664-a24b8c4db782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c753a81-b809-409d-8dff-6189279ca1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc90725b-7c37-4d31-8e5f-314cd4a71d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77519ae6-8be5-40f5-852a-b436a8535b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77400aa-ac96-4df8-a71a-7220c7e68120",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1235eb02-7dda-42ac-9f35-ad7044002262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31b04d4-dc66-4377-8acb-16a5afcc70a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea13125-aefd-4403-b31d-7c5887c5b845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da93e81-de6d-45be-be93-6d764a065ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a340e3e7-5648-455a-8b71-66b03e2615cd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6ea841-e8fc-4c23-9af9-abf284add2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c847ff6f-f4c2-425f-bd93-798244dbe284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c8a2a-6989-4a6b-8e43-43fb770bcbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe67ccd-8cb7-4b8b-aa02-f07ad74af38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa659973-c2f7-41df-a435-ffcd3e40a6a8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ccef75-9190-4095-8887-6718ac55cb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e89436f0-aa55-4b19-930d-b42ac2cd56ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4201e1f6-90c5-4e06-b717-25371e076d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c53d2b6-45e5-437d-880f-882298f07ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8e06ae-cf5f-462e-9950-8f5f64584199",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c496118-0f90-43f3-93b2-f3f5f54b00f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85da717-8872-4674-85d3-82817cfb5efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d19c2b-a3ed-4c87-b9d7-b5a9d35c5243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8600dd47-797f-476d-9e39-c5a273ff39c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea513a8-d93e-4489-a92a-4c3eb6c6ad9d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d31bfb-f070-4670-b69c-74f82e9d1410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9e1a74-054d-4e7e-bdfc-ef08074453bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8375eff9-3a2d-49f1-9e09-f68b448f3991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9b28d8-11e2-437f-9af7-ee3d9ab7e370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4978dca8-7ac5-479e-a4c8-ea48529076eb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a404c77d-7e4c-419b-8e18-7b1feca8eed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e5780d-5641-4bab-a6c4-f25b4e0c749a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30cf293-4081-4849-bbd8-a9391d69fea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7335422b-4089-4462-9e21-2566028f8b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8c8fdf-5f72-470c-8e79-6bce131b53c3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c659a4-6961-4def-876a-d206394c1665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e842d4-4475-4503-bff0-f6518e9d0aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc1ca92-3d55-4f7a-a60f-cb14ba159e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f18893-c7b5-4b7a-a7c7-6ad72c012b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6558d811-c9d7-44d9-9f9d-bb7194963509",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791ef27c-17eb-4e10-89f0-a98d531915a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df186501-3812-4ee0-ba98-6f23e846e3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b2b41f-40b3-45f0-8b7a-3bf3b4e1cd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37ce7dd-b656-44b3-bdc1-6f1af3373c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31321056-56d1-46a4-8db2-03d216c0d643",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d399d20-7457-48c2-9c9e-2d48750ae5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca015ccf-e73f-436e-9502-3d641c8ff3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9532d559-5f4f-447e-aaae-a1cb56f6b3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9d9bef-5851-4095-8f66-8a359353eb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5f5c68-f1fa-43bd-ab91-511ba6b45b13",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edc43b1-4c31-492f-a98c-52074f65f903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e176d35e-f58b-465c-ac98-85b83017c3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac312e3-2ad7-477d-856c-6bb1d30115ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fd782f-25d8-436d-8137-b72895d306e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a7cceb-ff2a-43e2-a713-da8a0b569f15",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d530a9f7-09ce-48fd-b127-79d3113518a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca9be08-9e50-4d64-a985-9b31697562f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5594fe88-1011-4b06-bf42-aea50923d061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0adb87-e08d-4a88-b634-f29343f77bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1029d36-38ac-4a1d-8b4d-a22514c3d9ca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4195c600-c9be-4845-af52-a1a091684242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c4b3be-7507-47e3-b103-8be9263c47c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96036501-b738-4916-ae7f-884c7bd840eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262f6508-3133-487b-b67e-b7273386ad88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d891d71-00f2-4c86-9389-23aa958a61ac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ea989e-29ff-4a61-b836-ba97f19d2e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16edc41-6c59-46b5-a295-8d69b6932acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185df336-28cc-4d33-97ef-d553bae054f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f543393b-49aa-4c5e-b181-f3861c2758ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c538af8-6cea-4cce-992d-d63beeadbf07",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa1640b-6c31-4e73-b2fc-eeb05f9a1a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566ee23b-f5dc-4b29-85e4-c72a86e293aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60578a43-d91d-4b5c-b82a-c78c3fd1d444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2582ec49-c9e6-4394-bb36-d17aa5f24fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a05b7f-79c0-484a-928e-b8becb312799",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3a522a-b10b-4e55-9bcb-80511edc16af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf16668d-ebb1-49c5-b7ef-e6ca9851b619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1dec39-ff48-4129-ac75-ebc3a8993d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5743a0f-915e-4143-8b4a-09831583d94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd667fa-3169-49e2-ac09-eb1d8d052036",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdda341-2111-4f6e-8cc1-9c323e04ca97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35b92af-80ad-470e-a29e-8f901ed6dabe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2488b0ac-f4ce-48a1-85d0-c1e55225b710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563fb94e-ab84-4fd3-a0fb-3e1d22c3c391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3414da-94fb-4bc2-b241-425172de8eb7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2f1a12-747f-4a8d-b940-215a8b6a3233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be58901c-abfd-4785-ae1c-410f7385d2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e2f578-d6df-4145-9869-b4baeeaaad1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e91b42-b7d4-4ddf-bc92-8b23d98eaf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c744fb1f-1f43-47d2-beb5-aa8ab8bc8fb4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15880979-b139-4dd6-a78a-5be9cb62b788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab76921-49e9-4444-8280-e183e0703689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2805b3af-815d-481a-96c0-88a26936ea52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0cc084-9887-4300-ae27-c510f1b900a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83bde94-3a34-45b1-87de-f325f7313b3f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05b10b6-7d8e-440e-bfc5-7f1587e21d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "575e7ba4-00ec-4cad-845c-85736da4ae6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b704b6-96a2-4ab8-91fc-c7e983b9f487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44130f86-c258-4409-bbde-691280e622fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b5e07-cdec-4edd-9000-e6fb4716ebe9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb36c9-1ec9-433c-a37c-bc97b3d4831c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b81a02-85c8-4679-b18f-9ad471268dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881bd5d7-9767-4124-8f48-603f0e8c2cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9f4572-ce50-41c5-9378-4366e4155d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92839979-1648-4136-a40a-fb76fed3b40a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018e6448-a24d-413e-9fcf-d4e0bc95217a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe535e4-ade0-4dc4-8965-223654dece51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4952d821-add1-4369-b3e8-592b19cca77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cf2b58-eff1-4aef-9cf1-089ced39eeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a42f29f-5149-4b0e-9656-2b3db93e9f5a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b4d14d-1276-44bb-bf26-543fc6c8776c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fa83d8-c0a2-417c-b18b-f727f0d29e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034b1c64-4462-490e-afcd-b9f1d996cb53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd611729-bea3-47cb-87f8-2c700765f606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcfa4c4-e1ec-43ad-ba73-d31628a3151d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed674b52-c4b8-436d-8153-32bc782be32d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ed1f62-3e9b-4a28-a453-65db125db459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31c5de3-5f1d-4e51-ada9-6ac486ce2eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615e8331-5ab1-4d0f-ba82-f7d639dc5814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a5b3c2-b2ca-4289-9894-98fbac285aa3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2ab8db-3c22-4233-b554-c175b277b031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3fa5ab-0810-4f29-858d-4c4939246b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b17872-3d0d-4ff1-830f-9c530adbb1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87feb905-a825-4fc7-8831-415521c0be2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4849ef0e-350e-481c-bd0c-8d5d393f8502",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a1f0f4-0373-480f-8d44-35084d0d5029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1484d865-8c3f-4056-9a80-2966152f89e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd0dd23-dc45-45c4-83a3-e6e8825a9d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7667af04-b950-45a7-9095-9993c5d1b7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45515b9b-a5d3-4eb5-b6db-bdc8219ae2ce",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24de56c-6fc3-4423-b350-cfed8a4f8353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86530c87-9d78-4d56-a42d-3a385ce3b607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e05b896-e9ce-486c-844f-6a732b6a1d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e989e4-52c1-4b14-a551-76b5e2a3ebe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d64a4af-0d52-4450-9312-449e6f9c4219",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebb2905-1ce7-4431-b36f-bdb4a60f54b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "742813b9-6fad-42d1-b6af-7f605862c133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98914725-8ccf-4ce4-a5f8-232c4e1f5101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a3a189-a7a5-4dbd-bf2d-92cb510e3be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0833619-67b7-4f5e-8782-61644ae90c76",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b509896-c2f8-445f-9b7c-0b2942cef420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b0b743-8a0b-4d78-99ee-242fbda119a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c87a4e-0103-41ba-8042-678f87ae1980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e18d908-7ace-444b-9173-3868f610b254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bdc175-dce2-47e5-80cb-17ff1de9f94c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc6f8fa-c999-4415-8af8-f9af85e901a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eaf481-25c4-4dd9-9ed3-e2fa965de7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef59c95-b347-4348-bbfb-a3460c521fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8612e2b3-a8b6-4d6f-8666-7ac26c14dbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a69d4c-d73e-4f84-aec2-d7a4471c646b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d45d5c-0b6c-4465-8bd3-435477ce4d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31db197e-de7b-4fd5-9d5d-30ec977153fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9707b66e-90be-40b4-a3ab-d213d1655678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43512566-35fb-4769-bfcb-201b7722e5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c73a17-89e4-4514-8192-d556343954b8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15ba178-5d0c-4f6f-ba4f-ca5b85556512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0f558c-4043-439b-96b6-988269cd6d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1868a1c6-23d6-4a2e-86e4-462670fa2d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee85809-88e9-48ca-8543-9265f179d25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f91c253-23f5-4866-a5eb-d5836a2ee67a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fb9795-55e6-470e-ac79-cb430dcd347a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73ceb57-523f-494c-84af-0999448354e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe87a540-55e8-403a-ae56-2bd30b747372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0c6150-b35f-41f8-b327-9eece71928ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2834f6cf-cf11-49b8-8be4-fb5ae2a3cd7c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c95d2e-4ef0-41c7-b04b-84a33ff2f4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5807fd-44c5-4a2f-84c6-e0f80a837a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27868604-566b-4c58-8b7e-3d64962a9c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2eccf40-8333-43be-a609-62bb776ac038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3a9d1c-6f44-481a-8381-35515f973b80",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eda36cb-5110-4f0f-b696-2436ff6aa733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a327ebf6-0062-47ba-b846-3ecdef6c3515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bac00b-3c2d-49e1-b52e-46dc09d3dc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34208486-17f9-4cdd-84f7-7eca1d389677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2a1541-5a9f-49d1-a0cb-64fbeab8b86f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480502bf-9b03-44eb-83a8-56c7cbdcaf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1aa054-3627-4505-8358-3afa353587a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fa9721-4a8c-47ab-a46d-4ee870d3fca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d517b939-befd-46a9-8d87-98f9cec6647b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904db769-6e4f-4551-9a38-de5e5a0ebbeb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add7c2c3-79f0-4bea-b46d-6bfdb6956f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2a635b-a98d-433f-ac20-8a6765ed14ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3201344b-bc22-4e0c-8f36-835ddf62c415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccfdb14-a0c8-4558-9349-3a056bafe97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfc8e94-2ed1-41f1-b9bb-637762b2cd1d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef23082b-e9f7-45bd-9829-0b59e77b2128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3c731e-2635-4eec-ad65-380549a0f785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71c04b0-f503-494d-85d3-55a8d59a15dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f141dd6-4dba-41ab-aa86-2e21f9fd14ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0ffde1-532a-462b-9850-82ade33494ac",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fc0cd1-5f31-4eb1-93ba-67dab8c6ef07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0cc489-73c3-4dc1-897c-f72443f0b499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6558890b-2e32-4d5f-b7ed-4bb35df95aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf49902f-c69b-4f55-b1e7-6fe9fb7ace39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecbdbfb-ee57-42b2-a739-104c4dba13ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c70a093-8232-4640-be48-0da74c3ac9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df6b930-8f19-4fe4-8875-c2b7c85da404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbeeebb-c73a-4bc5-9ee2-edceddc8c5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f19620-8178-4dcc-8c19-21981c7e9406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e468a8-6995-4896-9481-8ef7e8f68a40",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1890cbed-3fd4-4e4b-b4c7-5d0820b455c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7b39d1-384c-4f2d-b357-25ca1beab99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae67dfc-e6af-47a1-bce8-a2bdb1756738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cd7768-ab91-4c61-8c3a-4f4572d2d8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061b1e7d-7bd2-4f33-9e0e-1fe6d0b73848",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c81742-268c-44e3-a5e8-23061d3cf463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db742057-584e-415f-87d0-77f9706135b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1981bc-3393-4a19-8b01-04a5f2a6841f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccfbcf6-99fa-478b-ba1b-08206f29ee8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1febbce-3c6e-46d1-b990-e18995469571",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dc4ab8-186d-4f73-a654-e5b31e66b16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316de741-f0e9-476a-8009-543be4fed5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c1dd5c-b6b3-4a59-aa92-cb1e3b42151f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ce7874-8126-4da0-b00d-a5d7b09bbc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb72806a-fa23-4f66-95f8-f9c9a81cde2b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafebee1-35d0-4a88-b51e-8e34c92be14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681a8d0d-2390-4758-8669-b760e9b573ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eac2e4-556a-4928-a7fb-5c916d2619f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efdd22a-6d9f-4562-bc52-044b65bfd20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dac689-b069-4126-8e58-be2e77e3b412",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0258bdf8-f9db-49ab-9288-18cbb0d1a9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b749f23-4370-40d5-9b27-eef20376b1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a45941-2344-4393-8ff1-4c0f9143eb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd654f33-b90a-484d-a377-6b4c929d2776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833f8d9a-d93a-4873-8f71-36d9b534c34d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7eeab7-a11d-47c1-9947-57a6b675c1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21b6e37-99f8-4456-881e-94182cdedac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b59798d-62ce-4bca-a6fc-fcdca91ee63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c37a96e-7103-42c4-8c59-024b7b02feeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb4f0d8-3613-4849-b7d7-aea4ddc62857",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fd9767-2be2-48d5-8e35-476d3b71c48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e35f2c2-744e-4ba9-975c-fba3471cfcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d21587-a342-4ac9-a2ea-7ce40dc887e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4a8945-865e-40ca-9821-ab8ac1aa1029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a455bd6c-0c71-4000-88ac-5505d7e19ed2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ebfebc-26ab-47a2-b4a5-6956955a9454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d97704-f55e-4847-9908-407a0477ad8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf58c45-9696-4024-b798-c8c4540e114d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eda9c45-06ea-4b74-b200-104591b3f4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044ac32c-a027-4551-a996-fca1a66ace3d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01233836-15b6-4992-8538-53c5e7994974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122fd1f1-b22e-4d1a-8af2-bbcd066d6eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f1d066-9264-407b-869a-c61abca56824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81ad75a-9bc8-485b-b630-a1478549d4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a1f2d-1c19-4e9a-8e9d-f992ad994c8d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a7e9c5-99e4-4448-be9e-2179225f511a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9b3eca-a91f-4253-9ffd-db1a8139fa27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d59e72-c4d7-4dfe-963a-032737b3695b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca319f8-dc00-444f-945c-690664e2acb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4912bb22-fb2c-4ffa-902b-014f1405ae74",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e19338d-76d3-4789-a662-40a69b6e9ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dfaa5d-508f-450b-bf71-0ec48a9a6ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9866c9a6-c283-4668-9aa8-6e31754cc635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9518379f-d7e6-4bac-ac8a-b875888475d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c99da26-62f1-4624-bc3b-f5c36158c190",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1ae102-5ac5-438d-905f-daaec6fcdf59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06acfa8-35d7-41c5-966e-7160276b2cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b21151-e74e-4cc9-b496-7cbc6a2291d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64c6a65-78aa-482a-a0c5-661bf363cf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042dec9e-1622-4ae0-8c94-8ce25d2a53e7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f7bb91-1915-4b6e-8fa9-1e16fcc13e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032effc0-6c64-4977-90c8-e3350dfcfe62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192bc7d9-f5b7-4b53-9f00-28dd4ac4f631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33b80ab-9bc6-447a-b0b3-6478f4747017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a6bf77-f72a-4361-be9c-63c903104ffb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898eb363-0e3e-45c9-a8bf-b58e17e055e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0f425a-60e4-4e19-93a7-068adf7ee07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c96b6da-0cd4-4020-baa2-5f40155c735d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd715951-1f30-4623-8f34-800d375085b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4febe3ac-9683-4f06-b194-63d7652bee1b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb37c44-a072-4c31-a79c-7c0009219a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c2c90d-17cf-45ff-a895-79ec9ee37884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dbe132-7135-49a4-a009-64a861d374ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb86233f-81e9-4995-bd0f-eda1577b6ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e30edc2-00ba-400a-a7b0-78a63b3a3be7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b14a1b6-b28e-44ea-81ca-a4279db030d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ac02d8-00f9-4d1b-a381-a163bcb6d01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f23c7d-7ecf-4915-9e67-850430afa0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6d0073-95c9-4513-a99b-b4e6c2978667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5ef274-1f06-4177-9a72-116c431f7870",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f6ccae-8368-4b7e-918e-3fc071bf0bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9533e86-5bc2-49e3-9df2-72f8db5ddad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4481d79a-edb3-469d-b1eb-c1584c747bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b2cf2b-34f7-4007-9b1d-d67da4a60074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d02504-6f4f-4677-afbe-842404c272aa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e540b9-9bee-4f29-90b5-b7d39954d7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a29f99-34b3-4b3c-9212-63c62ea0284b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd8dde7-2fb0-4409-958d-c84e1c94093f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04efe879-07bd-4722-91df-18877ad8f948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12298e0b-3985-447f-8590-62c4f8df5944",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3acb0c-0422-4570-9188-102fdbb6dd07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a2ffe5-cecf-4fcf-88f2-9b84f3e8186e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e87f4e-9cad-4f7d-9299-224290a09040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a480260-7496-4d40-ad49-10eeef3ced01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46d37ce-1a81-4e45-ba7e-f891b1c58d4d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b6b64e-1c7d-431a-bd57-77c66ad791a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123ff98d-e00c-4400-bcd3-cddb2b407be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3b9dde-01a2-4240-b2e8-bbfab201f447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a667f33-d421-472a-94a9-daf94f1bb2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc75fe01-afe7-4725-a379-90a7c723411a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b6ffa3-5ed0-4d0f-a5b6-adfa62d8651b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ec9780-6a1a-469d-a99b-c76975e68b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84553ba9-58a1-4171-846e-28261e9546b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e723bf-f2e3-4e0a-8345-da018828deb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25b591a-3bea-4c87-baa0-b6c4700afa1c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44760ccd-c676-47a5-a63f-93d87fd91930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ed87d5-3601-4625-ba79-f0fe93faee1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395b34ff-f6fb-4f8e-bc32-e67044cfe685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8f62e7-5966-4cdc-89af-f3a223083a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2afab3-986a-4bbe-93c3-c00dd99823d2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9658f626-f204-4a77-b550-a9e724ae6568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f12b00-c6d5-4fe1-ba1c-06e258d83ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636dd663-31b2-4c82-aba1-2e205e8e4da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203c115e-259e-42f5-beee-461ff7de3a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf35404-4441-45fc-882f-8d14ed6834f7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd5d7bc-29e6-447a-859d-973ae5497fff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46220e8d-3b48-428a-8a8c-d8ea209e2313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e335fb6e-6bac-4d86-8e8b-8b37519e2eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c34f11-7831-4c35-9e51-69b71be54b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b201e-8ba6-4572-ba5c-279b0e343edc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc4e85b-539e-4cfa-b366-0e35ba3a5321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f7b875-26a5-4e35-8f49-bb8910e6284a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3c1688-c4a8-4515-a0bc-386e733e2137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe5ff05-08b7-44b9-b831-96b291f2cfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f0c89a-a3f0-426b-922d-88e31c222a53",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b9250c-8b03-4888-b9ef-040b8e32e461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee8ed1f0-ab01-4812-b581-8757e4338b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e27965-ceb8-46df-b79f-6d10e98b6568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafa3084-2999-40e4-8361-a15f0ed287fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d958b6-ad29-420f-b3dc-8659194f8679",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27cd92f-613b-4846-835b-34d456136c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fe24285-5dba-4d12-b849-d9bb0634ebf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf4aa1e-29dd-45f6-bb69-b94cd96c493a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5df6ef8-ba05-47b3-b3c3-ca99f9c2ab04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8ec27a-02fb-435d-b7f9-cd5c1fed9dd4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980a69d-a7c1-45c0-805a-f09959d8df86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f8b814-afce-4613-9394-654f0d6c51d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a5a4a0-708a-44d3-bbb7-b0bec60b384e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e181e095-56bd-4ef2-932c-ede8a56caa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e547f876-4783-4317-a78e-1758d0ab117b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad354e15-912f-40f4-9189-d90ec683ba0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141d7d22-fd4c-48ae-b5f0-5f5ca61935d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd204c3b-ecea-4a93-ae50-7e8c10ffdaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1a5e4d-76bf-4016-9b9a-ff9cfd639408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c862412e-185d-4fb6-8768-1c3cf71231df",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de108c31-216b-4d1a-896b-9d779e2072da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0693923-2658-407f-be8e-7d8cda221673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc05d8ea-065f-4dd1-8c55-a90a23b55446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06f4cb8-91d0-41f0-98e6-b16be416254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa38206d-2470-4591-a0d6-48e9db567efd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9533ac-7f72-451a-a69d-489bbc7395d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20499edc-a2ed-44b1-8946-b2cb81ba3dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519fe00a-c461-471f-9dc5-bcea087ccd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2928fb5-4fa1-4dd6-8404-528bc931e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c43bba-7cf6-404c-8903-791e2effca7f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eeaf3b-4d70-4b94-a28c-d7bceed57e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee082201-60c2-42e0-8639-d16d72d8936c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7f7efd-d6a4-4c0c-a2bb-40c33c39d102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b1389f-20a5-4d21-83f4-515750b92181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a5aff2-2c14-4255-b47c-64fd11e9fd16",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ccccb2-e85d-4923-9f69-1b2291b50423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2250c6-0e1b-49d2-98ac-07c47939ddc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1328c7-4d13-4abc-ab36-5003aafbc511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b56c1a3-fe1d-40f1-b521-d35d0b84fb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c21aa9-2992-48f4-a2dc-cfe122d03414",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c505e330-b2a6-44e8-bba2-08fe9911edf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a669c56-a0d5-4258-94c4-eaf8adc6696d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2e26c3-bf7a-4b31-be99-6e8c83e4f823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1994944b-7abf-47db-9f0c-5a3e3c22369e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18482e4-0a68-4fa7-b8b2-b0350df9fd30",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91976eb-c182-47de-8595-d736e1f569ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "500632fe-bb9f-4fd1-b7c8-24749c98c0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e08fe71-a873-4a64-92e4-fc3a8a0fb55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aede1a5-7a2d-4b8b-88d9-d723ae64b9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b0da48-9057-421d-992c-5ede3e0f2f22",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b48bcb-d12e-4598-9225-49971a28c2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "829e4b51-5197-4535-84c5-1785bb2ec950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a6aaf8-df89-4acb-9ad6-3d280849a17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04355918-2f29-44f5-ac23-87a09d293310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a6498d-e06e-463f-a800-7b2aae98be80",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a83d40-8e54-439a-aa03-ae7ebb3308bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b48a24c-4007-45d6-aa53-c1cca519307a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225a6d29-616f-43b8-954c-ea784000a39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77573ce0-9a05-4f19-be93-912df0c8b4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3896c3fc-4d61-4764-8c5d-2635b6d65ca5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35b7659-a3d4-4240-b80a-a6210a5cdb58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68311d3-b6ee-462e-843f-538275c7b6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8d4ba0-2c1a-4e23-8f33-fd1b64a9dcf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728d491e-2d3c-4d08-a7f7-919a088c3425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe6c379-cc56-48cf-ac0c-e968271651ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fd4cbf-d2e7-4e16-9f9c-7af7c1290f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6bc3e3-c574-43e7-befa-b4f6547c0d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc43779-6fbc-4ae3-b0dc-183207de37bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9039ae04-b0cf-48f8-8b4f-906938afc177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc30b6d-3129-429e-a378-55accdc636ca",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a78e25-89bc-4e31-b383-4bceda594147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a257c10-8c69-42bf-971b-c65562fae107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634c87a5-d20f-4c46-882f-f725bd889fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8a9ab4-14c6-4197-a2a8-ffa5df35d090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7e6ef0-413e-4bb1-8ce8-ae0f459fc7d0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5f3b5b-a2b9-4028-ba17-354381e2e95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f559ed2-0935-45b4-9177-251a33b8fb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25df62d7-9210-44cd-8c01-1a83ff81a4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fc47a6-7c6f-4adf-90ba-5dc9e4adb8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5197de4-e713-4ced-899d-1a9210b5a947",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676985de-2f94-4bae-b3da-7947e6d89622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db1a3fc-708d-45de-9572-8676edb8e732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdb948c-ba47-4e8f-a6c4-f7cca0c2d4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f17e111-d700-4f70-a3a1-372d6c19b58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8d6172-a813-40e7-b439-b7026c2b8b6a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2c792a-51c6-4f3e-a457-dc4652fe0d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd1d6d8-45f7-43c0-8e28-0d5002571f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d88d46b-09b3-4259-9cc5-414985021dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7b1d1a-9d0d-4b87-8573-6007e495afee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba58202-641f-44e4-a61f-87e8a0b26910",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97427547-10c3-4e82-9a27-960c33567b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe3cd08-7bac-47bc-9bfb-f98f7ea67f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab61e00-3ec5-4bd5-9594-79fc540a46a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ef33ae-f8b9-4ed6-b644-05c991fea2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b6204c-92fa-475a-b177-f10eed888988",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfb7c78-ed91-41d2-83ef-545bec0ce0ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b367b50-7213-4c4a-8b39-038a9be1529e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce56f4b8-899a-4aa2-bc0a-794b2484e2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1887bcd7-8ac3-4467-9adc-b1e6ae8b7bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f907a65-5f04-4a36-bbbf-245e514db411",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3154c73-b1e1-43e0-b12e-be16cc584075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be68c3d-d4a8-4f8d-b8a5-08742173303d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccba8ca-68fe-4dfb-8e33-d41e4e2008e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae2719d-ec93-41cf-92a8-f70dee4c6cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae84d3-f1a8-4bff-9baa-7092e588b7c9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82adc4c6-f2e2-4a43-80cc-aad3134b3169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e341912-0707-42b6-9e10-d857d65c4838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb865f25-802c-4d40-ae1f-d658638371a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2386461a-ad60-468f-818e-53d0ac46c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed76f14-317f-48aa-9525-b731095bf475",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b711a1-f1f9-42e3-a40a-977ad4d1103b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f211edb-e0e7-4a68-b705-5508adae141c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1629c7c-af3e-46fd-a493-ec52b1198355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0112800c-1be5-4488-aab2-4a3abbc41ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c1eed5-2073-42f1-aa1a-f3d01a8a681d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3a5d1c-1938-4e69-a3c1-c4cfc4a3825e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6cd285-c126-49f2-ae16-62baaf1b6c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32c5c21-e534-4daa-b9a5-704f92942249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0616bd2-7b7b-4821-9a09-149228c08e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440ca3f3-46ac-4056-a921-2ba5c32a8903",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30f9e72-d94e-4cbc-92b9-7cdec2125682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6ea268-3fd3-49e6-bbeb-b711655f0d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20da1e3-d3a6-4960-a9a8-8637033d81bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a06d2c-69ba-42f7-b36b-9020b64a9334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9257e6c1-d1c6-4e02-a69f-10f928a12b70",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e9eb0e-65da-4328-b1f9-88029f52084a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21456d4a-3a6a-45d8-a25a-78eb48868635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc49b985-7794-4852-8ecc-62fff964ae22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15108cab-7519-4baf-ab67-2d51f107efe3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d234fdb-66e0-4c33-a5fb-c4b6bb08d5cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5bc611b-cbec-43c7-96dd-9ac7f64edc42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c5c70b7-1734-4be7-9826-582ff8ceca0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6ec5d71-c4cf-46d2-9f4a-69ceca6d9c4b"
                    }
                  }
                ]
              },
              {
                "id": "1c07dd39-b484-429e-822c-256d21b333f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d824499c-1891-41d9-a1a5-9cc7a4c49fd3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169e2385-6cac-4f90-8456-63e214bb0c92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1dc29510-f502-4ae6-84d0-7c520c3702d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23895196-4cf4-4f21-9201-ea3254e85b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a799902a-8f27-4a62-b7e6-f29e893c0571"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "532ce60d-4448-41dc-ab38-1a8a3059c369",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e753ddc4-0e1a-4a55-be4c-011a74c839f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fa088b9-c8e9-4592-a3d7-7291a2ec2d96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41a10ff7-2280-4a72-9429-9abf36c5929b"
                    }
                  }
                ]
              },
              {
                "id": "e83edc81-2960-4dcf-b17d-c739f1ce3c59",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a2f7d731-ce1a-4de6-93fe-d63805dcd37a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd1efc4-fa75-4ea5-82e3-62e0a23509cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "51f5d71a-e7be-4009-b014-0458ed72381c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644f715e-4c25-4614-bd75-62980f96cddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7afc908-4431-43aa-b744-5167c7915612"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11034df0-04cb-4fd1-9726-11702eed8011",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c126570f-686c-491f-9032-41e245ee8749",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d80993c-f861-41ab-a511-6e5a2cde8d90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d18bb1e-16ee-4b43-8f3e-7541f30cc7ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc92d1eb-1647-4e61-ad7b-e3b08200f752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b49749e1-aa2d-473c-a1f3-69ce43a1d0a0"
                    }
                  }
                ]
              },
              {
                "id": "ad0caaa5-aa41-440e-9249-fc8e1e6b4ddb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a840365-2204-4896-a2aa-2181a9b09c46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3528685d-43f9-4a87-9072-17c6a51e08d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "036103b3-b55c-4c68-a988-0e2a582d8b94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e607baa-7b8e-4bb1-8f59-fde4c39df2af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38529353-0511-41c0-9343-a55ef2ad969c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3dba9607-f8bf-4dfa-9920-ceffb62f7c27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10ed2ced-c729-4c09-bf07-a2fe6247798d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9509a1c-b371-4cea-bfbb-9a3fd196b41a"
            }
          }
        ]
      },
      {
        "id": "1555c688-d5c8-4040-809d-e128b55dd0f2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "515de86c-c00e-47aa-bf70-de7097564d61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "958ff066-d875-49e1-bd96-7c8a72fa85fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc45d066-34f5-40f6-966a-5b84ebf78dd7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d89450b-6001-4732-96b5-17aef161a509",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e4fedec-c42f-4e21-8552-f7184c985c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b0a3dc-d57c-4300-a65d-e60bda5f6714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adc00f9f-8c22-4da2-bb71-e87ec5d70553"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df595b29-5141-43bf-95d8-b520e24ff106",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11404371-a30b-45f1-8842-9e68a0b7f540"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cee39c21-76f0-42f5-89ad-4506c19a4e9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47cd324a-5838-4fce-b05c-46d3ad6fa1e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0b01b05-d0bb-4f9c-8f75-fc596616ab29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "13cbb4a4-1020-41b9-aefb-f32d638ae2a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aca02d6c-fe6a-4572-885a-279e160aa894",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd0b8318-5cb7-4453-952a-1a5d807c612a"
            }
          }
        ]
      },
      {
        "id": "67df3e86-4c76-477a-ab02-cdd8ab86fd93",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3dd306dd-3809-436e-9535-eeb41c836a7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a21358c-85c1-45b8-b4af-ec507c44c715",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb4da482-20c5-4ff8-90ad-af2c53e634aa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c31af61-20a7-43a9-a946-e52bda34db70",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac12c63d-5d2d-45a2-ac34-12d57b3e9dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7065a0-ed47-4bbb-95a2-cab35ed4897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf5e807c-2b80-42ec-8d7d-4dd9f8f01eeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "429c7164-0330-4b89-a6cd-f840c7acb24f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7b89bb9-3803-47c6-9028-b56c81fb3cd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f556ce3-542e-443c-ae0a-271517f3a7a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52c65bcf-0236-4e95-8bc2-3c07845420bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ff76397-1ac0-4bdd-ad40-97f7c3007167",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2845dd9-d502-405c-a179-a5ce1dbeaad3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b69bd2eb-9b1c-4b19-80f9-397bb842808d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b00dde64-b8dd-465e-8f08-7d2f1d9ba099"
            }
          }
        ]
      },
      {
        "id": "9d410a44-585b-4022-ab20-6181500c9c44",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fa78d96a-bf7e-485f-b061-2f082e6106bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b47dac6b-5529-4e4c-b843-d6349c5720e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a38a549c-edc6-4fba-a64d-028fab2903e6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4efdec-22d8-4e70-ac54-697b512529d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4dd1adb-02d1-4f42-aae7-5062ed303aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49fd949-d88c-4a60-8d5f-a3053ce86e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def79bfb-e5b3-4263-9d48-0a01e5e92b87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09361304-8edc-43d2-b4d1-cb957d202f0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f070f5ba-bec3-4669-99d6-d2d1479cf528"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d13dd955-e4d2-4649-8cf2-5c5ce742d288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ed48626-68a6-41b5-838e-bfc6102808a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b65ced4e-f18a-480e-93ac-f7e8fcf3d980",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44ddadf1-431b-42b7-8d6a-5a26a378fd26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e32a1c33-9a73-4769-9452-a9720c50c365",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a49182c6-6dd8-4715-a21a-689f339b3df7"
            }
          }
        ]
      },
      {
        "id": "0d1d8732-545b-4adf-9ce9-32b4285599f3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35d2bbd1-8ecd-4b8b-b237-2e679cb6fcf8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b522e754-45c7-4e75-ae17-ad46b7bd9cd8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f0c9a31b-5b6e-41fd-96c7-7d3dc709b4e9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57a9c815-d987-4a09-9f49-053c31f2f4de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53da0a43-80a6-4c08-9ff8-2719ce471e27",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.82936507936508,
      "responseMin": 5,
      "responseMax": 725,
      "responseSd": 48.50976266897252,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724978548289,
      "completed": 1724978573981
    },
    "executions": [
      {
        "id": "89244a82-84c0-4ae5-92b3-58007c472e7b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c5fd0830-beca-45ac-9d08-12a4c675fe73",
          "httpRequestId": "99742418-c4b2-41ba-9366-b7de0e59dea8"
        },
        "item": {
          "id": "89244a82-84c0-4ae5-92b3-58007c472e7b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "95fd5aa9-4eb5-4afa-8af5-5a2d3df497ca",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "422eab12-c879-4913-87a5-e4111159b3a9",
        "cursor": {
          "ref": "0d7e28fb-b20c-4a44-aba1-2266b6135a49",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b3ab2b7a-8cf2-4d6e-9e28-5fb4fd9efaf5"
        },
        "item": {
          "id": "422eab12-c879-4913-87a5-e4111159b3a9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "40b22b8a-b103-4468-8718-11ff07cd08b0",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "97a72e8e-198e-49db-9c59-5e7e75eaa169",
        "cursor": {
          "ref": "e8549120-575a-4751-a2c0-83202c4ffd13",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "104066d4-c0c6-4290-bd03-81546b7ddf90"
        },
        "item": {
          "id": "97a72e8e-198e-49db-9c59-5e7e75eaa169",
          "name": "did_json"
        },
        "response": {
          "id": "a8ff9519-5c54-44e2-9837-37f6cb72d497",
          "status": "OK",
          "code": 200,
          "responseTime": 355,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf90fc5-d6a2-490d-96f8-63ad8004b372",
        "cursor": {
          "ref": "8b4b1d11-fe49-493a-b33e-169b61929b32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b6b395a1-52d1-44f7-9c5a-5d162163c72f"
        },
        "item": {
          "id": "8cf90fc5-d6a2-490d-96f8-63ad8004b372",
          "name": "did:invalid"
        },
        "response": {
          "id": "19c5cb1f-cd62-40fe-b092-bfa5b935f445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf90fc5-d6a2-490d-96f8-63ad8004b372",
        "cursor": {
          "ref": "8b4b1d11-fe49-493a-b33e-169b61929b32",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b6b395a1-52d1-44f7-9c5a-5d162163c72f"
        },
        "item": {
          "id": "8cf90fc5-d6a2-490d-96f8-63ad8004b372",
          "name": "did:invalid"
        },
        "response": {
          "id": "19c5cb1f-cd62-40fe-b092-bfa5b935f445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73973b2b-01a8-4786-bc56-358cbde2e552",
        "cursor": {
          "ref": "84ba714d-5886-4ffc-968c-487333232520",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "00929ec8-ddc4-4564-a84f-9dc04442f9ca"
        },
        "item": {
          "id": "73973b2b-01a8-4786-bc56-358cbde2e552",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb3923d6-3ca3-4350-81c7-0a06f5067f9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 149,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7918a567-00f0-4c4f-b3d9-3d861d747430",
        "cursor": {
          "ref": "9df36a10-a893-46ee-b64b-4c6f6efafb53",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "369d0857-01f2-41e8-b28d-2a90dbde0854"
        },
        "item": {
          "id": "7918a567-00f0-4c4f-b3d9-3d861d747430",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fbba6850-472b-464c-b0bc-4f97a2e1bd02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27a5175-8a90-48c5-9439-aef7e4d07818",
        "cursor": {
          "ref": "32aafa46-661e-4844-8be6-1739353b9700",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f4fa5a43-34af-441b-a33e-b87b31f010a1"
        },
        "item": {
          "id": "f27a5175-8a90-48c5-9439-aef7e4d07818",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6484e4f8-96b0-439a-abcd-5e0c867bab7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efad2bcc-cd6b-4641-9105-2b52a604a957",
        "cursor": {
          "ref": "83858d5b-f3fd-45e9-b218-5d985838f884",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "67c72956-7bed-4d70-815d-794817c02860"
        },
        "item": {
          "id": "efad2bcc-cd6b-4641-9105-2b52a604a957",
          "name": "identifiers"
        },
        "response": {
          "id": "400cbb95-2ca6-4974-b933-243522f0fa46",
          "status": "OK",
          "code": 200,
          "responseTime": 303,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef76608a-db90-4d35-bad1-2521eb352b06",
        "cursor": {
          "ref": "8d34594c-d6fd-44aa-9ed9-f749db898b4a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "35d662a3-c7e3-481b-a05c-5a374416c790"
        },
        "item": {
          "id": "ef76608a-db90-4d35-bad1-2521eb352b06",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee5340e9-679f-4e16-acb9-ab3d6fc9bc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8a314-5859-4c00-ad08-47903d89e0d7",
        "cursor": {
          "ref": "87dfd1bc-15e5-43ad-bcc9-1121d4cfec8b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f3479198-859f-42fe-9384-a688f35c4631"
        },
        "item": {
          "id": "e4b8a314-5859-4c00-ad08-47903d89e0d7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a09df18b-e3a4-4123-a5f3-3279b8e97df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aba3e1a-725d-427e-81a2-1239f82df9e8",
        "cursor": {
          "ref": "2c1d37ef-c439-43c6-b6bb-31a041ec34ea",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "22ccc439-b2a8-4bab-afb2-2354585183cf"
        },
        "item": {
          "id": "8aba3e1a-725d-427e-81a2-1239f82df9e8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f8ee072f-55e4-4c25-b21c-a62eac211f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fd0291-9c52-44c5-b8e5-452a53e410a7",
        "cursor": {
          "ref": "22a0da96-ad28-407a-a29e-5680305c23f1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a3137c3a-c5d7-4c47-9298-07cb6d3b59cd"
        },
        "item": {
          "id": "b0fd0291-9c52-44c5-b8e5-452a53e410a7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "18f15982-412d-460f-8b9e-778145917f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03e1f91-5e37-43ed-aebe-fc790814e6aa",
        "cursor": {
          "ref": "6729fb9c-72d4-48ed-b134-ed3e622b4cc1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ca27cfd0-caff-4067-b6f8-567cbbd301f8"
        },
        "item": {
          "id": "e03e1f91-5e37-43ed-aebe-fc790814e6aa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "12f84b1d-aad3-4ce0-b256-56fffa5ee6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51fd8b1-08de-42c8-8e0d-1d5686f86cf2",
        "cursor": {
          "ref": "240985c8-f21c-47e5-a964-7802a167b385",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d16b39b1-8d4f-438c-b2d8-4b7784f43a66"
        },
        "item": {
          "id": "e51fd8b1-08de-42c8-8e0d-1d5686f86cf2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dba6ecb7-8d3d-4562-8045-3ef1b7c53bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91323010-94f5-41d4-b304-709d6d83ff6f",
        "cursor": {
          "ref": "68eae701-8038-4e27-a2fd-3bf564b4e8d1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d80fa82e-3b3b-4217-b6c5-693ba131364d"
        },
        "item": {
          "id": "91323010-94f5-41d4-b304-709d6d83ff6f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3228094f-e824-43e5-a0eb-80c4a9a18530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4946db3-d4d9-46ab-8c51-4deaddd4e94d",
        "cursor": {
          "ref": "c6cb460d-2de3-43f2-a5c4-bade36e5a1d0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "53016392-d35e-4db1-a6f4-e1aba0e610d8"
        },
        "item": {
          "id": "c4946db3-d4d9-46ab-8c51-4deaddd4e94d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4e30b8b6-957b-4a91-a45b-19e0d9aed23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a67c39-e2dd-47a6-bd3c-11af2bc15226",
        "cursor": {
          "ref": "295902ef-8fc9-49c7-bdd3-9da626befafc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "53e77da4-fa82-4f8e-a079-784e1de0602b"
        },
        "item": {
          "id": "90a67c39-e2dd-47a6-bd3c-11af2bc15226",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0fa6dccc-21b2-4eb0-a1f0-7f942e795569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d908cfa3-dce9-492e-80bf-aa6a629952ab",
        "cursor": {
          "ref": "43f49dd2-0f66-4dcf-b874-392d6f959629",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "94bb261e-2e18-4847-acc5-551bf8468c25"
        },
        "item": {
          "id": "d908cfa3-dce9-492e-80bf-aa6a629952ab",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0696ae49-8d0c-4a7d-97a6-0489f658cdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce660b0b-087a-4b32-bc05-157cf35df924",
        "cursor": {
          "ref": "35d999b4-b42d-4fcc-8f5c-1043383d130a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a0e93c0e-9642-4c75-a97c-901597af9c15"
        },
        "item": {
          "id": "ce660b0b-087a-4b32-bc05-157cf35df924",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "afeda674-d3cc-4148-8008-a67ad16973fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73067780-289c-4b64-bbd7-7b7f414f4927",
        "cursor": {
          "ref": "8b9ef277-d2de-4865-b881-f5f0e06a82e7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a6ad56b7-8a94-48a8-adbc-0459a5c16c62"
        },
        "item": {
          "id": "73067780-289c-4b64-bbd7-7b7f414f4927",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b86339fd-2d0a-4d6f-a6e1-397b17d0fb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a62db58-03fa-4494-9c99-392fe78a19c8",
        "cursor": {
          "ref": "2e03914e-87ed-4e18-83ca-a88aebf9e15f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9e79bcaa-3223-48dd-81d3-20c2b51737d5"
        },
        "item": {
          "id": "4a62db58-03fa-4494-9c99-392fe78a19c8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0b0d455b-7cb8-4045-bee9-7dc39dbadc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752410c4-e205-44c0-be90-00a9c638af41",
        "cursor": {
          "ref": "f685e5d3-2a1e-4be0-b743-4a1aa3a94e4c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0bc0bbb4-efd4-4b5c-9ea1-40def999c0ea"
        },
        "item": {
          "id": "752410c4-e205-44c0-be90-00a9c638af41",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "325327ad-8f31-4b35-98c9-7b6813d719d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46a2777-5f13-46bb-9bb4-25ea2e40a780",
        "cursor": {
          "ref": "efe9c503-dae2-4bf9-b65f-e2a07cd77c32",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1d7c1806-b2d5-4b7d-8fce-05c176bcea4e"
        },
        "item": {
          "id": "f46a2777-5f13-46bb-9bb4-25ea2e40a780",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "203cf3d5-1f03-4ae0-b501-5b1617829f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa260096-2527-4de5-967e-15cbf987ff4e",
        "cursor": {
          "ref": "6400cb0d-39b6-4620-bcd8-9e9d2720fd39",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f37fac51-7267-4046-b9f9-806d2539603c"
        },
        "item": {
          "id": "fa260096-2527-4de5-967e-15cbf987ff4e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9a4adbc9-9374-4650-a7b7-2d57d2e6ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb089894-81d4-405f-81f8-9794f8cd6f69",
        "cursor": {
          "ref": "4107306f-d0ec-473b-a824-380ac0dcf0c3",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "76bd3493-d2fe-4b4f-8bed-e06bbcb298bb"
        },
        "item": {
          "id": "fb089894-81d4-405f-81f8-9794f8cd6f69",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4346f4e8-a5f9-465c-98fa-d1fc88569908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbafefe8-efc3-4780-b4c7-005c12c1abb6",
        "cursor": {
          "ref": "23d3f334-4fe8-464b-a105-7e072f08a72e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dd05ea93-fb9d-48b3-b00d-433355ee25fd"
        },
        "item": {
          "id": "fbafefe8-efc3-4780-b4c7-005c12c1abb6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6a93eb42-d1ae-41cd-8492-6fca27eadc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eccac9a-ade5-464d-89cd-4da260969eef",
        "cursor": {
          "ref": "6a3490a4-12f4-40c3-80be-d90596301ffe",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "46f4717c-fd04-4053-9d01-a8cc4d9b2540"
        },
        "item": {
          "id": "4eccac9a-ade5-464d-89cd-4da260969eef",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7e9062fb-7163-4fdd-9ba5-e5954b1b4154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47c9136-1d29-48b5-bf2f-7b9f722a281a",
        "cursor": {
          "ref": "ba62af44-e8e2-4691-8ffb-1aebcbd2bb44",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "45466b87-586c-41f8-b9e4-8f627bcab26e"
        },
        "item": {
          "id": "e47c9136-1d29-48b5-bf2f-7b9f722a281a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b80aa17b-a46f-40ba-87ce-f785f8e81f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a49e0e-dcff-4958-a215-14194e3c25cf",
        "cursor": {
          "ref": "06f0d6ff-f276-4124-9bfd-ebbcb1151820",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3ef5c83c-aef9-4093-b65a-58ee4ddba1a4"
        },
        "item": {
          "id": "58a49e0e-dcff-4958-a215-14194e3c25cf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "64663a21-9bfc-40a7-8739-6baba24ba9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91cd321-518a-4e57-976a-bd5f8224f3d7",
        "cursor": {
          "ref": "78273980-4065-4240-8473-8cd5123b6590",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bd6dc263-6d7b-4dc7-bbb9-eb303f17228e"
        },
        "item": {
          "id": "b91cd321-518a-4e57-976a-bd5f8224f3d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1ca11cfe-a125-4cf1-b520-6ee4fc9dfe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50417c9-8cd2-48ad-bed7-68912f09e0ad",
        "cursor": {
          "ref": "599b71ab-a0e1-453d-a3e4-e94004926d35",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9397f560-16c3-4400-8445-c39e009d7bd5"
        },
        "item": {
          "id": "c50417c9-8cd2-48ad-bed7-68912f09e0ad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "869316ff-1e5b-4d09-827c-dfc5cc5d6052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f685c604-e60b-48d8-96e9-023bd41e898f",
        "cursor": {
          "ref": "4e87bd58-b322-4897-bf95-4fbdee466849",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d6a7fd6c-1fa6-43f2-af1d-deb7599734a6"
        },
        "item": {
          "id": "f685c604-e60b-48d8-96e9-023bd41e898f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "63c5d32b-7aa0-44d7-a113-8de41c1e537c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e36999a-4191-4fdb-b944-1f63311ccd6b",
        "cursor": {
          "ref": "8942a19b-cea3-4e54-889e-10fded083c99",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "62366a1c-faf3-4857-935d-4f2e855654ae"
        },
        "item": {
          "id": "4e36999a-4191-4fdb-b944-1f63311ccd6b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "98880dd2-87ee-4809-919b-817636659f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736d4bff-7417-46a0-ac8b-f876bcf63314",
        "cursor": {
          "ref": "a5b0e105-6a58-4b29-9d97-2474cd7a64cf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bef8c5b5-0d69-4876-9f5a-9a9d5a80ae3e"
        },
        "item": {
          "id": "736d4bff-7417-46a0-ac8b-f876bcf63314",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fc102ad0-9f27-4620-aac3-dbea746676c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b8e19d-2052-4ed6-8a0f-d830f11d7c32",
        "cursor": {
          "ref": "9af573b7-db8c-46f8-9f53-17fe3aa9e464",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "295bd1f5-c937-4557-a29a-56c530e7289a"
        },
        "item": {
          "id": "10b8e19d-2052-4ed6-8a0f-d830f11d7c32",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "708a32bf-ed28-4e5f-95ec-f9885438035e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68e6d87-2a8b-4dae-8ae7-41cd011fd337",
        "cursor": {
          "ref": "9354e3d1-36c7-4f95-8efe-1727a27dbff3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fc154a58-4072-40ba-ac52-8b9f963fc338"
        },
        "item": {
          "id": "f68e6d87-2a8b-4dae-8ae7-41cd011fd337",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b908aa7d-79aa-433d-b265-c1f6c5a77945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1cd9d6-a599-4740-a181-c576189f0a79",
        "cursor": {
          "ref": "47129b82-4d59-4b68-a3c8-3d60e89b3625",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "43047740-697b-436d-b2f9-56fbb4d94a8b"
        },
        "item": {
          "id": "ae1cd9d6-a599-4740-a181-c576189f0a79",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "68314ca8-0de0-4ec6-a447-86df32e5496a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b51d38-eb9a-49f0-840a-444990d4d066",
        "cursor": {
          "ref": "daaaab5b-e7a3-4d05-9bf7-3aec08f1b07e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d0fa15e-13a2-4725-8d28-7e1e2b51605d"
        },
        "item": {
          "id": "66b51d38-eb9a-49f0-840a-444990d4d066",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cc673be8-e130-468a-a80f-bb2d8bfd6b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67303822-6946-494a-8969-b7e22f30ea4c",
        "cursor": {
          "ref": "0e6d6dbf-a1c4-4027-9a12-a5022ba1c472",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8c48c20-5d53-45ab-9f76-0b8ed5fc9112"
        },
        "item": {
          "id": "67303822-6946-494a-8969-b7e22f30ea4c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b5b92267-a7fe-4c92-b174-d5f4b9a4d275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465952b3-0ca6-4fcc-ae95-22edae9304f5",
        "cursor": {
          "ref": "542f5f62-9ed5-49c7-a669-69a60867da88",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8d6a0509-44f3-4bdc-8d4d-359fb81a157c"
        },
        "item": {
          "id": "465952b3-0ca6-4fcc-ae95-22edae9304f5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "11ac42bb-7d8c-41b3-9f5d-88d2473555ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ee3f13-bcdb-413f-a9c8-988aa31697c5",
        "cursor": {
          "ref": "385e0136-64fb-479a-b36a-691b6fdbe805",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "20aac163-93d1-4cfe-b13c-bb28e971f63e"
        },
        "item": {
          "id": "42ee3f13-bcdb-413f-a9c8-988aa31697c5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6f7fd1fa-2153-4b1a-938c-00835424221c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441e36c2-f860-42fb-9608-010c65f039de",
        "cursor": {
          "ref": "a05b9fb0-6061-4066-b09b-9e1194b858ba",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8d684817-9ea7-4bd7-8c6b-29aeda8ea724"
        },
        "item": {
          "id": "441e36c2-f860-42fb-9608-010c65f039de",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2993cbe2-5ef8-4779-ba9b-50f8c5a53763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb098ba-bf6c-4880-bca7-a1cb30b60f92",
        "cursor": {
          "ref": "1fae2d38-3913-451e-a6ee-8906f020bea0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0457957d-e8e9-4f10-a9ca-f68c09d977f2"
        },
        "item": {
          "id": "1eb098ba-bf6c-4880-bca7-a1cb30b60f92",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f844275d-7d9d-4d81-9f36-cdb12b127f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301f48f1-89f8-4eb0-9da1-0d9fa764e095",
        "cursor": {
          "ref": "6a1ba39e-8c85-49e3-9cfd-ca5fd412a2d1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ef6e3a86-7065-4c99-b1f4-e39e53c70ccc"
        },
        "item": {
          "id": "301f48f1-89f8-4eb0-9da1-0d9fa764e095",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c1e91560-788c-4f64-82e9-7f1a78b6169f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de630240-52ba-4c28-9f2d-218ddba91961",
        "cursor": {
          "ref": "e3de13d7-e13f-498c-af5c-4a2546638a1a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3a3b8cc1-165e-4c1d-b5a4-096fce35b57c"
        },
        "item": {
          "id": "de630240-52ba-4c28-9f2d-218ddba91961",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "663162b7-0974-4aac-97ac-f5c297b96d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0ffa03-ade0-4000-aae1-263f1ca75d97",
        "cursor": {
          "ref": "cf7a672b-96b2-4817-98f0-cab13eaab7f3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "11272c18-73ab-4e09-8e13-6b9950e4b397"
        },
        "item": {
          "id": "2e0ffa03-ade0-4000-aae1-263f1ca75d97",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c5b9fca3-a70b-42e7-9e7c-08a33190c51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b47b9c-5329-4dab-b0df-5b4228a03bb2",
        "cursor": {
          "ref": "f57cc825-0fef-4d2f-a243-81d78ba02565",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "310c4f64-0e47-44a2-80d3-8965b4ae8041"
        },
        "item": {
          "id": "81b47b9c-5329-4dab-b0df-5b4228a03bb2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "86498427-5622-446e-9135-4e115faa57d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1042e55-5741-485e-b2a8-3d73fbd6d13e",
        "cursor": {
          "ref": "73ea65b7-2378-45a4-b548-178c154d522a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2ef50dbc-5631-461e-9c77-d13f815ee507"
        },
        "item": {
          "id": "b1042e55-5741-485e-b2a8-3d73fbd6d13e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bac0c2ab-0a96-43e2-a20b-2d797c288be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e809659-53fd-4992-83e0-cf0fd83b9602",
        "cursor": {
          "ref": "5889e15a-2237-4e1d-8723-a1d239778d4b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c0e2538d-830c-443a-98f4-e1edfb30d5cb"
        },
        "item": {
          "id": "0e809659-53fd-4992-83e0-cf0fd83b9602",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e7dc184a-ca69-43bb-a0d2-ebd5aa53cb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd008f8-c39b-4b84-898a-ceda1c76554a",
        "cursor": {
          "ref": "759006f8-42dd-4eb6-aee7-47bb6ba2428d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "28badfe7-ad89-4c1e-bc0e-5f1101f19b10"
        },
        "item": {
          "id": "ffd008f8-c39b-4b84-898a-ceda1c76554a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5f0002ba-d85b-4c7e-ab89-1d5689916a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c29f8-fdd6-4f72-9745-05680f0a4268",
        "cursor": {
          "ref": "9611fb56-8d6a-4d01-9972-fd7bf6f18b51",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "82e43e24-4f64-48b0-8245-4825946f3c1a"
        },
        "item": {
          "id": "3a5c29f8-fdd6-4f72-9745-05680f0a4268",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a2559dec-30fd-4098-b0a6-80b1f699d93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c28280e-72cd-4b48-8a8f-6afdbb6c3e12",
        "cursor": {
          "ref": "a57ba10e-63c6-4c80-956b-f267257935e8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a1176f7f-08e9-4d7f-ada7-6d355d8c87ef"
        },
        "item": {
          "id": "4c28280e-72cd-4b48-8a8f-6afdbb6c3e12",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "95b5af8f-ed51-4495-ba1d-7b17c7c7b89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d7ce78-dc19-4f87-9c26-7014e1d93242",
        "cursor": {
          "ref": "7eca35fb-17dd-4b63-96f5-95838f2d7ac5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c96774b3-2fcb-496a-aae8-080692728a56"
        },
        "item": {
          "id": "88d7ce78-dc19-4f87-9c26-7014e1d93242",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a2e1042e-a5ac-4bc9-a7f0-c7007ed187b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd97b13-9d84-4beb-a305-631c925e48be",
        "cursor": {
          "ref": "4812b241-a765-4618-b222-d12f78c579ba",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d16bd847-2934-4d4a-ab17-aae69919a2cd"
        },
        "item": {
          "id": "9bd97b13-9d84-4beb-a305-631c925e48be",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "00861118-aa0c-41b5-9e3b-3eb268a8f8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4b0eeb-feee-4373-87ed-c74c1a904f17",
        "cursor": {
          "ref": "ee484ca0-4907-416f-8b3f-3609301830a7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e2cc1a9b-d333-4743-b686-6b436c5acfac"
        },
        "item": {
          "id": "ea4b0eeb-feee-4373-87ed-c74c1a904f17",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e3472ede-b79f-4fba-bc8e-dc59c47a11da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cc0852-9185-4d0e-b026-8d5cfb5bdf5a",
        "cursor": {
          "ref": "c65bb073-b8f4-40ef-918b-72d5a83e244f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "809becb0-2383-4e56-9e2c-ccfca6e42609"
        },
        "item": {
          "id": "e7cc0852-9185-4d0e-b026-8d5cfb5bdf5a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aaec190d-9e0b-4f62-8686-0447aa831528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b446a06a-783b-4b11-a208-a1ef0ff6ce07",
        "cursor": {
          "ref": "ed749a46-c769-4724-962c-24a8779a9498",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "191e6e58-53dc-4504-acac-168bec21875f"
        },
        "item": {
          "id": "b446a06a-783b-4b11-a208-a1ef0ff6ce07",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c92e4f09-9e3f-4650-be96-b7a19bd29dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfabe72-229e-48ba-9834-2582a9d4e648",
        "cursor": {
          "ref": "05993c09-40fd-43d7-a856-99ac70febc0b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dc71202b-8415-42b8-85a1-b6d275c67a67"
        },
        "item": {
          "id": "ccfabe72-229e-48ba-9834-2582a9d4e648",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "05849b1e-0048-4f8a-a9ce-1b2e9937e503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641864e4-f838-4eea-9a63-0983089066e4",
        "cursor": {
          "ref": "8b1cf1a8-b174-4c2b-a39e-47762c6804f7",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3171a1ef-ae0b-41fc-a3f3-f0f73eaacb8f"
        },
        "item": {
          "id": "641864e4-f838-4eea-9a63-0983089066e4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6e11f2a-4ef0-493c-a0ee-52a8cf615a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254582b1-85d6-4dda-a491-0d4cfd44a285",
        "cursor": {
          "ref": "13246396-291e-4942-be6e-6b6271191b4f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fc673522-0216-434d-9fb2-9e9a9934e475"
        },
        "item": {
          "id": "254582b1-85d6-4dda-a491-0d4cfd44a285",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5eca3495-0e21-4b2a-80cd-1654f7d6dbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1189d56e-e1d6-41b4-b5fa-dec3e1c6f73a",
        "cursor": {
          "ref": "58f6aedb-2941-4b7c-8b59-d7e24afffd31",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "468f3150-6790-4edb-9f74-52b14818b4e3"
        },
        "item": {
          "id": "1189d56e-e1d6-41b4-b5fa-dec3e1c6f73a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ce79a182-169c-4467-beca-b845ce8eb37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1fbd89-e181-4a8f-af4b-1a19edf1ee72",
        "cursor": {
          "ref": "39576c54-a9bf-46d4-a323-fff09c41cb4c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f06bb326-9efa-4d9e-a48d-0aa8eacaa057"
        },
        "item": {
          "id": "3f1fbd89-e181-4a8f-af4b-1a19edf1ee72",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9f8b42d4-a6e0-4e97-8054-dc51c867391c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6dcceb-8cab-4912-99ae-0a25e78bf015",
        "cursor": {
          "ref": "ccaca6b6-dae0-40df-915f-44a4e664bd18",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "36681233-7ef8-4a18-96c4-92c65cdbcf0d"
        },
        "item": {
          "id": "3a6dcceb-8cab-4912-99ae-0a25e78bf015",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ea809d17-b111-4194-a8b7-04b19bdd76f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27ffd6f-0cd2-477d-a774-febc9a7096a1",
        "cursor": {
          "ref": "719f9e3a-ff1e-490b-8005-03266c807dd5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "43a9e947-a85d-4b2d-915a-05eee03629fc"
        },
        "item": {
          "id": "c27ffd6f-0cd2-477d-a774-febc9a7096a1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "14940df4-17dd-4a83-b9ec-1e5f657753a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321728f6-dcc8-49c5-8a0b-af145cabc9d1",
        "cursor": {
          "ref": "9d17a5cf-ec08-4f20-b787-dcdabe4e5288",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "68b42d9f-be43-4482-a2c3-8be890049dad"
        },
        "item": {
          "id": "321728f6-dcc8-49c5-8a0b-af145cabc9d1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9f0af116-7137-465a-bf6d-839d01fc9dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe646548-4278-411f-8225-d99b9fc0e806",
        "cursor": {
          "ref": "10406a2c-6453-4198-8bbb-afc26be9adb3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "292327c4-bfb4-452e-87c2-9f73d05f6f80"
        },
        "item": {
          "id": "fe646548-4278-411f-8225-d99b9fc0e806",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a5acd6ff-3c95-49d2-8a28-846ee61315d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c1cb9e-a5a7-4001-93b2-007f194fcfd0",
        "cursor": {
          "ref": "2b37ab28-ebc6-4803-aa72-ae89041305a7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "acb17e86-18a0-4398-8722-d905cff77bfc"
        },
        "item": {
          "id": "72c1cb9e-a5a7-4001-93b2-007f194fcfd0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "898bafec-a73a-4e0a-8e5b-68e37f98e386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946c4ff7-e15a-4e05-8272-215ff54ffb5c",
        "cursor": {
          "ref": "8fcafdf8-ea0a-4011-b7d7-3bface806fb3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "adc91362-7457-4080-8864-61881482c531"
        },
        "item": {
          "id": "946c4ff7-e15a-4e05-8272-215ff54ffb5c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b8664218-f99e-4892-952b-4a2f65858b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2576f3-2a5c-4c10-b484-e0184ae65e77",
        "cursor": {
          "ref": "83d2d84f-9c8c-4e6e-b84d-010ff6f8cfca",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9b7ac35a-5177-4e66-ac59-38fbcb871eb4"
        },
        "item": {
          "id": "be2576f3-2a5c-4c10-b484-e0184ae65e77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8470f033-282f-47e0-abdb-26282fa52cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56609256-fc68-497e-90d2-fa827ad846f0",
        "cursor": {
          "ref": "1852baad-aedf-4834-96d6-e99c752f4e6e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2e782188-4033-4cfa-97fe-be2095abbdc9"
        },
        "item": {
          "id": "56609256-fc68-497e-90d2-fa827ad846f0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c894c0b7-5319-47ec-aadb-c1f123293cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a45a25-5cae-4216-a05d-8d23e60790f9",
        "cursor": {
          "ref": "b4e3cb65-0fe4-406d-a5c5-2cef7aff8c47",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "53342e16-4390-48aa-842b-fa84093e15bf"
        },
        "item": {
          "id": "33a45a25-5cae-4216-a05d-8d23e60790f9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dd7d720c-ec4b-46f8-aa61-48216e338800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25578c50-b701-4029-bb6c-9b4b3666c10e",
        "cursor": {
          "ref": "14023656-d2cd-4c56-b1b2-6017ca4a8d84",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f0bbd777-c685-432a-80db-1bbf4fddfda9"
        },
        "item": {
          "id": "25578c50-b701-4029-bb6c-9b4b3666c10e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "93fbac01-a1aa-4c0c-8323-ed131a36c52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade2d0e4-5d6a-48a0-98e6-e8d9f885cfdc",
        "cursor": {
          "ref": "69a8450c-22b8-4988-a17a-d59db0daa84d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fecf9e08-5527-41d0-a3b8-de6cc39fe914"
        },
        "item": {
          "id": "ade2d0e4-5d6a-48a0-98e6-e8d9f885cfdc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0e143dd0-06e4-4156-9a78-895ec1e0176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7d019d-9026-46d5-9a97-1ba025958475",
        "cursor": {
          "ref": "53f47ef9-78c5-4990-ae7f-9e79b698a850",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f37610bc-0fef-4abb-98a2-05f20ac5c170"
        },
        "item": {
          "id": "cb7d019d-9026-46d5-9a97-1ba025958475",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "569ea580-6b48-4562-a49a-fa26154a47a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be239b0c-2e5a-49ae-b52b-44434770da03",
        "cursor": {
          "ref": "117680c1-1f1b-4e20-b0db-9514564e5470",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "827447c6-2d27-4f3b-96bf-d7ade128d943"
        },
        "item": {
          "id": "be239b0c-2e5a-49ae-b52b-44434770da03",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5be63f03-a13f-4f56-ab42-5bcaedab1440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da368510-a701-493b-ad5f-17170b19c99f",
        "cursor": {
          "ref": "2aacb3e9-4838-4bc6-97e2-78e6af874e16",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "42955045-046e-4eb6-9e63-22a6132ae175"
        },
        "item": {
          "id": "da368510-a701-493b-ad5f-17170b19c99f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2849ca6-f3d9-4e1d-bd61-15f0978a9e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36830475-6f8c-45c3-8f93-9089f4f93791",
        "cursor": {
          "ref": "e43b18fe-5028-4e0e-a943-0efbbbd28b8c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7d9d15a9-edc7-4e06-a8bf-cb906a121520"
        },
        "item": {
          "id": "36830475-6f8c-45c3-8f93-9089f4f93791",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "60414e6a-81eb-4731-971b-e40d025cc24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da34162-fd3e-45c1-88f1-3a51c713f626",
        "cursor": {
          "ref": "b09f20cc-7de9-4632-8a0d-bec6c71c5ec0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cd7c0c6c-03fa-4e27-b3f0-23994ab7ec2c"
        },
        "item": {
          "id": "2da34162-fd3e-45c1-88f1-3a51c713f626",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4d439239-db95-4505-8899-89d6985f0893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3215e2f1-3b45-4933-bcad-d90f1cafdaf6",
        "cursor": {
          "ref": "b474f08b-fa78-4732-b67c-14d6e926323e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cb88faa4-bf8c-4079-a0dc-6324d646d180"
        },
        "item": {
          "id": "3215e2f1-3b45-4933-bcad-d90f1cafdaf6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a53e9634-ccc5-4e93-b78e-1787f0499291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58764ab-96d4-4dc9-a499-24a199ceef77",
        "cursor": {
          "ref": "f0b7759c-4736-47f8-b3a5-93d471e7320f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "984c1cd5-a3a5-479c-9e2c-b46f814f8562"
        },
        "item": {
          "id": "d58764ab-96d4-4dc9-a499-24a199ceef77",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d8d281fb-d515-4585-886d-bca2e877a830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aebb36-85a8-44fb-8b19-30f71da4b615",
        "cursor": {
          "ref": "53817295-ec6a-439b-80f7-5d1e92d65b88",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "867114e5-8b7f-432a-ad28-59742308956a"
        },
        "item": {
          "id": "a0aebb36-85a8-44fb-8b19-30f71da4b615",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cfc911d4-79d5-4d77-ad62-c8ece5140675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e38a9a3-1696-4fb8-a888-82619ff10eec",
        "cursor": {
          "ref": "a1af968f-7074-440a-8a46-59b91ee9626a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bee6ce06-158f-4545-904e-a8f2298a6ac4"
        },
        "item": {
          "id": "8e38a9a3-1696-4fb8-a888-82619ff10eec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3cd3b275-3148-4f4e-8ae0-7871931fab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff2d239-5522-4930-8314-2280932833e1",
        "cursor": {
          "ref": "00871db2-9e90-4204-a1c1-1b95d7bc0844",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3e07a18d-423e-4c26-bbc8-2e4948b3ea6c"
        },
        "item": {
          "id": "1ff2d239-5522-4930-8314-2280932833e1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "50e874ea-5b96-44a3-a90e-75f93ced8c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090aa160-21c6-452b-a1a1-fd0e630a2c79",
        "cursor": {
          "ref": "784f65d4-12da-4d8a-b248-c449844696a8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bedd10fd-3f37-43f9-855a-ac8cabc9d67b"
        },
        "item": {
          "id": "090aa160-21c6-452b-a1a1-fd0e630a2c79",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ecaf7d26-dfba-4ac8-bb1d-e577d6895513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca5eacb-55db-46c1-865c-afc13b3301c0",
        "cursor": {
          "ref": "60842e7e-ed56-4b65-a585-e4700731a40d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2feaa995-8d32-4e8d-adf7-c24b85ae5bfd"
        },
        "item": {
          "id": "bca5eacb-55db-46c1-865c-afc13b3301c0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cdd0b464-dd19-480f-a84e-9a01e1943b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1192f883-a520-4ecc-8777-b2f9051e570b",
        "cursor": {
          "ref": "9f8d39c0-d250-4a64-8184-4eee3761c728",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6ea0fcb5-723e-48ce-a30f-12cb6e12d32b"
        },
        "item": {
          "id": "1192f883-a520-4ecc-8777-b2f9051e570b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "878501d9-7f93-4f0c-a2f9-2e1f19932cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fc7181-d002-4113-a291-02b793cec6b5",
        "cursor": {
          "ref": "39c0a6bd-b3bd-41ef-ae17-5f49cf6e66f0",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3bf2645f-cb1b-4bde-8e15-c9d6443fa6d7"
        },
        "item": {
          "id": "22fc7181-d002-4113-a291-02b793cec6b5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "74398df6-3ae6-41af-89b9-7731efbf1ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2051ec-dc67-42a0-ac9f-ac442f68d1c9",
        "cursor": {
          "ref": "bb62e753-3200-404d-9f98-7ebbb76538fa",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7c05b7f7-efdf-4237-838c-ae3ccdea203e"
        },
        "item": {
          "id": "2b2051ec-dc67-42a0-ac9f-ac442f68d1c9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b59d7a55-6822-4040-8c36-c0b16fbd0a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f10dcb-442b-427e-97bd-3948a403ec5e",
        "cursor": {
          "ref": "d56e081d-b0c1-4540-b533-4c04d523d1a2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "efacc73e-4be6-434c-ae53-717831243517"
        },
        "item": {
          "id": "a4f10dcb-442b-427e-97bd-3948a403ec5e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2c7e20b5-854b-40c9-bf3f-adb92b07c60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2401dd82-8f95-4e34-8f6c-5c51bc6482d0",
        "cursor": {
          "ref": "732fe3b9-b749-4130-96de-665bebafb0bf",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "acaf4849-c604-47b2-821a-f307edc2722e"
        },
        "item": {
          "id": "2401dd82-8f95-4e34-8f6c-5c51bc6482d0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b9195357-5491-4590-abb4-2235b2ef4803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe2470e-6b02-4f94-881f-0b746c7439e7",
        "cursor": {
          "ref": "ececd617-8e19-47d4-9aed-8ddeaaea251d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f37abada-1d33-44fd-b440-1ce9676c35a2"
        },
        "item": {
          "id": "0fe2470e-6b02-4f94-881f-0b746c7439e7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc8b7332-f817-42dd-91fe-07d3afbfb9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9eab1ff-becf-4e80-81d6-57202be96104",
        "cursor": {
          "ref": "f602b7b2-ca97-4d35-90ba-5b2c4b411539",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4c34da4c-a857-4e15-94b4-92a37231a8cf"
        },
        "item": {
          "id": "c9eab1ff-becf-4e80-81d6-57202be96104",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "df56c87c-f39e-4516-8780-59be32dc51f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3103099-df25-4225-afad-7331f60657c6",
        "cursor": {
          "ref": "fd4a905e-119e-467b-bf10-33d589c601aa",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4a27c65d-b21a-4cab-8f09-4085f61d68eb"
        },
        "item": {
          "id": "e3103099-df25-4225-afad-7331f60657c6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "26114fb2-d06a-4704-a260-5d4fc18f0d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac40092-7a60-4c9f-a6de-f895775f741e",
        "cursor": {
          "ref": "66fa7446-2912-40dd-baf1-66d72a6c27ec",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "41170c80-87cf-4cf4-86e9-dcd885e90414"
        },
        "item": {
          "id": "8ac40092-7a60-4c9f-a6de-f895775f741e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e9197715-75f9-4691-bf9c-27767618b84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31429dae-c82f-40aa-beb8-221b0b7677d1",
        "cursor": {
          "ref": "bfabd22d-6e4a-4e87-8d7d-f2ed9a58aeb3",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c8e137ba-fb15-4e73-8419-18eb2479d05c"
        },
        "item": {
          "id": "31429dae-c82f-40aa-beb8-221b0b7677d1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c950616c-a978-4915-b548-52bd89155f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb75e30-5fe5-4965-8a6b-01cfea5b508d",
        "cursor": {
          "ref": "cbc4911f-4406-4264-822d-e148fa41b545",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "88153020-6015-4e4e-9194-f38269d5b447"
        },
        "item": {
          "id": "ceb75e30-5fe5-4965-8a6b-01cfea5b508d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3e155503-0cc9-417f-b65b-1b33245d82e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176b88c8-a56e-4777-a267-1572cf777135",
        "cursor": {
          "ref": "4c253197-4efe-4f80-8832-618668ae531c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d4693f09-382b-4822-becf-166c36c1ce24"
        },
        "item": {
          "id": "176b88c8-a56e-4777-a267-1572cf777135",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4e0f50ca-b137-4583-9139-e1623214e494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0e5ad5-efc2-4efa-aa33-170a7982835e",
        "cursor": {
          "ref": "b1e21aae-eab7-4793-8838-b02670dd4135",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4cccd4ee-dd04-4d3f-b567-cf56455cf71b"
        },
        "item": {
          "id": "1a0e5ad5-efc2-4efa-aa33-170a7982835e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "23c60e85-d4e8-4d6f-b4cf-39a0047a2807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1c8afb-dd50-4fb3-a245-c7fd23d038eb",
        "cursor": {
          "ref": "09d48a96-9a28-4b4c-b23f-a224a66c5f60",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7d93fcd7-ea7b-4dee-9f78-af9aab385df1"
        },
        "item": {
          "id": "5e1c8afb-dd50-4fb3-a245-c7fd23d038eb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "437d6ac7-d32f-4d96-a389-80a78badb038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4617864b-614f-4434-a66e-e3165abe3a0a",
        "cursor": {
          "ref": "5a2fb415-a894-45e0-a6a0-c9f8a3861d22",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5e7b4b65-c3a3-4c7f-9e60-a0a0d5998827"
        },
        "item": {
          "id": "4617864b-614f-4434-a66e-e3165abe3a0a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "814ecd99-c38c-4f3f-8647-670788910dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1d53eb-4688-40f0-8291-5ed3d7c43451",
        "cursor": {
          "ref": "4a8ad6df-fabf-43b0-925f-e474bd663ee1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6b73ae63-e9fe-4162-904c-074ccd343ffc"
        },
        "item": {
          "id": "2d1d53eb-4688-40f0-8291-5ed3d7c43451",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "eea93d2e-5e5b-4720-bc60-2c32839aa860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bdc42d-3d93-44f2-9231-e07a25c5b050",
        "cursor": {
          "ref": "08760024-5c0b-41b3-92ba-7be5004e99d3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "37a88423-24e1-45f1-b23d-42406df3fcb5"
        },
        "item": {
          "id": "d6bdc42d-3d93-44f2-9231-e07a25c5b050",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4d51f02e-0988-4f8f-b320-936f24838264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2090d422-6347-4af9-b029-c41c8f12969f",
        "cursor": {
          "ref": "3a7dbec6-e8ba-4dd7-8a0e-dcca4989af97",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a05866cd-9b52-4b33-807c-676d6086119b"
        },
        "item": {
          "id": "2090d422-6347-4af9-b029-c41c8f12969f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ab7f7a4-420e-4303-b44b-08ffa06a9b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4c1842f0-acb3-4bae-8ee1-6040f311fb27",
        "cursor": {
          "ref": "6bd6e1ee-b093-4e74-b38c-57890d4d649c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "58f2feb0-3f61-4953-9923-f39d9746f25d"
        },
        "item": {
          "id": "4c1842f0-acb3-4bae-8ee1-6040f311fb27",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "663ea18e-dd0a-4a23-842a-e3f827d3398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b12e1396-b75b-40fd-a177-67e1b9b2e146",
        "cursor": {
          "ref": "9c24337d-16f4-416f-8cea-0eb641d6efbc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "60bdfa4f-be3c-4871-ac4a-2c8d98b8f7aa"
        },
        "item": {
          "id": "b12e1396-b75b-40fd-a177-67e1b9b2e146",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e4b5432f-91f7-425b-b2f0-96f70e792a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4d229ba6-8926-4ded-a5d6-3804ae26f48c",
        "cursor": {
          "ref": "1279e475-c504-4166-824d-28fabc3ec082",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "93e6ebc4-3f28-4415-998b-ebdbc1d30efc"
        },
        "item": {
          "id": "4d229ba6-8926-4ded-a5d6-3804ae26f48c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6674a54a-0028-40fe-9d3a-79c14dc497e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6485054f-bcce-4053-87b7-a5cb09ac0046",
        "cursor": {
          "ref": "a56e108e-f654-4da4-9638-711d228274dc",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f7df77d1-909f-4859-8624-89bbb61873c6"
        },
        "item": {
          "id": "6485054f-bcce-4053-87b7-a5cb09ac0046",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fa8ffb90-d5b4-4b79-b07a-cf3e2e77378a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "23cb6c73-8792-4f6d-8dca-e72ea8a27459",
        "cursor": {
          "ref": "ff56c7bb-9291-46a1-b65e-af0630775f4a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ba4f85c5-b438-4761-9ed2-53e1e293ddd0"
        },
        "item": {
          "id": "23cb6c73-8792-4f6d-8dca-e72ea8a27459",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7146874-2a18-4cc3-92f7-e251598ec4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d751d40a-66e0-4d11-bcd8-30fd1b2cf22f",
        "cursor": {
          "ref": "27e96abb-db9e-40d2-bdaf-8cc33de14567",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7fc643c2-6feb-496a-9bde-63c98348868e"
        },
        "item": {
          "id": "d751d40a-66e0-4d11-bcd8-30fd1b2cf22f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90435301-b770-43cb-a8d2-49f52122e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664d3d79-e1c7-4bd2-8f55-9758fb5646c6",
        "cursor": {
          "ref": "df29d329-6dec-46b0-a583-63f1891b0961",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c84a9cc1-d497-45d2-902c-24d278b2bd0a"
        },
        "item": {
          "id": "664d3d79-e1c7-4bd2-8f55-9758fb5646c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4fb6f2d6-9ee0-4b04-9a58-cb90fabd2e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7418d6-b319-48e7-a648-2fa0d598b7fd",
        "cursor": {
          "ref": "bbafed61-572e-4b71-b4a7-dc7ffc1e2e35",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "db64aaf0-dbc9-4e8a-99a7-3bfacc068e5b"
        },
        "item": {
          "id": "8b7418d6-b319-48e7-a648-2fa0d598b7fd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cfbe893e-8c0f-43a4-b041-c433db0896ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9f8e64-df9e-45f4-bcaf-e3e064e27278",
        "cursor": {
          "ref": "43025d4d-7568-47b3-a5fd-5799c22a50dd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "172798ba-dd23-41e0-9d5a-26d25daf4c67"
        },
        "item": {
          "id": "0b9f8e64-df9e-45f4-bcaf-e3e064e27278",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5cd23977-e158-4a2e-bef8-eb33d0eb59c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4718576-23b8-45f2-9714-c848677db64d",
        "cursor": {
          "ref": "22493ac9-100a-48cb-ad60-a757473bb6ab",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a315d925-44c6-4656-bb40-a99b1afeb095"
        },
        "item": {
          "id": "c4718576-23b8-45f2-9714-c848677db64d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7588b4d4-e09c-469a-a136-8af735ce5e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb6433e-45a1-4c00-9679-17e7eda34d5b",
        "cursor": {
          "ref": "52232f6c-7549-46f9-8483-9875d532fd79",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "22643289-b8cb-4d66-819c-58a049fcf971"
        },
        "item": {
          "id": "8fb6433e-45a1-4c00-9679-17e7eda34d5b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d7e571f4-879b-45ea-8efc-e9fda2cb9673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc2c91a-df18-4d45-ba13-ba6caab83d9c",
        "cursor": {
          "ref": "724154f5-6647-453c-ae77-e602e730b9e5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1a5a7dde-b04b-490d-a235-2ce6d6949792"
        },
        "item": {
          "id": "efc2c91a-df18-4d45-ba13-ba6caab83d9c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06694ae4-f491-42b6-a291-b6e6ba43f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495cb922-9979-4ee9-9064-403c8400bda0",
        "cursor": {
          "ref": "870526de-287a-413a-a575-38af4dfdb9fc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "55f58630-92e7-4afe-8b8c-8eb272156e83"
        },
        "item": {
          "id": "495cb922-9979-4ee9-9064-403c8400bda0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5819821e-1cab-48a5-91a9-4f4c6857358d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c99199-3e91-442f-b3a7-57a5c6ad1153",
        "cursor": {
          "ref": "f0a3dbe0-7d1a-42b4-8cae-3b8e8ae75e4c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a6f252c3-33e9-463c-bf9a-ee4f5cf95733"
        },
        "item": {
          "id": "05c99199-3e91-442f-b3a7-57a5c6ad1153",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c65d4f57-2880-4df7-9807-61d900b2f8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594f0f8-152f-4499-8726-ba1a544a4028",
        "cursor": {
          "ref": "e3c8cbca-9bb4-4425-bb86-294904433b5e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "71328bbe-0efc-4593-9831-2973ad80e3f5"
        },
        "item": {
          "id": "1594f0f8-152f-4499-8726-ba1a544a4028",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c16b8ead-294e-4af0-864f-b8e5ebe7f91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a76ce07-6919-4f43-84c5-f269ee11f536",
        "cursor": {
          "ref": "723d8dbb-20ee-4920-8569-154fe9f38157",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4ebe74e2-1dd5-4d7e-b417-552100a65b23"
        },
        "item": {
          "id": "6a76ce07-6919-4f43-84c5-f269ee11f536",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "47d123ac-e321-4a2f-9625-7f1b43b0b446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3502da-4505-4a59-8411-f874ac3758e8",
        "cursor": {
          "ref": "57e0a878-f17c-44aa-b4b3-e109bcdbb6d7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "85bf9d5d-b558-4d25-9702-0222c7c2cacc"
        },
        "item": {
          "id": "dd3502da-4505-4a59-8411-f874ac3758e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0a0133fa-0195-4df6-b89a-b9bc4e61a788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43ba4b5-e643-44fe-ac93-8d6a730f5649",
        "cursor": {
          "ref": "03ac32cd-6268-45dd-90cd-84a743e0a1b2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "855fc362-a527-4757-9f73-7215357e02f0"
        },
        "item": {
          "id": "c43ba4b5-e643-44fe-ac93-8d6a730f5649",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "98915ddd-44c1-4ea1-baaa-3e0474a24cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e1472d-d682-4922-aa78-f8000729c18f",
        "cursor": {
          "ref": "115bd9cf-6a71-4248-afe5-f46c17bd268c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0b57e205-4560-4a5e-a88e-9b0d54232141"
        },
        "item": {
          "id": "50e1472d-d682-4922-aa78-f8000729c18f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cd7521ec-434a-4a4f-9b49-8fb9b5f4f6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3c1de7-e8e5-438d-9410-132e38d1a805",
        "cursor": {
          "ref": "a9e54cc5-200c-47b5-ad3f-e08e81e95c53",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9edb3cc2-81dc-4488-b9b1-9d266fc383dd"
        },
        "item": {
          "id": "bf3c1de7-e8e5-438d-9410-132e38d1a805",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4e1aa621-5aab-4175-952a-4483c65ca19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389fcaa7-d5d5-45ba-96e4-90a5b7930be9",
        "cursor": {
          "ref": "5cd46505-920d-4701-9b19-efdb01301a00",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5bde7b7d-5582-4429-b0d5-095cd3fca300"
        },
        "item": {
          "id": "389fcaa7-d5d5-45ba-96e4-90a5b7930be9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ed44a735-40a8-4840-b64b-6b6411a73cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cf3ff7-77b4-4f3a-b045-4f1e9036ba21",
        "cursor": {
          "ref": "049d0414-536d-477a-be9f-e409c6a6ac53",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c1ca9a85-a978-40cd-b7e7-80e07df2c971"
        },
        "item": {
          "id": "f8cf3ff7-77b4-4f3a-b045-4f1e9036ba21",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4e19ebeb-0895-46b9-a9bd-57ec428e315a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a71d7ba-75aa-488e-9e45-025f01d4f125",
        "cursor": {
          "ref": "b210cb96-aceb-4b2a-86db-9e00db780185",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5d1bf217-0dea-4d92-9a59-00ce1d68742b"
        },
        "item": {
          "id": "4a71d7ba-75aa-488e-9e45-025f01d4f125",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9928bc2a-235e-416e-bb0c-42e12340df69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b56b25-095d-4afb-8c33-46a24aa23362",
        "cursor": {
          "ref": "c8ccc7ff-40f0-4e1f-b460-2e99af611aa9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a00845d5-26e1-4054-a883-84d5fc885192"
        },
        "item": {
          "id": "06b56b25-095d-4afb-8c33-46a24aa23362",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f293ec2d-ebc2-4b26-af28-72e6763f2a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e3411a-a316-4bf1-8a42-1032b40deb67",
        "cursor": {
          "ref": "21507731-a3f3-4cd2-aede-2549a9982755",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3ccde9f2-b46e-477b-8d3c-90e6d49e3445"
        },
        "item": {
          "id": "b7e3411a-a316-4bf1-8a42-1032b40deb67",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d4a5a4b8-ee9e-4567-b17d-f7c01d890123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3837748-1308-4b23-bf68-0ce59b2f0141",
        "cursor": {
          "ref": "f5a40272-f355-4a15-87c7-5268b060f505",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "77da4126-2d27-41d2-9a96-a2fb981a5c49"
        },
        "item": {
          "id": "c3837748-1308-4b23-bf68-0ce59b2f0141",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ce47a6f-d8f9-4484-a077-2973955912e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d1a972-f0ff-44c3-ae56-ad3e020d9b96",
        "cursor": {
          "ref": "9001dc7c-5d48-450f-ad1e-907d2d6c6da5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9252ce1f-d342-47d9-aa06-4cefa9541fba"
        },
        "item": {
          "id": "29d1a972-f0ff-44c3-ae56-ad3e020d9b96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bc721d84-5d03-4af7-9b24-50ba99a12f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f3f29b-14ff-4867-9906-feddfeff0100",
        "cursor": {
          "ref": "14dd9235-3360-4cef-aefb-c24acc16b3de",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0466aabe-04bd-4d91-aeab-08938c3fe5a9"
        },
        "item": {
          "id": "e7f3f29b-14ff-4867-9906-feddfeff0100",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "498300a6-8c68-4c86-9b3c-f75a7e307d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad19139f-ae81-47d5-aadf-d9cac3a981d7",
        "cursor": {
          "ref": "5d526783-b32f-4784-9f8b-1f32ab504b6a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d1c9fb19-61c1-49c8-8fab-782aa774227c"
        },
        "item": {
          "id": "ad19139f-ae81-47d5-aadf-d9cac3a981d7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "907dee80-dba1-47b9-906c-773b7740c569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c45e3-28d4-40a0-82af-ac6572d02ee2",
        "cursor": {
          "ref": "e958b441-2478-4aa8-b2d5-46f7d916b806",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32ebadd7-ecc8-4279-908a-c039a9170fb7"
        },
        "item": {
          "id": "2d2c45e3-28d4-40a0-82af-ac6572d02ee2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a9138efb-e64d-46e7-8716-eac32f89f773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d99862-e7cb-4f28-834d-9b21ab628ba6",
        "cursor": {
          "ref": "fa73b766-193a-492f-93f5-db35f8028d82",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f1b54f2a-1fbd-48aa-8191-e685f6339664"
        },
        "item": {
          "id": "99d99862-e7cb-4f28-834d-9b21ab628ba6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "93a2d7b8-bd69-46d9-8cd4-9d5170dc7d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aff9bf6-fee5-4524-84c1-f7225b241f82",
        "cursor": {
          "ref": "8c1d53ff-e7bb-49d5-b8a4-02fc1176614c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f155d9ab-754e-487b-88fb-2d4b940cf394"
        },
        "item": {
          "id": "7aff9bf6-fee5-4524-84c1-f7225b241f82",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dbbf74ac-2c45-4da8-b65e-7e2c1b487fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5849588-e765-4959-bdae-8300e9a6f30e",
        "cursor": {
          "ref": "96ffd966-c76a-48db-8f89-8d2a8a3a7f21",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5c189575-01d0-4542-a9b0-820310f1cb62"
        },
        "item": {
          "id": "b5849588-e765-4959-bdae-8300e9a6f30e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d8c8d98-ce19-4817-9d07-e366458735c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2427e05-8d04-4d21-af19-39bc9e21807d",
        "cursor": {
          "ref": "1de0622d-f60b-4167-ab45-373c7633adf8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5400f3b2-a965-4ef4-9c46-084514c7660b"
        },
        "item": {
          "id": "f2427e05-8d04-4d21-af19-39bc9e21807d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86ba6889-3202-4ab3-b562-f3c5747aa092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18364dd6-15ec-466a-bd1d-1943df10ec6e",
        "cursor": {
          "ref": "00df1c72-3285-47fc-8b55-4cff8e0e8141",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "04cfbe4e-adf7-4ef6-aec9-2a56fcf63bab"
        },
        "item": {
          "id": "18364dd6-15ec-466a-bd1d-1943df10ec6e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1b4b6a11-8da5-48d1-b7ed-baf4bd7f2801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdf6396-323b-4535-abb3-1cb608db0414",
        "cursor": {
          "ref": "f9472d8d-3852-4180-af18-415a023a923e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "233b2a8f-ec65-4872-bff3-4e0ffa079208"
        },
        "item": {
          "id": "2fdf6396-323b-4535-abb3-1cb608db0414",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ab729ef-4ae2-4565-b8b5-ae6a6ff99d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6052d1-2c66-4759-83d6-c0c86e885523",
        "cursor": {
          "ref": "5c44c3a0-3c29-407c-afe3-14987ad1a61b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "15f93896-bdb3-46fc-a637-4e4ab469b790"
        },
        "item": {
          "id": "2c6052d1-2c66-4759-83d6-c0c86e885523",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e5548bec-dbfa-4224-bb27-c853df0cbb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96407b40-bc7f-4fbb-b80e-af66e76a41cd",
        "cursor": {
          "ref": "8efb6220-5a8e-41e0-96b6-f23b07c83e42",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "723bd406-a897-4f46-ad99-6ae228d7ddf0"
        },
        "item": {
          "id": "96407b40-bc7f-4fbb-b80e-af66e76a41cd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fcdb4bc7-4d46-4eae-97c7-c64c81e0d496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54bbe79-b501-42e3-90dc-03356d012cbb",
        "cursor": {
          "ref": "e5eca728-0eb8-4c98-abfd-0aee865161ff",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2719ef3e-4f20-4b02-b1d8-84b278d9c33d"
        },
        "item": {
          "id": "e54bbe79-b501-42e3-90dc-03356d012cbb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f1b91482-18c8-4aaa-b245-d6961de72163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10807d7f-011c-44a6-add1-db568f15267e",
        "cursor": {
          "ref": "72118b06-ba4c-402e-96ef-8b84e957410e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ede0f2c7-de08-48c9-85fb-741dc00677e7"
        },
        "item": {
          "id": "10807d7f-011c-44a6-add1-db568f15267e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f31e73d2-fa63-49b9-afbf-92433937e5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75d75bb-a648-4183-aa35-e2f7077de44d",
        "cursor": {
          "ref": "ab68fd55-03de-4559-b1b5-aa172ff932a7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "453aa855-eba6-4c67-97ea-617668902ede"
        },
        "item": {
          "id": "e75d75bb-a648-4183-aa35-e2f7077de44d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "30964edd-ff98-4ed9-9dbf-8043ff93df12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a77bb5b-f8d8-4ab0-a8ca-ce631719f85f",
        "cursor": {
          "ref": "1e38203b-74b5-41de-802e-61a46ce9860c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "59af5b7f-b7d0-4a55-92c0-d73799bd690a"
        },
        "item": {
          "id": "5a77bb5b-f8d8-4ab0-a8ca-ce631719f85f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1fdac888-86e7-471e-94c5-a30a76467c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73285365-b5f0-494b-85d1-b7cba953b595",
        "cursor": {
          "ref": "ed354948-35bc-4bf1-ad40-0a573e02ee9e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f75ef341-e636-49a4-83c8-f96a90ecc965"
        },
        "item": {
          "id": "73285365-b5f0-494b-85d1-b7cba953b595",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "632978a8-aecf-4ec2-a4aa-36768792a170",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f20aca9-26b0-4b59-a77c-690f5dcda94a",
        "cursor": {
          "ref": "d1ef80b6-5f98-4755-bf90-e688f588c350",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4b2494e3-28b9-4b49-9e15-4d4a0d7b181d"
        },
        "item": {
          "id": "8f20aca9-26b0-4b59-a77c-690f5dcda94a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9272d980-7c7b-4f74-ae36-cc5754e6bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b1b742-53f7-4494-a4a0-ad27a7b61d48",
        "cursor": {
          "ref": "478e64a6-fceb-422d-9da3-5229d36ba461",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "636d63b5-98fe-4ee0-a9fb-b758c4848316"
        },
        "item": {
          "id": "25b1b742-53f7-4494-a4a0-ad27a7b61d48",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b64ba367-65d2-4e5c-ba1b-1c90382e6246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcd4cc7-2aa3-420d-8af5-f8d12a301130",
        "cursor": {
          "ref": "60a28b28-892b-4ca0-8018-325851407d54",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c920b873-c1a0-4bb3-907d-8373a99b84da"
        },
        "item": {
          "id": "1fcd4cc7-2aa3-420d-8af5-f8d12a301130",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d80ec8d1-fe49-4f41-9045-8992fcb91fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ad3ff9-85a0-4c17-a039-40383d5a913a",
        "cursor": {
          "ref": "f2dbc20e-d00f-43e9-a50a-ac91266a52c5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1e36df10-3ae9-4bc0-8a5a-e97493f082a4"
        },
        "item": {
          "id": "19ad3ff9-85a0-4c17-a039-40383d5a913a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0e97c052-a578-419f-b0b8-c214c37040c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429840a6-1ed6-4da7-974d-54642192ff90",
        "cursor": {
          "ref": "5cf8e530-3f32-444b-b25d-9815849aae66",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "afbf3671-e102-484f-b3e1-ff040279c903"
        },
        "item": {
          "id": "429840a6-1ed6-4da7-974d-54642192ff90",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2bc44a84-8a74-415f-b8ac-e7a36cf4ba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e02d548-99d5-48d9-b327-d26fb1e4aa6f",
        "cursor": {
          "ref": "4608fe43-8414-44d7-ac43-4a30eacc1d4c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a2b91eff-3385-41d2-960d-38ce89eed0cc"
        },
        "item": {
          "id": "3e02d548-99d5-48d9-b327-d26fb1e4aa6f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d1431806-2593-4537-aec0-31179e0e4c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26506e62-0218-4861-89fe-5d996eb944fa",
        "cursor": {
          "ref": "25367d72-c5e1-4669-9dd5-64f5a7d64b03",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd3e3b13-2616-41e6-815c-1c26bb94c9d2"
        },
        "item": {
          "id": "26506e62-0218-4861-89fe-5d996eb944fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c201c89b-7b20-4e6d-81c3-204d7fab6f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77400aa-ac96-4df8-a71a-7220c7e68120",
        "cursor": {
          "ref": "2c52c9b2-f9f3-4a5b-b3a9-b79c15963221",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "48e2a4b6-3daf-4eaa-878f-0c45f2d64e65"
        },
        "item": {
          "id": "e77400aa-ac96-4df8-a71a-7220c7e68120",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f6f21c12-daf4-4ee1-b5bf-0471ef9d7608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a340e3e7-5648-455a-8b71-66b03e2615cd",
        "cursor": {
          "ref": "d7385320-86b2-4f79-9765-f78869d75a8d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ade2e875-96c2-4eeb-85fc-a073b9506997"
        },
        "item": {
          "id": "a340e3e7-5648-455a-8b71-66b03e2615cd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "05ae90df-7312-4a69-88b5-48a6274206f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa659973-c2f7-41df-a435-ffcd3e40a6a8",
        "cursor": {
          "ref": "ffad1fa0-465b-4c95-9f15-5b643ab50592",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9506c3d7-58eb-4248-b8eb-575d58a8336a"
        },
        "item": {
          "id": "aa659973-c2f7-41df-a435-ffcd3e40a6a8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "31fa2620-4052-49ae-a095-3feb3c6f8c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8e06ae-cf5f-462e-9950-8f5f64584199",
        "cursor": {
          "ref": "a59cb70d-e2f6-4cff-ad42-b7c8239aeadd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c2305102-2cac-4b93-a452-d5e90c4cf959"
        },
        "item": {
          "id": "0a8e06ae-cf5f-462e-9950-8f5f64584199",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0e88f2d4-1322-4d22-b8ca-e3f1db648a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea513a8-d93e-4489-a92a-4c3eb6c6ad9d",
        "cursor": {
          "ref": "d9b62dbe-33f8-484e-8a0c-22cfc9f17e93",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "713f9354-7fa4-4900-b106-b1732a39ccee"
        },
        "item": {
          "id": "aea513a8-d93e-4489-a92a-4c3eb6c6ad9d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3ace8bb8-9c00-445e-a9da-87c31de76525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4978dca8-7ac5-479e-a4c8-ea48529076eb",
        "cursor": {
          "ref": "a55838ff-4c8c-48a1-8ddf-7d39fb88b276",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5131ffaf-8b94-4823-afe3-60fd95e55427"
        },
        "item": {
          "id": "4978dca8-7ac5-479e-a4c8-ea48529076eb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1b23d76c-f391-41f2-a0b5-5425bd55935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8c8fdf-5f72-470c-8e79-6bce131b53c3",
        "cursor": {
          "ref": "992ddc8b-302d-4983-bc74-74a0c03fa1e6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4ea8e969-8337-4c44-ace0-e4966aa0781a"
        },
        "item": {
          "id": "fe8c8fdf-5f72-470c-8e79-6bce131b53c3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3b1fd230-7202-455f-9fda-56cb1bb38a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6558d811-c9d7-44d9-9f9d-bb7194963509",
        "cursor": {
          "ref": "e7ad5563-44ed-40c8-bac0-5207c55969da",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "175264f5-8f1c-4a15-a9d7-792a7b34cdb6"
        },
        "item": {
          "id": "6558d811-c9d7-44d9-9f9d-bb7194963509",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d840dcdb-9f59-4725-b9cc-49afa6e5474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31321056-56d1-46a4-8db2-03d216c0d643",
        "cursor": {
          "ref": "ac8c891d-e161-4cb1-b0b4-b07fcb924081",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "19b82df9-954e-4648-be1f-86b7800d2078"
        },
        "item": {
          "id": "31321056-56d1-46a4-8db2-03d216c0d643",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "23e74aba-7faa-4812-bc93-6e9eed6e4852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5f5c68-f1fa-43bd-ab91-511ba6b45b13",
        "cursor": {
          "ref": "b3b589df-30b4-477a-8491-04308a859a59",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f4aac6a9-e299-491d-a1a6-f855bca62bc6"
        },
        "item": {
          "id": "cc5f5c68-f1fa-43bd-ab91-511ba6b45b13",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "73fcf08d-9e2e-4c35-99ad-ad9f70a46409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a7cceb-ff2a-43e2-a713-da8a0b569f15",
        "cursor": {
          "ref": "18f3f44d-c3eb-428c-bcf3-47f75f154e0b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4ed99180-381e-4c05-aa73-bf69230d3214"
        },
        "item": {
          "id": "d2a7cceb-ff2a-43e2-a713-da8a0b569f15",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0a0af328-e836-4a35-a896-a7ee7d251b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1029d36-38ac-4a1d-8b4d-a22514c3d9ca",
        "cursor": {
          "ref": "9d402e13-58f3-4e71-af6f-bf831e8eb5e3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4698208a-a9ff-4945-87be-7e8b6d7b1367"
        },
        "item": {
          "id": "c1029d36-38ac-4a1d-8b4d-a22514c3d9ca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f7a19dc1-2549-4093-a437-97584c0e5e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d891d71-00f2-4c86-9389-23aa958a61ac",
        "cursor": {
          "ref": "355fa31f-a25e-4066-85eb-f74e497d98ca",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ccbeb21f-1cad-4a9c-b7d0-e6e9080839f7"
        },
        "item": {
          "id": "6d891d71-00f2-4c86-9389-23aa958a61ac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b51dd2d8-7693-44a3-83f6-8fa6438c542d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c538af8-6cea-4cce-992d-d63beeadbf07",
        "cursor": {
          "ref": "bff38c64-75b4-431a-9727-3cb2e1d5a509",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "956baada-3cd4-4f7e-8d62-bbbdafbbfa5e"
        },
        "item": {
          "id": "5c538af8-6cea-4cce-992d-d63beeadbf07",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74d406d4-5748-4c20-bec1-300e752278d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a05b7f-79c0-484a-928e-b8becb312799",
        "cursor": {
          "ref": "dbd26890-b5c6-42cd-8db9-20c79524a53b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6f73fb82-5504-4b64-88a8-700772516da8"
        },
        "item": {
          "id": "25a05b7f-79c0-484a-928e-b8becb312799",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3503f46e-2a26-4882-b131-a63bde01a41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd667fa-3169-49e2-ac09-eb1d8d052036",
        "cursor": {
          "ref": "52095945-d70f-4754-8a09-114f52e1c9fa",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2f1cceda-206c-4ef9-88c2-e2ad445f6a63"
        },
        "item": {
          "id": "5dd667fa-3169-49e2-ac09-eb1d8d052036",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7fa62c62-0690-40a8-bf14-1e043eda6ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3414da-94fb-4bc2-b241-425172de8eb7",
        "cursor": {
          "ref": "f3ec2861-d460-4e5d-a336-ee72b22febc6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0510e153-9820-4cbb-a169-8d663f6474b8"
        },
        "item": {
          "id": "4c3414da-94fb-4bc2-b241-425172de8eb7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4bab41ba-2a92-4215-bde2-02066a27d286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c744fb1f-1f43-47d2-beb5-aa8ab8bc8fb4",
        "cursor": {
          "ref": "2f6c6f5c-c903-459c-a2fd-e32e437ac40b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ff85bce7-3ae0-4681-9c99-f21b89cc7d51"
        },
        "item": {
          "id": "c744fb1f-1f43-47d2-beb5-aa8ab8bc8fb4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "614f4df1-8351-4885-8284-581c00c60f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83bde94-3a34-45b1-87de-f325f7313b3f",
        "cursor": {
          "ref": "cc453e5f-def5-4518-b55c-ec8f9f8a9a63",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "254bff06-4d34-4243-bcc2-8679f8bbefe7"
        },
        "item": {
          "id": "b83bde94-3a34-45b1-87de-f325f7313b3f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d5988309-d86e-46b4-a970-2c40b2e1f188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b5e07-cdec-4edd-9000-e6fb4716ebe9",
        "cursor": {
          "ref": "49ce122f-5d8d-435a-8da8-358666a45171",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d6201200-faf8-4737-b276-dd4c9c5e8a43"
        },
        "item": {
          "id": "f71b5e07-cdec-4edd-9000-e6fb4716ebe9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9f6d6f51-991f-4631-81e4-f901ed193026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92839979-1648-4136-a40a-fb76fed3b40a",
        "cursor": {
          "ref": "5cd94248-1645-4c5f-8612-a13515a03d86",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "de20c6ad-d3c0-4cec-8768-0cceec491642"
        },
        "item": {
          "id": "92839979-1648-4136-a40a-fb76fed3b40a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5e1fd02e-0495-4b70-97e4-236510c979dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a42f29f-5149-4b0e-9656-2b3db93e9f5a",
        "cursor": {
          "ref": "e9053183-e4e4-4467-99cd-b7ed77e92e24",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3e02d0d2-e371-4a86-8231-91b31463f2e0"
        },
        "item": {
          "id": "4a42f29f-5149-4b0e-9656-2b3db93e9f5a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d517422f-a559-4783-803a-5734a361b8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcfa4c4-e1ec-43ad-ba73-d31628a3151d",
        "cursor": {
          "ref": "39a5b90a-3840-4ad1-85fb-f3070843bb20",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "035d5e7f-9c94-4fa6-9632-4ad1a8e1ae33"
        },
        "item": {
          "id": "fbcfa4c4-e1ec-43ad-ba73-d31628a3151d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5c2b3fdb-2c9d-43a0-8224-4763a52d822a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a5b3c2-b2ca-4289-9894-98fbac285aa3",
        "cursor": {
          "ref": "7ad7d24b-c5eb-4720-a878-c5c79e31ca35",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7da9b97c-4f50-4051-8c3a-e622438a7bda"
        },
        "item": {
          "id": "b9a5b3c2-b2ca-4289-9894-98fbac285aa3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "26fe7f0d-deca-4f6f-b9a0-b75299a07b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4849ef0e-350e-481c-bd0c-8d5d393f8502",
        "cursor": {
          "ref": "239d15bc-a160-4b68-a664-e16cb201661c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5d00dcd0-b2c4-4168-9f84-71fea15e6cd0"
        },
        "item": {
          "id": "4849ef0e-350e-481c-bd0c-8d5d393f8502",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ac79c363-3e9c-4705-a854-514d12b21710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45515b9b-a5d3-4eb5-b6db-bdc8219ae2ce",
        "cursor": {
          "ref": "2aa7cb4d-5173-4421-ad42-adb8d482248e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ef64eeb0-3271-4f91-9146-0936ad02243c"
        },
        "item": {
          "id": "45515b9b-a5d3-4eb5-b6db-bdc8219ae2ce",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "22925cd5-c035-4058-9cc2-db475dcdc1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d64a4af-0d52-4450-9312-449e6f9c4219",
        "cursor": {
          "ref": "f9ff8948-0e61-47fe-a0f7-e8178261df4c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3fd39c27-a409-44a0-af7a-ddeb67c0da79"
        },
        "item": {
          "id": "3d64a4af-0d52-4450-9312-449e6f9c4219",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c3c3bf80-07c5-44ae-bbf2-918f08d96a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0833619-67b7-4f5e-8782-61644ae90c76",
        "cursor": {
          "ref": "a30bd55a-7ee7-49d3-a1b3-ba282a51c46d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "01f01740-83e0-4dde-8185-7502d1c3a5f0"
        },
        "item": {
          "id": "a0833619-67b7-4f5e-8782-61644ae90c76",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9e71348d-ce6f-4123-8c73-e9ba27fcbee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bdc175-dce2-47e5-80cb-17ff1de9f94c",
        "cursor": {
          "ref": "350025d9-0334-48e6-bf7d-10541a4f4d77",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1e895b9c-4605-41aa-ba60-77e6cf2d7fa4"
        },
        "item": {
          "id": "c5bdc175-dce2-47e5-80cb-17ff1de9f94c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0942bcf8-2162-4873-a5a3-91ad646f3c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a69d4c-d73e-4f84-aec2-d7a4471c646b",
        "cursor": {
          "ref": "00613e06-77fc-4eea-8b45-94efd4aa5543",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ed2901ba-5d03-483e-8f4b-ee66bfec604b"
        },
        "item": {
          "id": "d8a69d4c-d73e-4f84-aec2-d7a4471c646b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "da7d1c19-3e23-4b40-ac37-a5a538d19d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c73a17-89e4-4514-8192-d556343954b8",
        "cursor": {
          "ref": "aa6557d7-4ed1-4baa-a4f6-351154cd8964",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1ab34834-67a5-4963-a64f-ded02e5a1b03"
        },
        "item": {
          "id": "96c73a17-89e4-4514-8192-d556343954b8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2eb6e861-ae9d-4c82-9a07-9c91b2f88d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f91c253-23f5-4866-a5eb-d5836a2ee67a",
        "cursor": {
          "ref": "982b3eef-728a-44a5-b41a-e3b4ffd41eb0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e9d7cf1d-6ef9-4a00-b24c-a684f83ad7ff"
        },
        "item": {
          "id": "7f91c253-23f5-4866-a5eb-d5836a2ee67a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1269de1b-d986-42c0-acb2-713d1affe0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2834f6cf-cf11-49b8-8be4-fb5ae2a3cd7c",
        "cursor": {
          "ref": "c11cbc50-4727-4e20-aff8-e30cdd8b7d3a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "73e31e99-42eb-4c48-9a01-133aecd068a6"
        },
        "item": {
          "id": "2834f6cf-cf11-49b8-8be4-fb5ae2a3cd7c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "11cb92b3-189b-41cc-b258-e854a388a62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3a9d1c-6f44-481a-8381-35515f973b80",
        "cursor": {
          "ref": "15463040-4ca4-42d8-b0cc-d63cf64d1549",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bcdbca90-9b68-487f-bfda-db4bae47e8cf"
        },
        "item": {
          "id": "3d3a9d1c-6f44-481a-8381-35515f973b80",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6ac04e56-019a-4a92-8d26-1a2038d8260c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2a1541-5a9f-49d1-a0cb-64fbeab8b86f",
        "cursor": {
          "ref": "d2675a4b-4d28-4f40-aec8-cd44a0ee2f99",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d944ec23-3c8a-4e3a-997f-9b12a4432367"
        },
        "item": {
          "id": "4f2a1541-5a9f-49d1-a0cb-64fbeab8b86f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "38803100-80ab-4cd2-b9d1-b623f1297380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904db769-6e4f-4551-9a38-de5e5a0ebbeb",
        "cursor": {
          "ref": "ad03935d-24de-4d9b-93a0-ac4c160363bb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "549070ca-5901-457f-8f81-ec42fc57a77d"
        },
        "item": {
          "id": "904db769-6e4f-4551-9a38-de5e5a0ebbeb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7ec2594d-bfaf-4fb7-9459-b3a3980d8998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfc8e94-2ed1-41f1-b9bb-637762b2cd1d",
        "cursor": {
          "ref": "b3847bc9-14be-4028-a08a-52a6b0041243",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cf5346a4-0a07-4cd2-a8f2-4eec383b2a75"
        },
        "item": {
          "id": "9cfc8e94-2ed1-41f1-b9bb-637762b2cd1d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f7c87537-fd2e-4d48-bf6a-e5388564c4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0ffde1-532a-462b-9850-82ade33494ac",
        "cursor": {
          "ref": "1216e573-3896-4bf4-bd27-05313073912d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "10ce626e-b24b-47d3-9969-3b2c18c863d6"
        },
        "item": {
          "id": "5a0ffde1-532a-462b-9850-82ade33494ac",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c92ee094-33ed-49e8-8a8a-5a163c9585e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecbdbfb-ee57-42b2-a739-104c4dba13ae",
        "cursor": {
          "ref": "4c3c0a20-18fc-4832-8e24-1543e6302715",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c795a1ca-3cc3-41fe-94fa-8021bcb8e522"
        },
        "item": {
          "id": "5ecbdbfb-ee57-42b2-a739-104c4dba13ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "08cb7c6e-6a26-4bc8-b786-1b2509d8cf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e468a8-6995-4896-9481-8ef7e8f68a40",
        "cursor": {
          "ref": "0f0fa082-278b-43a8-a010-b090c1d499c3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "932539ec-6c0f-4fbd-87ae-eff1647be8ba"
        },
        "item": {
          "id": "f4e468a8-6995-4896-9481-8ef7e8f68a40",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0e4a157e-2b10-4623-a52d-caa688d750da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061b1e7d-7bd2-4f33-9e0e-1fe6d0b73848",
        "cursor": {
          "ref": "f9c13fdf-2fa0-4c1d-923d-6cdb63d4a8a0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5f75e88a-aabf-4b68-a62d-c3963c0ad28a"
        },
        "item": {
          "id": "061b1e7d-7bd2-4f33-9e0e-1fe6d0b73848",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "711f6938-6cb2-4a1f-88b5-7fb4c0c94393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1febbce-3c6e-46d1-b990-e18995469571",
        "cursor": {
          "ref": "1ae53a0c-52f6-4eb6-abb8-53819448438c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1ad4886b-e4e6-440a-8520-e21fcef4373c"
        },
        "item": {
          "id": "b1febbce-3c6e-46d1-b990-e18995469571",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "540cc512-effd-4993-9507-f3106cb0dff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb72806a-fa23-4f66-95f8-f9c9a81cde2b",
        "cursor": {
          "ref": "d471644d-b037-46fe-a6a6-e3d69a6cdedc",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7643c1ff-18a8-4d0d-8cae-a85941f6cc4e"
        },
        "item": {
          "id": "eb72806a-fa23-4f66-95f8-f9c9a81cde2b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da408300-443d-437b-bfe8-5b69f02e88d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dac689-b069-4126-8e58-be2e77e3b412",
        "cursor": {
          "ref": "c882ab09-753a-4091-ad6f-356db9202d6a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "093442b2-1232-4796-9a65-70e3276d1128"
        },
        "item": {
          "id": "35dac689-b069-4126-8e58-be2e77e3b412",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8a4f1e45-00a8-4f07-9db4-914b93da0741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833f8d9a-d93a-4873-8f71-36d9b534c34d",
        "cursor": {
          "ref": "15917a9e-2d31-4680-b7cb-20a00c5371d0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c50b8d12-ceba-490a-89be-efa50d01ba36"
        },
        "item": {
          "id": "833f8d9a-d93a-4873-8f71-36d9b534c34d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "81655f03-1bca-4a73-8845-cca401d1e213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb4f0d8-3613-4849-b7d7-aea4ddc62857",
        "cursor": {
          "ref": "f72a9a3b-b633-4f1c-aefb-8874431ea90c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e8239f69-8306-4ee7-b27c-4c6bc161fbe2"
        },
        "item": {
          "id": "9bb4f0d8-3613-4849-b7d7-aea4ddc62857",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fd5dffb9-d854-4416-bbd1-25d1b68b2d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a455bd6c-0c71-4000-88ac-5505d7e19ed2",
        "cursor": {
          "ref": "107c6b29-a001-4846-858d-7187b3b47b5c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "45135a22-09a1-4a87-bc8e-a7e079aa392f"
        },
        "item": {
          "id": "a455bd6c-0c71-4000-88ac-5505d7e19ed2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a57dd15f-503d-4bb1-9c06-1dce20dda474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044ac32c-a027-4551-a996-fca1a66ace3d",
        "cursor": {
          "ref": "54310155-be92-45d6-a994-36ca043dccbb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "83e9483a-26ed-484b-ab65-c06c40ec1700"
        },
        "item": {
          "id": "044ac32c-a027-4551-a996-fca1a66ace3d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5973e702-2cfd-4731-8021-26a3bea134bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a1f2d-1c19-4e9a-8e9d-f992ad994c8d",
        "cursor": {
          "ref": "6a3df1c7-26da-4fac-819e-7237aab8f2ad",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7d841baa-68fa-4d04-915d-682a4f3f4e52"
        },
        "item": {
          "id": "567a1f2d-1c19-4e9a-8e9d-f992ad994c8d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fb0afb47-afae-43c9-add7-48b169ccecfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4912bb22-fb2c-4ffa-902b-014f1405ae74",
        "cursor": {
          "ref": "efe75804-3ca2-4ad1-aaa5-cca8708cf47d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "75e97efd-6317-4915-8126-173d5769ac0a"
        },
        "item": {
          "id": "4912bb22-fb2c-4ffa-902b-014f1405ae74",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1daee5ac-9121-4792-ae1e-4e56636ec583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c99da26-62f1-4624-bc3b-f5c36158c190",
        "cursor": {
          "ref": "dee9c97e-d4ed-4871-8934-e896aa47a7b6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8aff4227-c946-4364-8c6b-676081c85953"
        },
        "item": {
          "id": "5c99da26-62f1-4624-bc3b-f5c36158c190",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "18804faf-66ae-4e41-87db-64d2834f8786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042dec9e-1622-4ae0-8c94-8ce25d2a53e7",
        "cursor": {
          "ref": "1801c821-430d-4c20-b483-2ef8666f4cc2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "34c0e779-d40b-4c4b-adc4-62e903aa82f0"
        },
        "item": {
          "id": "042dec9e-1622-4ae0-8c94-8ce25d2a53e7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3ef2ce04-79be-4ace-9b3e-98699173a4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a6bf77-f72a-4361-be9c-63c903104ffb",
        "cursor": {
          "ref": "45d73ec0-159d-4bff-8f6d-8025cd4816b0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c25f4b47-4596-4c1e-8478-8874b0e4c197"
        },
        "item": {
          "id": "60a6bf77-f72a-4361-be9c-63c903104ffb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bdb466fc-809b-4719-8ed3-6e39d234dce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4febe3ac-9683-4f06-b194-63d7652bee1b",
        "cursor": {
          "ref": "e6cf23de-fcb7-49b6-93fc-973abde402d9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e044a717-c950-4d7b-8c66-e48044602f20"
        },
        "item": {
          "id": "4febe3ac-9683-4f06-b194-63d7652bee1b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9f2c62e5-8cda-4782-a697-747e0037c004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e30edc2-00ba-400a-a7b0-78a63b3a3be7",
        "cursor": {
          "ref": "b69b4558-7f6f-45b4-a5a2-63b90b7ba5ac",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c9b8c090-0379-4506-ad87-bdac2a83ef91"
        },
        "item": {
          "id": "1e30edc2-00ba-400a-a7b0-78a63b3a3be7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "02f7bf4c-4b15-47ca-bac1-60c0414a165e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5ef274-1f06-4177-9a72-116c431f7870",
        "cursor": {
          "ref": "afc1cd7a-a373-4b2d-ad71-5f7859f49501",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d2fdc979-844f-48c1-88f6-4f92903e5790"
        },
        "item": {
          "id": "0d5ef274-1f06-4177-9a72-116c431f7870",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fe23266f-ddc1-4b51-b1d5-91a2957351c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d02504-6f4f-4677-afbe-842404c272aa",
        "cursor": {
          "ref": "c5f8a4d4-dd78-4f22-9e24-89b5f4e48f0c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6d4ef053-6695-406e-8fc7-8afe771e533d"
        },
        "item": {
          "id": "d7d02504-6f4f-4677-afbe-842404c272aa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a9e802c2-4974-4108-9f46-73605ef43012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12298e0b-3985-447f-8590-62c4f8df5944",
        "cursor": {
          "ref": "3b7da0cb-4222-4487-a952-9338facc9c5c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0171653c-0d71-41dc-8139-86e12f710401"
        },
        "item": {
          "id": "12298e0b-3985-447f-8590-62c4f8df5944",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "147340aa-36cd-49ed-9166-295787ff2825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46d37ce-1a81-4e45-ba7e-f891b1c58d4d",
        "cursor": {
          "ref": "1def6f96-31fc-47f3-81e2-dbf591625b4a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b2316a27-8fa6-4d7a-94e2-c780d7274d1a"
        },
        "item": {
          "id": "b46d37ce-1a81-4e45-ba7e-f891b1c58d4d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c154a8b1-301c-4825-b7e6-2bc49a9ff29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc75fe01-afe7-4725-a379-90a7c723411a",
        "cursor": {
          "ref": "c06e6d0c-52cf-4a81-a1e1-79b0a5971c94",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "33a91972-4787-4930-a9a8-b901e8d7e260"
        },
        "item": {
          "id": "dc75fe01-afe7-4725-a379-90a7c723411a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da73cd77-bd4e-4af8-9752-8580d61834e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25b591a-3bea-4c87-baa0-b6c4700afa1c",
        "cursor": {
          "ref": "493d5fb9-afb2-4c21-8706-cf97cd54fff8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "22ea94a9-e47c-4a4c-a295-80e7c47da40d"
        },
        "item": {
          "id": "d25b591a-3bea-4c87-baa0-b6c4700afa1c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eb492db3-7ac9-4179-94d6-f12e47b90d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2afab3-986a-4bbe-93c3-c00dd99823d2",
        "cursor": {
          "ref": "7b55554f-f9be-4a20-ac60-f861894ed58e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a668c918-8d6d-428a-bf06-134456b5ca47"
        },
        "item": {
          "id": "9f2afab3-986a-4bbe-93c3-c00dd99823d2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "16fb3c43-57dd-400b-b083-fa2d327e92bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf35404-4441-45fc-882f-8d14ed6834f7",
        "cursor": {
          "ref": "5edba58f-eea4-447b-ab37-b97526ea39a2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "da05b3b3-abf6-47ac-95c0-dd843cb257b5"
        },
        "item": {
          "id": "5bf35404-4441-45fc-882f-8d14ed6834f7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bac00e5f-5f4b-4cee-9d89-1b78aa690d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b201e-8ba6-4572-ba5c-279b0e343edc",
        "cursor": {
          "ref": "a31bf201-f70e-45db-b371-594294cc08bc",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "301d5f76-c03d-4255-9ba9-3c48cd82098b"
        },
        "item": {
          "id": "c59b201e-8ba6-4572-ba5c-279b0e343edc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d981d1b9-32f8-49ef-9c15-54d6d0fe4cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f0c89a-a3f0-426b-922d-88e31c222a53",
        "cursor": {
          "ref": "dc79f83a-9795-4abd-8231-fb10a1e20600",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a2076924-440d-4203-b9ee-861e2a92209f"
        },
        "item": {
          "id": "a8f0c89a-a3f0-426b-922d-88e31c222a53",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "27ceb03a-72d6-4476-9d86-cf0f424d708f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d958b6-ad29-420f-b3dc-8659194f8679",
        "cursor": {
          "ref": "1fb91c80-778e-4a53-8496-bf504600d221",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4f49ae11-4455-4c66-819d-b9e0ff40c9ee"
        },
        "item": {
          "id": "11d958b6-ad29-420f-b3dc-8659194f8679",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c1b893cb-986f-4c26-ad79-afdad0c48ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8ec27a-02fb-435d-b7f9-cd5c1fed9dd4",
        "cursor": {
          "ref": "0ac2095f-0148-42cb-bc47-5cba271175c8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8c6848c6-2fd2-49ae-8599-4eb2994bab32"
        },
        "item": {
          "id": "bc8ec27a-02fb-435d-b7f9-cd5c1fed9dd4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "daae4808-e3b0-4bc8-934f-15f8f54ead24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e547f876-4783-4317-a78e-1758d0ab117b",
        "cursor": {
          "ref": "bc2556d1-b2ed-423c-b8f5-3c39cd6cd93e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e7e830c1-7f03-4090-943a-ed5fe03a7b45"
        },
        "item": {
          "id": "e547f876-4783-4317-a78e-1758d0ab117b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7a18776-d4f5-4f3a-b6a4-4652749deb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c862412e-185d-4fb6-8768-1c3cf71231df",
        "cursor": {
          "ref": "945f23c0-ddf5-46b3-bb84-10c794d6e304",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c7fc652b-063d-48e7-a579-789e6d12adb5"
        },
        "item": {
          "id": "c862412e-185d-4fb6-8768-1c3cf71231df",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2d36a4ce-184c-4a4d-905b-158d2c6ee260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa38206d-2470-4591-a0d6-48e9db567efd",
        "cursor": {
          "ref": "64677e55-e827-4307-801a-1a5b9e61f08c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f984d3e8-f17a-4b7d-b0a9-b4bb35dff11d"
        },
        "item": {
          "id": "fa38206d-2470-4591-a0d6-48e9db567efd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d49f72eb-8118-4b3d-aece-cfb653b60af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c43bba-7cf6-404c-8903-791e2effca7f",
        "cursor": {
          "ref": "99104a69-4996-4d11-b392-b9ac21dd57b8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b87fd618-5eb3-429c-8d14-85f6fffbefa2"
        },
        "item": {
          "id": "00c43bba-7cf6-404c-8903-791e2effca7f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2314f1e9-b53e-4a92-8654-ef486c9f6a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a5aff2-2c14-4255-b47c-64fd11e9fd16",
        "cursor": {
          "ref": "cd9f0147-a6ee-4bda-8130-61c7ef85a288",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "994eefe2-72d1-404d-a388-dd724cc040c6"
        },
        "item": {
          "id": "21a5aff2-2c14-4255-b47c-64fd11e9fd16",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "952d2423-e090-474e-912e-528f5843cf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c21aa9-2992-48f4-a2dc-cfe122d03414",
        "cursor": {
          "ref": "ba027608-0820-4b41-af06-2242146f1f0f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f3a1f993-d9d4-4f8b-8731-5f09689a5b79"
        },
        "item": {
          "id": "99c21aa9-2992-48f4-a2dc-cfe122d03414",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "07aa0a48-53d7-47ff-857a-d4338457cf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18482e4-0a68-4fa7-b8b2-b0350df9fd30",
        "cursor": {
          "ref": "f4bb6838-cd7d-4280-9607-51b0a55e62a6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1c775b8a-fcc8-4640-99f3-7d6322fdedfd"
        },
        "item": {
          "id": "d18482e4-0a68-4fa7-b8b2-b0350df9fd30",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "252005bf-3b38-44c1-8006-b37307c8233d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b0da48-9057-421d-992c-5ede3e0f2f22",
        "cursor": {
          "ref": "0417d4c0-f3cc-4881-8bb0-abbf0501d54a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3cf57868-e80c-44cc-95a3-db2963396b9f"
        },
        "item": {
          "id": "76b0da48-9057-421d-992c-5ede3e0f2f22",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "17d2d76a-c443-40aa-8763-040f15f22341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a6498d-e06e-463f-a800-7b2aae98be80",
        "cursor": {
          "ref": "a7627dc8-f4cb-448f-8320-d9a84a621993",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9cbf9885-1a38-4a3d-8a3a-cb0794cfd109"
        },
        "item": {
          "id": "30a6498d-e06e-463f-a800-7b2aae98be80",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30e18c23-5bb0-4878-9ad2-3211d45ddef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3896c3fc-4d61-4764-8c5d-2635b6d65ca5",
        "cursor": {
          "ref": "ad4654f7-f712-4b27-a7ea-e968e5c11f63",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e348cb26-ff03-4c79-9b9c-0b254b41fbcb"
        },
        "item": {
          "id": "3896c3fc-4d61-4764-8c5d-2635b6d65ca5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2fac1601-50a6-4001-882f-423b65822c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe6c379-cc56-48cf-ac0c-e968271651ec",
        "cursor": {
          "ref": "df904947-d601-4c8d-a02b-e3b534e5080a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ba0be037-5ac9-4f14-b837-c5789b24167f"
        },
        "item": {
          "id": "cfe6c379-cc56-48cf-ac0c-e968271651ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9138dbda-bc2b-4a11-93b6-bbbc85012dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc30b6d-3129-429e-a378-55accdc636ca",
        "cursor": {
          "ref": "8d5fee4c-8e4b-4e62-bb53-e91f5966ace1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7d6accfe-6398-4c1f-8c7c-2a1c0edee9c3"
        },
        "item": {
          "id": "1fc30b6d-3129-429e-a378-55accdc636ca",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6c105821-2a4a-4663-80c1-287b6eede4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7e6ef0-413e-4bb1-8ce8-ae0f459fc7d0",
        "cursor": {
          "ref": "bb8efa91-8b83-4876-ad72-de04913c7f2a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a4f6c36f-4538-4e76-aa50-26ff36e9e5eb"
        },
        "item": {
          "id": "bf7e6ef0-413e-4bb1-8ce8-ae0f459fc7d0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f73db3c9-8711-4480-8eea-6e6b18809995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5197de4-e713-4ced-899d-1a9210b5a947",
        "cursor": {
          "ref": "f26a5a7a-a4ab-4564-adc7-740133a1aa35",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3cd14c87-6048-44aa-aa36-ea7ab166949d"
        },
        "item": {
          "id": "b5197de4-e713-4ced-899d-1a9210b5a947",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2182aa9c-e690-4e44-b1cb-39db596aa1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8d6172-a813-40e7-b439-b7026c2b8b6a",
        "cursor": {
          "ref": "39d06572-e538-4627-8dd2-d55d4ff7d4fa",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a5ff8226-00b7-4ea8-b97c-55c309eb8ce9"
        },
        "item": {
          "id": "fe8d6172-a813-40e7-b439-b7026c2b8b6a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6057b0a4-208c-4c36-b9a8-ef021747a5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba58202-641f-44e4-a61f-87e8a0b26910",
        "cursor": {
          "ref": "100fb5e7-cb22-49df-8516-24f31b3217dd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "01abbb54-413a-4005-9c49-295189298475"
        },
        "item": {
          "id": "8ba58202-641f-44e4-a61f-87e8a0b26910",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "76e4bfac-b0e3-4675-9c77-50b8f4c08618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b6204c-92fa-475a-b177-f10eed888988",
        "cursor": {
          "ref": "326816e2-fbd1-4a01-8879-00864d148abc",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aeb997bf-5483-40d8-ad24-ff3196fe9164"
        },
        "item": {
          "id": "f6b6204c-92fa-475a-b177-f10eed888988",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "838d4d20-1151-446f-8013-99030314393b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f907a65-5f04-4a36-bbbf-245e514db411",
        "cursor": {
          "ref": "6d74da9f-b3c4-4861-863f-05174aa89b97",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "38f455de-ea47-43eb-99d5-95a27379d100"
        },
        "item": {
          "id": "8f907a65-5f04-4a36-bbbf-245e514db411",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "889a12ce-e894-4966-97f0-641cef0198ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae84d3-f1a8-4bff-9baa-7092e588b7c9",
        "cursor": {
          "ref": "e0d78cdc-5996-49dd-b977-05855e76e277",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "95259377-c8a4-427f-8f98-29900195440e"
        },
        "item": {
          "id": "13ae84d3-f1a8-4bff-9baa-7092e588b7c9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dd4f02a2-695e-44ba-9198-2d42617647ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed76f14-317f-48aa-9525-b731095bf475",
        "cursor": {
          "ref": "a0773327-88b9-4eec-abed-3cb77919686a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0ae186a9-c6fd-4a8f-9da4-e9396b19bc83"
        },
        "item": {
          "id": "0ed76f14-317f-48aa-9525-b731095bf475",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52c58abd-5c41-4039-a2e5-23bbc574edf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c1eed5-2073-42f1-aa1a-f3d01a8a681d",
        "cursor": {
          "ref": "fdf880ea-e052-4e29-ba8a-186f0cc1f5cb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d64f9a9c-b0f4-4652-ba9c-d8da99ade86c"
        },
        "item": {
          "id": "85c1eed5-2073-42f1-aa1a-f3d01a8a681d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "409dfcc3-c115-49fd-bcb4-9d1e1713c5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440ca3f3-46ac-4056-a921-2ba5c32a8903",
        "cursor": {
          "ref": "7741a81d-b68c-4a00-a5a1-6a0ab263a808",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "67cf9cc3-f1c0-4022-8f76-8444c47e8d0e"
        },
        "item": {
          "id": "440ca3f3-46ac-4056-a921-2ba5c32a8903",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5d64536f-9aaf-4453-b064-9f40ed08102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9257e6c1-d1c6-4e02-a69f-10f928a12b70",
        "cursor": {
          "ref": "9b2be562-1a48-4cf1-9f80-8f640042a925",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d1530a36-a4d5-4ae4-b783-fb2df9dc120f"
        },
        "item": {
          "id": "9257e6c1-d1c6-4e02-a69f-10f928a12b70",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d7aaa8d0-cc34-44da-8f6a-3b550e5629d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824499c-1891-41d9-a1a5-9cc7a4c49fd3",
        "cursor": {
          "ref": "ca044fa0-7af3-49c9-82f9-ae78cedc0836",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bf0eb934-cd92-4ac1-8990-7a7a21c5bf9b"
        },
        "item": {
          "id": "d824499c-1891-41d9-a1a5-9cc7a4c49fd3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "87413bb8-ee09-4830-b802-68fc1047b568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f7d731-ce1a-4de6-93fe-d63805dcd37a",
        "cursor": {
          "ref": "74e06d02-9636-4e90-b8ba-c03029baa942",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6fecc051-eed3-4e93-926e-95b4bee96b09"
        },
        "item": {
          "id": "a2f7d731-ce1a-4de6-93fe-d63805dcd37a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bd483c60-f3c6-4fb4-ae35-9f75263ffd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "c126570f-686c-491f-9032-41e245ee8749",
        "cursor": {
          "ref": "a8bf4451-69a6-4df9-b6fb-d51953e43b66",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f17e4df4-7ce2-454a-9e9c-7a4b0dfb724d"
        },
        "item": {
          "id": "c126570f-686c-491f-9032-41e245ee8749",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d4e885d4-1120-4094-9482-32c102fb1d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "ad0caaa5-aa41-440e-9249-fc8e1e6b4ddb",
        "cursor": {
          "ref": "9eb3606a-42a1-428b-9f1f-77b869036004",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "97efb695-6019-42e6-aad2-32db529a592f"
        },
        "item": {
          "id": "ad0caaa5-aa41-440e-9249-fc8e1e6b4ddb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b83ce05-707d-4c17-961b-9eeaad2ca069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "bc45d066-34f5-40f6-966a-5b84ebf78dd7",
        "cursor": {
          "ref": "bb71d5c0-5c67-462d-a1dd-a67f0a876534",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9ee156db-2029-4d03-bed2-b0a8947d3d4c"
        },
        "item": {
          "id": "bc45d066-34f5-40f6-966a-5b84ebf78dd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ea49be68-47b2-4f6f-af5f-37806870f0d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc45d066-34f5-40f6-966a-5b84ebf78dd7",
        "cursor": {
          "ref": "bb71d5c0-5c67-462d-a1dd-a67f0a876534",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9ee156db-2029-4d03-bed2-b0a8947d3d4c"
        },
        "item": {
          "id": "bc45d066-34f5-40f6-966a-5b84ebf78dd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ea49be68-47b2-4f6f-af5f-37806870f0d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4da482-20c5-4ff8-90ad-af2c53e634aa",
        "cursor": {
          "ref": "9fb54918-c2f7-49c4-8df9-62dfb6ea953d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4a8375f4-e10e-4c60-aba4-21370eb3d492"
        },
        "item": {
          "id": "cb4da482-20c5-4ff8-90ad-af2c53e634aa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b3541a18-ea15-42e9-8e29-6bf96737697f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a549c-edc6-4fba-a64d-028fab2903e6",
        "cursor": {
          "ref": "cd20de3c-3809-4c0e-a560-e9ac88d27d12",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5e14b908-b087-4415-9268-f4ea5db3505c"
        },
        "item": {
          "id": "a38a549c-edc6-4fba-a64d-028fab2903e6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dffff839-fe78-458b-8343-881ec4321683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}